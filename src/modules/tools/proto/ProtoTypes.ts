
namespace ProtoTypes {

/** Properties of a Config. */
export declare interface IConfig {
}

/** Represents a Config. */
export declare class Config implements IConfig {

    /**
     * Constructs a new Config.
     * @param [properties] Properties to set
     */
    constructor(properties?: IConfig);

    /**
     * Creates a new Config instance using the specified properties.
     * @param [properties] Properties to set
     * @returns Config instance
     */
    public static create(properties?: IConfig): Config;

    /**
     * Encodes the specified Config message. Does not implicitly {@link Config.verify|verify} messages.
     * @param message Config message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IConfig, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Encodes the specified Config message, length delimited. Does not implicitly {@link Config.verify|verify} messages.
     * @param message Config message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IConfig, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Decodes a Config message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns Config
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Config;

    /**
     * Decodes a Config message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns Config
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Config;

    /**
     * Verifies a Config message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a Config message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns Config
     */
    public static fromObject(object: { [k: string]: any }): Config;

    /**
     * Creates a plain object from a Config message. Also converts values to other types if specified.
     * @param message Config
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: Config, options?: protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this Config to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export declare namespace Config {

    /** Properties of a SystemCfg. */
    interface ISystemCfg {

        /** SystemCfg energyGrowthMultiplierArray */
        energyGrowthMultiplierArray?: (number[]|null);

        /** SystemCfg maxBanCount */
        maxBanCount?: (number|null);

        /** SystemCfg dialogueBackgroundMaxId */
        dialogueBackgroundMaxId?: (number|null);
    }

    /** Represents a SystemCfg. */
    class SystemCfg implements ISystemCfg {

        /**
         * Constructs a new SystemCfg.
         * @param [properties] Properties to set
         */
        constructor(properties?: Config.ISystemCfg);

        /** SystemCfg energyGrowthMultiplierArray. */
        public energyGrowthMultiplierArray: number[];

        /** SystemCfg maxBanCount. */
        public maxBanCount: number;

        /** SystemCfg dialogueBackgroundMaxId. */
        public dialogueBackgroundMaxId: number;

        /**
         * Creates a new SystemCfg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SystemCfg instance
         */
        public static create(properties?: Config.ISystemCfg): Config.SystemCfg;

        /**
         * Encodes the specified SystemCfg message. Does not implicitly {@link Config.SystemCfg.verify|verify} messages.
         * @param message SystemCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Config.ISystemCfg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SystemCfg message, length delimited. Does not implicitly {@link Config.SystemCfg.verify|verify} messages.
         * @param message SystemCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Config.ISystemCfg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SystemCfg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SystemCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Config.SystemCfg;

        /**
         * Decodes a SystemCfg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SystemCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Config.SystemCfg;

        /**
         * Verifies a SystemCfg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SystemCfg message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SystemCfg
         */
        public static fromObject(object: { [k: string]: any }): Config.SystemCfg;

        /**
         * Creates a plain object from a SystemCfg message. Also converts values to other types if specified.
         * @param message SystemCfg
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Config.SystemCfg, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SystemCfg to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TileCategoryCfg. */
    interface ITileCategoryCfg {

        /** TileCategoryCfg category */
        category?: (number|null);

        /** TileCategoryCfg tileTypes */
        tileTypes?: (number[]|null);
    }

    /** Represents a TileCategoryCfg. */
    class TileCategoryCfg implements ITileCategoryCfg {

        /**
         * Constructs a new TileCategoryCfg.
         * @param [properties] Properties to set
         */
        constructor(properties?: Config.ITileCategoryCfg);

        /** TileCategoryCfg category. */
        public category: number;

        /** TileCategoryCfg tileTypes. */
        public tileTypes: number[];

        /**
         * Creates a new TileCategoryCfg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TileCategoryCfg instance
         */
        public static create(properties?: Config.ITileCategoryCfg): Config.TileCategoryCfg;

        /**
         * Encodes the specified TileCategoryCfg message. Does not implicitly {@link Config.TileCategoryCfg.verify|verify} messages.
         * @param message TileCategoryCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Config.ITileCategoryCfg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified TileCategoryCfg message, length delimited. Does not implicitly {@link Config.TileCategoryCfg.verify|verify} messages.
         * @param message TileCategoryCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Config.ITileCategoryCfg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a TileCategoryCfg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TileCategoryCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Config.TileCategoryCfg;

        /**
         * Decodes a TileCategoryCfg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TileCategoryCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Config.TileCategoryCfg;

        /**
         * Verifies a TileCategoryCfg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TileCategoryCfg message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TileCategoryCfg
         */
        public static fromObject(object: { [k: string]: any }): Config.TileCategoryCfg;

        /**
         * Creates a plain object from a TileCategoryCfg message. Also converts values to other types if specified.
         * @param message TileCategoryCfg
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Config.TileCategoryCfg, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TileCategoryCfg to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an UnitCategoryCfg. */
    interface IUnitCategoryCfg {

        /** UnitCategoryCfg category */
        category?: (number|null);

        /** UnitCategoryCfg unitTypes */
        unitTypes?: (number[]|null);
    }

    /** Represents an UnitCategoryCfg. */
    class UnitCategoryCfg implements IUnitCategoryCfg {

        /**
         * Constructs a new UnitCategoryCfg.
         * @param [properties] Properties to set
         */
        constructor(properties?: Config.IUnitCategoryCfg);

        /** UnitCategoryCfg category. */
        public category: number;

        /** UnitCategoryCfg unitTypes. */
        public unitTypes: number[];

        /**
         * Creates a new UnitCategoryCfg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UnitCategoryCfg instance
         */
        public static create(properties?: Config.IUnitCategoryCfg): Config.UnitCategoryCfg;

        /**
         * Encodes the specified UnitCategoryCfg message. Does not implicitly {@link Config.UnitCategoryCfg.verify|verify} messages.
         * @param message UnitCategoryCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Config.IUnitCategoryCfg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified UnitCategoryCfg message, length delimited. Does not implicitly {@link Config.UnitCategoryCfg.verify|verify} messages.
         * @param message UnitCategoryCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Config.IUnitCategoryCfg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an UnitCategoryCfg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UnitCategoryCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Config.UnitCategoryCfg;

        /**
         * Decodes an UnitCategoryCfg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UnitCategoryCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Config.UnitCategoryCfg;

        /**
         * Verifies an UnitCategoryCfg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an UnitCategoryCfg message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UnitCategoryCfg
         */
        public static fromObject(object: { [k: string]: any }): Config.UnitCategoryCfg;

        /**
         * Creates a plain object from an UnitCategoryCfg message. Also converts values to other types if specified.
         * @param message UnitCategoryCfg
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Config.UnitCategoryCfg, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UnitCategoryCfg to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WeatherCategoryCfg. */
    interface IWeatherCategoryCfg {

        /** WeatherCategoryCfg category */
        category?: (number|null);

        /** WeatherCategoryCfg weatherTypes */
        weatherTypes?: (number[]|null);
    }

    /** Represents a WeatherCategoryCfg. */
    class WeatherCategoryCfg implements IWeatherCategoryCfg {

        /**
         * Constructs a new WeatherCategoryCfg.
         * @param [properties] Properties to set
         */
        constructor(properties?: Config.IWeatherCategoryCfg);

        /** WeatherCategoryCfg category. */
        public category: number;

        /** WeatherCategoryCfg weatherTypes. */
        public weatherTypes: number[];

        /**
         * Creates a new WeatherCategoryCfg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WeatherCategoryCfg instance
         */
        public static create(properties?: Config.IWeatherCategoryCfg): Config.WeatherCategoryCfg;

        /**
         * Encodes the specified WeatherCategoryCfg message. Does not implicitly {@link Config.WeatherCategoryCfg.verify|verify} messages.
         * @param message WeatherCategoryCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Config.IWeatherCategoryCfg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WeatherCategoryCfg message, length delimited. Does not implicitly {@link Config.WeatherCategoryCfg.verify|verify} messages.
         * @param message WeatherCategoryCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Config.IWeatherCategoryCfg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WeatherCategoryCfg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WeatherCategoryCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Config.WeatherCategoryCfg;

        /**
         * Decodes a WeatherCategoryCfg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WeatherCategoryCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Config.WeatherCategoryCfg;

        /**
         * Verifies a WeatherCategoryCfg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WeatherCategoryCfg message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WeatherCategoryCfg
         */
        public static fromObject(object: { [k: string]: any }): Config.WeatherCategoryCfg;

        /**
         * Creates a plain object from a WeatherCategoryCfg message. Also converts values to other types if specified.
         * @param message WeatherCategoryCfg
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Config.WeatherCategoryCfg, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WeatherCategoryCfg to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TileTemplateCfg. */
    interface ITileTemplateCfg {

        /** TileTemplateCfg type */
        type?: (number|null);

        /** TileTemplateCfg defenseAmount */
        defenseAmount?: (number|null);

        /** TileTemplateCfg defenseUnitCategory */
        defenseUnitCategory?: (number|null);

        /** TileTemplateCfg maxBuildPoint */
        maxBuildPoint?: (number|null);

        /** TileTemplateCfg maxCapturePoint */
        maxCapturePoint?: (number|null);

        /** TileTemplateCfg isDefeatedOnCapture */
        isDefeatedOnCapture?: (number|null);

        /** TileTemplateCfg repairAmount */
        repairAmount?: (number|null);

        /** TileTemplateCfg repairUnitCategory */
        repairUnitCategory?: (number|null);

        /** TileTemplateCfg incomePerTurn */
        incomePerTurn?: (number|null);

        /** TileTemplateCfg visionRange */
        visionRange?: (number|null);

        /** TileTemplateCfg isVisionEnabledForAllPlayers */
        isVisionEnabledForAllPlayers?: (number|null);

        /** TileTemplateCfg hideUnitCategory */
        hideUnitCategory?: (number|null);

        /** TileTemplateCfg isDestroyedWithAdjacentMeteor */
        isDestroyedWithAdjacentMeteor?: (number|null);

        /** TileTemplateCfg produceUnitCategory */
        produceUnitCategory?: (number|null);

        /** TileTemplateCfg globalAttackBonus */
        globalAttackBonus?: (number|null);

        /** TileTemplateCfg globalDefenseBonus */
        globalDefenseBonus?: (number|null);

        /** TileTemplateCfg maxHp */
        maxHp?: (number|null);

        /** TileTemplateCfg armorType */
        armorType?: (number|null);

        /** TileTemplateCfg isAffectedByLuck */
        isAffectedByLuck?: (number|null);

        /** TileTemplateCfg loadCoUnitCategory */
        loadCoUnitCategory?: (number|null);
    }

    /** Represents a TileTemplateCfg. */
    class TileTemplateCfg implements ITileTemplateCfg {

        /**
         * Constructs a new TileTemplateCfg.
         * @param [properties] Properties to set
         */
        constructor(properties?: Config.ITileTemplateCfg);

        /** TileTemplateCfg type. */
        public type: number;

        /** TileTemplateCfg defenseAmount. */
        public defenseAmount: number;

        /** TileTemplateCfg defenseUnitCategory. */
        public defenseUnitCategory: number;

        /** TileTemplateCfg maxBuildPoint. */
        public maxBuildPoint: number;

        /** TileTemplateCfg maxCapturePoint. */
        public maxCapturePoint: number;

        /** TileTemplateCfg isDefeatedOnCapture. */
        public isDefeatedOnCapture: number;

        /** TileTemplateCfg repairAmount. */
        public repairAmount: number;

        /** TileTemplateCfg repairUnitCategory. */
        public repairUnitCategory: number;

        /** TileTemplateCfg incomePerTurn. */
        public incomePerTurn: number;

        /** TileTemplateCfg visionRange. */
        public visionRange: number;

        /** TileTemplateCfg isVisionEnabledForAllPlayers. */
        public isVisionEnabledForAllPlayers: number;

        /** TileTemplateCfg hideUnitCategory. */
        public hideUnitCategory: number;

        /** TileTemplateCfg isDestroyedWithAdjacentMeteor. */
        public isDestroyedWithAdjacentMeteor: number;

        /** TileTemplateCfg produceUnitCategory. */
        public produceUnitCategory: number;

        /** TileTemplateCfg globalAttackBonus. */
        public globalAttackBonus: number;

        /** TileTemplateCfg globalDefenseBonus. */
        public globalDefenseBonus: number;

        /** TileTemplateCfg maxHp. */
        public maxHp: number;

        /** TileTemplateCfg armorType. */
        public armorType: number;

        /** TileTemplateCfg isAffectedByLuck. */
        public isAffectedByLuck: number;

        /** TileTemplateCfg loadCoUnitCategory. */
        public loadCoUnitCategory: number;

        /**
         * Creates a new TileTemplateCfg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TileTemplateCfg instance
         */
        public static create(properties?: Config.ITileTemplateCfg): Config.TileTemplateCfg;

        /**
         * Encodes the specified TileTemplateCfg message. Does not implicitly {@link Config.TileTemplateCfg.verify|verify} messages.
         * @param message TileTemplateCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Config.ITileTemplateCfg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified TileTemplateCfg message, length delimited. Does not implicitly {@link Config.TileTemplateCfg.verify|verify} messages.
         * @param message TileTemplateCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Config.ITileTemplateCfg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a TileTemplateCfg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TileTemplateCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Config.TileTemplateCfg;

        /**
         * Decodes a TileTemplateCfg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TileTemplateCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Config.TileTemplateCfg;

        /**
         * Verifies a TileTemplateCfg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TileTemplateCfg message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TileTemplateCfg
         */
        public static fromObject(object: { [k: string]: any }): Config.TileTemplateCfg;

        /**
         * Creates a plain object from a TileTemplateCfg message. Also converts values to other types if specified.
         * @param message TileTemplateCfg
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Config.TileTemplateCfg, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TileTemplateCfg to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an UnitTemplateCfg. */
    interface IUnitTemplateCfg {

        /** UnitTemplateCfg type */
        type?: (number|null);

        /** UnitTemplateCfg minAttackRange */
        minAttackRange?: (number|null);

        /** UnitTemplateCfg maxAttackRange */
        maxAttackRange?: (number|null);

        /** UnitTemplateCfg canAttackAfterMove */
        canAttackAfterMove?: (number|null);

        /** UnitTemplateCfg canAttackDivingUnits */
        canAttackDivingUnits?: (number|null);

        /** UnitTemplateCfg primaryWeaponMaxAmmo */
        primaryWeaponMaxAmmo?: (number|null);

        /** UnitTemplateCfg maxHp */
        maxHp?: (number|null);

        /** UnitTemplateCfg armorType */
        armorType?: (number|null);

        /** UnitTemplateCfg isAffectedByLuck */
        isAffectedByLuck?: (number|null);

        /** UnitTemplateCfg moveRange */
        moveRange?: (number|null);

        /** UnitTemplateCfg moveType */
        moveType?: (number|null);

        /** UnitTemplateCfg maxFuel */
        maxFuel?: (number|null);

        /** UnitTemplateCfg fuelConsumptionPerTurn */
        fuelConsumptionPerTurn?: (number|null);

        /** UnitTemplateCfg diveCfgs */
        diveCfgs?: (number[]|null);

        /** UnitTemplateCfg isDestroyedOnOutOfFuel */
        isDestroyedOnOutOfFuel?: (number|null);

        /** UnitTemplateCfg maxLoadUnitsCount */
        maxLoadUnitsCount?: (number|null);

        /** UnitTemplateCfg loadUnitCategory */
        loadUnitCategory?: (number|null);

        /** UnitTemplateCfg canLaunchLoadedUnits */
        canLaunchLoadedUnits?: (number|null);

        /** UnitTemplateCfg canDropLoadedUnits */
        canDropLoadedUnits?: (number|null);

        /** UnitTemplateCfg canSupplyLoadedUnits */
        canSupplyLoadedUnits?: (number|null);

        /** UnitTemplateCfg repairAmountForLoadedUnits */
        repairAmountForLoadedUnits?: (number|null);

        /** UnitTemplateCfg loadableTileCategory */
        loadableTileCategory?: (number|null);

        /** UnitTemplateCfg canSupplyAdjacentUnits */
        canSupplyAdjacentUnits?: (number|null);

        /** UnitTemplateCfg produceUnitType */
        produceUnitType?: (number|null);

        /** UnitTemplateCfg maxProduceMaterial */
        maxProduceMaterial?: (number|null);

        /** UnitTemplateCfg maxBuildMaterial */
        maxBuildMaterial?: (number|null);

        /** UnitTemplateCfg canCaptureTile */
        canCaptureTile?: (number|null);

        /** UnitTemplateCfg canLaunchSilo */
        canLaunchSilo?: (number|null);

        /** UnitTemplateCfg productionCost */
        productionCost?: (number|null);

        /** UnitTemplateCfg visionRange */
        visionRange?: (number|null);

        /** UnitTemplateCfg flareMaxAmmo */
        flareMaxAmmo?: (number|null);

        /** UnitTemplateCfg flareMaxRange */
        flareMaxRange?: (number|null);

        /** UnitTemplateCfg flareRadius */
        flareRadius?: (number|null);
    }

    /** Represents an UnitTemplateCfg. */
    class UnitTemplateCfg implements IUnitTemplateCfg {

        /**
         * Constructs a new UnitTemplateCfg.
         * @param [properties] Properties to set
         */
        constructor(properties?: Config.IUnitTemplateCfg);

        /** UnitTemplateCfg type. */
        public type: number;

        /** UnitTemplateCfg minAttackRange. */
        public minAttackRange: number;

        /** UnitTemplateCfg maxAttackRange. */
        public maxAttackRange: number;

        /** UnitTemplateCfg canAttackAfterMove. */
        public canAttackAfterMove: number;

        /** UnitTemplateCfg canAttackDivingUnits. */
        public canAttackDivingUnits: number;

        /** UnitTemplateCfg primaryWeaponMaxAmmo. */
        public primaryWeaponMaxAmmo: number;

        /** UnitTemplateCfg maxHp. */
        public maxHp: number;

        /** UnitTemplateCfg armorType. */
        public armorType: number;

        /** UnitTemplateCfg isAffectedByLuck. */
        public isAffectedByLuck: number;

        /** UnitTemplateCfg moveRange. */
        public moveRange: number;

        /** UnitTemplateCfg moveType. */
        public moveType: number;

        /** UnitTemplateCfg maxFuel. */
        public maxFuel: number;

        /** UnitTemplateCfg fuelConsumptionPerTurn. */
        public fuelConsumptionPerTurn: number;

        /** UnitTemplateCfg diveCfgs. */
        public diveCfgs: number[];

        /** UnitTemplateCfg isDestroyedOnOutOfFuel. */
        public isDestroyedOnOutOfFuel: number;

        /** UnitTemplateCfg maxLoadUnitsCount. */
        public maxLoadUnitsCount: number;

        /** UnitTemplateCfg loadUnitCategory. */
        public loadUnitCategory: number;

        /** UnitTemplateCfg canLaunchLoadedUnits. */
        public canLaunchLoadedUnits: number;

        /** UnitTemplateCfg canDropLoadedUnits. */
        public canDropLoadedUnits: number;

        /** UnitTemplateCfg canSupplyLoadedUnits. */
        public canSupplyLoadedUnits: number;

        /** UnitTemplateCfg repairAmountForLoadedUnits. */
        public repairAmountForLoadedUnits: number;

        /** UnitTemplateCfg loadableTileCategory. */
        public loadableTileCategory: number;

        /** UnitTemplateCfg canSupplyAdjacentUnits. */
        public canSupplyAdjacentUnits: number;

        /** UnitTemplateCfg produceUnitType. */
        public produceUnitType: number;

        /** UnitTemplateCfg maxProduceMaterial. */
        public maxProduceMaterial: number;

        /** UnitTemplateCfg maxBuildMaterial. */
        public maxBuildMaterial: number;

        /** UnitTemplateCfg canCaptureTile. */
        public canCaptureTile: number;

        /** UnitTemplateCfg canLaunchSilo. */
        public canLaunchSilo: number;

        /** UnitTemplateCfg productionCost. */
        public productionCost: number;

        /** UnitTemplateCfg visionRange. */
        public visionRange: number;

        /** UnitTemplateCfg flareMaxAmmo. */
        public flareMaxAmmo: number;

        /** UnitTemplateCfg flareMaxRange. */
        public flareMaxRange: number;

        /** UnitTemplateCfg flareRadius. */
        public flareRadius: number;

        /**
         * Creates a new UnitTemplateCfg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UnitTemplateCfg instance
         */
        public static create(properties?: Config.IUnitTemplateCfg): Config.UnitTemplateCfg;

        /**
         * Encodes the specified UnitTemplateCfg message. Does not implicitly {@link Config.UnitTemplateCfg.verify|verify} messages.
         * @param message UnitTemplateCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Config.IUnitTemplateCfg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified UnitTemplateCfg message, length delimited. Does not implicitly {@link Config.UnitTemplateCfg.verify|verify} messages.
         * @param message UnitTemplateCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Config.IUnitTemplateCfg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an UnitTemplateCfg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UnitTemplateCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Config.UnitTemplateCfg;

        /**
         * Decodes an UnitTemplateCfg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UnitTemplateCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Config.UnitTemplateCfg;

        /**
         * Verifies an UnitTemplateCfg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an UnitTemplateCfg message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UnitTemplateCfg
         */
        public static fromObject(object: { [k: string]: any }): Config.UnitTemplateCfg;

        /**
         * Creates a plain object from an UnitTemplateCfg message. Also converts values to other types if specified.
         * @param message UnitTemplateCfg
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Config.UnitTemplateCfg, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UnitTemplateCfg to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DamageChartCfg. */
    interface IDamageChartCfg {

        /** DamageChartCfg attackerType */
        attackerType?: (number|null);

        /** DamageChartCfg armorType */
        armorType?: (number|null);

        /** DamageChartCfg weaponType */
        weaponType?: (number|null);

        /** DamageChartCfg damage */
        damage?: (number|null);
    }

    /** Represents a DamageChartCfg. */
    class DamageChartCfg implements IDamageChartCfg {

        /**
         * Constructs a new DamageChartCfg.
         * @param [properties] Properties to set
         */
        constructor(properties?: Config.IDamageChartCfg);

        /** DamageChartCfg attackerType. */
        public attackerType: number;

        /** DamageChartCfg armorType. */
        public armorType: number;

        /** DamageChartCfg weaponType. */
        public weaponType: number;

        /** DamageChartCfg damage. */
        public damage: number;

        /**
         * Creates a new DamageChartCfg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DamageChartCfg instance
         */
        public static create(properties?: Config.IDamageChartCfg): Config.DamageChartCfg;

        /**
         * Encodes the specified DamageChartCfg message. Does not implicitly {@link Config.DamageChartCfg.verify|verify} messages.
         * @param message DamageChartCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Config.IDamageChartCfg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified DamageChartCfg message, length delimited. Does not implicitly {@link Config.DamageChartCfg.verify|verify} messages.
         * @param message DamageChartCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Config.IDamageChartCfg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a DamageChartCfg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DamageChartCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Config.DamageChartCfg;

        /**
         * Decodes a DamageChartCfg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DamageChartCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Config.DamageChartCfg;

        /**
         * Verifies a DamageChartCfg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DamageChartCfg message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DamageChartCfg
         */
        public static fromObject(object: { [k: string]: any }): Config.DamageChartCfg;

        /**
         * Creates a plain object from a DamageChartCfg message. Also converts values to other types if specified.
         * @param message DamageChartCfg
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Config.DamageChartCfg, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DamageChartCfg to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MoveCostCfg. */
    interface IMoveCostCfg {

        /** MoveCostCfg tileType */
        tileType?: (number|null);

        /** MoveCostCfg moveType */
        moveType?: (number|null);

        /** MoveCostCfg cost */
        cost?: (number|null);
    }

    /** Represents a MoveCostCfg. */
    class MoveCostCfg implements IMoveCostCfg {

        /**
         * Constructs a new MoveCostCfg.
         * @param [properties] Properties to set
         */
        constructor(properties?: Config.IMoveCostCfg);

        /** MoveCostCfg tileType. */
        public tileType: number;

        /** MoveCostCfg moveType. */
        public moveType: number;

        /** MoveCostCfg cost. */
        public cost: number;

        /**
         * Creates a new MoveCostCfg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MoveCostCfg instance
         */
        public static create(properties?: Config.IMoveCostCfg): Config.MoveCostCfg;

        /**
         * Encodes the specified MoveCostCfg message. Does not implicitly {@link Config.MoveCostCfg.verify|verify} messages.
         * @param message MoveCostCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Config.IMoveCostCfg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MoveCostCfg message, length delimited. Does not implicitly {@link Config.MoveCostCfg.verify|verify} messages.
         * @param message MoveCostCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Config.IMoveCostCfg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MoveCostCfg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MoveCostCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Config.MoveCostCfg;

        /**
         * Decodes a MoveCostCfg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MoveCostCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Config.MoveCostCfg;

        /**
         * Verifies a MoveCostCfg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MoveCostCfg message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MoveCostCfg
         */
        public static fromObject(object: { [k: string]: any }): Config.MoveCostCfg;

        /**
         * Creates a plain object from a MoveCostCfg message. Also converts values to other types if specified.
         * @param message MoveCostCfg
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Config.MoveCostCfg, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MoveCostCfg to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an UnitPromotionCfg. */
    interface IUnitPromotionCfg {

        /** UnitPromotionCfg promotion */
        promotion?: (number|null);

        /** UnitPromotionCfg attackBonus */
        attackBonus?: (number|null);

        /** UnitPromotionCfg defenseBonus */
        defenseBonus?: (number|null);
    }

    /** Represents an UnitPromotionCfg. */
    class UnitPromotionCfg implements IUnitPromotionCfg {

        /**
         * Constructs a new UnitPromotionCfg.
         * @param [properties] Properties to set
         */
        constructor(properties?: Config.IUnitPromotionCfg);

        /** UnitPromotionCfg promotion. */
        public promotion: number;

        /** UnitPromotionCfg attackBonus. */
        public attackBonus: number;

        /** UnitPromotionCfg defenseBonus. */
        public defenseBonus: number;

        /**
         * Creates a new UnitPromotionCfg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UnitPromotionCfg instance
         */
        public static create(properties?: Config.IUnitPromotionCfg): Config.UnitPromotionCfg;

        /**
         * Encodes the specified UnitPromotionCfg message. Does not implicitly {@link Config.UnitPromotionCfg.verify|verify} messages.
         * @param message UnitPromotionCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Config.IUnitPromotionCfg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified UnitPromotionCfg message, length delimited. Does not implicitly {@link Config.UnitPromotionCfg.verify|verify} messages.
         * @param message UnitPromotionCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Config.IUnitPromotionCfg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an UnitPromotionCfg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UnitPromotionCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Config.UnitPromotionCfg;

        /**
         * Decodes an UnitPromotionCfg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UnitPromotionCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Config.UnitPromotionCfg;

        /**
         * Verifies an UnitPromotionCfg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an UnitPromotionCfg message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UnitPromotionCfg
         */
        public static fromObject(object: { [k: string]: any }): Config.UnitPromotionCfg;

        /**
         * Creates a plain object from an UnitPromotionCfg message. Also converts values to other types if specified.
         * @param message UnitPromotionCfg
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Config.UnitPromotionCfg, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UnitPromotionCfg to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a VisionBonusCfg. */
    interface IVisionBonusCfg {

        /** VisionBonusCfg unitType */
        unitType?: (number|null);

        /** VisionBonusCfg tileType */
        tileType?: (number|null);

        /** VisionBonusCfg visionBonus */
        visionBonus?: (number|null);
    }

    /** Represents a VisionBonusCfg. */
    class VisionBonusCfg implements IVisionBonusCfg {

        /**
         * Constructs a new VisionBonusCfg.
         * @param [properties] Properties to set
         */
        constructor(properties?: Config.IVisionBonusCfg);

        /** VisionBonusCfg unitType. */
        public unitType: number;

        /** VisionBonusCfg tileType. */
        public tileType: number;

        /** VisionBonusCfg visionBonus. */
        public visionBonus: number;

        /**
         * Creates a new VisionBonusCfg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns VisionBonusCfg instance
         */
        public static create(properties?: Config.IVisionBonusCfg): Config.VisionBonusCfg;

        /**
         * Encodes the specified VisionBonusCfg message. Does not implicitly {@link Config.VisionBonusCfg.verify|verify} messages.
         * @param message VisionBonusCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Config.IVisionBonusCfg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified VisionBonusCfg message, length delimited. Does not implicitly {@link Config.VisionBonusCfg.verify|verify} messages.
         * @param message VisionBonusCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Config.IVisionBonusCfg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a VisionBonusCfg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns VisionBonusCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Config.VisionBonusCfg;

        /**
         * Decodes a VisionBonusCfg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns VisionBonusCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Config.VisionBonusCfg;

        /**
         * Verifies a VisionBonusCfg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a VisionBonusCfg message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns VisionBonusCfg
         */
        public static fromObject(object: { [k: string]: any }): Config.VisionBonusCfg;

        /**
         * Creates a plain object from a VisionBonusCfg message. Also converts values to other types if specified.
         * @param message VisionBonusCfg
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Config.VisionBonusCfg, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this VisionBonusCfg to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a BuildableTileCfg. */
    interface IBuildableTileCfg {

        /** BuildableTileCfg unitType */
        unitType?: (number|null);

        /** BuildableTileCfg srcBaseType */
        srcBaseType?: (number|null);

        /** BuildableTileCfg srcObjectType */
        srcObjectType?: (number|null);

        /** BuildableTileCfg dstBaseType */
        dstBaseType?: (number|null);

        /** BuildableTileCfg dstObjectType */
        dstObjectType?: (number|null);
    }

    /** Represents a BuildableTileCfg. */
    class BuildableTileCfg implements IBuildableTileCfg {

        /**
         * Constructs a new BuildableTileCfg.
         * @param [properties] Properties to set
         */
        constructor(properties?: Config.IBuildableTileCfg);

        /** BuildableTileCfg unitType. */
        public unitType: number;

        /** BuildableTileCfg srcBaseType. */
        public srcBaseType: number;

        /** BuildableTileCfg srcObjectType. */
        public srcObjectType: number;

        /** BuildableTileCfg dstBaseType. */
        public dstBaseType: number;

        /** BuildableTileCfg dstObjectType. */
        public dstObjectType: number;

        /**
         * Creates a new BuildableTileCfg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BuildableTileCfg instance
         */
        public static create(properties?: Config.IBuildableTileCfg): Config.BuildableTileCfg;

        /**
         * Encodes the specified BuildableTileCfg message. Does not implicitly {@link Config.BuildableTileCfg.verify|verify} messages.
         * @param message BuildableTileCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Config.IBuildableTileCfg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified BuildableTileCfg message, length delimited. Does not implicitly {@link Config.BuildableTileCfg.verify|verify} messages.
         * @param message BuildableTileCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Config.IBuildableTileCfg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a BuildableTileCfg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BuildableTileCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Config.BuildableTileCfg;

        /**
         * Decodes a BuildableTileCfg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BuildableTileCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Config.BuildableTileCfg;

        /**
         * Verifies a BuildableTileCfg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a BuildableTileCfg message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns BuildableTileCfg
         */
        public static fromObject(object: { [k: string]: any }): Config.BuildableTileCfg;

        /**
         * Creates a plain object from a BuildableTileCfg message. Also converts values to other types if specified.
         * @param message BuildableTileCfg
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Config.BuildableTileCfg, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this BuildableTileCfg to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PlayerRankCfg. */
    interface IPlayerRankCfg {

        /** PlayerRankCfg minScore */
        minScore?: (number|null);

        /** PlayerRankCfg rank */
        rank?: (number|null);

        /** PlayerRankCfg nameList */
        nameList?: (string[]|null);
    }

    /** Represents a PlayerRankCfg. */
    class PlayerRankCfg implements IPlayerRankCfg {

        /**
         * Constructs a new PlayerRankCfg.
         * @param [properties] Properties to set
         */
        constructor(properties?: Config.IPlayerRankCfg);

        /** PlayerRankCfg minScore. */
        public minScore: number;

        /** PlayerRankCfg rank. */
        public rank: number;

        /** PlayerRankCfg nameList. */
        public nameList: string[];

        /**
         * Creates a new PlayerRankCfg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PlayerRankCfg instance
         */
        public static create(properties?: Config.IPlayerRankCfg): Config.PlayerRankCfg;

        /**
         * Encodes the specified PlayerRankCfg message. Does not implicitly {@link Config.PlayerRankCfg.verify|verify} messages.
         * @param message PlayerRankCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Config.IPlayerRankCfg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified PlayerRankCfg message, length delimited. Does not implicitly {@link Config.PlayerRankCfg.verify|verify} messages.
         * @param message PlayerRankCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Config.IPlayerRankCfg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a PlayerRankCfg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PlayerRankCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Config.PlayerRankCfg;

        /**
         * Decodes a PlayerRankCfg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PlayerRankCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Config.PlayerRankCfg;

        /**
         * Verifies a PlayerRankCfg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PlayerRankCfg message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PlayerRankCfg
         */
        public static fromObject(object: { [k: string]: any }): Config.PlayerRankCfg;

        /**
         * Creates a plain object from a PlayerRankCfg message. Also converts values to other types if specified.
         * @param message PlayerRankCfg
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Config.PlayerRankCfg, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PlayerRankCfg to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CoBasicCfg. */
    interface ICoBasicCfg {

        /** CoBasicCfg coId */
        coId?: (number|null);

        /** CoBasicCfg name */
        name?: (string|null);

        /** CoBasicCfg zoneRadius */
        zoneRadius?: (number|null);

        /** CoBasicCfg boardCostPercentage */
        boardCostPercentage?: (number|null);

        /** CoBasicCfg zoneExpansionEnergyList */
        zoneExpansionEnergyList?: (number[]|null);

        /** CoBasicCfg powerEnergyList */
        powerEnergyList?: (number[]|null);

        /** CoBasicCfg isEnabled */
        isEnabled?: (number|null);

        /** CoBasicCfg isEnabledForDialogue */
        isEnabledForDialogue?: (number|null);

        /** CoBasicCfg artDesigner */
        artDesigner?: (string|null);

        /** CoBasicCfg dataDesigner */
        dataDesigner?: (string|null);

        /** CoBasicCfg image */
        image?: (number|null);

        /** CoBasicCfg tier */
        tier?: (number|null);

        /** CoBasicCfg maxLoadCount */
        maxLoadCount?: (number|null);

        /** CoBasicCfg energyType */
        energyType?: (number|null);

        /** CoBasicCfg globalCoEnergyParameters */
        globalCoEnergyParameters?: (number[]|null);

        /** CoBasicCfg canGetEnergyWithBattleOnPowerSkills */
        canGetEnergyWithBattleOnPowerSkills?: (number|null);

        /** CoBasicCfg passiveSkills */
        passiveSkills?: (number[]|null);

        /** CoBasicCfg powerSkills */
        powerSkills?: (number[]|null);

        /** CoBasicCfg superPowerSkills */
        superPowerSkills?: (number[]|null);

        /** CoBasicCfg passiveDesc */
        passiveDesc?: (string[]|null);

        /** CoBasicCfg copDesc */
        copDesc?: (string[]|null);

        /** CoBasicCfg scopDesc */
        scopDesc?: (string[]|null);
    }

    /** Represents a CoBasicCfg. */
    class CoBasicCfg implements ICoBasicCfg {

        /**
         * Constructs a new CoBasicCfg.
         * @param [properties] Properties to set
         */
        constructor(properties?: Config.ICoBasicCfg);

        /** CoBasicCfg coId. */
        public coId: number;

        /** CoBasicCfg name. */
        public name: string;

        /** CoBasicCfg zoneRadius. */
        public zoneRadius: number;

        /** CoBasicCfg boardCostPercentage. */
        public boardCostPercentage: number;

        /** CoBasicCfg zoneExpansionEnergyList. */
        public zoneExpansionEnergyList: number[];

        /** CoBasicCfg powerEnergyList. */
        public powerEnergyList: number[];

        /** CoBasicCfg isEnabled. */
        public isEnabled: number;

        /** CoBasicCfg isEnabledForDialogue. */
        public isEnabledForDialogue: number;

        /** CoBasicCfg artDesigner. */
        public artDesigner: string;

        /** CoBasicCfg dataDesigner. */
        public dataDesigner: string;

        /** CoBasicCfg image. */
        public image: number;

        /** CoBasicCfg tier. */
        public tier: number;

        /** CoBasicCfg maxLoadCount. */
        public maxLoadCount: number;

        /** CoBasicCfg energyType. */
        public energyType: number;

        /** CoBasicCfg globalCoEnergyParameters. */
        public globalCoEnergyParameters: number[];

        /** CoBasicCfg canGetEnergyWithBattleOnPowerSkills. */
        public canGetEnergyWithBattleOnPowerSkills: number;

        /** CoBasicCfg passiveSkills. */
        public passiveSkills: number[];

        /** CoBasicCfg powerSkills. */
        public powerSkills: number[];

        /** CoBasicCfg superPowerSkills. */
        public superPowerSkills: number[];

        /** CoBasicCfg passiveDesc. */
        public passiveDesc: string[];

        /** CoBasicCfg copDesc. */
        public copDesc: string[];

        /** CoBasicCfg scopDesc. */
        public scopDesc: string[];

        /**
         * Creates a new CoBasicCfg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CoBasicCfg instance
         */
        public static create(properties?: Config.ICoBasicCfg): Config.CoBasicCfg;

        /**
         * Encodes the specified CoBasicCfg message. Does not implicitly {@link Config.CoBasicCfg.verify|verify} messages.
         * @param message CoBasicCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Config.ICoBasicCfg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified CoBasicCfg message, length delimited. Does not implicitly {@link Config.CoBasicCfg.verify|verify} messages.
         * @param message CoBasicCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Config.ICoBasicCfg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CoBasicCfg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CoBasicCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Config.CoBasicCfg;

        /**
         * Decodes a CoBasicCfg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CoBasicCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Config.CoBasicCfg;

        /**
         * Verifies a CoBasicCfg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CoBasicCfg message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CoBasicCfg
         */
        public static fromObject(object: { [k: string]: any }): Config.CoBasicCfg;

        /**
         * Creates a plain object from a CoBasicCfg message. Also converts values to other types if specified.
         * @param message CoBasicCfg
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Config.CoBasicCfg, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CoBasicCfg to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CoSkillCfg. */
    interface ICoSkillCfg {

        /** CoSkillCfg skillId */
        skillId?: (number|null);

        /** CoSkillCfg name */
        name?: (string|null);

        /** CoSkillCfg showZone */
        showZone?: (number|null);

        /** CoSkillCfg desc */
        desc?: (string[]|null);

        /** CoSkillCfg selfOffenseBonus */
        selfOffenseBonus?: (number[]|null);

        /** CoSkillCfg selfDefenseBonus */
        selfDefenseBonus?: (number[]|null);

        /** CoSkillCfg selfMoveRangeBonus */
        selfMoveRangeBonus?: (number[]|null);

        /** CoSkillCfg maxAttackRangeBonus */
        maxAttackRangeBonus?: (number[]|null);

        /** CoSkillCfg selfHpGain */
        selfHpGain?: (number[]|null);

        /** CoSkillCfg enemyHpGain */
        enemyHpGain?: (number[]|null);

        /** CoSkillCfg selfPrimaryAmmoGain */
        selfPrimaryAmmoGain?: (number[]|null);

        /** CoSkillCfg enemyPrimaryAmmoGain */
        enemyPrimaryAmmoGain?: (number[]|null);

        /** CoSkillCfg selfFuelGain */
        selfFuelGain?: (number[]|null);

        /** CoSkillCfg enemyFuelGain */
        enemyFuelGain?: (number[]|null);

        /** CoSkillCfg selfMaterialGain */
        selfMaterialGain?: (number[]|null);

        /** CoSkillCfg enemyMaterialGain */
        enemyMaterialGain?: (number[]|null);

        /** CoSkillCfg selfHpRecovery */
        selfHpRecovery?: (number[]|null);

        /** CoSkillCfg fixedAreaDamage */
        fixedAreaDamage?: (number[]|null);

        /** CoSkillCfg selfPromotionGain */
        selfPromotionGain?: (number[]|null);

        /** CoSkillCfg unitVisionRangeBonus */
        unitVisionRangeBonus?: (number[]|null);

        /** CoSkillCfg unitTrueVision */
        unitTrueVision?: (number[]|null);

        /** CoSkillCfg attackBonusByPromotion */
        attackBonusByPromotion?: (number[]|null);

        /** CoSkillCfg defenseBonusByPromotion */
        defenseBonusByPromotion?: (number[]|null);

        /** CoSkillCfg promotionBonusByAttack */
        promotionBonusByAttack?: (number[]|null);

        /** CoSkillCfg selfPrimaryAmmoRecovery */
        selfPrimaryAmmoRecovery?: (number[]|null);

        /** CoSkillCfg selfFuelRecovery */
        selfFuelRecovery?: (number[]|null);

        /** CoSkillCfg selfUnitProduction */
        selfUnitProduction?: (number[]|null);

        /** CoSkillCfg selfFuelConsumption */
        selfFuelConsumption?: (number[]|null);

        /** CoSkillCfg selfUnitActionState */
        selfUnitActionState?: (number[]|null);

        /** CoSkillCfg selfLuckRangeBonus */
        selfLuckRangeBonus?: (number[]|null);

        /** CoSkillCfg selfUnitCost */
        selfUnitCost?: (number[]|null);

        /** CoSkillCfg selfFund */
        selfFund?: (number[]|null);

        /** CoSkillCfg selfOffenseBonusByFund */
        selfOffenseBonusByFund?: (number[]|null);

        /** CoSkillCfg selfCaptureAmount */
        selfCaptureAmount?: (number[]|null);

        /** CoSkillCfg selfTileIncome */
        selfTileIncome?: (number[]|null);

        /** CoSkillCfg enemyEnergy */
        enemyEnergy?: (number[]|null);

        /** CoSkillCfg selfOffenseBonusByTileCount */
        selfOffenseBonusByTileCount?: (number[]|null);

        /** CoSkillCfg selfGetFundByAttackUnit */
        selfGetFundByAttackUnit?: (number[]|null);

        /** CoSkillCfg selfAddUnit */
        selfAddUnit?: (number[]|null);

        /** CoSkillCfg selfFlareAmmoGain */
        selfFlareAmmoGain?: (number[]|null);

        /** CoSkillCfg selfUnitIgnoreWeather */
        selfUnitIgnoreWeather?: (number[]|null);

        /** CoSkillCfg changeWeather */
        changeWeather?: (number[]|null);

        /** CoSkillCfg selfUnitMoveCost */
        selfUnitMoveCost?: (number[]|null);

        /** CoSkillCfg selfOffenseBonusByTileDefense */
        selfOffenseBonusByTileDefense?: (number[]|null);

        /** CoSkillCfg selfDefenseBonusByTileDefense */
        selfDefenseBonusByTileDefense?: (number[]|null);

        /** CoSkillCfg selfRepairAmountBonus */
        selfRepairAmountBonus?: (number[]|null);

        /** CoSkillCfg selfOffenseBonusByEnemyTileDefense */
        selfOffenseBonusByEnemyTileDefense?: (number[]|null);

        /** CoSkillCfg selfOffenseBonusByCounter */
        selfOffenseBonusByCounter?: (number[]|null);

        /** CoSkillCfg selfPromotionBonusByProduce */
        selfPromotionBonusByProduce?: (number[]|null);
    }

    /** Represents a CoSkillCfg. */
    class CoSkillCfg implements ICoSkillCfg {

        /**
         * Constructs a new CoSkillCfg.
         * @param [properties] Properties to set
         */
        constructor(properties?: Config.ICoSkillCfg);

        /** CoSkillCfg skillId. */
        public skillId: number;

        /** CoSkillCfg name. */
        public name: string;

        /** CoSkillCfg showZone. */
        public showZone: number;

        /** CoSkillCfg desc. */
        public desc: string[];

        /** CoSkillCfg selfOffenseBonus. */
        public selfOffenseBonus: number[];

        /** CoSkillCfg selfDefenseBonus. */
        public selfDefenseBonus: number[];

        /** CoSkillCfg selfMoveRangeBonus. */
        public selfMoveRangeBonus: number[];

        /** CoSkillCfg maxAttackRangeBonus. */
        public maxAttackRangeBonus: number[];

        /** CoSkillCfg selfHpGain. */
        public selfHpGain: number[];

        /** CoSkillCfg enemyHpGain. */
        public enemyHpGain: number[];

        /** CoSkillCfg selfPrimaryAmmoGain. */
        public selfPrimaryAmmoGain: number[];

        /** CoSkillCfg enemyPrimaryAmmoGain. */
        public enemyPrimaryAmmoGain: number[];

        /** CoSkillCfg selfFuelGain. */
        public selfFuelGain: number[];

        /** CoSkillCfg enemyFuelGain. */
        public enemyFuelGain: number[];

        /** CoSkillCfg selfMaterialGain. */
        public selfMaterialGain: number[];

        /** CoSkillCfg enemyMaterialGain. */
        public enemyMaterialGain: number[];

        /** CoSkillCfg selfHpRecovery. */
        public selfHpRecovery: number[];

        /** CoSkillCfg fixedAreaDamage. */
        public fixedAreaDamage: number[];

        /** CoSkillCfg selfPromotionGain. */
        public selfPromotionGain: number[];

        /** CoSkillCfg unitVisionRangeBonus. */
        public unitVisionRangeBonus: number[];

        /** CoSkillCfg unitTrueVision. */
        public unitTrueVision: number[];

        /** CoSkillCfg attackBonusByPromotion. */
        public attackBonusByPromotion: number[];

        /** CoSkillCfg defenseBonusByPromotion. */
        public defenseBonusByPromotion: number[];

        /** CoSkillCfg promotionBonusByAttack. */
        public promotionBonusByAttack: number[];

        /** CoSkillCfg selfPrimaryAmmoRecovery. */
        public selfPrimaryAmmoRecovery: number[];

        /** CoSkillCfg selfFuelRecovery. */
        public selfFuelRecovery: number[];

        /** CoSkillCfg selfUnitProduction. */
        public selfUnitProduction: number[];

        /** CoSkillCfg selfFuelConsumption. */
        public selfFuelConsumption: number[];

        /** CoSkillCfg selfUnitActionState. */
        public selfUnitActionState: number[];

        /** CoSkillCfg selfLuckRangeBonus. */
        public selfLuckRangeBonus: number[];

        /** CoSkillCfg selfUnitCost. */
        public selfUnitCost: number[];

        /** CoSkillCfg selfFund. */
        public selfFund: number[];

        /** CoSkillCfg selfOffenseBonusByFund. */
        public selfOffenseBonusByFund: number[];

        /** CoSkillCfg selfCaptureAmount. */
        public selfCaptureAmount: number[];

        /** CoSkillCfg selfTileIncome. */
        public selfTileIncome: number[];

        /** CoSkillCfg enemyEnergy. */
        public enemyEnergy: number[];

        /** CoSkillCfg selfOffenseBonusByTileCount. */
        public selfOffenseBonusByTileCount: number[];

        /** CoSkillCfg selfGetFundByAttackUnit. */
        public selfGetFundByAttackUnit: number[];

        /** CoSkillCfg selfAddUnit. */
        public selfAddUnit: number[];

        /** CoSkillCfg selfFlareAmmoGain. */
        public selfFlareAmmoGain: number[];

        /** CoSkillCfg selfUnitIgnoreWeather. */
        public selfUnitIgnoreWeather: number[];

        /** CoSkillCfg changeWeather. */
        public changeWeather: number[];

        /** CoSkillCfg selfUnitMoveCost. */
        public selfUnitMoveCost: number[];

        /** CoSkillCfg selfOffenseBonusByTileDefense. */
        public selfOffenseBonusByTileDefense: number[];

        /** CoSkillCfg selfDefenseBonusByTileDefense. */
        public selfDefenseBonusByTileDefense: number[];

        /** CoSkillCfg selfRepairAmountBonus. */
        public selfRepairAmountBonus: number[];

        /** CoSkillCfg selfOffenseBonusByEnemyTileDefense. */
        public selfOffenseBonusByEnemyTileDefense: number[];

        /** CoSkillCfg selfOffenseBonusByCounter. */
        public selfOffenseBonusByCounter: number[];

        /** CoSkillCfg selfPromotionBonusByProduce. */
        public selfPromotionBonusByProduce: number[];

        /**
         * Creates a new CoSkillCfg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CoSkillCfg instance
         */
        public static create(properties?: Config.ICoSkillCfg): Config.CoSkillCfg;

        /**
         * Encodes the specified CoSkillCfg message. Does not implicitly {@link Config.CoSkillCfg.verify|verify} messages.
         * @param message CoSkillCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Config.ICoSkillCfg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified CoSkillCfg message, length delimited. Does not implicitly {@link Config.CoSkillCfg.verify|verify} messages.
         * @param message CoSkillCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Config.ICoSkillCfg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CoSkillCfg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CoSkillCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Config.CoSkillCfg;

        /**
         * Decodes a CoSkillCfg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CoSkillCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Config.CoSkillCfg;

        /**
         * Verifies a CoSkillCfg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CoSkillCfg message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CoSkillCfg
         */
        public static fromObject(object: { [k: string]: any }): Config.CoSkillCfg;

        /**
         * Creates a plain object from a CoSkillCfg message. Also converts values to other types if specified.
         * @param message CoSkillCfg
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Config.CoSkillCfg, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CoSkillCfg to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WeatherCfg. */
    interface IWeatherCfg {

        /** WeatherCfg weatherType */
        weatherType?: (number|null);

        /** WeatherCfg fog */
        fog?: (number|null);

        /** WeatherCfg offenseBonus */
        offenseBonus?: (number[]|null);

        /** WeatherCfg movementBonus */
        movementBonus?: (number[]|null);

        /** WeatherCfg unitVisionFixed */
        unitVisionFixed?: (number[]|null);

        /** WeatherCfg tileVisionFixed */
        tileVisionFixed?: (number[]|null);
    }

    /** Represents a WeatherCfg. */
    class WeatherCfg implements IWeatherCfg {

        /**
         * Constructs a new WeatherCfg.
         * @param [properties] Properties to set
         */
        constructor(properties?: Config.IWeatherCfg);

        /** WeatherCfg weatherType. */
        public weatherType: number;

        /** WeatherCfg fog. */
        public fog: number;

        /** WeatherCfg offenseBonus. */
        public offenseBonus: number[];

        /** WeatherCfg movementBonus. */
        public movementBonus: number[];

        /** WeatherCfg unitVisionFixed. */
        public unitVisionFixed: number[];

        /** WeatherCfg tileVisionFixed. */
        public tileVisionFixed: number[];

        /**
         * Creates a new WeatherCfg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WeatherCfg instance
         */
        public static create(properties?: Config.IWeatherCfg): Config.WeatherCfg;

        /**
         * Encodes the specified WeatherCfg message. Does not implicitly {@link Config.WeatherCfg.verify|verify} messages.
         * @param message WeatherCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Config.IWeatherCfg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WeatherCfg message, length delimited. Does not implicitly {@link Config.WeatherCfg.verify|verify} messages.
         * @param message WeatherCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Config.IWeatherCfg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WeatherCfg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WeatherCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Config.WeatherCfg;

        /**
         * Decodes a WeatherCfg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WeatherCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Config.WeatherCfg;

        /**
         * Verifies a WeatherCfg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WeatherCfg message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WeatherCfg
         */
        public static fromObject(object: { [k: string]: any }): Config.WeatherCfg;

        /**
         * Creates a plain object from a WeatherCfg message. Also converts values to other types if specified.
         * @param message WeatherCfg
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Config.WeatherCfg, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WeatherCfg to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a UserAvatarCfg. */
    interface IUserAvatarCfg {

        /** UserAvatarCfg avatarId */
        avatarId?: (number|null);

        /** UserAvatarCfg sortWeight */
        sortWeight?: (number|null);
    }

    /** Represents a UserAvatarCfg. */
    class UserAvatarCfg implements IUserAvatarCfg {

        /**
         * Constructs a new UserAvatarCfg.
         * @param [properties] Properties to set
         */
        constructor(properties?: Config.IUserAvatarCfg);

        /** UserAvatarCfg avatarId. */
        public avatarId: number;

        /** UserAvatarCfg sortWeight. */
        public sortWeight: number;

        /**
         * Creates a new UserAvatarCfg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UserAvatarCfg instance
         */
        public static create(properties?: Config.IUserAvatarCfg): Config.UserAvatarCfg;

        /**
         * Encodes the specified UserAvatarCfg message. Does not implicitly {@link Config.UserAvatarCfg.verify|verify} messages.
         * @param message UserAvatarCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Config.IUserAvatarCfg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified UserAvatarCfg message, length delimited. Does not implicitly {@link Config.UserAvatarCfg.verify|verify} messages.
         * @param message UserAvatarCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Config.IUserAvatarCfg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a UserAvatarCfg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UserAvatarCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Config.UserAvatarCfg;

        /**
         * Decodes a UserAvatarCfg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UserAvatarCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Config.UserAvatarCfg;

        /**
         * Verifies a UserAvatarCfg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a UserAvatarCfg message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UserAvatarCfg
         */
        public static fromObject(object: { [k: string]: any }): Config.UserAvatarCfg;

        /**
         * Creates a plain object from a UserAvatarCfg message. Also converts values to other types if specified.
         * @param message UserAvatarCfg
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Config.UserAvatarCfg, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UserAvatarCfg to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FullConfig. */
    interface IFullConfig {

        /** FullConfig System */
        System?: (Config.ISystemCfg|null);

        /** FullConfig TileCategory */
        TileCategory?: (Config.ITileCategoryCfg[]|null);

        /** FullConfig UnitCategory */
        UnitCategory?: (Config.IUnitCategoryCfg[]|null);

        /** FullConfig TileTemplate */
        TileTemplate?: (Config.ITileTemplateCfg[]|null);

        /** FullConfig UnitTemplate */
        UnitTemplate?: (Config.IUnitTemplateCfg[]|null);

        /** FullConfig DamageChart */
        DamageChart?: (Config.IDamageChartCfg[]|null);

        /** FullConfig MoveCost */
        MoveCost?: (Config.IMoveCostCfg[]|null);

        /** FullConfig UnitPromotion */
        UnitPromotion?: (Config.IUnitPromotionCfg[]|null);

        /** FullConfig VisionBonus */
        VisionBonus?: (Config.IVisionBonusCfg[]|null);

        /** FullConfig BuildableTile */
        BuildableTile?: (Config.IBuildableTileCfg[]|null);

        /** FullConfig PlayerRank */
        PlayerRank?: (Config.IPlayerRankCfg[]|null);

        /** FullConfig CoBasic */
        CoBasic?: (Config.ICoBasicCfg[]|null);

        /** FullConfig CoSkill */
        CoSkill?: (Config.ICoSkillCfg[]|null);

        /** FullConfig Weather */
        Weather?: (Config.IWeatherCfg[]|null);

        /** FullConfig WeatherCategory */
        WeatherCategory?: (Config.IWeatherCategoryCfg[]|null);

        /** FullConfig UserAvatar */
        UserAvatar?: (Config.IUserAvatarCfg[]|null);
    }

    /** Represents a FullConfig. */
    class FullConfig implements IFullConfig {

        /**
         * Constructs a new FullConfig.
         * @param [properties] Properties to set
         */
        constructor(properties?: Config.IFullConfig);

        /** FullConfig System. */
        public System?: (Config.ISystemCfg|null);

        /** FullConfig TileCategory. */
        public TileCategory: Config.ITileCategoryCfg[];

        /** FullConfig UnitCategory. */
        public UnitCategory: Config.IUnitCategoryCfg[];

        /** FullConfig TileTemplate. */
        public TileTemplate: Config.ITileTemplateCfg[];

        /** FullConfig UnitTemplate. */
        public UnitTemplate: Config.IUnitTemplateCfg[];

        /** FullConfig DamageChart. */
        public DamageChart: Config.IDamageChartCfg[];

        /** FullConfig MoveCost. */
        public MoveCost: Config.IMoveCostCfg[];

        /** FullConfig UnitPromotion. */
        public UnitPromotion: Config.IUnitPromotionCfg[];

        /** FullConfig VisionBonus. */
        public VisionBonus: Config.IVisionBonusCfg[];

        /** FullConfig BuildableTile. */
        public BuildableTile: Config.IBuildableTileCfg[];

        /** FullConfig PlayerRank. */
        public PlayerRank: Config.IPlayerRankCfg[];

        /** FullConfig CoBasic. */
        public CoBasic: Config.ICoBasicCfg[];

        /** FullConfig CoSkill. */
        public CoSkill: Config.ICoSkillCfg[];

        /** FullConfig Weather. */
        public Weather: Config.IWeatherCfg[];

        /** FullConfig WeatherCategory. */
        public WeatherCategory: Config.IWeatherCategoryCfg[];

        /** FullConfig UserAvatar. */
        public UserAvatar: Config.IUserAvatarCfg[];

        /**
         * Creates a new FullConfig instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FullConfig instance
         */
        public static create(properties?: Config.IFullConfig): Config.FullConfig;

        /**
         * Encodes the specified FullConfig message. Does not implicitly {@link Config.FullConfig.verify|verify} messages.
         * @param message FullConfig message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Config.IFullConfig, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified FullConfig message, length delimited. Does not implicitly {@link Config.FullConfig.verify|verify} messages.
         * @param message FullConfig message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Config.IFullConfig, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a FullConfig message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FullConfig
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Config.FullConfig;

        /**
         * Decodes a FullConfig message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FullConfig
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Config.FullConfig;

        /**
         * Verifies a FullConfig message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FullConfig message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FullConfig
         */
        public static fromObject(object: { [k: string]: any }): Config.FullConfig;

        /**
         * Creates a plain object from a FullConfig message. Also converts values to other types if specified.
         * @param message FullConfig
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Config.FullConfig, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FullConfig to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Properties of a Map. */
export declare interface IMap {
}

/** Represents a Map. */
export declare class Map implements IMap {

    /**
     * Constructs a new Map.
     * @param [properties] Properties to set
     */
    constructor(properties?: IMap);

    /**
     * Creates a new Map instance using the specified properties.
     * @param [properties] Properties to set
     * @returns Map instance
     */
    public static create(properties?: IMap): Map;

    /**
     * Encodes the specified Map message. Does not implicitly {@link Map.verify|verify} messages.
     * @param message Map message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IMap, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Encodes the specified Map message, length delimited. Does not implicitly {@link Map.verify|verify} messages.
     * @param message Map message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IMap, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Decodes a Map message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns Map
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Map;

    /**
     * Decodes a Map message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns Map
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Map;

    /**
     * Verifies a Map message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a Map message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns Map
     */
    public static fromObject(object: { [k: string]: any }): Map;

    /**
     * Creates a plain object from a Map message. Also converts values to other types if specified.
     * @param message Map
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: Map, options?: protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this Map to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export declare namespace Map {

    /** Properties of a DeprecatedMapAvailability. */
    interface IDeprecatedMapAvailability {

        /** DeprecatedMapAvailability canMcw */
        canMcw?: (boolean|null);

        /** DeprecatedMapAvailability canScw */
        canScw?: (boolean|null);

        /** DeprecatedMapAvailability canMrwStd */
        canMrwStd?: (boolean|null);

        /** DeprecatedMapAvailability canMrwFog */
        canMrwFog?: (boolean|null);

        /** DeprecatedMapAvailability canSrw */
        canSrw?: (boolean|null);

        /** DeprecatedMapAvailability canCcw */
        canCcw?: (boolean|null);
    }

    /** Represents a DeprecatedMapAvailability. */
    class DeprecatedMapAvailability implements IDeprecatedMapAvailability {

        /**
         * Constructs a new DeprecatedMapAvailability.
         * @param [properties] Properties to set
         */
        constructor(properties?: Map.IDeprecatedMapAvailability);

        /** DeprecatedMapAvailability canMcw. */
        public canMcw: boolean;

        /** DeprecatedMapAvailability canScw. */
        public canScw: boolean;

        /** DeprecatedMapAvailability canMrwStd. */
        public canMrwStd: boolean;

        /** DeprecatedMapAvailability canMrwFog. */
        public canMrwFog: boolean;

        /** DeprecatedMapAvailability canSrw. */
        public canSrw: boolean;

        /** DeprecatedMapAvailability canCcw. */
        public canCcw: boolean;

        /**
         * Creates a new DeprecatedMapAvailability instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DeprecatedMapAvailability instance
         */
        public static create(properties?: Map.IDeprecatedMapAvailability): Map.DeprecatedMapAvailability;

        /**
         * Encodes the specified DeprecatedMapAvailability message. Does not implicitly {@link Map.DeprecatedMapAvailability.verify|verify} messages.
         * @param message DeprecatedMapAvailability message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Map.IDeprecatedMapAvailability, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified DeprecatedMapAvailability message, length delimited. Does not implicitly {@link Map.DeprecatedMapAvailability.verify|verify} messages.
         * @param message DeprecatedMapAvailability message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Map.IDeprecatedMapAvailability, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a DeprecatedMapAvailability message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DeprecatedMapAvailability
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Map.DeprecatedMapAvailability;

        /**
         * Decodes a DeprecatedMapAvailability message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DeprecatedMapAvailability
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Map.DeprecatedMapAvailability;

        /**
         * Verifies a DeprecatedMapAvailability message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DeprecatedMapAvailability message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DeprecatedMapAvailability
         */
        public static fromObject(object: { [k: string]: any }): Map.DeprecatedMapAvailability;

        /**
         * Creates a plain object from a DeprecatedMapAvailability message. Also converts values to other types if specified.
         * @param message DeprecatedMapAvailability
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Map.DeprecatedMapAvailability, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DeprecatedMapAvailability to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DataForMapTag. */
    interface IDataForMapTag {

        /** DataForMapTag fog */
        fog?: (boolean|null);
    }

    /** Represents a DataForMapTag. */
    class DataForMapTag implements IDataForMapTag {

        /**
         * Constructs a new DataForMapTag.
         * @param [properties] Properties to set
         */
        constructor(properties?: Map.IDataForMapTag);

        /** DataForMapTag fog. */
        public fog: boolean;

        /**
         * Creates a new DataForMapTag instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DataForMapTag instance
         */
        public static create(properties?: Map.IDataForMapTag): Map.DataForMapTag;

        /**
         * Encodes the specified DataForMapTag message. Does not implicitly {@link Map.DataForMapTag.verify|verify} messages.
         * @param message DataForMapTag message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Map.IDataForMapTag, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified DataForMapTag message, length delimited. Does not implicitly {@link Map.DataForMapTag.verify|verify} messages.
         * @param message DataForMapTag message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Map.IDataForMapTag, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a DataForMapTag message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DataForMapTag
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Map.DataForMapTag;

        /**
         * Decodes a DataForMapTag message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DataForMapTag
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Map.DataForMapTag;

        /**
         * Verifies a DataForMapTag message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DataForMapTag message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DataForMapTag
         */
        public static fromObject(object: { [k: string]: any }): Map.DataForMapTag;

        /**
         * Creates a plain object from a DataForMapTag message. Also converts values to other types if specified.
         * @param message DataForMapTag
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Map.DataForMapTag, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DataForMapTag to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WarEventFullData. */
    interface IWarEventFullData {

        /** WarEventFullData conditionArray */
        conditionArray?: (WarEvent.IWarEventCondition[]|null);

        /** WarEventFullData conditionNodeArray */
        conditionNodeArray?: (WarEvent.IWarEventConditionNode[]|null);

        /** WarEventFullData actionArray */
        actionArray?: (WarEvent.IWarEventAction[]|null);

        /** WarEventFullData eventArray */
        eventArray?: (WarEvent.IWarEvent[]|null);
    }

    /** Represents a WarEventFullData. */
    class WarEventFullData implements IWarEventFullData {

        /**
         * Constructs a new WarEventFullData.
         * @param [properties] Properties to set
         */
        constructor(properties?: Map.IWarEventFullData);

        /** WarEventFullData conditionArray. */
        public conditionArray: WarEvent.IWarEventCondition[];

        /** WarEventFullData conditionNodeArray. */
        public conditionNodeArray: WarEvent.IWarEventConditionNode[];

        /** WarEventFullData actionArray. */
        public actionArray: WarEvent.IWarEventAction[];

        /** WarEventFullData eventArray. */
        public eventArray: WarEvent.IWarEvent[];

        /**
         * Creates a new WarEventFullData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WarEventFullData instance
         */
        public static create(properties?: Map.IWarEventFullData): Map.WarEventFullData;

        /**
         * Encodes the specified WarEventFullData message. Does not implicitly {@link Map.WarEventFullData.verify|verify} messages.
         * @param message WarEventFullData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Map.IWarEventFullData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WarEventFullData message, length delimited. Does not implicitly {@link Map.WarEventFullData.verify|verify} messages.
         * @param message WarEventFullData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Map.IWarEventFullData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarEventFullData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarEventFullData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Map.WarEventFullData;

        /**
         * Decodes a WarEventFullData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WarEventFullData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Map.WarEventFullData;

        /**
         * Verifies a WarEventFullData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WarEventFullData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WarEventFullData
         */
        public static fromObject(object: { [k: string]: any }): Map.WarEventFullData;

        /**
         * Creates a plain object from a WarEventFullData message. Also converts values to other types if specified.
         * @param message WarEventFullData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Map.WarEventFullData, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WarEventFullData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DeprecatedMapComplexInfo. */
    interface IDeprecatedMapComplexInfo {

        /** DeprecatedMapComplexInfo deprecatedMapAvailability */
        deprecatedMapAvailability?: (Map.IDeprecatedMapAvailability|null);

        /** DeprecatedMapComplexInfo warStatisticsArray */
        warStatisticsArray?: (Map.DeprecatedMapComplexInfo.IWarStatistics[]|null);
    }

    /** Represents a DeprecatedMapComplexInfo. */
    class DeprecatedMapComplexInfo implements IDeprecatedMapComplexInfo {

        /**
         * Constructs a new DeprecatedMapComplexInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: Map.IDeprecatedMapComplexInfo);

        /** DeprecatedMapComplexInfo deprecatedMapAvailability. */
        public deprecatedMapAvailability?: (Map.IDeprecatedMapAvailability|null);

        /** DeprecatedMapComplexInfo warStatisticsArray. */
        public warStatisticsArray: Map.DeprecatedMapComplexInfo.IWarStatistics[];

        /**
         * Creates a new DeprecatedMapComplexInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DeprecatedMapComplexInfo instance
         */
        public static create(properties?: Map.IDeprecatedMapComplexInfo): Map.DeprecatedMapComplexInfo;

        /**
         * Encodes the specified DeprecatedMapComplexInfo message. Does not implicitly {@link Map.DeprecatedMapComplexInfo.verify|verify} messages.
         * @param message DeprecatedMapComplexInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Map.IDeprecatedMapComplexInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified DeprecatedMapComplexInfo message, length delimited. Does not implicitly {@link Map.DeprecatedMapComplexInfo.verify|verify} messages.
         * @param message DeprecatedMapComplexInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Map.IDeprecatedMapComplexInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a DeprecatedMapComplexInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DeprecatedMapComplexInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Map.DeprecatedMapComplexInfo;

        /**
         * Decodes a DeprecatedMapComplexInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DeprecatedMapComplexInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Map.DeprecatedMapComplexInfo;

        /**
         * Verifies a DeprecatedMapComplexInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DeprecatedMapComplexInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DeprecatedMapComplexInfo
         */
        public static fromObject(object: { [k: string]: any }): Map.DeprecatedMapComplexInfo;

        /**
         * Creates a plain object from a DeprecatedMapComplexInfo message. Also converts values to other types if specified.
         * @param message DeprecatedMapComplexInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Map.DeprecatedMapComplexInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DeprecatedMapComplexInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace DeprecatedMapComplexInfo {

        /** Properties of a WarStatistics. */
        interface IWarStatistics {

            /** WarStatistics totalPlayedTimes */
            totalPlayedTimes?: (number|null);

            /** WarStatistics totalTurns */
            totalTurns?: (number|null);

            /** WarStatistics warType */
            warType?: (number|null);

            /** WarStatistics playerStatisticsArray */
            playerStatisticsArray?: (Map.DeprecatedMapComplexInfo.WarStatistics.IPlayerStatistics[]|null);
        }

        /** Represents a WarStatistics. */
        class WarStatistics implements IWarStatistics {

            /**
             * Constructs a new WarStatistics.
             * @param [properties] Properties to set
             */
            constructor(properties?: Map.DeprecatedMapComplexInfo.IWarStatistics);

            /** WarStatistics totalPlayedTimes. */
            public totalPlayedTimes: number;

            /** WarStatistics totalTurns. */
            public totalTurns: number;

            /** WarStatistics warType. */
            public warType: number;

            /** WarStatistics playerStatisticsArray. */
            public playerStatisticsArray: Map.DeprecatedMapComplexInfo.WarStatistics.IPlayerStatistics[];

            /**
             * Creates a new WarStatistics instance using the specified properties.
             * @param [properties] Properties to set
             * @returns WarStatistics instance
             */
            public static create(properties?: Map.DeprecatedMapComplexInfo.IWarStatistics): Map.DeprecatedMapComplexInfo.WarStatistics;

            /**
             * Encodes the specified WarStatistics message. Does not implicitly {@link Map.DeprecatedMapComplexInfo.WarStatistics.verify|verify} messages.
             * @param message WarStatistics message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: Map.DeprecatedMapComplexInfo.IWarStatistics, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified WarStatistics message, length delimited. Does not implicitly {@link Map.DeprecatedMapComplexInfo.WarStatistics.verify|verify} messages.
             * @param message WarStatistics message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: Map.DeprecatedMapComplexInfo.IWarStatistics, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a WarStatistics message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns WarStatistics
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Map.DeprecatedMapComplexInfo.WarStatistics;

            /**
             * Decodes a WarStatistics message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns WarStatistics
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Map.DeprecatedMapComplexInfo.WarStatistics;

            /**
             * Verifies a WarStatistics message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a WarStatistics message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns WarStatistics
             */
            public static fromObject(object: { [k: string]: any }): Map.DeprecatedMapComplexInfo.WarStatistics;

            /**
             * Creates a plain object from a WarStatistics message. Also converts values to other types if specified.
             * @param message WarStatistics
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: Map.DeprecatedMapComplexInfo.WarStatistics, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this WarStatistics to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace WarStatistics {

            /** Properties of a PlayerStatistics. */
            interface IPlayerStatistics {

                /** PlayerStatistics playerIndex */
                playerIndex?: (number|null);

                /** PlayerStatistics wins */
                wins?: (number|null);

                /** PlayerStatistics loses */
                loses?: (number|null);

                /** PlayerStatistics draws */
                draws?: (number|null);
            }

            /** Represents a PlayerStatistics. */
            class PlayerStatistics implements IPlayerStatistics {

                /**
                 * Constructs a new PlayerStatistics.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: Map.DeprecatedMapComplexInfo.WarStatistics.IPlayerStatistics);

                /** PlayerStatistics playerIndex. */
                public playerIndex: number;

                /** PlayerStatistics wins. */
                public wins: number;

                /** PlayerStatistics loses. */
                public loses: number;

                /** PlayerStatistics draws. */
                public draws: number;

                /**
                 * Creates a new PlayerStatistics instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns PlayerStatistics instance
                 */
                public static create(properties?: Map.DeprecatedMapComplexInfo.WarStatistics.IPlayerStatistics): Map.DeprecatedMapComplexInfo.WarStatistics.PlayerStatistics;

                /**
                 * Encodes the specified PlayerStatistics message. Does not implicitly {@link Map.DeprecatedMapComplexInfo.WarStatistics.PlayerStatistics.verify|verify} messages.
                 * @param message PlayerStatistics message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: Map.DeprecatedMapComplexInfo.WarStatistics.IPlayerStatistics, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified PlayerStatistics message, length delimited. Does not implicitly {@link Map.DeprecatedMapComplexInfo.WarStatistics.PlayerStatistics.verify|verify} messages.
                 * @param message PlayerStatistics message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: Map.DeprecatedMapComplexInfo.WarStatistics.IPlayerStatistics, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a PlayerStatistics message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns PlayerStatistics
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Map.DeprecatedMapComplexInfo.WarStatistics.PlayerStatistics;

                /**
                 * Decodes a PlayerStatistics message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns PlayerStatistics
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Map.DeprecatedMapComplexInfo.WarStatistics.PlayerStatistics;

                /**
                 * Verifies a PlayerStatistics message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a PlayerStatistics message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns PlayerStatistics
                 */
                public static fromObject(object: { [k: string]: any }): Map.DeprecatedMapComplexInfo.WarStatistics.PlayerStatistics;

                /**
                 * Creates a plain object from a PlayerStatistics message. Also converts values to other types if specified.
                 * @param message PlayerStatistics
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: Map.DeprecatedMapComplexInfo.WarStatistics.PlayerStatistics, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this PlayerStatistics to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }
    }

    /** Properties of a MapWarStatisticsForTurn. */
    interface IMapWarStatisticsForTurn {

        /** MapWarStatisticsForTurn turnIndex */
        turnIndex?: (number|null);

        /** MapWarStatisticsForTurn totalGames */
        totalGames?: (number|null);

        /** MapWarStatisticsForTurn gameResultArray */
        gameResultArray?: (number[]|null);
    }

    /** Represents a MapWarStatisticsForTurn. */
    class MapWarStatisticsForTurn implements IMapWarStatisticsForTurn {

        /**
         * Constructs a new MapWarStatisticsForTurn.
         * @param [properties] Properties to set
         */
        constructor(properties?: Map.IMapWarStatisticsForTurn);

        /** MapWarStatisticsForTurn turnIndex. */
        public turnIndex: number;

        /** MapWarStatisticsForTurn totalGames. */
        public totalGames: number;

        /** MapWarStatisticsForTurn gameResultArray. */
        public gameResultArray: number[];

        /**
         * Creates a new MapWarStatisticsForTurn instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MapWarStatisticsForTurn instance
         */
        public static create(properties?: Map.IMapWarStatisticsForTurn): Map.MapWarStatisticsForTurn;

        /**
         * Encodes the specified MapWarStatisticsForTurn message. Does not implicitly {@link Map.MapWarStatisticsForTurn.verify|verify} messages.
         * @param message MapWarStatisticsForTurn message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Map.IMapWarStatisticsForTurn, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MapWarStatisticsForTurn message, length delimited. Does not implicitly {@link Map.MapWarStatisticsForTurn.verify|verify} messages.
         * @param message MapWarStatisticsForTurn message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Map.IMapWarStatisticsForTurn, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MapWarStatisticsForTurn message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MapWarStatisticsForTurn
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Map.MapWarStatisticsForTurn;

        /**
         * Decodes a MapWarStatisticsForTurn message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MapWarStatisticsForTurn
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Map.MapWarStatisticsForTurn;

        /**
         * Verifies a MapWarStatisticsForTurn message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MapWarStatisticsForTurn message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MapWarStatisticsForTurn
         */
        public static fromObject(object: { [k: string]: any }): Map.MapWarStatisticsForTurn;

        /**
         * Creates a plain object from a MapWarStatisticsForTurn message. Also converts values to other types if specified.
         * @param message MapWarStatisticsForTurn
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Map.MapWarStatisticsForTurn, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MapWarStatisticsForTurn to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MapWarStatisticsForRule. */
    interface IMapWarStatisticsForRule {

        /** MapWarStatisticsForRule ruleId */
        ruleId?: (number|null);

        /** MapWarStatisticsForRule warType */
        warType?: (number|null);

        /** MapWarStatisticsForRule statisticsForTurnArray */
        statisticsForTurnArray?: (Map.IMapWarStatisticsForTurn[]|null);
    }

    /** Represents a MapWarStatisticsForRule. */
    class MapWarStatisticsForRule implements IMapWarStatisticsForRule {

        /**
         * Constructs a new MapWarStatisticsForRule.
         * @param [properties] Properties to set
         */
        constructor(properties?: Map.IMapWarStatisticsForRule);

        /** MapWarStatisticsForRule ruleId. */
        public ruleId: number;

        /** MapWarStatisticsForRule warType. */
        public warType: number;

        /** MapWarStatisticsForRule statisticsForTurnArray. */
        public statisticsForTurnArray: Map.IMapWarStatisticsForTurn[];

        /**
         * Creates a new MapWarStatisticsForRule instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MapWarStatisticsForRule instance
         */
        public static create(properties?: Map.IMapWarStatisticsForRule): Map.MapWarStatisticsForRule;

        /**
         * Encodes the specified MapWarStatisticsForRule message. Does not implicitly {@link Map.MapWarStatisticsForRule.verify|verify} messages.
         * @param message MapWarStatisticsForRule message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Map.IMapWarStatisticsForRule, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MapWarStatisticsForRule message, length delimited. Does not implicitly {@link Map.MapWarStatisticsForRule.verify|verify} messages.
         * @param message MapWarStatisticsForRule message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Map.IMapWarStatisticsForRule, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MapWarStatisticsForRule message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MapWarStatisticsForRule
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Map.MapWarStatisticsForRule;

        /**
         * Decodes a MapWarStatisticsForRule message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MapWarStatisticsForRule
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Map.MapWarStatisticsForRule;

        /**
         * Verifies a MapWarStatisticsForRule message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MapWarStatisticsForRule message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MapWarStatisticsForRule
         */
        public static fromObject(object: { [k: string]: any }): Map.MapWarStatisticsForRule;

        /**
         * Creates a plain object from a MapWarStatisticsForRule message. Also converts values to other types if specified.
         * @param message MapWarStatisticsForRule
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Map.MapWarStatisticsForRule, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MapWarStatisticsForRule to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MapWarStatistics. */
    interface IMapWarStatistics {

        /** MapWarStatistics statisticsForRuleArray */
        statisticsForRuleArray?: (Map.IMapWarStatisticsForRule[]|null);
    }

    /** Represents a MapWarStatistics. */
    class MapWarStatistics implements IMapWarStatistics {

        /**
         * Constructs a new MapWarStatistics.
         * @param [properties] Properties to set
         */
        constructor(properties?: Map.IMapWarStatistics);

        /** MapWarStatistics statisticsForRuleArray. */
        public statisticsForRuleArray: Map.IMapWarStatisticsForRule[];

        /**
         * Creates a new MapWarStatistics instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MapWarStatistics instance
         */
        public static create(properties?: Map.IMapWarStatistics): Map.MapWarStatistics;

        /**
         * Encodes the specified MapWarStatistics message. Does not implicitly {@link Map.MapWarStatistics.verify|verify} messages.
         * @param message MapWarStatistics message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Map.IMapWarStatistics, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MapWarStatistics message, length delimited. Does not implicitly {@link Map.MapWarStatistics.verify|verify} messages.
         * @param message MapWarStatistics message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Map.IMapWarStatistics, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MapWarStatistics message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MapWarStatistics
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Map.MapWarStatistics;

        /**
         * Decodes a MapWarStatistics message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MapWarStatistics
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Map.MapWarStatistics;

        /**
         * Verifies a MapWarStatistics message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MapWarStatistics message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MapWarStatistics
         */
        public static fromObject(object: { [k: string]: any }): Map.MapWarStatistics;

        /**
         * Creates a plain object from a MapWarStatistics message. Also converts values to other types if specified.
         * @param message MapWarStatistics
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Map.MapWarStatistics, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MapWarStatistics to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MapRawData. */
    interface IMapRawData {

        /** MapRawData mapId */
        mapId?: (number|null);

        /** MapRawData designerName */
        designerName?: (string|null);

        /** MapRawData designerUserId */
        designerUserId?: (number|null);

        /** MapRawData mapNameArray */
        mapNameArray?: (Structure.ILanguageText[]|null);

        /** MapRawData mapWidth */
        mapWidth?: (number|null);

        /** MapRawData mapHeight */
        mapHeight?: (number|null);

        /** MapRawData playersCountUnneutral */
        playersCountUnneutral?: (number|null);

        /** MapRawData modifiedTime */
        modifiedTime?: (number|null);

        /** MapRawData tileDataArray */
        tileDataArray?: (WarSerialization.ISerialTile[]|null);

        /** MapRawData unitDataArray */
        unitDataArray?: (WarSerialization.ISerialUnit[]|null);

        /** MapRawData warRuleArray */
        warRuleArray?: (WarRule.IWarRule[]|null);

        /** MapRawData warEventFullData */
        warEventFullData?: (Map.IWarEventFullData|null);

        /** MapRawData mapTag */
        mapTag?: (Map.IDataForMapTag|null);
    }

    /** Represents a MapRawData. */
    class MapRawData implements IMapRawData {

        /**
         * Constructs a new MapRawData.
         * @param [properties] Properties to set
         */
        constructor(properties?: Map.IMapRawData);

        /** MapRawData mapId. */
        public mapId: number;

        /** MapRawData designerName. */
        public designerName: string;

        /** MapRawData designerUserId. */
        public designerUserId: number;

        /** MapRawData mapNameArray. */
        public mapNameArray: Structure.ILanguageText[];

        /** MapRawData mapWidth. */
        public mapWidth: number;

        /** MapRawData mapHeight. */
        public mapHeight: number;

        /** MapRawData playersCountUnneutral. */
        public playersCountUnneutral: number;

        /** MapRawData modifiedTime. */
        public modifiedTime: number;

        /** MapRawData tileDataArray. */
        public tileDataArray: WarSerialization.ISerialTile[];

        /** MapRawData unitDataArray. */
        public unitDataArray: WarSerialization.ISerialUnit[];

        /** MapRawData warRuleArray. */
        public warRuleArray: WarRule.IWarRule[];

        /** MapRawData warEventFullData. */
        public warEventFullData?: (Map.IWarEventFullData|null);

        /** MapRawData mapTag. */
        public mapTag?: (Map.IDataForMapTag|null);

        /**
         * Creates a new MapRawData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MapRawData instance
         */
        public static create(properties?: Map.IMapRawData): Map.MapRawData;

        /**
         * Encodes the specified MapRawData message. Does not implicitly {@link Map.MapRawData.verify|verify} messages.
         * @param message MapRawData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Map.IMapRawData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MapRawData message, length delimited. Does not implicitly {@link Map.MapRawData.verify|verify} messages.
         * @param message MapRawData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Map.IMapRawData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MapRawData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MapRawData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Map.MapRawData;

        /**
         * Decodes a MapRawData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MapRawData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Map.MapRawData;

        /**
         * Verifies a MapRawData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MapRawData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MapRawData
         */
        public static fromObject(object: { [k: string]: any }): Map.MapRawData;

        /**
         * Creates a plain object from a MapRawData message. Also converts values to other types if specified.
         * @param message MapRawData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Map.MapRawData, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MapRawData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MapExtraData. */
    interface IMapExtraData {

        /** MapExtraData mapId */
        mapId?: (number|null);

        /** MapExtraData isEnabled */
        isEnabled?: (boolean|null);

        /** MapExtraData totalRating */
        totalRating?: (number|null);

        /** MapExtraData totalRaters */
        totalRaters?: (number|null);

        /** MapExtraData deprecatedMapComplexInfo */
        deprecatedMapComplexInfo?: (Map.IDeprecatedMapComplexInfo|null);

        /** MapExtraData mapWarStatistics */
        mapWarStatistics?: (Map.IMapWarStatistics|null);
    }

    /** Represents a MapExtraData. */
    class MapExtraData implements IMapExtraData {

        /**
         * Constructs a new MapExtraData.
         * @param [properties] Properties to set
         */
        constructor(properties?: Map.IMapExtraData);

        /** MapExtraData mapId. */
        public mapId: number;

        /** MapExtraData isEnabled. */
        public isEnabled: boolean;

        /** MapExtraData totalRating. */
        public totalRating: number;

        /** MapExtraData totalRaters. */
        public totalRaters: number;

        /** MapExtraData deprecatedMapComplexInfo. */
        public deprecatedMapComplexInfo?: (Map.IDeprecatedMapComplexInfo|null);

        /** MapExtraData mapWarStatistics. */
        public mapWarStatistics?: (Map.IMapWarStatistics|null);

        /**
         * Creates a new MapExtraData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MapExtraData instance
         */
        public static create(properties?: Map.IMapExtraData): Map.MapExtraData;

        /**
         * Encodes the specified MapExtraData message. Does not implicitly {@link Map.MapExtraData.verify|verify} messages.
         * @param message MapExtraData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Map.IMapExtraData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MapExtraData message, length delimited. Does not implicitly {@link Map.MapExtraData.verify|verify} messages.
         * @param message MapExtraData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Map.IMapExtraData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MapExtraData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MapExtraData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Map.MapExtraData;

        /**
         * Decodes a MapExtraData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MapExtraData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Map.MapExtraData;

        /**
         * Verifies a MapExtraData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MapExtraData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MapExtraData
         */
        public static fromObject(object: { [k: string]: any }): Map.MapExtraData;

        /**
         * Creates a plain object from a MapExtraData message. Also converts values to other types if specified.
         * @param message MapExtraData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Map.MapExtraData, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MapExtraData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MapBriefData. */
    interface IMapBriefData {

        /** MapBriefData mapExtraData */
        mapExtraData?: (Map.IMapExtraData|null);

        /** MapBriefData playersCountUnneutral */
        playersCountUnneutral?: (number|null);

        /** MapBriefData designerName */
        designerName?: (string|null);

        /** MapBriefData mapNameArray */
        mapNameArray?: (Structure.ILanguageText[]|null);

        /** MapBriefData mapTag */
        mapTag?: (Map.IDataForMapTag|null);

        /** MapBriefData ruleAvailability */
        ruleAvailability?: (WarRule.IRuleAvailability|null);
    }

    /** Represents a MapBriefData. */
    class MapBriefData implements IMapBriefData {

        /**
         * Constructs a new MapBriefData.
         * @param [properties] Properties to set
         */
        constructor(properties?: Map.IMapBriefData);

        /** MapBriefData mapExtraData. */
        public mapExtraData?: (Map.IMapExtraData|null);

        /** MapBriefData playersCountUnneutral. */
        public playersCountUnneutral: number;

        /** MapBriefData designerName. */
        public designerName: string;

        /** MapBriefData mapNameArray. */
        public mapNameArray: Structure.ILanguageText[];

        /** MapBriefData mapTag. */
        public mapTag?: (Map.IDataForMapTag|null);

        /** MapBriefData ruleAvailability. */
        public ruleAvailability?: (WarRule.IRuleAvailability|null);

        /**
         * Creates a new MapBriefData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MapBriefData instance
         */
        public static create(properties?: Map.IMapBriefData): Map.MapBriefData;

        /**
         * Encodes the specified MapBriefData message. Does not implicitly {@link Map.MapBriefData.verify|verify} messages.
         * @param message MapBriefData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Map.IMapBriefData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MapBriefData message, length delimited. Does not implicitly {@link Map.MapBriefData.verify|verify} messages.
         * @param message MapBriefData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Map.IMapBriefData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MapBriefData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MapBriefData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Map.MapBriefData;

        /**
         * Decodes a MapBriefData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MapBriefData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Map.MapBriefData;

        /**
         * Verifies a MapBriefData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MapBriefData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MapBriefData
         */
        public static fromObject(object: { [k: string]: any }): Map.MapBriefData;

        /**
         * Creates a plain object from a MapBriefData message. Also converts values to other types if specified.
         * @param message MapBriefData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Map.MapBriefData, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MapBriefData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MapEditorData. */
    interface IMapEditorData {

        /** MapEditorData slotIndex */
        slotIndex?: (number|null);

        /** MapEditorData mapRawData */
        mapRawData?: (Map.IMapRawData|null);

        /** MapEditorData reviewStatus */
        reviewStatus?: (number|null);

        /** MapEditorData reviewComment */
        reviewComment?: (string|null);
    }

    /** Represents a MapEditorData. */
    class MapEditorData implements IMapEditorData {

        /**
         * Constructs a new MapEditorData.
         * @param [properties] Properties to set
         */
        constructor(properties?: Map.IMapEditorData);

        /** MapEditorData slotIndex. */
        public slotIndex: number;

        /** MapEditorData mapRawData. */
        public mapRawData?: (Map.IMapRawData|null);

        /** MapEditorData reviewStatus. */
        public reviewStatus: number;

        /** MapEditorData reviewComment. */
        public reviewComment: string;

        /**
         * Creates a new MapEditorData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MapEditorData instance
         */
        public static create(properties?: Map.IMapEditorData): Map.MapEditorData;

        /**
         * Encodes the specified MapEditorData message. Does not implicitly {@link Map.MapEditorData.verify|verify} messages.
         * @param message MapEditorData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Map.IMapEditorData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MapEditorData message, length delimited. Does not implicitly {@link Map.MapEditorData.verify|verify} messages.
         * @param message MapEditorData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Map.IMapEditorData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MapEditorData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MapEditorData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Map.MapEditorData;

        /**
         * Decodes a MapEditorData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MapEditorData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Map.MapEditorData;

        /**
         * Verifies a MapEditorData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MapEditorData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MapEditorData
         */
        public static fromObject(object: { [k: string]: any }): Map.MapEditorData;

        /**
         * Creates a plain object from a MapEditorData message. Also converts values to other types if specified.
         * @param message MapEditorData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Map.MapEditorData, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MapEditorData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Properties of a WarEvent. */
export declare interface IWarEvent {
}

/** Represents a WarEvent. */
export declare class WarEvent implements IWarEvent {

    /**
     * Constructs a new WarEvent.
     * @param [properties] Properties to set
     */
    constructor(properties?: IWarEvent);

    /**
     * Creates a new WarEvent instance using the specified properties.
     * @param [properties] Properties to set
     * @returns WarEvent instance
     */
    public static create(properties?: IWarEvent): WarEvent;

    /**
     * Encodes the specified WarEvent message. Does not implicitly {@link WarEvent.verify|verify} messages.
     * @param message WarEvent message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IWarEvent, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Encodes the specified WarEvent message, length delimited. Does not implicitly {@link WarEvent.verify|verify} messages.
     * @param message WarEvent message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IWarEvent, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Decodes a WarEvent message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns WarEvent
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarEvent;

    /**
     * Decodes a WarEvent message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns WarEvent
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarEvent;

    /**
     * Verifies a WarEvent message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a WarEvent message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns WarEvent
     */
    public static fromObject(object: { [k: string]: any }): WarEvent;

    /**
     * Creates a plain object from a WarEvent message. Also converts values to other types if specified.
     * @param message WarEvent
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: WarEvent, options?: protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this WarEvent to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export declare namespace WarEvent {

    /** Properties of a WecCommonData. */
    interface IWecCommonData {

        /** WecCommonData conditionId */
        conditionId?: (number|null);
    }

    /** Represents a WecCommonData. */
    class WecCommonData implements IWecCommonData {

        /**
         * Constructs a new WecCommonData.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarEvent.IWecCommonData);

        /** WecCommonData conditionId. */
        public conditionId: number;

        /**
         * Creates a new WecCommonData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WecCommonData instance
         */
        public static create(properties?: WarEvent.IWecCommonData): WarEvent.WecCommonData;

        /**
         * Encodes the specified WecCommonData message. Does not implicitly {@link WarEvent.WecCommonData.verify|verify} messages.
         * @param message WecCommonData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarEvent.IWecCommonData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WecCommonData message, length delimited. Does not implicitly {@link WarEvent.WecCommonData.verify|verify} messages.
         * @param message WecCommonData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarEvent.IWecCommonData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WecCommonData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WecCommonData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarEvent.WecCommonData;

        /**
         * Decodes a WecCommonData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WecCommonData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarEvent.WecCommonData;

        /**
         * Verifies a WecCommonData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WecCommonData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WecCommonData
         */
        public static fromObject(object: { [k: string]: any }): WarEvent.WecCommonData;

        /**
         * Creates a plain object from a WecCommonData message. Also converts values to other types if specified.
         * @param message WecCommonData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarEvent.WecCommonData, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WecCommonData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WecTurnIndexEqualTo. */
    interface IWecTurnIndexEqualTo {

        /** WecTurnIndexEqualTo valueEqualTo */
        valueEqualTo?: (number|null);

        /** WecTurnIndexEqualTo isNot */
        isNot?: (boolean|null);
    }

    /** Represents a WecTurnIndexEqualTo. */
    class WecTurnIndexEqualTo implements IWecTurnIndexEqualTo {

        /**
         * Constructs a new WecTurnIndexEqualTo.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarEvent.IWecTurnIndexEqualTo);

        /** WecTurnIndexEqualTo valueEqualTo. */
        public valueEqualTo: number;

        /** WecTurnIndexEqualTo isNot. */
        public isNot: boolean;

        /**
         * Creates a new WecTurnIndexEqualTo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WecTurnIndexEqualTo instance
         */
        public static create(properties?: WarEvent.IWecTurnIndexEqualTo): WarEvent.WecTurnIndexEqualTo;

        /**
         * Encodes the specified WecTurnIndexEqualTo message. Does not implicitly {@link WarEvent.WecTurnIndexEqualTo.verify|verify} messages.
         * @param message WecTurnIndexEqualTo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarEvent.IWecTurnIndexEqualTo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WecTurnIndexEqualTo message, length delimited. Does not implicitly {@link WarEvent.WecTurnIndexEqualTo.verify|verify} messages.
         * @param message WecTurnIndexEqualTo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarEvent.IWecTurnIndexEqualTo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WecTurnIndexEqualTo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WecTurnIndexEqualTo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarEvent.WecTurnIndexEqualTo;

        /**
         * Decodes a WecTurnIndexEqualTo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WecTurnIndexEqualTo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarEvent.WecTurnIndexEqualTo;

        /**
         * Verifies a WecTurnIndexEqualTo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WecTurnIndexEqualTo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WecTurnIndexEqualTo
         */
        public static fromObject(object: { [k: string]: any }): WarEvent.WecTurnIndexEqualTo;

        /**
         * Creates a plain object from a WecTurnIndexEqualTo message. Also converts values to other types if specified.
         * @param message WecTurnIndexEqualTo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarEvent.WecTurnIndexEqualTo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WecTurnIndexEqualTo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WecTurnIndexGreaterThan. */
    interface IWecTurnIndexGreaterThan {

        /** WecTurnIndexGreaterThan valueGreaterThan */
        valueGreaterThan?: (number|null);

        /** WecTurnIndexGreaterThan isNot */
        isNot?: (boolean|null);
    }

    /** Represents a WecTurnIndexGreaterThan. */
    class WecTurnIndexGreaterThan implements IWecTurnIndexGreaterThan {

        /**
         * Constructs a new WecTurnIndexGreaterThan.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarEvent.IWecTurnIndexGreaterThan);

        /** WecTurnIndexGreaterThan valueGreaterThan. */
        public valueGreaterThan: number;

        /** WecTurnIndexGreaterThan isNot. */
        public isNot: boolean;

        /**
         * Creates a new WecTurnIndexGreaterThan instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WecTurnIndexGreaterThan instance
         */
        public static create(properties?: WarEvent.IWecTurnIndexGreaterThan): WarEvent.WecTurnIndexGreaterThan;

        /**
         * Encodes the specified WecTurnIndexGreaterThan message. Does not implicitly {@link WarEvent.WecTurnIndexGreaterThan.verify|verify} messages.
         * @param message WecTurnIndexGreaterThan message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarEvent.IWecTurnIndexGreaterThan, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WecTurnIndexGreaterThan message, length delimited. Does not implicitly {@link WarEvent.WecTurnIndexGreaterThan.verify|verify} messages.
         * @param message WecTurnIndexGreaterThan message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarEvent.IWecTurnIndexGreaterThan, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WecTurnIndexGreaterThan message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WecTurnIndexGreaterThan
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarEvent.WecTurnIndexGreaterThan;

        /**
         * Decodes a WecTurnIndexGreaterThan message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WecTurnIndexGreaterThan
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarEvent.WecTurnIndexGreaterThan;

        /**
         * Verifies a WecTurnIndexGreaterThan message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WecTurnIndexGreaterThan message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WecTurnIndexGreaterThan
         */
        public static fromObject(object: { [k: string]: any }): WarEvent.WecTurnIndexGreaterThan;

        /**
         * Creates a plain object from a WecTurnIndexGreaterThan message. Also converts values to other types if specified.
         * @param message WecTurnIndexGreaterThan
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarEvent.WecTurnIndexGreaterThan, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WecTurnIndexGreaterThan to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WecTurnIndexLessThan. */
    interface IWecTurnIndexLessThan {

        /** WecTurnIndexLessThan valueLessThan */
        valueLessThan?: (number|null);

        /** WecTurnIndexLessThan isNot */
        isNot?: (boolean|null);
    }

    /** Represents a WecTurnIndexLessThan. */
    class WecTurnIndexLessThan implements IWecTurnIndexLessThan {

        /**
         * Constructs a new WecTurnIndexLessThan.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarEvent.IWecTurnIndexLessThan);

        /** WecTurnIndexLessThan valueLessThan. */
        public valueLessThan: number;

        /** WecTurnIndexLessThan isNot. */
        public isNot: boolean;

        /**
         * Creates a new WecTurnIndexLessThan instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WecTurnIndexLessThan instance
         */
        public static create(properties?: WarEvent.IWecTurnIndexLessThan): WarEvent.WecTurnIndexLessThan;

        /**
         * Encodes the specified WecTurnIndexLessThan message. Does not implicitly {@link WarEvent.WecTurnIndexLessThan.verify|verify} messages.
         * @param message WecTurnIndexLessThan message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarEvent.IWecTurnIndexLessThan, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WecTurnIndexLessThan message, length delimited. Does not implicitly {@link WarEvent.WecTurnIndexLessThan.verify|verify} messages.
         * @param message WecTurnIndexLessThan message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarEvent.IWecTurnIndexLessThan, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WecTurnIndexLessThan message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WecTurnIndexLessThan
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarEvent.WecTurnIndexLessThan;

        /**
         * Decodes a WecTurnIndexLessThan message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WecTurnIndexLessThan
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarEvent.WecTurnIndexLessThan;

        /**
         * Verifies a WecTurnIndexLessThan message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WecTurnIndexLessThan message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WecTurnIndexLessThan
         */
        public static fromObject(object: { [k: string]: any }): WarEvent.WecTurnIndexLessThan;

        /**
         * Creates a plain object from a WecTurnIndexLessThan message. Also converts values to other types if specified.
         * @param message WecTurnIndexLessThan
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarEvent.WecTurnIndexLessThan, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WecTurnIndexLessThan to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WecTurnIndexRemainderEqualTo. */
    interface IWecTurnIndexRemainderEqualTo {

        /** WecTurnIndexRemainderEqualTo divider */
        divider?: (number|null);

        /** WecTurnIndexRemainderEqualTo remainderEqualTo */
        remainderEqualTo?: (number|null);

        /** WecTurnIndexRemainderEqualTo isNot */
        isNot?: (boolean|null);
    }

    /** Represents a WecTurnIndexRemainderEqualTo. */
    class WecTurnIndexRemainderEqualTo implements IWecTurnIndexRemainderEqualTo {

        /**
         * Constructs a new WecTurnIndexRemainderEqualTo.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarEvent.IWecTurnIndexRemainderEqualTo);

        /** WecTurnIndexRemainderEqualTo divider. */
        public divider: number;

        /** WecTurnIndexRemainderEqualTo remainderEqualTo. */
        public remainderEqualTo: number;

        /** WecTurnIndexRemainderEqualTo isNot. */
        public isNot: boolean;

        /**
         * Creates a new WecTurnIndexRemainderEqualTo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WecTurnIndexRemainderEqualTo instance
         */
        public static create(properties?: WarEvent.IWecTurnIndexRemainderEqualTo): WarEvent.WecTurnIndexRemainderEqualTo;

        /**
         * Encodes the specified WecTurnIndexRemainderEqualTo message. Does not implicitly {@link WarEvent.WecTurnIndexRemainderEqualTo.verify|verify} messages.
         * @param message WecTurnIndexRemainderEqualTo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarEvent.IWecTurnIndexRemainderEqualTo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WecTurnIndexRemainderEqualTo message, length delimited. Does not implicitly {@link WarEvent.WecTurnIndexRemainderEqualTo.verify|verify} messages.
         * @param message WecTurnIndexRemainderEqualTo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarEvent.IWecTurnIndexRemainderEqualTo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WecTurnIndexRemainderEqualTo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WecTurnIndexRemainderEqualTo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarEvent.WecTurnIndexRemainderEqualTo;

        /**
         * Decodes a WecTurnIndexRemainderEqualTo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WecTurnIndexRemainderEqualTo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarEvent.WecTurnIndexRemainderEqualTo;

        /**
         * Verifies a WecTurnIndexRemainderEqualTo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WecTurnIndexRemainderEqualTo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WecTurnIndexRemainderEqualTo
         */
        public static fromObject(object: { [k: string]: any }): WarEvent.WecTurnIndexRemainderEqualTo;

        /**
         * Creates a plain object from a WecTurnIndexRemainderEqualTo message. Also converts values to other types if specified.
         * @param message WecTurnIndexRemainderEqualTo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarEvent.WecTurnIndexRemainderEqualTo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WecTurnIndexRemainderEqualTo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WecTurnAndPlayer. */
    interface IWecTurnAndPlayer {

        /** WecTurnAndPlayer turnIndex */
        turnIndex?: (number|null);

        /** WecTurnAndPlayer turnIndexComparator */
        turnIndexComparator?: (number|null);

        /** WecTurnAndPlayer turnIndexDivider */
        turnIndexDivider?: (number|null);

        /** WecTurnAndPlayer turnIndexRemainder */
        turnIndexRemainder?: (number|null);

        /** WecTurnAndPlayer turnIndexRemainderComparator */
        turnIndexRemainderComparator?: (number|null);

        /** WecTurnAndPlayer turnPhase */
        turnPhase?: (number|null);

        /** WecTurnAndPlayer playerIndexArray */
        playerIndexArray?: (number[]|null);
    }

    /** Represents a WecTurnAndPlayer. */
    class WecTurnAndPlayer implements IWecTurnAndPlayer {

        /**
         * Constructs a new WecTurnAndPlayer.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarEvent.IWecTurnAndPlayer);

        /** WecTurnAndPlayer turnIndex. */
        public turnIndex: number;

        /** WecTurnAndPlayer turnIndexComparator. */
        public turnIndexComparator: number;

        /** WecTurnAndPlayer turnIndexDivider. */
        public turnIndexDivider: number;

        /** WecTurnAndPlayer turnIndexRemainder. */
        public turnIndexRemainder: number;

        /** WecTurnAndPlayer turnIndexRemainderComparator. */
        public turnIndexRemainderComparator: number;

        /** WecTurnAndPlayer turnPhase. */
        public turnPhase: number;

        /** WecTurnAndPlayer playerIndexArray. */
        public playerIndexArray: number[];

        /**
         * Creates a new WecTurnAndPlayer instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WecTurnAndPlayer instance
         */
        public static create(properties?: WarEvent.IWecTurnAndPlayer): WarEvent.WecTurnAndPlayer;

        /**
         * Encodes the specified WecTurnAndPlayer message. Does not implicitly {@link WarEvent.WecTurnAndPlayer.verify|verify} messages.
         * @param message WecTurnAndPlayer message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarEvent.IWecTurnAndPlayer, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WecTurnAndPlayer message, length delimited. Does not implicitly {@link WarEvent.WecTurnAndPlayer.verify|verify} messages.
         * @param message WecTurnAndPlayer message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarEvent.IWecTurnAndPlayer, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WecTurnAndPlayer message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WecTurnAndPlayer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarEvent.WecTurnAndPlayer;

        /**
         * Decodes a WecTurnAndPlayer message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WecTurnAndPlayer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarEvent.WecTurnAndPlayer;

        /**
         * Verifies a WecTurnAndPlayer message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WecTurnAndPlayer message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WecTurnAndPlayer
         */
        public static fromObject(object: { [k: string]: any }): WarEvent.WecTurnAndPlayer;

        /**
         * Creates a plain object from a WecTurnAndPlayer message. Also converts values to other types if specified.
         * @param message WecTurnAndPlayer
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarEvent.WecTurnAndPlayer, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WecTurnAndPlayer to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WecTurnPhaseEqualTo. */
    interface IWecTurnPhaseEqualTo {

        /** WecTurnPhaseEqualTo valueEqualTo */
        valueEqualTo?: (number|null);

        /** WecTurnPhaseEqualTo isNot */
        isNot?: (boolean|null);
    }

    /** Represents a WecTurnPhaseEqualTo. */
    class WecTurnPhaseEqualTo implements IWecTurnPhaseEqualTo {

        /**
         * Constructs a new WecTurnPhaseEqualTo.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarEvent.IWecTurnPhaseEqualTo);

        /** WecTurnPhaseEqualTo valueEqualTo. */
        public valueEqualTo: number;

        /** WecTurnPhaseEqualTo isNot. */
        public isNot: boolean;

        /**
         * Creates a new WecTurnPhaseEqualTo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WecTurnPhaseEqualTo instance
         */
        public static create(properties?: WarEvent.IWecTurnPhaseEqualTo): WarEvent.WecTurnPhaseEqualTo;

        /**
         * Encodes the specified WecTurnPhaseEqualTo message. Does not implicitly {@link WarEvent.WecTurnPhaseEqualTo.verify|verify} messages.
         * @param message WecTurnPhaseEqualTo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarEvent.IWecTurnPhaseEqualTo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WecTurnPhaseEqualTo message, length delimited. Does not implicitly {@link WarEvent.WecTurnPhaseEqualTo.verify|verify} messages.
         * @param message WecTurnPhaseEqualTo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarEvent.IWecTurnPhaseEqualTo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WecTurnPhaseEqualTo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WecTurnPhaseEqualTo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarEvent.WecTurnPhaseEqualTo;

        /**
         * Decodes a WecTurnPhaseEqualTo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WecTurnPhaseEqualTo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarEvent.WecTurnPhaseEqualTo;

        /**
         * Verifies a WecTurnPhaseEqualTo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WecTurnPhaseEqualTo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WecTurnPhaseEqualTo
         */
        public static fromObject(object: { [k: string]: any }): WarEvent.WecTurnPhaseEqualTo;

        /**
         * Creates a plain object from a WecTurnPhaseEqualTo message. Also converts values to other types if specified.
         * @param message WecTurnPhaseEqualTo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarEvent.WecTurnPhaseEqualTo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WecTurnPhaseEqualTo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WecWeatherAndFog. */
    interface IWecWeatherAndFog {

        /** WecWeatherAndFog weatherTypeArray */
        weatherTypeArray?: (number[]|null);

        /** WecWeatherAndFog hasFogCurrently */
        hasFogCurrently?: (boolean|null);
    }

    /** Represents a WecWeatherAndFog. */
    class WecWeatherAndFog implements IWecWeatherAndFog {

        /**
         * Constructs a new WecWeatherAndFog.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarEvent.IWecWeatherAndFog);

        /** WecWeatherAndFog weatherTypeArray. */
        public weatherTypeArray: number[];

        /** WecWeatherAndFog hasFogCurrently. */
        public hasFogCurrently: boolean;

        /**
         * Creates a new WecWeatherAndFog instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WecWeatherAndFog instance
         */
        public static create(properties?: WarEvent.IWecWeatherAndFog): WarEvent.WecWeatherAndFog;

        /**
         * Encodes the specified WecWeatherAndFog message. Does not implicitly {@link WarEvent.WecWeatherAndFog.verify|verify} messages.
         * @param message WecWeatherAndFog message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarEvent.IWecWeatherAndFog, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WecWeatherAndFog message, length delimited. Does not implicitly {@link WarEvent.WecWeatherAndFog.verify|verify} messages.
         * @param message WecWeatherAndFog message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarEvent.IWecWeatherAndFog, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WecWeatherAndFog message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WecWeatherAndFog
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarEvent.WecWeatherAndFog;

        /**
         * Decodes a WecWeatherAndFog message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WecWeatherAndFog
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarEvent.WecWeatherAndFog;

        /**
         * Verifies a WecWeatherAndFog message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WecWeatherAndFog message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WecWeatherAndFog
         */
        public static fromObject(object: { [k: string]: any }): WarEvent.WecWeatherAndFog;

        /**
         * Creates a plain object from a WecWeatherAndFog message. Also converts values to other types if specified.
         * @param message WecWeatherAndFog
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarEvent.WecWeatherAndFog, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WecWeatherAndFog to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WecPlayerIndexInTurnEqualTo. */
    interface IWecPlayerIndexInTurnEqualTo {

        /** WecPlayerIndexInTurnEqualTo valueEqualTo */
        valueEqualTo?: (number|null);

        /** WecPlayerIndexInTurnEqualTo isNot */
        isNot?: (boolean|null);
    }

    /** Represents a WecPlayerIndexInTurnEqualTo. */
    class WecPlayerIndexInTurnEqualTo implements IWecPlayerIndexInTurnEqualTo {

        /**
         * Constructs a new WecPlayerIndexInTurnEqualTo.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarEvent.IWecPlayerIndexInTurnEqualTo);

        /** WecPlayerIndexInTurnEqualTo valueEqualTo. */
        public valueEqualTo: number;

        /** WecPlayerIndexInTurnEqualTo isNot. */
        public isNot: boolean;

        /**
         * Creates a new WecPlayerIndexInTurnEqualTo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WecPlayerIndexInTurnEqualTo instance
         */
        public static create(properties?: WarEvent.IWecPlayerIndexInTurnEqualTo): WarEvent.WecPlayerIndexInTurnEqualTo;

        /**
         * Encodes the specified WecPlayerIndexInTurnEqualTo message. Does not implicitly {@link WarEvent.WecPlayerIndexInTurnEqualTo.verify|verify} messages.
         * @param message WecPlayerIndexInTurnEqualTo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarEvent.IWecPlayerIndexInTurnEqualTo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WecPlayerIndexInTurnEqualTo message, length delimited. Does not implicitly {@link WarEvent.WecPlayerIndexInTurnEqualTo.verify|verify} messages.
         * @param message WecPlayerIndexInTurnEqualTo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarEvent.IWecPlayerIndexInTurnEqualTo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WecPlayerIndexInTurnEqualTo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WecPlayerIndexInTurnEqualTo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarEvent.WecPlayerIndexInTurnEqualTo;

        /**
         * Decodes a WecPlayerIndexInTurnEqualTo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WecPlayerIndexInTurnEqualTo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarEvent.WecPlayerIndexInTurnEqualTo;

        /**
         * Verifies a WecPlayerIndexInTurnEqualTo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WecPlayerIndexInTurnEqualTo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WecPlayerIndexInTurnEqualTo
         */
        public static fromObject(object: { [k: string]: any }): WarEvent.WecPlayerIndexInTurnEqualTo;

        /**
         * Creates a plain object from a WecPlayerIndexInTurnEqualTo message. Also converts values to other types if specified.
         * @param message WecPlayerIndexInTurnEqualTo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarEvent.WecPlayerIndexInTurnEqualTo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WecPlayerIndexInTurnEqualTo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WecPlayerIndexInTurnGreaterThan. */
    interface IWecPlayerIndexInTurnGreaterThan {

        /** WecPlayerIndexInTurnGreaterThan valueGreaterThan */
        valueGreaterThan?: (number|null);

        /** WecPlayerIndexInTurnGreaterThan isNot */
        isNot?: (boolean|null);
    }

    /** Represents a WecPlayerIndexInTurnGreaterThan. */
    class WecPlayerIndexInTurnGreaterThan implements IWecPlayerIndexInTurnGreaterThan {

        /**
         * Constructs a new WecPlayerIndexInTurnGreaterThan.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarEvent.IWecPlayerIndexInTurnGreaterThan);

        /** WecPlayerIndexInTurnGreaterThan valueGreaterThan. */
        public valueGreaterThan: number;

        /** WecPlayerIndexInTurnGreaterThan isNot. */
        public isNot: boolean;

        /**
         * Creates a new WecPlayerIndexInTurnGreaterThan instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WecPlayerIndexInTurnGreaterThan instance
         */
        public static create(properties?: WarEvent.IWecPlayerIndexInTurnGreaterThan): WarEvent.WecPlayerIndexInTurnGreaterThan;

        /**
         * Encodes the specified WecPlayerIndexInTurnGreaterThan message. Does not implicitly {@link WarEvent.WecPlayerIndexInTurnGreaterThan.verify|verify} messages.
         * @param message WecPlayerIndexInTurnGreaterThan message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarEvent.IWecPlayerIndexInTurnGreaterThan, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WecPlayerIndexInTurnGreaterThan message, length delimited. Does not implicitly {@link WarEvent.WecPlayerIndexInTurnGreaterThan.verify|verify} messages.
         * @param message WecPlayerIndexInTurnGreaterThan message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarEvent.IWecPlayerIndexInTurnGreaterThan, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WecPlayerIndexInTurnGreaterThan message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WecPlayerIndexInTurnGreaterThan
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarEvent.WecPlayerIndexInTurnGreaterThan;

        /**
         * Decodes a WecPlayerIndexInTurnGreaterThan message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WecPlayerIndexInTurnGreaterThan
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarEvent.WecPlayerIndexInTurnGreaterThan;

        /**
         * Verifies a WecPlayerIndexInTurnGreaterThan message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WecPlayerIndexInTurnGreaterThan message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WecPlayerIndexInTurnGreaterThan
         */
        public static fromObject(object: { [k: string]: any }): WarEvent.WecPlayerIndexInTurnGreaterThan;

        /**
         * Creates a plain object from a WecPlayerIndexInTurnGreaterThan message. Also converts values to other types if specified.
         * @param message WecPlayerIndexInTurnGreaterThan
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarEvent.WecPlayerIndexInTurnGreaterThan, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WecPlayerIndexInTurnGreaterThan to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WecPlayerIndexInTurnLessThan. */
    interface IWecPlayerIndexInTurnLessThan {

        /** WecPlayerIndexInTurnLessThan valueLessThan */
        valueLessThan?: (number|null);

        /** WecPlayerIndexInTurnLessThan isNot */
        isNot?: (boolean|null);
    }

    /** Represents a WecPlayerIndexInTurnLessThan. */
    class WecPlayerIndexInTurnLessThan implements IWecPlayerIndexInTurnLessThan {

        /**
         * Constructs a new WecPlayerIndexInTurnLessThan.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarEvent.IWecPlayerIndexInTurnLessThan);

        /** WecPlayerIndexInTurnLessThan valueLessThan. */
        public valueLessThan: number;

        /** WecPlayerIndexInTurnLessThan isNot. */
        public isNot: boolean;

        /**
         * Creates a new WecPlayerIndexInTurnLessThan instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WecPlayerIndexInTurnLessThan instance
         */
        public static create(properties?: WarEvent.IWecPlayerIndexInTurnLessThan): WarEvent.WecPlayerIndexInTurnLessThan;

        /**
         * Encodes the specified WecPlayerIndexInTurnLessThan message. Does not implicitly {@link WarEvent.WecPlayerIndexInTurnLessThan.verify|verify} messages.
         * @param message WecPlayerIndexInTurnLessThan message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarEvent.IWecPlayerIndexInTurnLessThan, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WecPlayerIndexInTurnLessThan message, length delimited. Does not implicitly {@link WarEvent.WecPlayerIndexInTurnLessThan.verify|verify} messages.
         * @param message WecPlayerIndexInTurnLessThan message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarEvent.IWecPlayerIndexInTurnLessThan, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WecPlayerIndexInTurnLessThan message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WecPlayerIndexInTurnLessThan
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarEvent.WecPlayerIndexInTurnLessThan;

        /**
         * Decodes a WecPlayerIndexInTurnLessThan message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WecPlayerIndexInTurnLessThan
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarEvent.WecPlayerIndexInTurnLessThan;

        /**
         * Verifies a WecPlayerIndexInTurnLessThan message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WecPlayerIndexInTurnLessThan message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WecPlayerIndexInTurnLessThan
         */
        public static fromObject(object: { [k: string]: any }): WarEvent.WecPlayerIndexInTurnLessThan;

        /**
         * Creates a plain object from a WecPlayerIndexInTurnLessThan message. Also converts values to other types if specified.
         * @param message WecPlayerIndexInTurnLessThan
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarEvent.WecPlayerIndexInTurnLessThan, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WecPlayerIndexInTurnLessThan to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WecEventCalledCountTotalEqualTo. */
    interface IWecEventCalledCountTotalEqualTo {

        /** WecEventCalledCountTotalEqualTo eventIdEqualTo */
        eventIdEqualTo?: (number|null);

        /** WecEventCalledCountTotalEqualTo countEqualTo */
        countEqualTo?: (number|null);

        /** WecEventCalledCountTotalEqualTo isNot */
        isNot?: (boolean|null);
    }

    /** Represents a WecEventCalledCountTotalEqualTo. */
    class WecEventCalledCountTotalEqualTo implements IWecEventCalledCountTotalEqualTo {

        /**
         * Constructs a new WecEventCalledCountTotalEqualTo.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarEvent.IWecEventCalledCountTotalEqualTo);

        /** WecEventCalledCountTotalEqualTo eventIdEqualTo. */
        public eventIdEqualTo: number;

        /** WecEventCalledCountTotalEqualTo countEqualTo. */
        public countEqualTo: number;

        /** WecEventCalledCountTotalEqualTo isNot. */
        public isNot: boolean;

        /**
         * Creates a new WecEventCalledCountTotalEqualTo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WecEventCalledCountTotalEqualTo instance
         */
        public static create(properties?: WarEvent.IWecEventCalledCountTotalEqualTo): WarEvent.WecEventCalledCountTotalEqualTo;

        /**
         * Encodes the specified WecEventCalledCountTotalEqualTo message. Does not implicitly {@link WarEvent.WecEventCalledCountTotalEqualTo.verify|verify} messages.
         * @param message WecEventCalledCountTotalEqualTo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarEvent.IWecEventCalledCountTotalEqualTo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WecEventCalledCountTotalEqualTo message, length delimited. Does not implicitly {@link WarEvent.WecEventCalledCountTotalEqualTo.verify|verify} messages.
         * @param message WecEventCalledCountTotalEqualTo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarEvent.IWecEventCalledCountTotalEqualTo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WecEventCalledCountTotalEqualTo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WecEventCalledCountTotalEqualTo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarEvent.WecEventCalledCountTotalEqualTo;

        /**
         * Decodes a WecEventCalledCountTotalEqualTo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WecEventCalledCountTotalEqualTo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarEvent.WecEventCalledCountTotalEqualTo;

        /**
         * Verifies a WecEventCalledCountTotalEqualTo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WecEventCalledCountTotalEqualTo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WecEventCalledCountTotalEqualTo
         */
        public static fromObject(object: { [k: string]: any }): WarEvent.WecEventCalledCountTotalEqualTo;

        /**
         * Creates a plain object from a WecEventCalledCountTotalEqualTo message. Also converts values to other types if specified.
         * @param message WecEventCalledCountTotalEqualTo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarEvent.WecEventCalledCountTotalEqualTo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WecEventCalledCountTotalEqualTo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WecEventCalledCountTotalGreaterThan. */
    interface IWecEventCalledCountTotalGreaterThan {

        /** WecEventCalledCountTotalGreaterThan eventIdEqualTo */
        eventIdEqualTo?: (number|null);

        /** WecEventCalledCountTotalGreaterThan countGreaterThan */
        countGreaterThan?: (number|null);

        /** WecEventCalledCountTotalGreaterThan isNot */
        isNot?: (boolean|null);
    }

    /** Represents a WecEventCalledCountTotalGreaterThan. */
    class WecEventCalledCountTotalGreaterThan implements IWecEventCalledCountTotalGreaterThan {

        /**
         * Constructs a new WecEventCalledCountTotalGreaterThan.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarEvent.IWecEventCalledCountTotalGreaterThan);

        /** WecEventCalledCountTotalGreaterThan eventIdEqualTo. */
        public eventIdEqualTo: number;

        /** WecEventCalledCountTotalGreaterThan countGreaterThan. */
        public countGreaterThan: number;

        /** WecEventCalledCountTotalGreaterThan isNot. */
        public isNot: boolean;

        /**
         * Creates a new WecEventCalledCountTotalGreaterThan instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WecEventCalledCountTotalGreaterThan instance
         */
        public static create(properties?: WarEvent.IWecEventCalledCountTotalGreaterThan): WarEvent.WecEventCalledCountTotalGreaterThan;

        /**
         * Encodes the specified WecEventCalledCountTotalGreaterThan message. Does not implicitly {@link WarEvent.WecEventCalledCountTotalGreaterThan.verify|verify} messages.
         * @param message WecEventCalledCountTotalGreaterThan message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarEvent.IWecEventCalledCountTotalGreaterThan, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WecEventCalledCountTotalGreaterThan message, length delimited. Does not implicitly {@link WarEvent.WecEventCalledCountTotalGreaterThan.verify|verify} messages.
         * @param message WecEventCalledCountTotalGreaterThan message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarEvent.IWecEventCalledCountTotalGreaterThan, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WecEventCalledCountTotalGreaterThan message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WecEventCalledCountTotalGreaterThan
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarEvent.WecEventCalledCountTotalGreaterThan;

        /**
         * Decodes a WecEventCalledCountTotalGreaterThan message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WecEventCalledCountTotalGreaterThan
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarEvent.WecEventCalledCountTotalGreaterThan;

        /**
         * Verifies a WecEventCalledCountTotalGreaterThan message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WecEventCalledCountTotalGreaterThan message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WecEventCalledCountTotalGreaterThan
         */
        public static fromObject(object: { [k: string]: any }): WarEvent.WecEventCalledCountTotalGreaterThan;

        /**
         * Creates a plain object from a WecEventCalledCountTotalGreaterThan message. Also converts values to other types if specified.
         * @param message WecEventCalledCountTotalGreaterThan
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarEvent.WecEventCalledCountTotalGreaterThan, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WecEventCalledCountTotalGreaterThan to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WecEventCalledCountTotalLessThan. */
    interface IWecEventCalledCountTotalLessThan {

        /** WecEventCalledCountTotalLessThan eventIdEqualTo */
        eventIdEqualTo?: (number|null);

        /** WecEventCalledCountTotalLessThan countLessThan */
        countLessThan?: (number|null);

        /** WecEventCalledCountTotalLessThan isNot */
        isNot?: (boolean|null);
    }

    /** Represents a WecEventCalledCountTotalLessThan. */
    class WecEventCalledCountTotalLessThan implements IWecEventCalledCountTotalLessThan {

        /**
         * Constructs a new WecEventCalledCountTotalLessThan.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarEvent.IWecEventCalledCountTotalLessThan);

        /** WecEventCalledCountTotalLessThan eventIdEqualTo. */
        public eventIdEqualTo: number;

        /** WecEventCalledCountTotalLessThan countLessThan. */
        public countLessThan: number;

        /** WecEventCalledCountTotalLessThan isNot. */
        public isNot: boolean;

        /**
         * Creates a new WecEventCalledCountTotalLessThan instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WecEventCalledCountTotalLessThan instance
         */
        public static create(properties?: WarEvent.IWecEventCalledCountTotalLessThan): WarEvent.WecEventCalledCountTotalLessThan;

        /**
         * Encodes the specified WecEventCalledCountTotalLessThan message. Does not implicitly {@link WarEvent.WecEventCalledCountTotalLessThan.verify|verify} messages.
         * @param message WecEventCalledCountTotalLessThan message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarEvent.IWecEventCalledCountTotalLessThan, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WecEventCalledCountTotalLessThan message, length delimited. Does not implicitly {@link WarEvent.WecEventCalledCountTotalLessThan.verify|verify} messages.
         * @param message WecEventCalledCountTotalLessThan message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarEvent.IWecEventCalledCountTotalLessThan, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WecEventCalledCountTotalLessThan message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WecEventCalledCountTotalLessThan
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarEvent.WecEventCalledCountTotalLessThan;

        /**
         * Decodes a WecEventCalledCountTotalLessThan message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WecEventCalledCountTotalLessThan
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarEvent.WecEventCalledCountTotalLessThan;

        /**
         * Verifies a WecEventCalledCountTotalLessThan message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WecEventCalledCountTotalLessThan message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WecEventCalledCountTotalLessThan
         */
        public static fromObject(object: { [k: string]: any }): WarEvent.WecEventCalledCountTotalLessThan;

        /**
         * Creates a plain object from a WecEventCalledCountTotalLessThan message. Also converts values to other types if specified.
         * @param message WecEventCalledCountTotalLessThan
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarEvent.WecEventCalledCountTotalLessThan, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WecEventCalledCountTotalLessThan to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WecEventCalledCount. */
    interface IWecEventCalledCount {

        /** WecEventCalledCount eventIdArray */
        eventIdArray?: (number[]|null);

        /** WecEventCalledCount eventsCount */
        eventsCount?: (number|null);

        /** WecEventCalledCount eventsCountComparator */
        eventsCountComparator?: (number|null);

        /** WecEventCalledCount timesTotal */
        timesTotal?: (number|null);

        /** WecEventCalledCount timesTotalComparator */
        timesTotalComparator?: (number|null);

        /** WecEventCalledCount timesInTurn */
        timesInTurn?: (number|null);

        /** WecEventCalledCount timesInTurnComparator */
        timesInTurnComparator?: (number|null);
    }

    /** Represents a WecEventCalledCount. */
    class WecEventCalledCount implements IWecEventCalledCount {

        /**
         * Constructs a new WecEventCalledCount.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarEvent.IWecEventCalledCount);

        /** WecEventCalledCount eventIdArray. */
        public eventIdArray: number[];

        /** WecEventCalledCount eventsCount. */
        public eventsCount: number;

        /** WecEventCalledCount eventsCountComparator. */
        public eventsCountComparator: number;

        /** WecEventCalledCount timesTotal. */
        public timesTotal: number;

        /** WecEventCalledCount timesTotalComparator. */
        public timesTotalComparator: number;

        /** WecEventCalledCount timesInTurn. */
        public timesInTurn: number;

        /** WecEventCalledCount timesInTurnComparator. */
        public timesInTurnComparator: number;

        /**
         * Creates a new WecEventCalledCount instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WecEventCalledCount instance
         */
        public static create(properties?: WarEvent.IWecEventCalledCount): WarEvent.WecEventCalledCount;

        /**
         * Encodes the specified WecEventCalledCount message. Does not implicitly {@link WarEvent.WecEventCalledCount.verify|verify} messages.
         * @param message WecEventCalledCount message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarEvent.IWecEventCalledCount, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WecEventCalledCount message, length delimited. Does not implicitly {@link WarEvent.WecEventCalledCount.verify|verify} messages.
         * @param message WecEventCalledCount message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarEvent.IWecEventCalledCount, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WecEventCalledCount message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WecEventCalledCount
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarEvent.WecEventCalledCount;

        /**
         * Decodes a WecEventCalledCount message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WecEventCalledCount
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarEvent.WecEventCalledCount;

        /**
         * Verifies a WecEventCalledCount message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WecEventCalledCount message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WecEventCalledCount
         */
        public static fromObject(object: { [k: string]: any }): WarEvent.WecEventCalledCount;

        /**
         * Creates a plain object from a WecEventCalledCount message. Also converts values to other types if specified.
         * @param message WecEventCalledCount
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarEvent.WecEventCalledCount, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WecEventCalledCount to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WecPlayerAliveStateEqualTo. */
    interface IWecPlayerAliveStateEqualTo {

        /** WecPlayerAliveStateEqualTo playerIndexEqualTo */
        playerIndexEqualTo?: (number|null);

        /** WecPlayerAliveStateEqualTo aliveStateEqualTo */
        aliveStateEqualTo?: (number|null);

        /** WecPlayerAliveStateEqualTo isNot */
        isNot?: (boolean|null);
    }

    /** Represents a WecPlayerAliveStateEqualTo. */
    class WecPlayerAliveStateEqualTo implements IWecPlayerAliveStateEqualTo {

        /**
         * Constructs a new WecPlayerAliveStateEqualTo.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarEvent.IWecPlayerAliveStateEqualTo);

        /** WecPlayerAliveStateEqualTo playerIndexEqualTo. */
        public playerIndexEqualTo: number;

        /** WecPlayerAliveStateEqualTo aliveStateEqualTo. */
        public aliveStateEqualTo: number;

        /** WecPlayerAliveStateEqualTo isNot. */
        public isNot: boolean;

        /**
         * Creates a new WecPlayerAliveStateEqualTo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WecPlayerAliveStateEqualTo instance
         */
        public static create(properties?: WarEvent.IWecPlayerAliveStateEqualTo): WarEvent.WecPlayerAliveStateEqualTo;

        /**
         * Encodes the specified WecPlayerAliveStateEqualTo message. Does not implicitly {@link WarEvent.WecPlayerAliveStateEqualTo.verify|verify} messages.
         * @param message WecPlayerAliveStateEqualTo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarEvent.IWecPlayerAliveStateEqualTo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WecPlayerAliveStateEqualTo message, length delimited. Does not implicitly {@link WarEvent.WecPlayerAliveStateEqualTo.verify|verify} messages.
         * @param message WecPlayerAliveStateEqualTo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarEvent.IWecPlayerAliveStateEqualTo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WecPlayerAliveStateEqualTo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WecPlayerAliveStateEqualTo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarEvent.WecPlayerAliveStateEqualTo;

        /**
         * Decodes a WecPlayerAliveStateEqualTo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WecPlayerAliveStateEqualTo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarEvent.WecPlayerAliveStateEqualTo;

        /**
         * Verifies a WecPlayerAliveStateEqualTo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WecPlayerAliveStateEqualTo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WecPlayerAliveStateEqualTo
         */
        public static fromObject(object: { [k: string]: any }): WarEvent.WecPlayerAliveStateEqualTo;

        /**
         * Creates a plain object from a WecPlayerAliveStateEqualTo message. Also converts values to other types if specified.
         * @param message WecPlayerAliveStateEqualTo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarEvent.WecPlayerAliveStateEqualTo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WecPlayerAliveStateEqualTo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WecPlayerState. */
    interface IWecPlayerState {

        /** WecPlayerState playersCount */
        playersCount?: (number|null);

        /** WecPlayerState playersCountComparator */
        playersCountComparator?: (number|null);

        /** WecPlayerState playerIndexArray */
        playerIndexArray?: (number[]|null);

        /** WecPlayerState aliveStateArray */
        aliveStateArray?: (number[]|null);

        /** WecPlayerState fund */
        fund?: (number|null);

        /** WecPlayerState fundComparator */
        fundComparator?: (number|null);

        /** WecPlayerState energyPercentage */
        energyPercentage?: (number|null);

        /** WecPlayerState energyPercentageComparator */
        energyPercentageComparator?: (number|null);

        /** WecPlayerState coUsingSkillTypeArray */
        coUsingSkillTypeArray?: (number[]|null);
    }

    /** Represents a WecPlayerState. */
    class WecPlayerState implements IWecPlayerState {

        /**
         * Constructs a new WecPlayerState.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarEvent.IWecPlayerState);

        /** WecPlayerState playersCount. */
        public playersCount: number;

        /** WecPlayerState playersCountComparator. */
        public playersCountComparator: number;

        /** WecPlayerState playerIndexArray. */
        public playerIndexArray: number[];

        /** WecPlayerState aliveStateArray. */
        public aliveStateArray: number[];

        /** WecPlayerState fund. */
        public fund: number;

        /** WecPlayerState fundComparator. */
        public fundComparator: number;

        /** WecPlayerState energyPercentage. */
        public energyPercentage: number;

        /** WecPlayerState energyPercentageComparator. */
        public energyPercentageComparator: number;

        /** WecPlayerState coUsingSkillTypeArray. */
        public coUsingSkillTypeArray: number[];

        /**
         * Creates a new WecPlayerState instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WecPlayerState instance
         */
        public static create(properties?: WarEvent.IWecPlayerState): WarEvent.WecPlayerState;

        /**
         * Encodes the specified WecPlayerState message. Does not implicitly {@link WarEvent.WecPlayerState.verify|verify} messages.
         * @param message WecPlayerState message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarEvent.IWecPlayerState, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WecPlayerState message, length delimited. Does not implicitly {@link WarEvent.WecPlayerState.verify|verify} messages.
         * @param message WecPlayerState message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarEvent.IWecPlayerState, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WecPlayerState message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WecPlayerState
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarEvent.WecPlayerState;

        /**
         * Decodes a WecPlayerState message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WecPlayerState
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarEvent.WecPlayerState;

        /**
         * Verifies a WecPlayerState message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WecPlayerState message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WecPlayerState
         */
        public static fromObject(object: { [k: string]: any }): WarEvent.WecPlayerState;

        /**
         * Creates a plain object from a WecPlayerState message. Also converts values to other types if specified.
         * @param message WecPlayerState
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarEvent.WecPlayerState, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WecPlayerState to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WecTilePlayerIndexEqualTo. */
    interface IWecTilePlayerIndexEqualTo {

        /** WecTilePlayerIndexEqualTo gridIndex */
        gridIndex?: (Structure.IGridIndex|null);

        /** WecTilePlayerIndexEqualTo playerIndex */
        playerIndex?: (number|null);

        /** WecTilePlayerIndexEqualTo isNot */
        isNot?: (boolean|null);
    }

    /** Represents a WecTilePlayerIndexEqualTo. */
    class WecTilePlayerIndexEqualTo implements IWecTilePlayerIndexEqualTo {

        /**
         * Constructs a new WecTilePlayerIndexEqualTo.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarEvent.IWecTilePlayerIndexEqualTo);

        /** WecTilePlayerIndexEqualTo gridIndex. */
        public gridIndex?: (Structure.IGridIndex|null);

        /** WecTilePlayerIndexEqualTo playerIndex. */
        public playerIndex: number;

        /** WecTilePlayerIndexEqualTo isNot. */
        public isNot: boolean;

        /**
         * Creates a new WecTilePlayerIndexEqualTo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WecTilePlayerIndexEqualTo instance
         */
        public static create(properties?: WarEvent.IWecTilePlayerIndexEqualTo): WarEvent.WecTilePlayerIndexEqualTo;

        /**
         * Encodes the specified WecTilePlayerIndexEqualTo message. Does not implicitly {@link WarEvent.WecTilePlayerIndexEqualTo.verify|verify} messages.
         * @param message WecTilePlayerIndexEqualTo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarEvent.IWecTilePlayerIndexEqualTo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WecTilePlayerIndexEqualTo message, length delimited. Does not implicitly {@link WarEvent.WecTilePlayerIndexEqualTo.verify|verify} messages.
         * @param message WecTilePlayerIndexEqualTo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarEvent.IWecTilePlayerIndexEqualTo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WecTilePlayerIndexEqualTo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WecTilePlayerIndexEqualTo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarEvent.WecTilePlayerIndexEqualTo;

        /**
         * Decodes a WecTilePlayerIndexEqualTo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WecTilePlayerIndexEqualTo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarEvent.WecTilePlayerIndexEqualTo;

        /**
         * Verifies a WecTilePlayerIndexEqualTo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WecTilePlayerIndexEqualTo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WecTilePlayerIndexEqualTo
         */
        public static fromObject(object: { [k: string]: any }): WarEvent.WecTilePlayerIndexEqualTo;

        /**
         * Creates a plain object from a WecTilePlayerIndexEqualTo message. Also converts values to other types if specified.
         * @param message WecTilePlayerIndexEqualTo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarEvent.WecTilePlayerIndexEqualTo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WecTilePlayerIndexEqualTo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WecTileTypeEqualTo. */
    interface IWecTileTypeEqualTo {

        /** WecTileTypeEqualTo gridIndex */
        gridIndex?: (Structure.IGridIndex|null);

        /** WecTileTypeEqualTo tileType */
        tileType?: (number|null);

        /** WecTileTypeEqualTo isNot */
        isNot?: (boolean|null);
    }

    /** Represents a WecTileTypeEqualTo. */
    class WecTileTypeEqualTo implements IWecTileTypeEqualTo {

        /**
         * Constructs a new WecTileTypeEqualTo.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarEvent.IWecTileTypeEqualTo);

        /** WecTileTypeEqualTo gridIndex. */
        public gridIndex?: (Structure.IGridIndex|null);

        /** WecTileTypeEqualTo tileType. */
        public tileType: number;

        /** WecTileTypeEqualTo isNot. */
        public isNot: boolean;

        /**
         * Creates a new WecTileTypeEqualTo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WecTileTypeEqualTo instance
         */
        public static create(properties?: WarEvent.IWecTileTypeEqualTo): WarEvent.WecTileTypeEqualTo;

        /**
         * Encodes the specified WecTileTypeEqualTo message. Does not implicitly {@link WarEvent.WecTileTypeEqualTo.verify|verify} messages.
         * @param message WecTileTypeEqualTo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarEvent.IWecTileTypeEqualTo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WecTileTypeEqualTo message, length delimited. Does not implicitly {@link WarEvent.WecTileTypeEqualTo.verify|verify} messages.
         * @param message WecTileTypeEqualTo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarEvent.IWecTileTypeEqualTo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WecTileTypeEqualTo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WecTileTypeEqualTo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarEvent.WecTileTypeEqualTo;

        /**
         * Decodes a WecTileTypeEqualTo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WecTileTypeEqualTo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarEvent.WecTileTypeEqualTo;

        /**
         * Verifies a WecTileTypeEqualTo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WecTileTypeEqualTo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WecTileTypeEqualTo
         */
        public static fromObject(object: { [k: string]: any }): WarEvent.WecTileTypeEqualTo;

        /**
         * Creates a plain object from a WecTileTypeEqualTo message. Also converts values to other types if specified.
         * @param message WecTileTypeEqualTo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarEvent.WecTileTypeEqualTo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WecTileTypeEqualTo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WecTilePresence. */
    interface IWecTilePresence {

        /** WecTilePresence playerIndexArray */
        playerIndexArray?: (number[]|null);

        /** WecTilePresence teamIndexArray */
        teamIndexArray?: (number[]|null);

        /** WecTilePresence tilesCount */
        tilesCount?: (number|null);

        /** WecTilePresence tilesCountComparator */
        tilesCountComparator?: (number|null);

        /** WecTilePresence tileTypeArray */
        tileTypeArray?: (number[]|null);

        /** WecTilePresence locationIdArray */
        locationIdArray?: (number[]|null);

        /** WecTilePresence gridIndexArray */
        gridIndexArray?: (Structure.IGridIndex[]|null);
    }

    /** Represents a WecTilePresence. */
    class WecTilePresence implements IWecTilePresence {

        /**
         * Constructs a new WecTilePresence.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarEvent.IWecTilePresence);

        /** WecTilePresence playerIndexArray. */
        public playerIndexArray: number[];

        /** WecTilePresence teamIndexArray. */
        public teamIndexArray: number[];

        /** WecTilePresence tilesCount. */
        public tilesCount: number;

        /** WecTilePresence tilesCountComparator. */
        public tilesCountComparator: number;

        /** WecTilePresence tileTypeArray. */
        public tileTypeArray: number[];

        /** WecTilePresence locationIdArray. */
        public locationIdArray: number[];

        /** WecTilePresence gridIndexArray. */
        public gridIndexArray: Structure.IGridIndex[];

        /**
         * Creates a new WecTilePresence instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WecTilePresence instance
         */
        public static create(properties?: WarEvent.IWecTilePresence): WarEvent.WecTilePresence;

        /**
         * Encodes the specified WecTilePresence message. Does not implicitly {@link WarEvent.WecTilePresence.verify|verify} messages.
         * @param message WecTilePresence message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarEvent.IWecTilePresence, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WecTilePresence message, length delimited. Does not implicitly {@link WarEvent.WecTilePresence.verify|verify} messages.
         * @param message WecTilePresence message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarEvent.IWecTilePresence, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WecTilePresence message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WecTilePresence
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarEvent.WecTilePresence;

        /**
         * Decodes a WecTilePresence message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WecTilePresence
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarEvent.WecTilePresence;

        /**
         * Verifies a WecTilePresence message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WecTilePresence message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WecTilePresence
         */
        public static fromObject(object: { [k: string]: any }): WarEvent.WecTilePresence;

        /**
         * Creates a plain object from a WecTilePresence message. Also converts values to other types if specified.
         * @param message WecTilePresence
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarEvent.WecTilePresence, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WecTilePresence to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WecUnitPresence. */
    interface IWecUnitPresence {

        /** WecUnitPresence playerIndexArray */
        playerIndexArray?: (number[]|null);

        /** WecUnitPresence teamIndexArray */
        teamIndexArray?: (number[]|null);

        /** WecUnitPresence unitsCount */
        unitsCount?: (number|null);

        /** WecUnitPresence unitsCountComparator */
        unitsCountComparator?: (number|null);

        /** WecUnitPresence unitTypeArray */
        unitTypeArray?: (number[]|null);

        /** WecUnitPresence locationIdArray */
        locationIdArray?: (number[]|null);

        /** WecUnitPresence gridIndexArray */
        gridIndexArray?: (Structure.IGridIndex[]|null);

        /** WecUnitPresence actionStateArray */
        actionStateArray?: (number[]|null);

        /** WecUnitPresence hasLoadedCo */
        hasLoadedCo?: (boolean|null);

        /** WecUnitPresence hp */
        hp?: (number|null);

        /** WecUnitPresence hpComparator */
        hpComparator?: (number|null);

        /** WecUnitPresence fuelPct */
        fuelPct?: (number|null);

        /** WecUnitPresence fuelPctComparator */
        fuelPctComparator?: (number|null);

        /** WecUnitPresence priAmmoPct */
        priAmmoPct?: (number|null);

        /** WecUnitPresence priAmmoPctComparator */
        priAmmoPctComparator?: (number|null);

        /** WecUnitPresence promotion */
        promotion?: (number|null);

        /** WecUnitPresence promotionComparator */
        promotionComparator?: (number|null);
    }

    /** Represents a WecUnitPresence. */
    class WecUnitPresence implements IWecUnitPresence {

        /**
         * Constructs a new WecUnitPresence.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarEvent.IWecUnitPresence);

        /** WecUnitPresence playerIndexArray. */
        public playerIndexArray: number[];

        /** WecUnitPresence teamIndexArray. */
        public teamIndexArray: number[];

        /** WecUnitPresence unitsCount. */
        public unitsCount: number;

        /** WecUnitPresence unitsCountComparator. */
        public unitsCountComparator: number;

        /** WecUnitPresence unitTypeArray. */
        public unitTypeArray: number[];

        /** WecUnitPresence locationIdArray. */
        public locationIdArray: number[];

        /** WecUnitPresence gridIndexArray. */
        public gridIndexArray: Structure.IGridIndex[];

        /** WecUnitPresence actionStateArray. */
        public actionStateArray: number[];

        /** WecUnitPresence hasLoadedCo. */
        public hasLoadedCo: boolean;

        /** WecUnitPresence hp. */
        public hp: number;

        /** WecUnitPresence hpComparator. */
        public hpComparator: number;

        /** WecUnitPresence fuelPct. */
        public fuelPct: number;

        /** WecUnitPresence fuelPctComparator. */
        public fuelPctComparator: number;

        /** WecUnitPresence priAmmoPct. */
        public priAmmoPct: number;

        /** WecUnitPresence priAmmoPctComparator. */
        public priAmmoPctComparator: number;

        /** WecUnitPresence promotion. */
        public promotion: number;

        /** WecUnitPresence promotionComparator. */
        public promotionComparator: number;

        /**
         * Creates a new WecUnitPresence instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WecUnitPresence instance
         */
        public static create(properties?: WarEvent.IWecUnitPresence): WarEvent.WecUnitPresence;

        /**
         * Encodes the specified WecUnitPresence message. Does not implicitly {@link WarEvent.WecUnitPresence.verify|verify} messages.
         * @param message WecUnitPresence message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarEvent.IWecUnitPresence, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WecUnitPresence message, length delimited. Does not implicitly {@link WarEvent.WecUnitPresence.verify|verify} messages.
         * @param message WecUnitPresence message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarEvent.IWecUnitPresence, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WecUnitPresence message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WecUnitPresence
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarEvent.WecUnitPresence;

        /**
         * Decodes a WecUnitPresence message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WecUnitPresence
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarEvent.WecUnitPresence;

        /**
         * Verifies a WecUnitPresence message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WecUnitPresence message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WecUnitPresence
         */
        public static fromObject(object: { [k: string]: any }): WarEvent.WecUnitPresence;

        /**
         * Creates a plain object from a WecUnitPresence message. Also converts values to other types if specified.
         * @param message WecUnitPresence
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarEvent.WecUnitPresence, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WecUnitPresence to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WecCustomCounter. */
    interface IWecCustomCounter {

        /** WecCustomCounter counterIdArray */
        counterIdArray?: (number[]|null);

        /** WecCustomCounter counterCount */
        counterCount?: (number|null);

        /** WecCustomCounter counterCountComparator */
        counterCountComparator?: (number|null);

        /** WecCustomCounter value */
        value?: (number|null);

        /** WecCustomCounter valueComparator */
        valueComparator?: (number|null);

        /** WecCustomCounter valueDivider */
        valueDivider?: (number|null);

        /** WecCustomCounter valueRemainder */
        valueRemainder?: (number|null);

        /** WecCustomCounter valueRemainderComparator */
        valueRemainderComparator?: (number|null);
    }

    /** Represents a WecCustomCounter. */
    class WecCustomCounter implements IWecCustomCounter {

        /**
         * Constructs a new WecCustomCounter.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarEvent.IWecCustomCounter);

        /** WecCustomCounter counterIdArray. */
        public counterIdArray: number[];

        /** WecCustomCounter counterCount. */
        public counterCount: number;

        /** WecCustomCounter counterCountComparator. */
        public counterCountComparator: number;

        /** WecCustomCounter value. */
        public value: number;

        /** WecCustomCounter valueComparator. */
        public valueComparator: number;

        /** WecCustomCounter valueDivider. */
        public valueDivider: number;

        /** WecCustomCounter valueRemainder. */
        public valueRemainder: number;

        /** WecCustomCounter valueRemainderComparator. */
        public valueRemainderComparator: number;

        /**
         * Creates a new WecCustomCounter instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WecCustomCounter instance
         */
        public static create(properties?: WarEvent.IWecCustomCounter): WarEvent.WecCustomCounter;

        /**
         * Encodes the specified WecCustomCounter message. Does not implicitly {@link WarEvent.WecCustomCounter.verify|verify} messages.
         * @param message WecCustomCounter message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarEvent.IWecCustomCounter, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WecCustomCounter message, length delimited. Does not implicitly {@link WarEvent.WecCustomCounter.verify|verify} messages.
         * @param message WecCustomCounter message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarEvent.IWecCustomCounter, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WecCustomCounter message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WecCustomCounter
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarEvent.WecCustomCounter;

        /**
         * Decodes a WecCustomCounter message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WecCustomCounter
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarEvent.WecCustomCounter;

        /**
         * Verifies a WecCustomCounter message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WecCustomCounter message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WecCustomCounter
         */
        public static fromObject(object: { [k: string]: any }): WarEvent.WecCustomCounter;

        /**
         * Creates a plain object from a WecCustomCounter message. Also converts values to other types if specified.
         * @param message WecCustomCounter
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarEvent.WecCustomCounter, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WecCustomCounter to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WarEventCondition. */
    interface IWarEventCondition {

        /** WarEventCondition WecCommonData */
        WecCommonData?: (WarEvent.IWecCommonData|null);

        /** WarEventCondition WecTurnIndexEqualTo */
        WecTurnIndexEqualTo?: (WarEvent.IWecTurnIndexEqualTo|null);

        /** WarEventCondition WecTurnIndexGreaterThan */
        WecTurnIndexGreaterThan?: (WarEvent.IWecTurnIndexGreaterThan|null);

        /** WarEventCondition WecTurnIndexLessThan */
        WecTurnIndexLessThan?: (WarEvent.IWecTurnIndexLessThan|null);

        /** WarEventCondition WecTurnIndexRemainderEqualTo */
        WecTurnIndexRemainderEqualTo?: (WarEvent.IWecTurnIndexRemainderEqualTo|null);

        /** WarEventCondition WecTurnAndPlayer */
        WecTurnAndPlayer?: (WarEvent.IWecTurnAndPlayer|null);

        /** WarEventCondition WecTurnPhaseEqualTo */
        WecTurnPhaseEqualTo?: (WarEvent.IWecTurnPhaseEqualTo|null);

        /** WarEventCondition WecWeatherAndFog */
        WecWeatherAndFog?: (WarEvent.IWecWeatherAndFog|null);

        /** WarEventCondition WecPlayerIndexInTurnEqualTo */
        WecPlayerIndexInTurnEqualTo?: (WarEvent.IWecPlayerIndexInTurnEqualTo|null);

        /** WarEventCondition WecPlayerIndexInTurnGreaterThan */
        WecPlayerIndexInTurnGreaterThan?: (WarEvent.IWecPlayerIndexInTurnGreaterThan|null);

        /** WarEventCondition WecPlayerIndexInTurnLessThan */
        WecPlayerIndexInTurnLessThan?: (WarEvent.IWecPlayerIndexInTurnLessThan|null);

        /** WarEventCondition WecEventCalledCountTotalEqualTo */
        WecEventCalledCountTotalEqualTo?: (WarEvent.IWecEventCalledCountTotalEqualTo|null);

        /** WarEventCondition WecEventCalledCountTotalGreaterThan */
        WecEventCalledCountTotalGreaterThan?: (WarEvent.IWecEventCalledCountTotalGreaterThan|null);

        /** WarEventCondition WecEventCalledCountTotalLessThan */
        WecEventCalledCountTotalLessThan?: (WarEvent.IWecEventCalledCountTotalLessThan|null);

        /** WarEventCondition WecEventCalledCount */
        WecEventCalledCount?: (WarEvent.IWecEventCalledCount|null);

        /** WarEventCondition WecPlayerAliveStateEqualTo */
        WecPlayerAliveStateEqualTo?: (WarEvent.IWecPlayerAliveStateEqualTo|null);

        /** WarEventCondition WecPlayerState */
        WecPlayerState?: (WarEvent.IWecPlayerState|null);

        /** WarEventCondition WecTilePlayerIndexEqualTo */
        WecTilePlayerIndexEqualTo?: (WarEvent.IWecTilePlayerIndexEqualTo|null);

        /** WarEventCondition WecTileTypeEqualTo */
        WecTileTypeEqualTo?: (WarEvent.IWecTileTypeEqualTo|null);

        /** WarEventCondition WecTilePresence */
        WecTilePresence?: (WarEvent.IWecTilePresence|null);

        /** WarEventCondition WecUnitPresence */
        WecUnitPresence?: (WarEvent.IWecUnitPresence|null);

        /** WarEventCondition WecCustomCounter */
        WecCustomCounter?: (WarEvent.IWecCustomCounter|null);
    }

    /** Represents a WarEventCondition. */
    class WarEventCondition implements IWarEventCondition {

        /**
         * Constructs a new WarEventCondition.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarEvent.IWarEventCondition);

        /** WarEventCondition WecCommonData. */
        public WecCommonData?: (WarEvent.IWecCommonData|null);

        /** WarEventCondition WecTurnIndexEqualTo. */
        public WecTurnIndexEqualTo?: (WarEvent.IWecTurnIndexEqualTo|null);

        /** WarEventCondition WecTurnIndexGreaterThan. */
        public WecTurnIndexGreaterThan?: (WarEvent.IWecTurnIndexGreaterThan|null);

        /** WarEventCondition WecTurnIndexLessThan. */
        public WecTurnIndexLessThan?: (WarEvent.IWecTurnIndexLessThan|null);

        /** WarEventCondition WecTurnIndexRemainderEqualTo. */
        public WecTurnIndexRemainderEqualTo?: (WarEvent.IWecTurnIndexRemainderEqualTo|null);

        /** WarEventCondition WecTurnAndPlayer. */
        public WecTurnAndPlayer?: (WarEvent.IWecTurnAndPlayer|null);

        /** WarEventCondition WecTurnPhaseEqualTo. */
        public WecTurnPhaseEqualTo?: (WarEvent.IWecTurnPhaseEqualTo|null);

        /** WarEventCondition WecWeatherAndFog. */
        public WecWeatherAndFog?: (WarEvent.IWecWeatherAndFog|null);

        /** WarEventCondition WecPlayerIndexInTurnEqualTo. */
        public WecPlayerIndexInTurnEqualTo?: (WarEvent.IWecPlayerIndexInTurnEqualTo|null);

        /** WarEventCondition WecPlayerIndexInTurnGreaterThan. */
        public WecPlayerIndexInTurnGreaterThan?: (WarEvent.IWecPlayerIndexInTurnGreaterThan|null);

        /** WarEventCondition WecPlayerIndexInTurnLessThan. */
        public WecPlayerIndexInTurnLessThan?: (WarEvent.IWecPlayerIndexInTurnLessThan|null);

        /** WarEventCondition WecEventCalledCountTotalEqualTo. */
        public WecEventCalledCountTotalEqualTo?: (WarEvent.IWecEventCalledCountTotalEqualTo|null);

        /** WarEventCondition WecEventCalledCountTotalGreaterThan. */
        public WecEventCalledCountTotalGreaterThan?: (WarEvent.IWecEventCalledCountTotalGreaterThan|null);

        /** WarEventCondition WecEventCalledCountTotalLessThan. */
        public WecEventCalledCountTotalLessThan?: (WarEvent.IWecEventCalledCountTotalLessThan|null);

        /** WarEventCondition WecEventCalledCount. */
        public WecEventCalledCount?: (WarEvent.IWecEventCalledCount|null);

        /** WarEventCondition WecPlayerAliveStateEqualTo. */
        public WecPlayerAliveStateEqualTo?: (WarEvent.IWecPlayerAliveStateEqualTo|null);

        /** WarEventCondition WecPlayerState. */
        public WecPlayerState?: (WarEvent.IWecPlayerState|null);

        /** WarEventCondition WecTilePlayerIndexEqualTo. */
        public WecTilePlayerIndexEqualTo?: (WarEvent.IWecTilePlayerIndexEqualTo|null);

        /** WarEventCondition WecTileTypeEqualTo. */
        public WecTileTypeEqualTo?: (WarEvent.IWecTileTypeEqualTo|null);

        /** WarEventCondition WecTilePresence. */
        public WecTilePresence?: (WarEvent.IWecTilePresence|null);

        /** WarEventCondition WecUnitPresence. */
        public WecUnitPresence?: (WarEvent.IWecUnitPresence|null);

        /** WarEventCondition WecCustomCounter. */
        public WecCustomCounter?: (WarEvent.IWecCustomCounter|null);

        /**
         * Creates a new WarEventCondition instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WarEventCondition instance
         */
        public static create(properties?: WarEvent.IWarEventCondition): WarEvent.WarEventCondition;

        /**
         * Encodes the specified WarEventCondition message. Does not implicitly {@link WarEvent.WarEventCondition.verify|verify} messages.
         * @param message WarEventCondition message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarEvent.IWarEventCondition, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WarEventCondition message, length delimited. Does not implicitly {@link WarEvent.WarEventCondition.verify|verify} messages.
         * @param message WarEventCondition message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarEvent.IWarEventCondition, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarEventCondition message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarEventCondition
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarEvent.WarEventCondition;

        /**
         * Decodes a WarEventCondition message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WarEventCondition
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarEvent.WarEventCondition;

        /**
         * Verifies a WarEventCondition message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WarEventCondition message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WarEventCondition
         */
        public static fromObject(object: { [k: string]: any }): WarEvent.WarEventCondition;

        /**
         * Creates a plain object from a WarEventCondition message. Also converts values to other types if specified.
         * @param message WarEventCondition
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarEvent.WarEventCondition, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WarEventCondition to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WarEventConditionNode. */
    interface IWarEventConditionNode {

        /** WarEventConditionNode nodeId */
        nodeId?: (number|null);

        /** WarEventConditionNode isAnd */
        isAnd?: (boolean|null);

        /** WarEventConditionNode subNodeIdArray */
        subNodeIdArray?: (number[]|null);

        /** WarEventConditionNode conditionIdArray */
        conditionIdArray?: (number[]|null);
    }

    /** Represents a WarEventConditionNode. */
    class WarEventConditionNode implements IWarEventConditionNode {

        /**
         * Constructs a new WarEventConditionNode.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarEvent.IWarEventConditionNode);

        /** WarEventConditionNode nodeId. */
        public nodeId: number;

        /** WarEventConditionNode isAnd. */
        public isAnd: boolean;

        /** WarEventConditionNode subNodeIdArray. */
        public subNodeIdArray: number[];

        /** WarEventConditionNode conditionIdArray. */
        public conditionIdArray: number[];

        /**
         * Creates a new WarEventConditionNode instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WarEventConditionNode instance
         */
        public static create(properties?: WarEvent.IWarEventConditionNode): WarEvent.WarEventConditionNode;

        /**
         * Encodes the specified WarEventConditionNode message. Does not implicitly {@link WarEvent.WarEventConditionNode.verify|verify} messages.
         * @param message WarEventConditionNode message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarEvent.IWarEventConditionNode, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WarEventConditionNode message, length delimited. Does not implicitly {@link WarEvent.WarEventConditionNode.verify|verify} messages.
         * @param message WarEventConditionNode message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarEvent.IWarEventConditionNode, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarEventConditionNode message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarEventConditionNode
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarEvent.WarEventConditionNode;

        /**
         * Decodes a WarEventConditionNode message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WarEventConditionNode
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarEvent.WarEventConditionNode;

        /**
         * Verifies a WarEventConditionNode message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WarEventConditionNode message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WarEventConditionNode
         */
        public static fromObject(object: { [k: string]: any }): WarEvent.WarEventConditionNode;

        /**
         * Creates a plain object from a WarEventConditionNode message. Also converts values to other types if specified.
         * @param message WarEventConditionNode
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarEvent.WarEventConditionNode, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WarEventConditionNode to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WeaCommonData. */
    interface IWeaCommonData {

        /** WeaCommonData actionId */
        actionId?: (number|null);
    }

    /** Represents a WeaCommonData. */
    class WeaCommonData implements IWeaCommonData {

        /**
         * Constructs a new WeaCommonData.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarEvent.IWeaCommonData);

        /** WeaCommonData actionId. */
        public actionId: number;

        /**
         * Creates a new WeaCommonData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WeaCommonData instance
         */
        public static create(properties?: WarEvent.IWeaCommonData): WarEvent.WeaCommonData;

        /**
         * Encodes the specified WeaCommonData message. Does not implicitly {@link WarEvent.WeaCommonData.verify|verify} messages.
         * @param message WeaCommonData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarEvent.IWeaCommonData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WeaCommonData message, length delimited. Does not implicitly {@link WarEvent.WeaCommonData.verify|verify} messages.
         * @param message WeaCommonData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarEvent.IWeaCommonData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WeaCommonData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WeaCommonData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarEvent.WeaCommonData;

        /**
         * Decodes a WeaCommonData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WeaCommonData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarEvent.WeaCommonData;

        /**
         * Verifies a WeaCommonData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WeaCommonData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WeaCommonData
         */
        public static fromObject(object: { [k: string]: any }): WarEvent.WeaCommonData;

        /**
         * Creates a plain object from a WeaCommonData message. Also converts values to other types if specified.
         * @param message WeaCommonData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarEvent.WeaCommonData, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WeaCommonData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WeaAddUnit. */
    interface IWeaAddUnit {

        /** WeaAddUnit unitArray */
        unitArray?: (WarEvent.WeaAddUnit.IDataForAddUnit[]|null);
    }

    /** Represents a WeaAddUnit. */
    class WeaAddUnit implements IWeaAddUnit {

        /**
         * Constructs a new WeaAddUnit.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarEvent.IWeaAddUnit);

        /** WeaAddUnit unitArray. */
        public unitArray: WarEvent.WeaAddUnit.IDataForAddUnit[];

        /**
         * Creates a new WeaAddUnit instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WeaAddUnit instance
         */
        public static create(properties?: WarEvent.IWeaAddUnit): WarEvent.WeaAddUnit;

        /**
         * Encodes the specified WeaAddUnit message. Does not implicitly {@link WarEvent.WeaAddUnit.verify|verify} messages.
         * @param message WeaAddUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarEvent.IWeaAddUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WeaAddUnit message, length delimited. Does not implicitly {@link WarEvent.WeaAddUnit.verify|verify} messages.
         * @param message WeaAddUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarEvent.IWeaAddUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WeaAddUnit message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WeaAddUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarEvent.WeaAddUnit;

        /**
         * Decodes a WeaAddUnit message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WeaAddUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarEvent.WeaAddUnit;

        /**
         * Verifies a WeaAddUnit message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WeaAddUnit message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WeaAddUnit
         */
        public static fromObject(object: { [k: string]: any }): WarEvent.WeaAddUnit;

        /**
         * Creates a plain object from a WeaAddUnit message. Also converts values to other types if specified.
         * @param message WeaAddUnit
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarEvent.WeaAddUnit, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WeaAddUnit to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace WeaAddUnit {

        /** Properties of a DataForAddUnit. */
        interface IDataForAddUnit {

            /** DataForAddUnit unitData */
            unitData?: (WarSerialization.ISerialUnit|null);

            /** DataForAddUnit canBeBlockedByUnit */
            canBeBlockedByUnit?: (boolean|null);

            /** DataForAddUnit needMovableTile */
            needMovableTile?: (boolean|null);
        }

        /** Represents a DataForAddUnit. */
        class DataForAddUnit implements IDataForAddUnit {

            /**
             * Constructs a new DataForAddUnit.
             * @param [properties] Properties to set
             */
            constructor(properties?: WarEvent.WeaAddUnit.IDataForAddUnit);

            /** DataForAddUnit unitData. */
            public unitData?: (WarSerialization.ISerialUnit|null);

            /** DataForAddUnit canBeBlockedByUnit. */
            public canBeBlockedByUnit: boolean;

            /** DataForAddUnit needMovableTile. */
            public needMovableTile: boolean;

            /**
             * Creates a new DataForAddUnit instance using the specified properties.
             * @param [properties] Properties to set
             * @returns DataForAddUnit instance
             */
            public static create(properties?: WarEvent.WeaAddUnit.IDataForAddUnit): WarEvent.WeaAddUnit.DataForAddUnit;

            /**
             * Encodes the specified DataForAddUnit message. Does not implicitly {@link WarEvent.WeaAddUnit.DataForAddUnit.verify|verify} messages.
             * @param message DataForAddUnit message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: WarEvent.WeaAddUnit.IDataForAddUnit, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified DataForAddUnit message, length delimited. Does not implicitly {@link WarEvent.WeaAddUnit.DataForAddUnit.verify|verify} messages.
             * @param message DataForAddUnit message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: WarEvent.WeaAddUnit.IDataForAddUnit, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a DataForAddUnit message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns DataForAddUnit
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarEvent.WeaAddUnit.DataForAddUnit;

            /**
             * Decodes a DataForAddUnit message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns DataForAddUnit
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarEvent.WeaAddUnit.DataForAddUnit;

            /**
             * Verifies a DataForAddUnit message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a DataForAddUnit message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns DataForAddUnit
             */
            public static fromObject(object: { [k: string]: any }): WarEvent.WeaAddUnit.DataForAddUnit;

            /**
             * Creates a plain object from a DataForAddUnit message. Also converts values to other types if specified.
             * @param message DataForAddUnit
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: WarEvent.WeaAddUnit.DataForAddUnit, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this DataForAddUnit to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a WeaDialogue. */
    interface IWeaDialogue {

        /** WeaDialogue dataArray */
        dataArray?: (WarEvent.WeaDialogue.IDataForDialogue[]|null);

        /** WeaDialogue backgroundId */
        backgroundId?: (number|null);
    }

    /** Represents a WeaDialogue. */
    class WeaDialogue implements IWeaDialogue {

        /**
         * Constructs a new WeaDialogue.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarEvent.IWeaDialogue);

        /** WeaDialogue dataArray. */
        public dataArray: WarEvent.WeaDialogue.IDataForDialogue[];

        /** WeaDialogue backgroundId. */
        public backgroundId: number;

        /**
         * Creates a new WeaDialogue instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WeaDialogue instance
         */
        public static create(properties?: WarEvent.IWeaDialogue): WarEvent.WeaDialogue;

        /**
         * Encodes the specified WeaDialogue message. Does not implicitly {@link WarEvent.WeaDialogue.verify|verify} messages.
         * @param message WeaDialogue message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarEvent.IWeaDialogue, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WeaDialogue message, length delimited. Does not implicitly {@link WarEvent.WeaDialogue.verify|verify} messages.
         * @param message WeaDialogue message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarEvent.IWeaDialogue, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WeaDialogue message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WeaDialogue
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarEvent.WeaDialogue;

        /**
         * Decodes a WeaDialogue message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WeaDialogue
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarEvent.WeaDialogue;

        /**
         * Verifies a WeaDialogue message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WeaDialogue message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WeaDialogue
         */
        public static fromObject(object: { [k: string]: any }): WarEvent.WeaDialogue;

        /**
         * Creates a plain object from a WeaDialogue message. Also converts values to other types if specified.
         * @param message WeaDialogue
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarEvent.WeaDialogue, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WeaDialogue to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace WeaDialogue {

        /** Properties of a DataForCoDialogue. */
        interface IDataForCoDialogue {

            /** DataForCoDialogue side */
            side?: (number|null);

            /** DataForCoDialogue coId */
            coId?: (number|null);

            /** DataForCoDialogue textArray */
            textArray?: (Structure.ILanguageText[]|null);

            /** DataForCoDialogue nameArray */
            nameArray?: (Structure.ILanguageText[]|null);
        }

        /** Represents a DataForCoDialogue. */
        class DataForCoDialogue implements IDataForCoDialogue {

            /**
             * Constructs a new DataForCoDialogue.
             * @param [properties] Properties to set
             */
            constructor(properties?: WarEvent.WeaDialogue.IDataForCoDialogue);

            /** DataForCoDialogue side. */
            public side: number;

            /** DataForCoDialogue coId. */
            public coId: number;

            /** DataForCoDialogue textArray. */
            public textArray: Structure.ILanguageText[];

            /** DataForCoDialogue nameArray. */
            public nameArray: Structure.ILanguageText[];

            /**
             * Creates a new DataForCoDialogue instance using the specified properties.
             * @param [properties] Properties to set
             * @returns DataForCoDialogue instance
             */
            public static create(properties?: WarEvent.WeaDialogue.IDataForCoDialogue): WarEvent.WeaDialogue.DataForCoDialogue;

            /**
             * Encodes the specified DataForCoDialogue message. Does not implicitly {@link WarEvent.WeaDialogue.DataForCoDialogue.verify|verify} messages.
             * @param message DataForCoDialogue message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: WarEvent.WeaDialogue.IDataForCoDialogue, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified DataForCoDialogue message, length delimited. Does not implicitly {@link WarEvent.WeaDialogue.DataForCoDialogue.verify|verify} messages.
             * @param message DataForCoDialogue message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: WarEvent.WeaDialogue.IDataForCoDialogue, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a DataForCoDialogue message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns DataForCoDialogue
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarEvent.WeaDialogue.DataForCoDialogue;

            /**
             * Decodes a DataForCoDialogue message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns DataForCoDialogue
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarEvent.WeaDialogue.DataForCoDialogue;

            /**
             * Verifies a DataForCoDialogue message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a DataForCoDialogue message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns DataForCoDialogue
             */
            public static fromObject(object: { [k: string]: any }): WarEvent.WeaDialogue.DataForCoDialogue;

            /**
             * Creates a plain object from a DataForCoDialogue message. Also converts values to other types if specified.
             * @param message DataForCoDialogue
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: WarEvent.WeaDialogue.DataForCoDialogue, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this DataForCoDialogue to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a DataForAside. */
        interface IDataForAside {

            /** DataForAside textArray */
            textArray?: (Structure.ILanguageText[]|null);
        }

        /** Represents a DataForAside. */
        class DataForAside implements IDataForAside {

            /**
             * Constructs a new DataForAside.
             * @param [properties] Properties to set
             */
            constructor(properties?: WarEvent.WeaDialogue.IDataForAside);

            /** DataForAside textArray. */
            public textArray: Structure.ILanguageText[];

            /**
             * Creates a new DataForAside instance using the specified properties.
             * @param [properties] Properties to set
             * @returns DataForAside instance
             */
            public static create(properties?: WarEvent.WeaDialogue.IDataForAside): WarEvent.WeaDialogue.DataForAside;

            /**
             * Encodes the specified DataForAside message. Does not implicitly {@link WarEvent.WeaDialogue.DataForAside.verify|verify} messages.
             * @param message DataForAside message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: WarEvent.WeaDialogue.IDataForAside, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified DataForAside message, length delimited. Does not implicitly {@link WarEvent.WeaDialogue.DataForAside.verify|verify} messages.
             * @param message DataForAside message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: WarEvent.WeaDialogue.IDataForAside, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a DataForAside message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns DataForAside
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarEvent.WeaDialogue.DataForAside;

            /**
             * Decodes a DataForAside message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns DataForAside
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarEvent.WeaDialogue.DataForAside;

            /**
             * Verifies a DataForAside message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a DataForAside message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns DataForAside
             */
            public static fromObject(object: { [k: string]: any }): WarEvent.WeaDialogue.DataForAside;

            /**
             * Creates a plain object from a DataForAside message. Also converts values to other types if specified.
             * @param message DataForAside
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: WarEvent.WeaDialogue.DataForAside, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this DataForAside to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a DataForDialogue. */
        interface IDataForDialogue {

            /** DataForDialogue dataForCoDialogue */
            dataForCoDialogue?: (WarEvent.WeaDialogue.IDataForCoDialogue|null);

            /** DataForDialogue dataForAside */
            dataForAside?: (WarEvent.WeaDialogue.IDataForAside|null);
        }

        /** Represents a DataForDialogue. */
        class DataForDialogue implements IDataForDialogue {

            /**
             * Constructs a new DataForDialogue.
             * @param [properties] Properties to set
             */
            constructor(properties?: WarEvent.WeaDialogue.IDataForDialogue);

            /** DataForDialogue dataForCoDialogue. */
            public dataForCoDialogue?: (WarEvent.WeaDialogue.IDataForCoDialogue|null);

            /** DataForDialogue dataForAside. */
            public dataForAside?: (WarEvent.WeaDialogue.IDataForAside|null);

            /**
             * Creates a new DataForDialogue instance using the specified properties.
             * @param [properties] Properties to set
             * @returns DataForDialogue instance
             */
            public static create(properties?: WarEvent.WeaDialogue.IDataForDialogue): WarEvent.WeaDialogue.DataForDialogue;

            /**
             * Encodes the specified DataForDialogue message. Does not implicitly {@link WarEvent.WeaDialogue.DataForDialogue.verify|verify} messages.
             * @param message DataForDialogue message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: WarEvent.WeaDialogue.IDataForDialogue, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified DataForDialogue message, length delimited. Does not implicitly {@link WarEvent.WeaDialogue.DataForDialogue.verify|verify} messages.
             * @param message DataForDialogue message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: WarEvent.WeaDialogue.IDataForDialogue, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a DataForDialogue message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns DataForDialogue
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarEvent.WeaDialogue.DataForDialogue;

            /**
             * Decodes a DataForDialogue message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns DataForDialogue
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarEvent.WeaDialogue.DataForDialogue;

            /**
             * Verifies a DataForDialogue message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a DataForDialogue message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns DataForDialogue
             */
            public static fromObject(object: { [k: string]: any }): WarEvent.WeaDialogue.DataForDialogue;

            /**
             * Creates a plain object from a DataForDialogue message. Also converts values to other types if specified.
             * @param message DataForDialogue
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: WarEvent.WeaDialogue.DataForDialogue, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this DataForDialogue to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a WeaSimpleDialogue. */
    interface IWeaSimpleDialogue {

        /** WeaSimpleDialogue dataArray */
        dataArray?: (WarEvent.WeaSimpleDialogue.IDataForDialogue[]|null);
    }

    /** Represents a WeaSimpleDialogue. */
    class WeaSimpleDialogue implements IWeaSimpleDialogue {

        /**
         * Constructs a new WeaSimpleDialogue.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarEvent.IWeaSimpleDialogue);

        /** WeaSimpleDialogue dataArray. */
        public dataArray: WarEvent.WeaSimpleDialogue.IDataForDialogue[];

        /**
         * Creates a new WeaSimpleDialogue instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WeaSimpleDialogue instance
         */
        public static create(properties?: WarEvent.IWeaSimpleDialogue): WarEvent.WeaSimpleDialogue;

        /**
         * Encodes the specified WeaSimpleDialogue message. Does not implicitly {@link WarEvent.WeaSimpleDialogue.verify|verify} messages.
         * @param message WeaSimpleDialogue message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarEvent.IWeaSimpleDialogue, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WeaSimpleDialogue message, length delimited. Does not implicitly {@link WarEvent.WeaSimpleDialogue.verify|verify} messages.
         * @param message WeaSimpleDialogue message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarEvent.IWeaSimpleDialogue, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WeaSimpleDialogue message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WeaSimpleDialogue
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarEvent.WeaSimpleDialogue;

        /**
         * Decodes a WeaSimpleDialogue message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WeaSimpleDialogue
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarEvent.WeaSimpleDialogue;

        /**
         * Verifies a WeaSimpleDialogue message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WeaSimpleDialogue message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WeaSimpleDialogue
         */
        public static fromObject(object: { [k: string]: any }): WarEvent.WeaSimpleDialogue;

        /**
         * Creates a plain object from a WeaSimpleDialogue message. Also converts values to other types if specified.
         * @param message WeaSimpleDialogue
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarEvent.WeaSimpleDialogue, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WeaSimpleDialogue to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace WeaSimpleDialogue {

        /** Properties of a DataForCoDialogue. */
        interface IDataForCoDialogue {

            /** DataForCoDialogue side */
            side?: (number|null);

            /** DataForCoDialogue coId */
            coId?: (number|null);

            /** DataForCoDialogue textArray */
            textArray?: (Structure.ILanguageText[]|null);

            /** DataForCoDialogue nameArray */
            nameArray?: (Structure.ILanguageText[]|null);
        }

        /** Represents a DataForCoDialogue. */
        class DataForCoDialogue implements IDataForCoDialogue {

            /**
             * Constructs a new DataForCoDialogue.
             * @param [properties] Properties to set
             */
            constructor(properties?: WarEvent.WeaSimpleDialogue.IDataForCoDialogue);

            /** DataForCoDialogue side. */
            public side: number;

            /** DataForCoDialogue coId. */
            public coId: number;

            /** DataForCoDialogue textArray. */
            public textArray: Structure.ILanguageText[];

            /** DataForCoDialogue nameArray. */
            public nameArray: Structure.ILanguageText[];

            /**
             * Creates a new DataForCoDialogue instance using the specified properties.
             * @param [properties] Properties to set
             * @returns DataForCoDialogue instance
             */
            public static create(properties?: WarEvent.WeaSimpleDialogue.IDataForCoDialogue): WarEvent.WeaSimpleDialogue.DataForCoDialogue;

            /**
             * Encodes the specified DataForCoDialogue message. Does not implicitly {@link WarEvent.WeaSimpleDialogue.DataForCoDialogue.verify|verify} messages.
             * @param message DataForCoDialogue message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: WarEvent.WeaSimpleDialogue.IDataForCoDialogue, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified DataForCoDialogue message, length delimited. Does not implicitly {@link WarEvent.WeaSimpleDialogue.DataForCoDialogue.verify|verify} messages.
             * @param message DataForCoDialogue message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: WarEvent.WeaSimpleDialogue.IDataForCoDialogue, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a DataForCoDialogue message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns DataForCoDialogue
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarEvent.WeaSimpleDialogue.DataForCoDialogue;

            /**
             * Decodes a DataForCoDialogue message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns DataForCoDialogue
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarEvent.WeaSimpleDialogue.DataForCoDialogue;

            /**
             * Verifies a DataForCoDialogue message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a DataForCoDialogue message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns DataForCoDialogue
             */
            public static fromObject(object: { [k: string]: any }): WarEvent.WeaSimpleDialogue.DataForCoDialogue;

            /**
             * Creates a plain object from a DataForCoDialogue message. Also converts values to other types if specified.
             * @param message DataForCoDialogue
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: WarEvent.WeaSimpleDialogue.DataForCoDialogue, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this DataForCoDialogue to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a DataForDialogue. */
        interface IDataForDialogue {

            /** DataForDialogue dataForCoDialogue */
            dataForCoDialogue?: (WarEvent.WeaSimpleDialogue.IDataForCoDialogue|null);
        }

        /** Represents a DataForDialogue. */
        class DataForDialogue implements IDataForDialogue {

            /**
             * Constructs a new DataForDialogue.
             * @param [properties] Properties to set
             */
            constructor(properties?: WarEvent.WeaSimpleDialogue.IDataForDialogue);

            /** DataForDialogue dataForCoDialogue. */
            public dataForCoDialogue?: (WarEvent.WeaSimpleDialogue.IDataForCoDialogue|null);

            /**
             * Creates a new DataForDialogue instance using the specified properties.
             * @param [properties] Properties to set
             * @returns DataForDialogue instance
             */
            public static create(properties?: WarEvent.WeaSimpleDialogue.IDataForDialogue): WarEvent.WeaSimpleDialogue.DataForDialogue;

            /**
             * Encodes the specified DataForDialogue message. Does not implicitly {@link WarEvent.WeaSimpleDialogue.DataForDialogue.verify|verify} messages.
             * @param message DataForDialogue message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: WarEvent.WeaSimpleDialogue.IDataForDialogue, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified DataForDialogue message, length delimited. Does not implicitly {@link WarEvent.WeaSimpleDialogue.DataForDialogue.verify|verify} messages.
             * @param message DataForDialogue message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: WarEvent.WeaSimpleDialogue.IDataForDialogue, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a DataForDialogue message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns DataForDialogue
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarEvent.WeaSimpleDialogue.DataForDialogue;

            /**
             * Decodes a DataForDialogue message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns DataForDialogue
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarEvent.WeaSimpleDialogue.DataForDialogue;

            /**
             * Verifies a DataForDialogue message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a DataForDialogue message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns DataForDialogue
             */
            public static fromObject(object: { [k: string]: any }): WarEvent.WeaSimpleDialogue.DataForDialogue;

            /**
             * Creates a plain object from a DataForDialogue message. Also converts values to other types if specified.
             * @param message DataForDialogue
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: WarEvent.WeaSimpleDialogue.DataForDialogue, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this DataForDialogue to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a WeaSetViewpoint. */
    interface IWeaSetViewpoint {

        /** WeaSetViewpoint gridIndex */
        gridIndex?: (Structure.IGridIndex|null);

        /** WeaSetViewpoint needFocusEffect */
        needFocusEffect?: (boolean|null);
    }

    /** Represents a WeaSetViewpoint. */
    class WeaSetViewpoint implements IWeaSetViewpoint {

        /**
         * Constructs a new WeaSetViewpoint.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarEvent.IWeaSetViewpoint);

        /** WeaSetViewpoint gridIndex. */
        public gridIndex?: (Structure.IGridIndex|null);

        /** WeaSetViewpoint needFocusEffect. */
        public needFocusEffect: boolean;

        /**
         * Creates a new WeaSetViewpoint instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WeaSetViewpoint instance
         */
        public static create(properties?: WarEvent.IWeaSetViewpoint): WarEvent.WeaSetViewpoint;

        /**
         * Encodes the specified WeaSetViewpoint message. Does not implicitly {@link WarEvent.WeaSetViewpoint.verify|verify} messages.
         * @param message WeaSetViewpoint message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarEvent.IWeaSetViewpoint, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WeaSetViewpoint message, length delimited. Does not implicitly {@link WarEvent.WeaSetViewpoint.verify|verify} messages.
         * @param message WeaSetViewpoint message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarEvent.IWeaSetViewpoint, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WeaSetViewpoint message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WeaSetViewpoint
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarEvent.WeaSetViewpoint;

        /**
         * Decodes a WeaSetViewpoint message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WeaSetViewpoint
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarEvent.WeaSetViewpoint;

        /**
         * Verifies a WeaSetViewpoint message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WeaSetViewpoint message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WeaSetViewpoint
         */
        public static fromObject(object: { [k: string]: any }): WarEvent.WeaSetViewpoint;

        /**
         * Creates a plain object from a WeaSetViewpoint message. Also converts values to other types if specified.
         * @param message WeaSetViewpoint
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarEvent.WeaSetViewpoint, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WeaSetViewpoint to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WeaSetWeather. */
    interface IWeaSetWeather {

        /** WeaSetWeather weatherType */
        weatherType?: (number|null);

        /** WeaSetWeather weatherTurnsCount */
        weatherTurnsCount?: (number|null);
    }

    /** Represents a WeaSetWeather. */
    class WeaSetWeather implements IWeaSetWeather {

        /**
         * Constructs a new WeaSetWeather.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarEvent.IWeaSetWeather);

        /** WeaSetWeather weatherType. */
        public weatherType: number;

        /** WeaSetWeather weatherTurnsCount. */
        public weatherTurnsCount: number;

        /**
         * Creates a new WeaSetWeather instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WeaSetWeather instance
         */
        public static create(properties?: WarEvent.IWeaSetWeather): WarEvent.WeaSetWeather;

        /**
         * Encodes the specified WeaSetWeather message. Does not implicitly {@link WarEvent.WeaSetWeather.verify|verify} messages.
         * @param message WeaSetWeather message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarEvent.IWeaSetWeather, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WeaSetWeather message, length delimited. Does not implicitly {@link WarEvent.WeaSetWeather.verify|verify} messages.
         * @param message WeaSetWeather message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarEvent.IWeaSetWeather, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WeaSetWeather message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WeaSetWeather
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarEvent.WeaSetWeather;

        /**
         * Decodes a WeaSetWeather message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WeaSetWeather
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarEvent.WeaSetWeather;

        /**
         * Verifies a WeaSetWeather message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WeaSetWeather message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WeaSetWeather
         */
        public static fromObject(object: { [k: string]: any }): WarEvent.WeaSetWeather;

        /**
         * Creates a plain object from a WeaSetWeather message. Also converts values to other types if specified.
         * @param message WeaSetWeather
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarEvent.WeaSetWeather, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WeaSetWeather to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WeaPlayBgm. */
    interface IWeaPlayBgm {

        /** WeaPlayBgm bgmCode */
        bgmCode?: (number|null);

        /** WeaPlayBgm useCoBgm */
        useCoBgm?: (boolean|null);
    }

    /** Represents a WeaPlayBgm. */
    class WeaPlayBgm implements IWeaPlayBgm {

        /**
         * Constructs a new WeaPlayBgm.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarEvent.IWeaPlayBgm);

        /** WeaPlayBgm bgmCode. */
        public bgmCode: number;

        /** WeaPlayBgm useCoBgm. */
        public useCoBgm: boolean;

        /**
         * Creates a new WeaPlayBgm instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WeaPlayBgm instance
         */
        public static create(properties?: WarEvent.IWeaPlayBgm): WarEvent.WeaPlayBgm;

        /**
         * Encodes the specified WeaPlayBgm message. Does not implicitly {@link WarEvent.WeaPlayBgm.verify|verify} messages.
         * @param message WeaPlayBgm message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarEvent.IWeaPlayBgm, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WeaPlayBgm message, length delimited. Does not implicitly {@link WarEvent.WeaPlayBgm.verify|verify} messages.
         * @param message WeaPlayBgm message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarEvent.IWeaPlayBgm, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WeaPlayBgm message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WeaPlayBgm
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarEvent.WeaPlayBgm;

        /**
         * Decodes a WeaPlayBgm message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WeaPlayBgm
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarEvent.WeaPlayBgm;

        /**
         * Verifies a WeaPlayBgm message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WeaPlayBgm message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WeaPlayBgm
         */
        public static fromObject(object: { [k: string]: any }): WarEvent.WeaPlayBgm;

        /**
         * Creates a plain object from a WeaPlayBgm message. Also converts values to other types if specified.
         * @param message WeaPlayBgm
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarEvent.WeaPlayBgm, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WeaPlayBgm to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WeaSetForceFogCode. */
    interface IWeaSetForceFogCode {

        /** WeaSetForceFogCode forceFogCode */
        forceFogCode?: (number|null);

        /** WeaSetForceFogCode turnsCount */
        turnsCount?: (number|null);
    }

    /** Represents a WeaSetForceFogCode. */
    class WeaSetForceFogCode implements IWeaSetForceFogCode {

        /**
         * Constructs a new WeaSetForceFogCode.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarEvent.IWeaSetForceFogCode);

        /** WeaSetForceFogCode forceFogCode. */
        public forceFogCode: number;

        /** WeaSetForceFogCode turnsCount. */
        public turnsCount: number;

        /**
         * Creates a new WeaSetForceFogCode instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WeaSetForceFogCode instance
         */
        public static create(properties?: WarEvent.IWeaSetForceFogCode): WarEvent.WeaSetForceFogCode;

        /**
         * Encodes the specified WeaSetForceFogCode message. Does not implicitly {@link WarEvent.WeaSetForceFogCode.verify|verify} messages.
         * @param message WeaSetForceFogCode message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarEvent.IWeaSetForceFogCode, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WeaSetForceFogCode message, length delimited. Does not implicitly {@link WarEvent.WeaSetForceFogCode.verify|verify} messages.
         * @param message WeaSetForceFogCode message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarEvent.IWeaSetForceFogCode, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WeaSetForceFogCode message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WeaSetForceFogCode
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarEvent.WeaSetForceFogCode;

        /**
         * Decodes a WeaSetForceFogCode message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WeaSetForceFogCode
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarEvent.WeaSetForceFogCode;

        /**
         * Verifies a WeaSetForceFogCode message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WeaSetForceFogCode message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WeaSetForceFogCode
         */
        public static fromObject(object: { [k: string]: any }): WarEvent.WeaSetForceFogCode;

        /**
         * Creates a plain object from a WeaSetForceFogCode message. Also converts values to other types if specified.
         * @param message WeaSetForceFogCode
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarEvent.WeaSetForceFogCode, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WeaSetForceFogCode to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WeaSetCustomCounter. */
    interface IWeaSetCustomCounter {

        /** WeaSetCustomCounter customCounterIdArray */
        customCounterIdArray?: (number[]|null);

        /** WeaSetCustomCounter multiplierPercentage */
        multiplierPercentage?: (number|null);

        /** WeaSetCustomCounter deltaValue */
        deltaValue?: (number|null);
    }

    /** Represents a WeaSetCustomCounter. */
    class WeaSetCustomCounter implements IWeaSetCustomCounter {

        /**
         * Constructs a new WeaSetCustomCounter.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarEvent.IWeaSetCustomCounter);

        /** WeaSetCustomCounter customCounterIdArray. */
        public customCounterIdArray: number[];

        /** WeaSetCustomCounter multiplierPercentage. */
        public multiplierPercentage: number;

        /** WeaSetCustomCounter deltaValue. */
        public deltaValue: number;

        /**
         * Creates a new WeaSetCustomCounter instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WeaSetCustomCounter instance
         */
        public static create(properties?: WarEvent.IWeaSetCustomCounter): WarEvent.WeaSetCustomCounter;

        /**
         * Encodes the specified WeaSetCustomCounter message. Does not implicitly {@link WarEvent.WeaSetCustomCounter.verify|verify} messages.
         * @param message WeaSetCustomCounter message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarEvent.IWeaSetCustomCounter, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WeaSetCustomCounter message, length delimited. Does not implicitly {@link WarEvent.WeaSetCustomCounter.verify|verify} messages.
         * @param message WeaSetCustomCounter message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarEvent.IWeaSetCustomCounter, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WeaSetCustomCounter message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WeaSetCustomCounter
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarEvent.WeaSetCustomCounter;

        /**
         * Decodes a WeaSetCustomCounter message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WeaSetCustomCounter
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarEvent.WeaSetCustomCounter;

        /**
         * Verifies a WeaSetCustomCounter message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WeaSetCustomCounter message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WeaSetCustomCounter
         */
        public static fromObject(object: { [k: string]: any }): WarEvent.WeaSetCustomCounter;

        /**
         * Creates a plain object from a WeaSetCustomCounter message. Also converts values to other types if specified.
         * @param message WeaSetCustomCounter
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarEvent.WeaSetCustomCounter, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WeaSetCustomCounter to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WeaDeprecatedSetPlayerAliveState. */
    interface IWeaDeprecatedSetPlayerAliveState {

        /** WeaDeprecatedSetPlayerAliveState playerIndex */
        playerIndex?: (number|null);

        /** WeaDeprecatedSetPlayerAliveState playerAliveState */
        playerAliveState?: (number|null);
    }

    /** Represents a WeaDeprecatedSetPlayerAliveState. */
    class WeaDeprecatedSetPlayerAliveState implements IWeaDeprecatedSetPlayerAliveState {

        /**
         * Constructs a new WeaDeprecatedSetPlayerAliveState.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarEvent.IWeaDeprecatedSetPlayerAliveState);

        /** WeaDeprecatedSetPlayerAliveState playerIndex. */
        public playerIndex: number;

        /** WeaDeprecatedSetPlayerAliveState playerAliveState. */
        public playerAliveState: number;

        /**
         * Creates a new WeaDeprecatedSetPlayerAliveState instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WeaDeprecatedSetPlayerAliveState instance
         */
        public static create(properties?: WarEvent.IWeaDeprecatedSetPlayerAliveState): WarEvent.WeaDeprecatedSetPlayerAliveState;

        /**
         * Encodes the specified WeaDeprecatedSetPlayerAliveState message. Does not implicitly {@link WarEvent.WeaDeprecatedSetPlayerAliveState.verify|verify} messages.
         * @param message WeaDeprecatedSetPlayerAliveState message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarEvent.IWeaDeprecatedSetPlayerAliveState, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WeaDeprecatedSetPlayerAliveState message, length delimited. Does not implicitly {@link WarEvent.WeaDeprecatedSetPlayerAliveState.verify|verify} messages.
         * @param message WeaDeprecatedSetPlayerAliveState message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarEvent.IWeaDeprecatedSetPlayerAliveState, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WeaDeprecatedSetPlayerAliveState message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WeaDeprecatedSetPlayerAliveState
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarEvent.WeaDeprecatedSetPlayerAliveState;

        /**
         * Decodes a WeaDeprecatedSetPlayerAliveState message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WeaDeprecatedSetPlayerAliveState
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarEvent.WeaDeprecatedSetPlayerAliveState;

        /**
         * Verifies a WeaDeprecatedSetPlayerAliveState message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WeaDeprecatedSetPlayerAliveState message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WeaDeprecatedSetPlayerAliveState
         */
        public static fromObject(object: { [k: string]: any }): WarEvent.WeaDeprecatedSetPlayerAliveState;

        /**
         * Creates a plain object from a WeaDeprecatedSetPlayerAliveState message. Also converts values to other types if specified.
         * @param message WeaDeprecatedSetPlayerAliveState
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarEvent.WeaDeprecatedSetPlayerAliveState, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WeaDeprecatedSetPlayerAliveState to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WeaDeprecatedSetPlayerFund. */
    interface IWeaDeprecatedSetPlayerFund {

        /** WeaDeprecatedSetPlayerFund playerIndex */
        playerIndex?: (number|null);

        /** WeaDeprecatedSetPlayerFund multiplierPercentage */
        multiplierPercentage?: (number|null);

        /** WeaDeprecatedSetPlayerFund deltaValue */
        deltaValue?: (number|null);
    }

    /** Represents a WeaDeprecatedSetPlayerFund. */
    class WeaDeprecatedSetPlayerFund implements IWeaDeprecatedSetPlayerFund {

        /**
         * Constructs a new WeaDeprecatedSetPlayerFund.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarEvent.IWeaDeprecatedSetPlayerFund);

        /** WeaDeprecatedSetPlayerFund playerIndex. */
        public playerIndex: number;

        /** WeaDeprecatedSetPlayerFund multiplierPercentage. */
        public multiplierPercentage: number;

        /** WeaDeprecatedSetPlayerFund deltaValue. */
        public deltaValue: number;

        /**
         * Creates a new WeaDeprecatedSetPlayerFund instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WeaDeprecatedSetPlayerFund instance
         */
        public static create(properties?: WarEvent.IWeaDeprecatedSetPlayerFund): WarEvent.WeaDeprecatedSetPlayerFund;

        /**
         * Encodes the specified WeaDeprecatedSetPlayerFund message. Does not implicitly {@link WarEvent.WeaDeprecatedSetPlayerFund.verify|verify} messages.
         * @param message WeaDeprecatedSetPlayerFund message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarEvent.IWeaDeprecatedSetPlayerFund, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WeaDeprecatedSetPlayerFund message, length delimited. Does not implicitly {@link WarEvent.WeaDeprecatedSetPlayerFund.verify|verify} messages.
         * @param message WeaDeprecatedSetPlayerFund message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarEvent.IWeaDeprecatedSetPlayerFund, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WeaDeprecatedSetPlayerFund message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WeaDeprecatedSetPlayerFund
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarEvent.WeaDeprecatedSetPlayerFund;

        /**
         * Decodes a WeaDeprecatedSetPlayerFund message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WeaDeprecatedSetPlayerFund
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarEvent.WeaDeprecatedSetPlayerFund;

        /**
         * Verifies a WeaDeprecatedSetPlayerFund message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WeaDeprecatedSetPlayerFund message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WeaDeprecatedSetPlayerFund
         */
        public static fromObject(object: { [k: string]: any }): WarEvent.WeaDeprecatedSetPlayerFund;

        /**
         * Creates a plain object from a WeaDeprecatedSetPlayerFund message. Also converts values to other types if specified.
         * @param message WeaDeprecatedSetPlayerFund
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarEvent.WeaDeprecatedSetPlayerFund, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WeaDeprecatedSetPlayerFund to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WeaDeprecatedSetPlayerCoEnergy. */
    interface IWeaDeprecatedSetPlayerCoEnergy {

        /** WeaDeprecatedSetPlayerCoEnergy playerIndex */
        playerIndex?: (number|null);

        /** WeaDeprecatedSetPlayerCoEnergy multiplierPercentage */
        multiplierPercentage?: (number|null);

        /** WeaDeprecatedSetPlayerCoEnergy deltaPercentage */
        deltaPercentage?: (number|null);
    }

    /** Represents a WeaDeprecatedSetPlayerCoEnergy. */
    class WeaDeprecatedSetPlayerCoEnergy implements IWeaDeprecatedSetPlayerCoEnergy {

        /**
         * Constructs a new WeaDeprecatedSetPlayerCoEnergy.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarEvent.IWeaDeprecatedSetPlayerCoEnergy);

        /** WeaDeprecatedSetPlayerCoEnergy playerIndex. */
        public playerIndex: number;

        /** WeaDeprecatedSetPlayerCoEnergy multiplierPercentage. */
        public multiplierPercentage: number;

        /** WeaDeprecatedSetPlayerCoEnergy deltaPercentage. */
        public deltaPercentage: number;

        /**
         * Creates a new WeaDeprecatedSetPlayerCoEnergy instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WeaDeprecatedSetPlayerCoEnergy instance
         */
        public static create(properties?: WarEvent.IWeaDeprecatedSetPlayerCoEnergy): WarEvent.WeaDeprecatedSetPlayerCoEnergy;

        /**
         * Encodes the specified WeaDeprecatedSetPlayerCoEnergy message. Does not implicitly {@link WarEvent.WeaDeprecatedSetPlayerCoEnergy.verify|verify} messages.
         * @param message WeaDeprecatedSetPlayerCoEnergy message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarEvent.IWeaDeprecatedSetPlayerCoEnergy, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WeaDeprecatedSetPlayerCoEnergy message, length delimited. Does not implicitly {@link WarEvent.WeaDeprecatedSetPlayerCoEnergy.verify|verify} messages.
         * @param message WeaDeprecatedSetPlayerCoEnergy message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarEvent.IWeaDeprecatedSetPlayerCoEnergy, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WeaDeprecatedSetPlayerCoEnergy message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WeaDeprecatedSetPlayerCoEnergy
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarEvent.WeaDeprecatedSetPlayerCoEnergy;

        /**
         * Decodes a WeaDeprecatedSetPlayerCoEnergy message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WeaDeprecatedSetPlayerCoEnergy
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarEvent.WeaDeprecatedSetPlayerCoEnergy;

        /**
         * Verifies a WeaDeprecatedSetPlayerCoEnergy message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WeaDeprecatedSetPlayerCoEnergy message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WeaDeprecatedSetPlayerCoEnergy
         */
        public static fromObject(object: { [k: string]: any }): WarEvent.WeaDeprecatedSetPlayerCoEnergy;

        /**
         * Creates a plain object from a WeaDeprecatedSetPlayerCoEnergy message. Also converts values to other types if specified.
         * @param message WeaDeprecatedSetPlayerCoEnergy
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarEvent.WeaDeprecatedSetPlayerCoEnergy, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WeaDeprecatedSetPlayerCoEnergy to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WeaSetPlayerAliveState. */
    interface IWeaSetPlayerAliveState {

        /** WeaSetPlayerAliveState playerIndexArray */
        playerIndexArray?: (number[]|null);

        /** WeaSetPlayerAliveState playerAliveState */
        playerAliveState?: (number|null);
    }

    /** Represents a WeaSetPlayerAliveState. */
    class WeaSetPlayerAliveState implements IWeaSetPlayerAliveState {

        /**
         * Constructs a new WeaSetPlayerAliveState.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarEvent.IWeaSetPlayerAliveState);

        /** WeaSetPlayerAliveState playerIndexArray. */
        public playerIndexArray: number[];

        /** WeaSetPlayerAliveState playerAliveState. */
        public playerAliveState: number;

        /**
         * Creates a new WeaSetPlayerAliveState instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WeaSetPlayerAliveState instance
         */
        public static create(properties?: WarEvent.IWeaSetPlayerAliveState): WarEvent.WeaSetPlayerAliveState;

        /**
         * Encodes the specified WeaSetPlayerAliveState message. Does not implicitly {@link WarEvent.WeaSetPlayerAliveState.verify|verify} messages.
         * @param message WeaSetPlayerAliveState message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarEvent.IWeaSetPlayerAliveState, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WeaSetPlayerAliveState message, length delimited. Does not implicitly {@link WarEvent.WeaSetPlayerAliveState.verify|verify} messages.
         * @param message WeaSetPlayerAliveState message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarEvent.IWeaSetPlayerAliveState, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WeaSetPlayerAliveState message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WeaSetPlayerAliveState
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarEvent.WeaSetPlayerAliveState;

        /**
         * Decodes a WeaSetPlayerAliveState message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WeaSetPlayerAliveState
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarEvent.WeaSetPlayerAliveState;

        /**
         * Verifies a WeaSetPlayerAliveState message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WeaSetPlayerAliveState message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WeaSetPlayerAliveState
         */
        public static fromObject(object: { [k: string]: any }): WarEvent.WeaSetPlayerAliveState;

        /**
         * Creates a plain object from a WeaSetPlayerAliveState message. Also converts values to other types if specified.
         * @param message WeaSetPlayerAliveState
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarEvent.WeaSetPlayerAliveState, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WeaSetPlayerAliveState to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WeaSetPlayerState. */
    interface IWeaSetPlayerState {

        /** WeaSetPlayerState conPlayerIndexArray */
        conPlayerIndexArray?: (number[]|null);

        /** WeaSetPlayerState actFundMultiplierPercentage */
        actFundMultiplierPercentage?: (number|null);

        /** WeaSetPlayerState actFundDeltaValue */
        actFundDeltaValue?: (number|null);

        /** WeaSetPlayerState actCoEnergyMultiplierPct */
        actCoEnergyMultiplierPct?: (number|null);

        /** WeaSetPlayerState actCoEnergyDeltaPct */
        actCoEnergyDeltaPct?: (number|null);

        /** WeaSetPlayerState actAliveState */
        actAliveState?: (number|null);

        /** WeaSetPlayerState conAliveStateArray */
        conAliveStateArray?: (number[]|null);

        /** WeaSetPlayerState conFund */
        conFund?: (number|null);

        /** WeaSetPlayerState conFundComparator */
        conFundComparator?: (number|null);

        /** WeaSetPlayerState conEnergyPercentage */
        conEnergyPercentage?: (number|null);

        /** WeaSetPlayerState conEnergyPercentageComparator */
        conEnergyPercentageComparator?: (number|null);

        /** WeaSetPlayerState conCoUsingSkillTypeArray */
        conCoUsingSkillTypeArray?: (number[]|null);
    }

    /** Represents a WeaSetPlayerState. */
    class WeaSetPlayerState implements IWeaSetPlayerState {

        /**
         * Constructs a new WeaSetPlayerState.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarEvent.IWeaSetPlayerState);

        /** WeaSetPlayerState conPlayerIndexArray. */
        public conPlayerIndexArray: number[];

        /** WeaSetPlayerState actFundMultiplierPercentage. */
        public actFundMultiplierPercentage: number;

        /** WeaSetPlayerState actFundDeltaValue. */
        public actFundDeltaValue: number;

        /** WeaSetPlayerState actCoEnergyMultiplierPct. */
        public actCoEnergyMultiplierPct: number;

        /** WeaSetPlayerState actCoEnergyDeltaPct. */
        public actCoEnergyDeltaPct: number;

        /** WeaSetPlayerState actAliveState. */
        public actAliveState: number;

        /** WeaSetPlayerState conAliveStateArray. */
        public conAliveStateArray: number[];

        /** WeaSetPlayerState conFund. */
        public conFund: number;

        /** WeaSetPlayerState conFundComparator. */
        public conFundComparator: number;

        /** WeaSetPlayerState conEnergyPercentage. */
        public conEnergyPercentage: number;

        /** WeaSetPlayerState conEnergyPercentageComparator. */
        public conEnergyPercentageComparator: number;

        /** WeaSetPlayerState conCoUsingSkillTypeArray. */
        public conCoUsingSkillTypeArray: number[];

        /**
         * Creates a new WeaSetPlayerState instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WeaSetPlayerState instance
         */
        public static create(properties?: WarEvent.IWeaSetPlayerState): WarEvent.WeaSetPlayerState;

        /**
         * Encodes the specified WeaSetPlayerState message. Does not implicitly {@link WarEvent.WeaSetPlayerState.verify|verify} messages.
         * @param message WeaSetPlayerState message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarEvent.IWeaSetPlayerState, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WeaSetPlayerState message, length delimited. Does not implicitly {@link WarEvent.WeaSetPlayerState.verify|verify} messages.
         * @param message WeaSetPlayerState message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarEvent.IWeaSetPlayerState, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WeaSetPlayerState message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WeaSetPlayerState
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarEvent.WeaSetPlayerState;

        /**
         * Decodes a WeaSetPlayerState message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WeaSetPlayerState
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarEvent.WeaSetPlayerState;

        /**
         * Verifies a WeaSetPlayerState message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WeaSetPlayerState message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WeaSetPlayerState
         */
        public static fromObject(object: { [k: string]: any }): WarEvent.WeaSetPlayerState;

        /**
         * Creates a plain object from a WeaSetPlayerState message. Also converts values to other types if specified.
         * @param message WeaSetPlayerState
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarEvent.WeaSetPlayerState, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WeaSetPlayerState to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WeaSetPlayerCoEnergy. */
    interface IWeaSetPlayerCoEnergy {

        /** WeaSetPlayerCoEnergy playerIndexArray */
        playerIndexArray?: (number[]|null);

        /** WeaSetPlayerCoEnergy actCoEnergyMultiplierPct */
        actCoEnergyMultiplierPct?: (number|null);

        /** WeaSetPlayerCoEnergy actCoEnergyDeltaPct */
        actCoEnergyDeltaPct?: (number|null);
    }

    /** Represents a WeaSetPlayerCoEnergy. */
    class WeaSetPlayerCoEnergy implements IWeaSetPlayerCoEnergy {

        /**
         * Constructs a new WeaSetPlayerCoEnergy.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarEvent.IWeaSetPlayerCoEnergy);

        /** WeaSetPlayerCoEnergy playerIndexArray. */
        public playerIndexArray: number[];

        /** WeaSetPlayerCoEnergy actCoEnergyMultiplierPct. */
        public actCoEnergyMultiplierPct: number;

        /** WeaSetPlayerCoEnergy actCoEnergyDeltaPct. */
        public actCoEnergyDeltaPct: number;

        /**
         * Creates a new WeaSetPlayerCoEnergy instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WeaSetPlayerCoEnergy instance
         */
        public static create(properties?: WarEvent.IWeaSetPlayerCoEnergy): WarEvent.WeaSetPlayerCoEnergy;

        /**
         * Encodes the specified WeaSetPlayerCoEnergy message. Does not implicitly {@link WarEvent.WeaSetPlayerCoEnergy.verify|verify} messages.
         * @param message WeaSetPlayerCoEnergy message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarEvent.IWeaSetPlayerCoEnergy, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WeaSetPlayerCoEnergy message, length delimited. Does not implicitly {@link WarEvent.WeaSetPlayerCoEnergy.verify|verify} messages.
         * @param message WeaSetPlayerCoEnergy message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarEvent.IWeaSetPlayerCoEnergy, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WeaSetPlayerCoEnergy message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WeaSetPlayerCoEnergy
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarEvent.WeaSetPlayerCoEnergy;

        /**
         * Decodes a WeaSetPlayerCoEnergy message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WeaSetPlayerCoEnergy
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarEvent.WeaSetPlayerCoEnergy;

        /**
         * Verifies a WeaSetPlayerCoEnergy message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WeaSetPlayerCoEnergy message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WeaSetPlayerCoEnergy
         */
        public static fromObject(object: { [k: string]: any }): WarEvent.WeaSetPlayerCoEnergy;

        /**
         * Creates a plain object from a WeaSetPlayerCoEnergy message. Also converts values to other types if specified.
         * @param message WeaSetPlayerCoEnergy
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarEvent.WeaSetPlayerCoEnergy, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WeaSetPlayerCoEnergy to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WeaSetUnitState. */
    interface IWeaSetUnitState {

        /** WeaSetUnitState conPlayerIndexArray */
        conPlayerIndexArray?: (number[]|null);

        /** WeaSetUnitState conTeamIndexArray */
        conTeamIndexArray?: (number[]|null);

        /** WeaSetUnitState conUnitTypeArray */
        conUnitTypeArray?: (number[]|null);

        /** WeaSetUnitState conLocationIdArray */
        conLocationIdArray?: (number[]|null);

        /** WeaSetUnitState conGridIndexArray */
        conGridIndexArray?: (Structure.IGridIndex[]|null);

        /** WeaSetUnitState conActionStateArray */
        conActionStateArray?: (number[]|null);

        /** WeaSetUnitState conHasLoadedCo */
        conHasLoadedCo?: (boolean|null);

        /** WeaSetUnitState conHp */
        conHp?: (number|null);

        /** WeaSetUnitState conHpComparator */
        conHpComparator?: (number|null);

        /** WeaSetUnitState conFuelPct */
        conFuelPct?: (number|null);

        /** WeaSetUnitState conFuelPctComparator */
        conFuelPctComparator?: (number|null);

        /** WeaSetUnitState conPriAmmoPct */
        conPriAmmoPct?: (number|null);

        /** WeaSetUnitState conPriAmmoPctComparator */
        conPriAmmoPctComparator?: (number|null);

        /** WeaSetUnitState conPromotion */
        conPromotion?: (number|null);

        /** WeaSetUnitState conPromotionComparator */
        conPromotionComparator?: (number|null);

        /** WeaSetUnitState actHpMultiplierPercentage */
        actHpMultiplierPercentage?: (number|null);

        /** WeaSetUnitState actHpDeltaValue */
        actHpDeltaValue?: (number|null);

        /** WeaSetUnitState actFuelMultiplierPercentage */
        actFuelMultiplierPercentage?: (number|null);

        /** WeaSetUnitState actFuelDeltaValue */
        actFuelDeltaValue?: (number|null);

        /** WeaSetUnitState actPriAmmoMultiplierPercentage */
        actPriAmmoMultiplierPercentage?: (number|null);

        /** WeaSetUnitState actPriAmmoDeltaValue */
        actPriAmmoDeltaValue?: (number|null);

        /** WeaSetUnitState actPromotionMultiplierPercentage */
        actPromotionMultiplierPercentage?: (number|null);

        /** WeaSetUnitState actPromotionDeltaValue */
        actPromotionDeltaValue?: (number|null);

        /** WeaSetUnitState actDestroyUnit */
        actDestroyUnit?: (boolean|null);

        /** WeaSetUnitState actActionState */
        actActionState?: (number|null);

        /** WeaSetUnitState actHasLoadedCo */
        actHasLoadedCo?: (boolean|null);
    }

    /** Represents a WeaSetUnitState. */
    class WeaSetUnitState implements IWeaSetUnitState {

        /**
         * Constructs a new WeaSetUnitState.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarEvent.IWeaSetUnitState);

        /** WeaSetUnitState conPlayerIndexArray. */
        public conPlayerIndexArray: number[];

        /** WeaSetUnitState conTeamIndexArray. */
        public conTeamIndexArray: number[];

        /** WeaSetUnitState conUnitTypeArray. */
        public conUnitTypeArray: number[];

        /** WeaSetUnitState conLocationIdArray. */
        public conLocationIdArray: number[];

        /** WeaSetUnitState conGridIndexArray. */
        public conGridIndexArray: Structure.IGridIndex[];

        /** WeaSetUnitState conActionStateArray. */
        public conActionStateArray: number[];

        /** WeaSetUnitState conHasLoadedCo. */
        public conHasLoadedCo: boolean;

        /** WeaSetUnitState conHp. */
        public conHp: number;

        /** WeaSetUnitState conHpComparator. */
        public conHpComparator: number;

        /** WeaSetUnitState conFuelPct. */
        public conFuelPct: number;

        /** WeaSetUnitState conFuelPctComparator. */
        public conFuelPctComparator: number;

        /** WeaSetUnitState conPriAmmoPct. */
        public conPriAmmoPct: number;

        /** WeaSetUnitState conPriAmmoPctComparator. */
        public conPriAmmoPctComparator: number;

        /** WeaSetUnitState conPromotion. */
        public conPromotion: number;

        /** WeaSetUnitState conPromotionComparator. */
        public conPromotionComparator: number;

        /** WeaSetUnitState actHpMultiplierPercentage. */
        public actHpMultiplierPercentage: number;

        /** WeaSetUnitState actHpDeltaValue. */
        public actHpDeltaValue: number;

        /** WeaSetUnitState actFuelMultiplierPercentage. */
        public actFuelMultiplierPercentage: number;

        /** WeaSetUnitState actFuelDeltaValue. */
        public actFuelDeltaValue: number;

        /** WeaSetUnitState actPriAmmoMultiplierPercentage. */
        public actPriAmmoMultiplierPercentage: number;

        /** WeaSetUnitState actPriAmmoDeltaValue. */
        public actPriAmmoDeltaValue: number;

        /** WeaSetUnitState actPromotionMultiplierPercentage. */
        public actPromotionMultiplierPercentage: number;

        /** WeaSetUnitState actPromotionDeltaValue. */
        public actPromotionDeltaValue: number;

        /** WeaSetUnitState actDestroyUnit. */
        public actDestroyUnit: boolean;

        /** WeaSetUnitState actActionState. */
        public actActionState: number;

        /** WeaSetUnitState actHasLoadedCo. */
        public actHasLoadedCo: boolean;

        /**
         * Creates a new WeaSetUnitState instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WeaSetUnitState instance
         */
        public static create(properties?: WarEvent.IWeaSetUnitState): WarEvent.WeaSetUnitState;

        /**
         * Encodes the specified WeaSetUnitState message. Does not implicitly {@link WarEvent.WeaSetUnitState.verify|verify} messages.
         * @param message WeaSetUnitState message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarEvent.IWeaSetUnitState, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WeaSetUnitState message, length delimited. Does not implicitly {@link WarEvent.WeaSetUnitState.verify|verify} messages.
         * @param message WeaSetUnitState message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarEvent.IWeaSetUnitState, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WeaSetUnitState message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WeaSetUnitState
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarEvent.WeaSetUnitState;

        /**
         * Decodes a WeaSetUnitState message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WeaSetUnitState
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarEvent.WeaSetUnitState;

        /**
         * Verifies a WeaSetUnitState message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WeaSetUnitState message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WeaSetUnitState
         */
        public static fromObject(object: { [k: string]: any }): WarEvent.WeaSetUnitState;

        /**
         * Creates a plain object from a WeaSetUnitState message. Also converts values to other types if specified.
         * @param message WeaSetUnitState
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarEvent.WeaSetUnitState, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WeaSetUnitState to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WeaSetTileType. */
    interface IWeaSetTileType {

        /** WeaSetTileType conLocationIdArray */
        conLocationIdArray?: (number[]|null);

        /** WeaSetTileType conGridIndexArray */
        conGridIndexArray?: (Structure.IGridIndex[]|null);

        /** WeaSetTileType conIsHighlighted */
        conIsHighlighted?: (boolean|null);

        /** WeaSetTileType actTileData */
        actTileData?: (WarSerialization.ISerialTile|null);

        /** WeaSetTileType actDestroyUnit */
        actDestroyUnit?: (boolean|null);

        /** WeaSetTileType actIsModifyTileBase */
        actIsModifyTileBase?: (boolean|null);

        /** WeaSetTileType actIsModifyTileDecorator */
        actIsModifyTileDecorator?: (boolean|null);

        /** WeaSetTileType actIsModifyTileObject */
        actIsModifyTileObject?: (boolean|null);
    }

    /** Represents a WeaSetTileType. */
    class WeaSetTileType implements IWeaSetTileType {

        /**
         * Constructs a new WeaSetTileType.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarEvent.IWeaSetTileType);

        /** WeaSetTileType conLocationIdArray. */
        public conLocationIdArray: number[];

        /** WeaSetTileType conGridIndexArray. */
        public conGridIndexArray: Structure.IGridIndex[];

        /** WeaSetTileType conIsHighlighted. */
        public conIsHighlighted: boolean;

        /** WeaSetTileType actTileData. */
        public actTileData?: (WarSerialization.ISerialTile|null);

        /** WeaSetTileType actDestroyUnit. */
        public actDestroyUnit: boolean;

        /** WeaSetTileType actIsModifyTileBase. */
        public actIsModifyTileBase: boolean;

        /** WeaSetTileType actIsModifyTileDecorator. */
        public actIsModifyTileDecorator: boolean;

        /** WeaSetTileType actIsModifyTileObject. */
        public actIsModifyTileObject: boolean;

        /**
         * Creates a new WeaSetTileType instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WeaSetTileType instance
         */
        public static create(properties?: WarEvent.IWeaSetTileType): WarEvent.WeaSetTileType;

        /**
         * Encodes the specified WeaSetTileType message. Does not implicitly {@link WarEvent.WeaSetTileType.verify|verify} messages.
         * @param message WeaSetTileType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarEvent.IWeaSetTileType, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WeaSetTileType message, length delimited. Does not implicitly {@link WarEvent.WeaSetTileType.verify|verify} messages.
         * @param message WeaSetTileType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarEvent.IWeaSetTileType, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WeaSetTileType message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WeaSetTileType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarEvent.WeaSetTileType;

        /**
         * Decodes a WeaSetTileType message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WeaSetTileType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarEvent.WeaSetTileType;

        /**
         * Verifies a WeaSetTileType message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WeaSetTileType message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WeaSetTileType
         */
        public static fromObject(object: { [k: string]: any }): WarEvent.WeaSetTileType;

        /**
         * Creates a plain object from a WeaSetTileType message. Also converts values to other types if specified.
         * @param message WeaSetTileType
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarEvent.WeaSetTileType, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WeaSetTileType to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WeaSetTileState. */
    interface IWeaSetTileState {

        /** WeaSetTileState conLocationIdArray */
        conLocationIdArray?: (number[]|null);

        /** WeaSetTileState conGridIndexArray */
        conGridIndexArray?: (Structure.IGridIndex[]|null);

        /** WeaSetTileState conIsHighlighted */
        conIsHighlighted?: (boolean|null);

        /** WeaSetTileState actHpMultiplierPercentage */
        actHpMultiplierPercentage?: (number|null);

        /** WeaSetTileState actHpDeltaValue */
        actHpDeltaValue?: (number|null);

        /** WeaSetTileState actBuildPointMultiplierPercentage */
        actBuildPointMultiplierPercentage?: (number|null);

        /** WeaSetTileState actBuildPointDeltaValue */
        actBuildPointDeltaValue?: (number|null);

        /** WeaSetTileState actCapturePointMultiplierPercentage */
        actCapturePointMultiplierPercentage?: (number|null);

        /** WeaSetTileState actCapturePointDeltaValue */
        actCapturePointDeltaValue?: (number|null);

        /** WeaSetTileState actAddLocationIdArray */
        actAddLocationIdArray?: (number[]|null);

        /** WeaSetTileState actDeleteLocationIdArray */
        actDeleteLocationIdArray?: (number[]|null);

        /** WeaSetTileState actIsHighlighted */
        actIsHighlighted?: (boolean|null);
    }

    /** Represents a WeaSetTileState. */
    class WeaSetTileState implements IWeaSetTileState {

        /**
         * Constructs a new WeaSetTileState.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarEvent.IWeaSetTileState);

        /** WeaSetTileState conLocationIdArray. */
        public conLocationIdArray: number[];

        /** WeaSetTileState conGridIndexArray. */
        public conGridIndexArray: Structure.IGridIndex[];

        /** WeaSetTileState conIsHighlighted. */
        public conIsHighlighted: boolean;

        /** WeaSetTileState actHpMultiplierPercentage. */
        public actHpMultiplierPercentage: number;

        /** WeaSetTileState actHpDeltaValue. */
        public actHpDeltaValue: number;

        /** WeaSetTileState actBuildPointMultiplierPercentage. */
        public actBuildPointMultiplierPercentage: number;

        /** WeaSetTileState actBuildPointDeltaValue. */
        public actBuildPointDeltaValue: number;

        /** WeaSetTileState actCapturePointMultiplierPercentage. */
        public actCapturePointMultiplierPercentage: number;

        /** WeaSetTileState actCapturePointDeltaValue. */
        public actCapturePointDeltaValue: number;

        /** WeaSetTileState actAddLocationIdArray. */
        public actAddLocationIdArray: number[];

        /** WeaSetTileState actDeleteLocationIdArray. */
        public actDeleteLocationIdArray: number[];

        /** WeaSetTileState actIsHighlighted. */
        public actIsHighlighted: boolean;

        /**
         * Creates a new WeaSetTileState instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WeaSetTileState instance
         */
        public static create(properties?: WarEvent.IWeaSetTileState): WarEvent.WeaSetTileState;

        /**
         * Encodes the specified WeaSetTileState message. Does not implicitly {@link WarEvent.WeaSetTileState.verify|verify} messages.
         * @param message WeaSetTileState message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarEvent.IWeaSetTileState, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WeaSetTileState message, length delimited. Does not implicitly {@link WarEvent.WeaSetTileState.verify|verify} messages.
         * @param message WeaSetTileState message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarEvent.IWeaSetTileState, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WeaSetTileState message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WeaSetTileState
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarEvent.WeaSetTileState;

        /**
         * Decodes a WeaSetTileState message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WeaSetTileState
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarEvent.WeaSetTileState;

        /**
         * Verifies a WeaSetTileState message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WeaSetTileState message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WeaSetTileState
         */
        public static fromObject(object: { [k: string]: any }): WarEvent.WeaSetTileState;

        /**
         * Creates a plain object from a WeaSetTileState message. Also converts values to other types if specified.
         * @param message WeaSetTileState
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarEvent.WeaSetTileState, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WeaSetTileState to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WarEventAction. */
    interface IWarEventAction {

        /** WarEventAction WeaCommonData */
        WeaCommonData?: (WarEvent.IWeaCommonData|null);

        /** WarEventAction WeaAddUnit */
        WeaAddUnit?: (WarEvent.IWeaAddUnit|null);

        /** WarEventAction WeaDeprecatedSetPlayerAliveState */
        WeaDeprecatedSetPlayerAliveState?: (WarEvent.IWeaDeprecatedSetPlayerAliveState|null);

        /** WarEventAction WeaDialogue */
        WeaDialogue?: (WarEvent.IWeaDialogue|null);

        /** WarEventAction WeaSetViewpoint */
        WeaSetViewpoint?: (WarEvent.IWeaSetViewpoint|null);

        /** WarEventAction WeaSetWeather */
        WeaSetWeather?: (WarEvent.IWeaSetWeather|null);

        /** WarEventAction WeaPlayBgm */
        WeaPlayBgm?: (WarEvent.IWeaPlayBgm|null);

        /** WarEventAction WeaSimpleDialogue */
        WeaSimpleDialogue?: (WarEvent.IWeaSimpleDialogue|null);

        /** WarEventAction WeaDeprecatedSetPlayerFund */
        WeaDeprecatedSetPlayerFund?: (WarEvent.IWeaDeprecatedSetPlayerFund|null);

        /** WarEventAction WeaDeprecatedSetPlayerCoEnergy */
        WeaDeprecatedSetPlayerCoEnergy?: (WarEvent.IWeaDeprecatedSetPlayerCoEnergy|null);

        /** WarEventAction WeaSetForceFogCode */
        WeaSetForceFogCode?: (WarEvent.IWeaSetForceFogCode|null);

        /** WarEventAction WeaSetCustomCounter */
        WeaSetCustomCounter?: (WarEvent.IWeaSetCustomCounter|null);

        /** WarEventAction WeaSetPlayerAliveState */
        WeaSetPlayerAliveState?: (WarEvent.IWeaSetPlayerAliveState|null);

        /** WarEventAction WeaSetPlayerState */
        WeaSetPlayerState?: (WarEvent.IWeaSetPlayerState|null);

        /** WarEventAction WeaSetPlayerCoEnergy */
        WeaSetPlayerCoEnergy?: (WarEvent.IWeaSetPlayerCoEnergy|null);

        /** WarEventAction WeaSetUnitState */
        WeaSetUnitState?: (WarEvent.IWeaSetUnitState|null);

        /** WarEventAction WeaSetTileType */
        WeaSetTileType?: (WarEvent.IWeaSetTileType|null);

        /** WarEventAction WeaSetTileState */
        WeaSetTileState?: (WarEvent.IWeaSetTileState|null);
    }

    /** Represents a WarEventAction. */
    class WarEventAction implements IWarEventAction {

        /**
         * Constructs a new WarEventAction.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarEvent.IWarEventAction);

        /** WarEventAction WeaCommonData. */
        public WeaCommonData?: (WarEvent.IWeaCommonData|null);

        /** WarEventAction WeaAddUnit. */
        public WeaAddUnit?: (WarEvent.IWeaAddUnit|null);

        /** WarEventAction WeaDeprecatedSetPlayerAliveState. */
        public WeaDeprecatedSetPlayerAliveState?: (WarEvent.IWeaDeprecatedSetPlayerAliveState|null);

        /** WarEventAction WeaDialogue. */
        public WeaDialogue?: (WarEvent.IWeaDialogue|null);

        /** WarEventAction WeaSetViewpoint. */
        public WeaSetViewpoint?: (WarEvent.IWeaSetViewpoint|null);

        /** WarEventAction WeaSetWeather. */
        public WeaSetWeather?: (WarEvent.IWeaSetWeather|null);

        /** WarEventAction WeaPlayBgm. */
        public WeaPlayBgm?: (WarEvent.IWeaPlayBgm|null);

        /** WarEventAction WeaSimpleDialogue. */
        public WeaSimpleDialogue?: (WarEvent.IWeaSimpleDialogue|null);

        /** WarEventAction WeaDeprecatedSetPlayerFund. */
        public WeaDeprecatedSetPlayerFund?: (WarEvent.IWeaDeprecatedSetPlayerFund|null);

        /** WarEventAction WeaDeprecatedSetPlayerCoEnergy. */
        public WeaDeprecatedSetPlayerCoEnergy?: (WarEvent.IWeaDeprecatedSetPlayerCoEnergy|null);

        /** WarEventAction WeaSetForceFogCode. */
        public WeaSetForceFogCode?: (WarEvent.IWeaSetForceFogCode|null);

        /** WarEventAction WeaSetCustomCounter. */
        public WeaSetCustomCounter?: (WarEvent.IWeaSetCustomCounter|null);

        /** WarEventAction WeaSetPlayerAliveState. */
        public WeaSetPlayerAliveState?: (WarEvent.IWeaSetPlayerAliveState|null);

        /** WarEventAction WeaSetPlayerState. */
        public WeaSetPlayerState?: (WarEvent.IWeaSetPlayerState|null);

        /** WarEventAction WeaSetPlayerCoEnergy. */
        public WeaSetPlayerCoEnergy?: (WarEvent.IWeaSetPlayerCoEnergy|null);

        /** WarEventAction WeaSetUnitState. */
        public WeaSetUnitState?: (WarEvent.IWeaSetUnitState|null);

        /** WarEventAction WeaSetTileType. */
        public WeaSetTileType?: (WarEvent.IWeaSetTileType|null);

        /** WarEventAction WeaSetTileState. */
        public WeaSetTileState?: (WarEvent.IWeaSetTileState|null);

        /**
         * Creates a new WarEventAction instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WarEventAction instance
         */
        public static create(properties?: WarEvent.IWarEventAction): WarEvent.WarEventAction;

        /**
         * Encodes the specified WarEventAction message. Does not implicitly {@link WarEvent.WarEventAction.verify|verify} messages.
         * @param message WarEventAction message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarEvent.IWarEventAction, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WarEventAction message, length delimited. Does not implicitly {@link WarEvent.WarEventAction.verify|verify} messages.
         * @param message WarEventAction message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarEvent.IWarEventAction, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarEventAction message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarEventAction
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarEvent.WarEventAction;

        /**
         * Decodes a WarEventAction message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WarEventAction
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarEvent.WarEventAction;

        /**
         * Verifies a WarEventAction message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WarEventAction message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WarEventAction
         */
        public static fromObject(object: { [k: string]: any }): WarEvent.WarEventAction;

        /**
         * Creates a plain object from a WarEventAction message. Also converts values to other types if specified.
         * @param message WarEventAction
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarEvent.WarEventAction, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WarEventAction to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WarEvent. */
    interface IWarEvent {

        /** WarEvent eventId */
        eventId?: (number|null);

        /** WarEvent eventNameArray */
        eventNameArray?: (Structure.ILanguageText[]|null);

        /** WarEvent maxCallCountInPlayerTurn */
        maxCallCountInPlayerTurn?: (number|null);

        /** WarEvent maxCallCountTotal */
        maxCallCountTotal?: (number|null);

        /** WarEvent conditionNodeId */
        conditionNodeId?: (number|null);

        /** WarEvent actionIdArray */
        actionIdArray?: (number[]|null);
    }

    /** Represents a WarEvent. */
    class WarEvent implements IWarEvent {

        /**
         * Constructs a new WarEvent.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarEvent.IWarEvent);

        /** WarEvent eventId. */
        public eventId: number;

        /** WarEvent eventNameArray. */
        public eventNameArray: Structure.ILanguageText[];

        /** WarEvent maxCallCountInPlayerTurn. */
        public maxCallCountInPlayerTurn: number;

        /** WarEvent maxCallCountTotal. */
        public maxCallCountTotal: number;

        /** WarEvent conditionNodeId. */
        public conditionNodeId: number;

        /** WarEvent actionIdArray. */
        public actionIdArray: number[];

        /**
         * Creates a new WarEvent instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WarEvent instance
         */
        public static create(properties?: WarEvent.IWarEvent): WarEvent.WarEvent;

        /**
         * Encodes the specified WarEvent message. Does not implicitly {@link WarEvent.WarEvent.verify|verify} messages.
         * @param message WarEvent message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarEvent.IWarEvent, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WarEvent message, length delimited. Does not implicitly {@link WarEvent.WarEvent.verify|verify} messages.
         * @param message WarEvent message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarEvent.IWarEvent, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarEvent message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarEvent
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarEvent.WarEvent;

        /**
         * Decodes a WarEvent message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WarEvent
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarEvent.WarEvent;

        /**
         * Verifies a WarEvent message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WarEvent message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WarEvent
         */
        public static fromObject(object: { [k: string]: any }): WarEvent.WarEvent;

        /**
         * Creates a plain object from a WarEvent message. Also converts values to other types if specified.
         * @param message WarEvent
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarEvent.WarEvent, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WarEvent to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Properties of a WarRule. */
export declare interface IWarRule {
}

/** Represents a WarRule. */
export declare class WarRule implements IWarRule {

    /**
     * Constructs a new WarRule.
     * @param [properties] Properties to set
     */
    constructor(properties?: IWarRule);

    /**
     * Creates a new WarRule instance using the specified properties.
     * @param [properties] Properties to set
     * @returns WarRule instance
     */
    public static create(properties?: IWarRule): WarRule;

    /**
     * Encodes the specified WarRule message. Does not implicitly {@link WarRule.verify|verify} messages.
     * @param message WarRule message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IWarRule, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Encodes the specified WarRule message, length delimited. Does not implicitly {@link WarRule.verify|verify} messages.
     * @param message WarRule message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IWarRule, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Decodes a WarRule message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns WarRule
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarRule;

    /**
     * Decodes a WarRule message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns WarRule
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarRule;

    /**
     * Verifies a WarRule message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a WarRule message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns WarRule
     */
    public static fromObject(object: { [k: string]: any }): WarRule;

    /**
     * Creates a plain object from a WarRule message. Also converts values to other types if specified.
     * @param message WarRule
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: WarRule, options?: protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this WarRule to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export declare namespace WarRule {

    /** Properties of a DataForPlayerRule. */
    interface IDataForPlayerRule {

        /** DataForPlayerRule playerIndex */
        playerIndex?: (number|null);

        /** DataForPlayerRule teamIndex */
        teamIndex?: (number|null);

        /** DataForPlayerRule initialFund */
        initialFund?: (number|null);

        /** DataForPlayerRule incomeMultiplier */
        incomeMultiplier?: (number|null);

        /** DataForPlayerRule energyAddPctOnLoadCo */
        energyAddPctOnLoadCo?: (number|null);

        /** DataForPlayerRule energyGrowthMultiplier */
        energyGrowthMultiplier?: (number|null);

        /** DataForPlayerRule moveRangeModifier */
        moveRangeModifier?: (number|null);

        /** DataForPlayerRule attackPowerModifier */
        attackPowerModifier?: (number|null);

        /** DataForPlayerRule visionRangeModifier */
        visionRangeModifier?: (number|null);

        /** DataForPlayerRule luckLowerLimit */
        luckLowerLimit?: (number|null);

        /** DataForPlayerRule luckUpperLimit */
        luckUpperLimit?: (number|null);

        /** DataForPlayerRule bannedCoIdArray */
        bannedCoIdArray?: (number[]|null);

        /** DataForPlayerRule fixedCoIdInSrw */
        fixedCoIdInSrw?: (number|null);

        /** DataForPlayerRule fixedCoIdInCcw */
        fixedCoIdInCcw?: (number|null);
    }

    /** Represents a DataForPlayerRule. */
    class DataForPlayerRule implements IDataForPlayerRule {

        /**
         * Constructs a new DataForPlayerRule.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarRule.IDataForPlayerRule);

        /** DataForPlayerRule playerIndex. */
        public playerIndex: number;

        /** DataForPlayerRule teamIndex. */
        public teamIndex: number;

        /** DataForPlayerRule initialFund. */
        public initialFund: number;

        /** DataForPlayerRule incomeMultiplier. */
        public incomeMultiplier: number;

        /** DataForPlayerRule energyAddPctOnLoadCo. */
        public energyAddPctOnLoadCo: number;

        /** DataForPlayerRule energyGrowthMultiplier. */
        public energyGrowthMultiplier: number;

        /** DataForPlayerRule moveRangeModifier. */
        public moveRangeModifier: number;

        /** DataForPlayerRule attackPowerModifier. */
        public attackPowerModifier: number;

        /** DataForPlayerRule visionRangeModifier. */
        public visionRangeModifier: number;

        /** DataForPlayerRule luckLowerLimit. */
        public luckLowerLimit: number;

        /** DataForPlayerRule luckUpperLimit. */
        public luckUpperLimit: number;

        /** DataForPlayerRule bannedCoIdArray. */
        public bannedCoIdArray: number[];

        /** DataForPlayerRule fixedCoIdInSrw. */
        public fixedCoIdInSrw: number;

        /** DataForPlayerRule fixedCoIdInCcw. */
        public fixedCoIdInCcw: number;

        /**
         * Creates a new DataForPlayerRule instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DataForPlayerRule instance
         */
        public static create(properties?: WarRule.IDataForPlayerRule): WarRule.DataForPlayerRule;

        /**
         * Encodes the specified DataForPlayerRule message. Does not implicitly {@link WarRule.DataForPlayerRule.verify|verify} messages.
         * @param message DataForPlayerRule message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarRule.IDataForPlayerRule, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified DataForPlayerRule message, length delimited. Does not implicitly {@link WarRule.DataForPlayerRule.verify|verify} messages.
         * @param message DataForPlayerRule message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarRule.IDataForPlayerRule, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a DataForPlayerRule message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DataForPlayerRule
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarRule.DataForPlayerRule;

        /**
         * Decodes a DataForPlayerRule message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DataForPlayerRule
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarRule.DataForPlayerRule;

        /**
         * Verifies a DataForPlayerRule message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DataForPlayerRule message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DataForPlayerRule
         */
        public static fromObject(object: { [k: string]: any }): WarRule.DataForPlayerRule;

        /**
         * Creates a plain object from a DataForPlayerRule message. Also converts values to other types if specified.
         * @param message DataForPlayerRule
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarRule.DataForPlayerRule, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DataForPlayerRule to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RuleAvailability. */
    interface IRuleAvailability {

        /** RuleAvailability canMcw */
        canMcw?: (boolean|null);

        /** RuleAvailability canScw */
        canScw?: (boolean|null);

        /** RuleAvailability canMrw */
        canMrw?: (boolean|null);

        /** RuleAvailability canSrw */
        canSrw?: (boolean|null);

        /** RuleAvailability canCcw */
        canCcw?: (boolean|null);
    }

    /** Represents a RuleAvailability. */
    class RuleAvailability implements IRuleAvailability {

        /**
         * Constructs a new RuleAvailability.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarRule.IRuleAvailability);

        /** RuleAvailability canMcw. */
        public canMcw: boolean;

        /** RuleAvailability canScw. */
        public canScw: boolean;

        /** RuleAvailability canMrw. */
        public canMrw: boolean;

        /** RuleAvailability canSrw. */
        public canSrw: boolean;

        /** RuleAvailability canCcw. */
        public canCcw: boolean;

        /**
         * Creates a new RuleAvailability instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RuleAvailability instance
         */
        public static create(properties?: WarRule.IRuleAvailability): WarRule.RuleAvailability;

        /**
         * Encodes the specified RuleAvailability message. Does not implicitly {@link WarRule.RuleAvailability.verify|verify} messages.
         * @param message RuleAvailability message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarRule.IRuleAvailability, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified RuleAvailability message, length delimited. Does not implicitly {@link WarRule.RuleAvailability.verify|verify} messages.
         * @param message RuleAvailability message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarRule.IRuleAvailability, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a RuleAvailability message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RuleAvailability
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarRule.RuleAvailability;

        /**
         * Decodes a RuleAvailability message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RuleAvailability
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarRule.RuleAvailability;

        /**
         * Verifies a RuleAvailability message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RuleAvailability message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RuleAvailability
         */
        public static fromObject(object: { [k: string]: any }): WarRule.RuleAvailability;

        /**
         * Creates a plain object from a RuleAvailability message. Also converts values to other types if specified.
         * @param message RuleAvailability
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarRule.RuleAvailability, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RuleAvailability to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RuleForPlayers. */
    interface IRuleForPlayers {

        /** RuleForPlayers playerRuleDataArray */
        playerRuleDataArray?: (WarRule.IDataForPlayerRule[]|null);
    }

    /** Represents a RuleForPlayers. */
    class RuleForPlayers implements IRuleForPlayers {

        /**
         * Constructs a new RuleForPlayers.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarRule.IRuleForPlayers);

        /** RuleForPlayers playerRuleDataArray. */
        public playerRuleDataArray: WarRule.IDataForPlayerRule[];

        /**
         * Creates a new RuleForPlayers instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RuleForPlayers instance
         */
        public static create(properties?: WarRule.IRuleForPlayers): WarRule.RuleForPlayers;

        /**
         * Encodes the specified RuleForPlayers message. Does not implicitly {@link WarRule.RuleForPlayers.verify|verify} messages.
         * @param message RuleForPlayers message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarRule.IRuleForPlayers, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified RuleForPlayers message, length delimited. Does not implicitly {@link WarRule.RuleForPlayers.verify|verify} messages.
         * @param message RuleForPlayers message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarRule.IRuleForPlayers, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a RuleForPlayers message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RuleForPlayers
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarRule.RuleForPlayers;

        /**
         * Decodes a RuleForPlayers message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RuleForPlayers
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarRule.RuleForPlayers;

        /**
         * Verifies a RuleForPlayers message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RuleForPlayers message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RuleForPlayers
         */
        public static fromObject(object: { [k: string]: any }): WarRule.RuleForPlayers;

        /**
         * Creates a plain object from a RuleForPlayers message. Also converts values to other types if specified.
         * @param message RuleForPlayers
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarRule.RuleForPlayers, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RuleForPlayers to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RuleForGlobalParams. */
    interface IRuleForGlobalParams {

        /** RuleForGlobalParams hasFogByDefault */
        hasFogByDefault?: (boolean|null);

        /** RuleForGlobalParams defaultWeatherType */
        defaultWeatherType?: (number|null);
    }

    /** Represents a RuleForGlobalParams. */
    class RuleForGlobalParams implements IRuleForGlobalParams {

        /**
         * Constructs a new RuleForGlobalParams.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarRule.IRuleForGlobalParams);

        /** RuleForGlobalParams hasFogByDefault. */
        public hasFogByDefault: boolean;

        /** RuleForGlobalParams defaultWeatherType. */
        public defaultWeatherType: number;

        /**
         * Creates a new RuleForGlobalParams instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RuleForGlobalParams instance
         */
        public static create(properties?: WarRule.IRuleForGlobalParams): WarRule.RuleForGlobalParams;

        /**
         * Encodes the specified RuleForGlobalParams message. Does not implicitly {@link WarRule.RuleForGlobalParams.verify|verify} messages.
         * @param message RuleForGlobalParams message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarRule.IRuleForGlobalParams, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified RuleForGlobalParams message, length delimited. Does not implicitly {@link WarRule.RuleForGlobalParams.verify|verify} messages.
         * @param message RuleForGlobalParams message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarRule.IRuleForGlobalParams, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a RuleForGlobalParams message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RuleForGlobalParams
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarRule.RuleForGlobalParams;

        /**
         * Decodes a RuleForGlobalParams message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RuleForGlobalParams
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarRule.RuleForGlobalParams;

        /**
         * Verifies a RuleForGlobalParams message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RuleForGlobalParams message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RuleForGlobalParams
         */
        public static fromObject(object: { [k: string]: any }): WarRule.RuleForGlobalParams;

        /**
         * Creates a plain object from a RuleForGlobalParams message. Also converts values to other types if specified.
         * @param message RuleForGlobalParams
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarRule.RuleForGlobalParams, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RuleForGlobalParams to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WarRule. */
    interface IWarRule {

        /** WarRule ruleId */
        ruleId?: (number|null);

        /** WarRule ruleNameArray */
        ruleNameArray?: (Structure.ILanguageText[]|null);

        /** WarRule ruleAvailability */
        ruleAvailability?: (WarRule.IRuleAvailability|null);

        /** WarRule ruleForGlobalParams */
        ruleForGlobalParams?: (WarRule.IRuleForGlobalParams|null);

        /** WarRule ruleForPlayers */
        ruleForPlayers?: (WarRule.IRuleForPlayers|null);

        /** WarRule warEventIdArray */
        warEventIdArray?: (number[]|null);
    }

    /** Represents a WarRule. */
    class WarRule implements IWarRule {

        /**
         * Constructs a new WarRule.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarRule.IWarRule);

        /** WarRule ruleId. */
        public ruleId: number;

        /** WarRule ruleNameArray. */
        public ruleNameArray: Structure.ILanguageText[];

        /** WarRule ruleAvailability. */
        public ruleAvailability?: (WarRule.IRuleAvailability|null);

        /** WarRule ruleForGlobalParams. */
        public ruleForGlobalParams?: (WarRule.IRuleForGlobalParams|null);

        /** WarRule ruleForPlayers. */
        public ruleForPlayers?: (WarRule.IRuleForPlayers|null);

        /** WarRule warEventIdArray. */
        public warEventIdArray: number[];

        /**
         * Creates a new WarRule instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WarRule instance
         */
        public static create(properties?: WarRule.IWarRule): WarRule.WarRule;

        /**
         * Encodes the specified WarRule message. Does not implicitly {@link WarRule.WarRule.verify|verify} messages.
         * @param message WarRule message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarRule.IWarRule, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WarRule message, length delimited. Does not implicitly {@link WarRule.WarRule.verify|verify} messages.
         * @param message WarRule message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarRule.IWarRule, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarRule message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarRule
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarRule.WarRule;

        /**
         * Decodes a WarRule message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WarRule
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarRule.WarRule;

        /**
         * Verifies a WarRule message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WarRule message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WarRule
         */
        public static fromObject(object: { [k: string]: any }): WarRule.WarRule;

        /**
         * Creates a plain object from a WarRule message. Also converts values to other types if specified.
         * @param message WarRule
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarRule.WarRule, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WarRule to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WarRuleArray. */
    interface IWarRuleArray {

        /** WarRuleArray warRuleArray */
        warRuleArray?: (WarRule.IWarRule[]|null);
    }

    /** Represents a WarRuleArray. */
    class WarRuleArray implements IWarRuleArray {

        /**
         * Constructs a new WarRuleArray.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarRule.IWarRuleArray);

        /** WarRuleArray warRuleArray. */
        public warRuleArray: WarRule.IWarRule[];

        /**
         * Creates a new WarRuleArray instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WarRuleArray instance
         */
        public static create(properties?: WarRule.IWarRuleArray): WarRule.WarRuleArray;

        /**
         * Encodes the specified WarRuleArray message. Does not implicitly {@link WarRule.WarRuleArray.verify|verify} messages.
         * @param message WarRuleArray message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarRule.IWarRuleArray, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WarRuleArray message, length delimited. Does not implicitly {@link WarRule.WarRuleArray.verify|verify} messages.
         * @param message WarRuleArray message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarRule.IWarRuleArray, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarRuleArray message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarRuleArray
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarRule.WarRuleArray;

        /**
         * Decodes a WarRuleArray message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WarRuleArray
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarRule.WarRuleArray;

        /**
         * Verifies a WarRuleArray message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WarRuleArray message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WarRuleArray
         */
        public static fromObject(object: { [k: string]: any }): WarRule.WarRuleArray;

        /**
         * Creates a plain object from a WarRuleArray message. Also converts values to other types if specified.
         * @param message WarRuleArray
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarRule.WarRuleArray, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WarRuleArray to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Properties of a WarSettings. */
export declare interface IWarSettings {
}

/** Represents a WarSettings. */
export declare class WarSettings implements IWarSettings {

    /**
     * Constructs a new WarSettings.
     * @param [properties] Properties to set
     */
    constructor(properties?: IWarSettings);

    /**
     * Creates a new WarSettings instance using the specified properties.
     * @param [properties] Properties to set
     * @returns WarSettings instance
     */
    public static create(properties?: IWarSettings): WarSettings;

    /**
     * Encodes the specified WarSettings message. Does not implicitly {@link WarSettings.verify|verify} messages.
     * @param message WarSettings message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IWarSettings, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Encodes the specified WarSettings message, length delimited. Does not implicitly {@link WarSettings.verify|verify} messages.
     * @param message WarSettings message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IWarSettings, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Decodes a WarSettings message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns WarSettings
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarSettings;

    /**
     * Decodes a WarSettings message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns WarSettings
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarSettings;

    /**
     * Verifies a WarSettings message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a WarSettings message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns WarSettings
     */
    public static fromObject(object: { [k: string]: any }): WarSettings;

    /**
     * Creates a plain object from a WarSettings message. Also converts values to other types if specified.
     * @param message WarSettings
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: WarSettings, options?: protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this WarSettings to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export declare namespace WarSettings {

    /** Properties of a SettingsForCommon. */
    interface ISettingsForCommon {

        /** SettingsForCommon configVersion */
        configVersion?: (string|null);

        /** SettingsForCommon presetWarRuleId */
        presetWarRuleId?: (number|null);

        /** SettingsForCommon warRule */
        warRule?: (WarRule.IWarRule|null);

        /** SettingsForCommon turnsLimit */
        turnsLimit?: (number|null);
    }

    /** Represents a SettingsForCommon. */
    class SettingsForCommon implements ISettingsForCommon {

        /**
         * Constructs a new SettingsForCommon.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarSettings.ISettingsForCommon);

        /** SettingsForCommon configVersion. */
        public configVersion: string;

        /** SettingsForCommon presetWarRuleId. */
        public presetWarRuleId: number;

        /** SettingsForCommon warRule. */
        public warRule?: (WarRule.IWarRule|null);

        /** SettingsForCommon turnsLimit. */
        public turnsLimit: number;

        /**
         * Creates a new SettingsForCommon instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SettingsForCommon instance
         */
        public static create(properties?: WarSettings.ISettingsForCommon): WarSettings.SettingsForCommon;

        /**
         * Encodes the specified SettingsForCommon message. Does not implicitly {@link WarSettings.SettingsForCommon.verify|verify} messages.
         * @param message SettingsForCommon message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarSettings.ISettingsForCommon, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SettingsForCommon message, length delimited. Does not implicitly {@link WarSettings.SettingsForCommon.verify|verify} messages.
         * @param message SettingsForCommon message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarSettings.ISettingsForCommon, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SettingsForCommon message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SettingsForCommon
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarSettings.SettingsForCommon;

        /**
         * Decodes a SettingsForCommon message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SettingsForCommon
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarSettings.SettingsForCommon;

        /**
         * Verifies a SettingsForCommon message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SettingsForCommon message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SettingsForCommon
         */
        public static fromObject(object: { [k: string]: any }): WarSettings.SettingsForCommon;

        /**
         * Creates a plain object from a SettingsForCommon message. Also converts values to other types if specified.
         * @param message SettingsForCommon
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarSettings.SettingsForCommon, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SettingsForCommon to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SettingsForMcw. */
    interface ISettingsForMcw {

        /** SettingsForMcw mapId */
        mapId?: (number|null);

        /** SettingsForMcw warName */
        warName?: (string|null);

        /** SettingsForMcw warPassword */
        warPassword?: (string|null);

        /** SettingsForMcw warComment */
        warComment?: (string|null);

        /** SettingsForMcw bootTimerParams */
        bootTimerParams?: (number[]|null);
    }

    /** Represents a SettingsForMcw. */
    class SettingsForMcw implements ISettingsForMcw {

        /**
         * Constructs a new SettingsForMcw.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarSettings.ISettingsForMcw);

        /** SettingsForMcw mapId. */
        public mapId: number;

        /** SettingsForMcw warName. */
        public warName: string;

        /** SettingsForMcw warPassword. */
        public warPassword: string;

        /** SettingsForMcw warComment. */
        public warComment: string;

        /** SettingsForMcw bootTimerParams. */
        public bootTimerParams: number[];

        /**
         * Creates a new SettingsForMcw instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SettingsForMcw instance
         */
        public static create(properties?: WarSettings.ISettingsForMcw): WarSettings.SettingsForMcw;

        /**
         * Encodes the specified SettingsForMcw message. Does not implicitly {@link WarSettings.SettingsForMcw.verify|verify} messages.
         * @param message SettingsForMcw message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarSettings.ISettingsForMcw, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SettingsForMcw message, length delimited. Does not implicitly {@link WarSettings.SettingsForMcw.verify|verify} messages.
         * @param message SettingsForMcw message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarSettings.ISettingsForMcw, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SettingsForMcw message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SettingsForMcw
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarSettings.SettingsForMcw;

        /**
         * Decodes a SettingsForMcw message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SettingsForMcw
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarSettings.SettingsForMcw;

        /**
         * Verifies a SettingsForMcw message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SettingsForMcw message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SettingsForMcw
         */
        public static fromObject(object: { [k: string]: any }): WarSettings.SettingsForMcw;

        /**
         * Creates a plain object from a SettingsForMcw message. Also converts values to other types if specified.
         * @param message SettingsForMcw
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarSettings.SettingsForMcw, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SettingsForMcw to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SettingsForMfw. */
    interface ISettingsForMfw {

        /** SettingsForMfw initialWarData */
        initialWarData?: (WarSerialization.ISerialWar|null);

        /** SettingsForMfw warName */
        warName?: (string|null);

        /** SettingsForMfw warPassword */
        warPassword?: (string|null);

        /** SettingsForMfw warComment */
        warComment?: (string|null);

        /** SettingsForMfw bootTimerParams */
        bootTimerParams?: (number[]|null);
    }

    /** Represents a SettingsForMfw. */
    class SettingsForMfw implements ISettingsForMfw {

        /**
         * Constructs a new SettingsForMfw.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarSettings.ISettingsForMfw);

        /** SettingsForMfw initialWarData. */
        public initialWarData?: (WarSerialization.ISerialWar|null);

        /** SettingsForMfw warName. */
        public warName: string;

        /** SettingsForMfw warPassword. */
        public warPassword: string;

        /** SettingsForMfw warComment. */
        public warComment: string;

        /** SettingsForMfw bootTimerParams. */
        public bootTimerParams: number[];

        /**
         * Creates a new SettingsForMfw instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SettingsForMfw instance
         */
        public static create(properties?: WarSettings.ISettingsForMfw): WarSettings.SettingsForMfw;

        /**
         * Encodes the specified SettingsForMfw message. Does not implicitly {@link WarSettings.SettingsForMfw.verify|verify} messages.
         * @param message SettingsForMfw message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarSettings.ISettingsForMfw, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SettingsForMfw message, length delimited. Does not implicitly {@link WarSettings.SettingsForMfw.verify|verify} messages.
         * @param message SettingsForMfw message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarSettings.ISettingsForMfw, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SettingsForMfw message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SettingsForMfw
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarSettings.SettingsForMfw;

        /**
         * Decodes a SettingsForMfw message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SettingsForMfw
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarSettings.SettingsForMfw;

        /**
         * Verifies a SettingsForMfw message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SettingsForMfw message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SettingsForMfw
         */
        public static fromObject(object: { [k: string]: any }): WarSettings.SettingsForMfw;

        /**
         * Creates a plain object from a SettingsForMfw message. Also converts values to other types if specified.
         * @param message SettingsForMfw
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarSettings.SettingsForMfw, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SettingsForMfw to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SettingsForMrw. */
    interface ISettingsForMrw {

        /** SettingsForMrw mapId */
        mapId?: (number|null);

        /** SettingsForMrw dataArrayForBanCo */
        dataArrayForBanCo?: (Structure.IDataForPlayerBanCo[]|null);
    }

    /** Represents a SettingsForMrw. */
    class SettingsForMrw implements ISettingsForMrw {

        /**
         * Constructs a new SettingsForMrw.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarSettings.ISettingsForMrw);

        /** SettingsForMrw mapId. */
        public mapId: number;

        /** SettingsForMrw dataArrayForBanCo. */
        public dataArrayForBanCo: Structure.IDataForPlayerBanCo[];

        /**
         * Creates a new SettingsForMrw instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SettingsForMrw instance
         */
        public static create(properties?: WarSettings.ISettingsForMrw): WarSettings.SettingsForMrw;

        /**
         * Encodes the specified SettingsForMrw message. Does not implicitly {@link WarSettings.SettingsForMrw.verify|verify} messages.
         * @param message SettingsForMrw message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarSettings.ISettingsForMrw, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SettingsForMrw message, length delimited. Does not implicitly {@link WarSettings.SettingsForMrw.verify|verify} messages.
         * @param message SettingsForMrw message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarSettings.ISettingsForMrw, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SettingsForMrw message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SettingsForMrw
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarSettings.SettingsForMrw;

        /**
         * Decodes a SettingsForMrw message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SettingsForMrw
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarSettings.SettingsForMrw;

        /**
         * Verifies a SettingsForMrw message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SettingsForMrw message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SettingsForMrw
         */
        public static fromObject(object: { [k: string]: any }): WarSettings.SettingsForMrw;

        /**
         * Creates a plain object from a SettingsForMrw message. Also converts values to other types if specified.
         * @param message SettingsForMrw
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarSettings.SettingsForMrw, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SettingsForMrw to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SettingsForScw. */
    interface ISettingsForScw {

        /** SettingsForScw mapId */
        mapId?: (number|null);

        /** SettingsForScw isCheating */
        isCheating?: (boolean|null);
    }

    /** Represents a SettingsForScw. */
    class SettingsForScw implements ISettingsForScw {

        /**
         * Constructs a new SettingsForScw.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarSettings.ISettingsForScw);

        /** SettingsForScw mapId. */
        public mapId: number;

        /** SettingsForScw isCheating. */
        public isCheating: boolean;

        /**
         * Creates a new SettingsForScw instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SettingsForScw instance
         */
        public static create(properties?: WarSettings.ISettingsForScw): WarSettings.SettingsForScw;

        /**
         * Encodes the specified SettingsForScw message. Does not implicitly {@link WarSettings.SettingsForScw.verify|verify} messages.
         * @param message SettingsForScw message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarSettings.ISettingsForScw, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SettingsForScw message, length delimited. Does not implicitly {@link WarSettings.SettingsForScw.verify|verify} messages.
         * @param message SettingsForScw message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarSettings.ISettingsForScw, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SettingsForScw message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SettingsForScw
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarSettings.SettingsForScw;

        /**
         * Decodes a SettingsForScw message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SettingsForScw
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarSettings.SettingsForScw;

        /**
         * Verifies a SettingsForScw message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SettingsForScw message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SettingsForScw
         */
        public static fromObject(object: { [k: string]: any }): WarSettings.SettingsForScw;

        /**
         * Creates a plain object from a SettingsForScw message. Also converts values to other types if specified.
         * @param message SettingsForScw
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarSettings.SettingsForScw, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SettingsForScw to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SettingsForSfw. */
    interface ISettingsForSfw {

        /** SettingsForSfw initialWarData */
        initialWarData?: (WarSerialization.ISerialWar|null);
    }

    /** Represents a SettingsForSfw. */
    class SettingsForSfw implements ISettingsForSfw {

        /**
         * Constructs a new SettingsForSfw.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarSettings.ISettingsForSfw);

        /** SettingsForSfw initialWarData. */
        public initialWarData?: (WarSerialization.ISerialWar|null);

        /**
         * Creates a new SettingsForSfw instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SettingsForSfw instance
         */
        public static create(properties?: WarSettings.ISettingsForSfw): WarSettings.SettingsForSfw;

        /**
         * Encodes the specified SettingsForSfw message. Does not implicitly {@link WarSettings.SettingsForSfw.verify|verify} messages.
         * @param message SettingsForSfw message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarSettings.ISettingsForSfw, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SettingsForSfw message, length delimited. Does not implicitly {@link WarSettings.SettingsForSfw.verify|verify} messages.
         * @param message SettingsForSfw message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarSettings.ISettingsForSfw, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SettingsForSfw message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SettingsForSfw
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarSettings.SettingsForSfw;

        /**
         * Decodes a SettingsForSfw message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SettingsForSfw
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarSettings.SettingsForSfw;

        /**
         * Verifies a SettingsForSfw message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SettingsForSfw message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SettingsForSfw
         */
        public static fromObject(object: { [k: string]: any }): WarSettings.SettingsForSfw;

        /**
         * Creates a plain object from a SettingsForSfw message. Also converts values to other types if specified.
         * @param message SettingsForSfw
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarSettings.SettingsForSfw, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SettingsForSfw to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SettingsForSrw. */
    interface ISettingsForSrw {

        /** SettingsForSrw mapId */
        mapId?: (number|null);

        /** SettingsForSrw warSignature */
        warSignature?: (string|null);

        /** SettingsForSrw totalScore */
        totalScore?: (number|null);
    }

    /** Represents a SettingsForSrw. */
    class SettingsForSrw implements ISettingsForSrw {

        /**
         * Constructs a new SettingsForSrw.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarSettings.ISettingsForSrw);

        /** SettingsForSrw mapId. */
        public mapId: number;

        /** SettingsForSrw warSignature. */
        public warSignature: string;

        /** SettingsForSrw totalScore. */
        public totalScore: number;

        /**
         * Creates a new SettingsForSrw instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SettingsForSrw instance
         */
        public static create(properties?: WarSettings.ISettingsForSrw): WarSettings.SettingsForSrw;

        /**
         * Encodes the specified SettingsForSrw message. Does not implicitly {@link WarSettings.SettingsForSrw.verify|verify} messages.
         * @param message SettingsForSrw message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarSettings.ISettingsForSrw, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SettingsForSrw message, length delimited. Does not implicitly {@link WarSettings.SettingsForSrw.verify|verify} messages.
         * @param message SettingsForSrw message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarSettings.ISettingsForSrw, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SettingsForSrw message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SettingsForSrw
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarSettings.SettingsForSrw;

        /**
         * Decodes a SettingsForSrw message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SettingsForSrw
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarSettings.SettingsForSrw;

        /**
         * Verifies a SettingsForSrw message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SettingsForSrw message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SettingsForSrw
         */
        public static fromObject(object: { [k: string]: any }): WarSettings.SettingsForSrw;

        /**
         * Creates a plain object from a SettingsForSrw message. Also converts values to other types if specified.
         * @param message SettingsForSrw
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarSettings.SettingsForSrw, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SettingsForSrw to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SettingsForCcw. */
    interface ISettingsForCcw {

        /** SettingsForCcw mapId */
        mapId?: (number|null);

        /** SettingsForCcw warName */
        warName?: (string|null);

        /** SettingsForCcw warPassword */
        warPassword?: (string|null);

        /** SettingsForCcw warComment */
        warComment?: (string|null);

        /** SettingsForCcw bootTimerParams */
        bootTimerParams?: (number[]|null);
    }

    /** Represents a SettingsForCcw. */
    class SettingsForCcw implements ISettingsForCcw {

        /**
         * Constructs a new SettingsForCcw.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarSettings.ISettingsForCcw);

        /** SettingsForCcw mapId. */
        public mapId: number;

        /** SettingsForCcw warName. */
        public warName: string;

        /** SettingsForCcw warPassword. */
        public warPassword: string;

        /** SettingsForCcw warComment. */
        public warComment: string;

        /** SettingsForCcw bootTimerParams. */
        public bootTimerParams: number[];

        /**
         * Creates a new SettingsForCcw instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SettingsForCcw instance
         */
        public static create(properties?: WarSettings.ISettingsForCcw): WarSettings.SettingsForCcw;

        /**
         * Encodes the specified SettingsForCcw message. Does not implicitly {@link WarSettings.SettingsForCcw.verify|verify} messages.
         * @param message SettingsForCcw message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarSettings.ISettingsForCcw, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SettingsForCcw message, length delimited. Does not implicitly {@link WarSettings.SettingsForCcw.verify|verify} messages.
         * @param message SettingsForCcw message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarSettings.ISettingsForCcw, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SettingsForCcw message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SettingsForCcw
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarSettings.SettingsForCcw;

        /**
         * Decodes a SettingsForCcw message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SettingsForCcw
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarSettings.SettingsForCcw;

        /**
         * Verifies a SettingsForCcw message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SettingsForCcw message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SettingsForCcw
         */
        public static fromObject(object: { [k: string]: any }): WarSettings.SettingsForCcw;

        /**
         * Creates a plain object from a SettingsForCcw message. Also converts values to other types if specified.
         * @param message SettingsForCcw
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarSettings.SettingsForCcw, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SettingsForCcw to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Properties of a WarSerialization. */
export declare interface IWarSerialization {
}

/** Represents a WarSerialization. */
export declare class WarSerialization implements IWarSerialization {

    /**
     * Constructs a new WarSerialization.
     * @param [properties] Properties to set
     */
    constructor(properties?: IWarSerialization);

    /**
     * Creates a new WarSerialization instance using the specified properties.
     * @param [properties] Properties to set
     * @returns WarSerialization instance
     */
    public static create(properties?: IWarSerialization): WarSerialization;

    /**
     * Encodes the specified WarSerialization message. Does not implicitly {@link WarSerialization.verify|verify} messages.
     * @param message WarSerialization message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IWarSerialization, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Encodes the specified WarSerialization message, length delimited. Does not implicitly {@link WarSerialization.verify|verify} messages.
     * @param message WarSerialization message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IWarSerialization, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Decodes a WarSerialization message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns WarSerialization
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarSerialization;

    /**
     * Decodes a WarSerialization message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns WarSerialization
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarSerialization;

    /**
     * Verifies a WarSerialization message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a WarSerialization message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns WarSerialization
     */
    public static fromObject(object: { [k: string]: any }): WarSerialization;

    /**
     * Creates a plain object from a WarSerialization message. Also converts values to other types if specified.
     * @param message WarSerialization
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: WarSerialization, options?: protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this WarSerialization to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export declare namespace WarSerialization {

    /** Properties of a DataForFogMapFromPath. */
    interface IDataForFogMapFromPath {

        /** DataForFogMapFromPath playerIndex */
        playerIndex?: (number|null);

        /** DataForFogMapFromPath visibilityArray */
        visibilityArray?: (number[]|null);
    }

    /** Represents a DataForFogMapFromPath. */
    class DataForFogMapFromPath implements IDataForFogMapFromPath {

        /**
         * Constructs a new DataForFogMapFromPath.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarSerialization.IDataForFogMapFromPath);

        /** DataForFogMapFromPath playerIndex. */
        public playerIndex: number;

        /** DataForFogMapFromPath visibilityArray. */
        public visibilityArray: number[];

        /**
         * Creates a new DataForFogMapFromPath instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DataForFogMapFromPath instance
         */
        public static create(properties?: WarSerialization.IDataForFogMapFromPath): WarSerialization.DataForFogMapFromPath;

        /**
         * Encodes the specified DataForFogMapFromPath message. Does not implicitly {@link WarSerialization.DataForFogMapFromPath.verify|verify} messages.
         * @param message DataForFogMapFromPath message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarSerialization.IDataForFogMapFromPath, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified DataForFogMapFromPath message, length delimited. Does not implicitly {@link WarSerialization.DataForFogMapFromPath.verify|verify} messages.
         * @param message DataForFogMapFromPath message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarSerialization.IDataForFogMapFromPath, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a DataForFogMapFromPath message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DataForFogMapFromPath
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarSerialization.DataForFogMapFromPath;

        /**
         * Decodes a DataForFogMapFromPath message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DataForFogMapFromPath
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarSerialization.DataForFogMapFromPath;

        /**
         * Verifies a DataForFogMapFromPath message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DataForFogMapFromPath message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DataForFogMapFromPath
         */
        public static fromObject(object: { [k: string]: any }): WarSerialization.DataForFogMapFromPath;

        /**
         * Creates a plain object from a DataForFogMapFromPath message. Also converts values to other types if specified.
         * @param message DataForFogMapFromPath
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarSerialization.DataForFogMapFromPath, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DataForFogMapFromPath to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DataForWarEventCalledCount. */
    interface IDataForWarEventCalledCount {

        /** DataForWarEventCalledCount eventId */
        eventId?: (number|null);

        /** DataForWarEventCalledCount calledCountTotal */
        calledCountTotal?: (number|null);

        /** DataForWarEventCalledCount calledCountInPlayerTurn */
        calledCountInPlayerTurn?: (number|null);
    }

    /** Represents a DataForWarEventCalledCount. */
    class DataForWarEventCalledCount implements IDataForWarEventCalledCount {

        /**
         * Constructs a new DataForWarEventCalledCount.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarSerialization.IDataForWarEventCalledCount);

        /** DataForWarEventCalledCount eventId. */
        public eventId: number;

        /** DataForWarEventCalledCount calledCountTotal. */
        public calledCountTotal: number;

        /** DataForWarEventCalledCount calledCountInPlayerTurn. */
        public calledCountInPlayerTurn: number;

        /**
         * Creates a new DataForWarEventCalledCount instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DataForWarEventCalledCount instance
         */
        public static create(properties?: WarSerialization.IDataForWarEventCalledCount): WarSerialization.DataForWarEventCalledCount;

        /**
         * Encodes the specified DataForWarEventCalledCount message. Does not implicitly {@link WarSerialization.DataForWarEventCalledCount.verify|verify} messages.
         * @param message DataForWarEventCalledCount message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarSerialization.IDataForWarEventCalledCount, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified DataForWarEventCalledCount message, length delimited. Does not implicitly {@link WarSerialization.DataForWarEventCalledCount.verify|verify} messages.
         * @param message DataForWarEventCalledCount message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarSerialization.IDataForWarEventCalledCount, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a DataForWarEventCalledCount message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DataForWarEventCalledCount
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarSerialization.DataForWarEventCalledCount;

        /**
         * Decodes a DataForWarEventCalledCount message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DataForWarEventCalledCount
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarSerialization.DataForWarEventCalledCount;

        /**
         * Verifies a DataForWarEventCalledCount message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DataForWarEventCalledCount message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DataForWarEventCalledCount
         */
        public static fromObject(object: { [k: string]: any }): WarSerialization.DataForWarEventCalledCount;

        /**
         * Creates a plain object from a DataForWarEventCalledCount message. Also converts values to other types if specified.
         * @param message DataForWarEventCalledCount
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarSerialization.DataForWarEventCalledCount, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DataForWarEventCalledCount to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CustomCounter. */
    interface ICustomCounter {

        /** CustomCounter customCounterId */
        customCounterId?: (number|null);

        /** CustomCounter customCounterValue */
        customCounterValue?: (number|null);
    }

    /** Represents a CustomCounter. */
    class CustomCounter implements ICustomCounter {

        /**
         * Constructs a new CustomCounter.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarSerialization.ICustomCounter);

        /** CustomCounter customCounterId. */
        public customCounterId: number;

        /** CustomCounter customCounterValue. */
        public customCounterValue: number;

        /**
         * Creates a new CustomCounter instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CustomCounter instance
         */
        public static create(properties?: WarSerialization.ICustomCounter): WarSerialization.CustomCounter;

        /**
         * Encodes the specified CustomCounter message. Does not implicitly {@link WarSerialization.CustomCounter.verify|verify} messages.
         * @param message CustomCounter message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarSerialization.ICustomCounter, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified CustomCounter message, length delimited. Does not implicitly {@link WarSerialization.CustomCounter.verify|verify} messages.
         * @param message CustomCounter message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarSerialization.ICustomCounter, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CustomCounter message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CustomCounter
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarSerialization.CustomCounter;

        /**
         * Decodes a CustomCounter message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CustomCounter
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarSerialization.CustomCounter;

        /**
         * Verifies a CustomCounter message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CustomCounter message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CustomCounter
         */
        public static fromObject(object: { [k: string]: any }): WarSerialization.CustomCounter;

        /**
         * Creates a plain object from a CustomCounter message. Also converts values to other types if specified.
         * @param message CustomCounter
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarSerialization.CustomCounter, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CustomCounter to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a HalfwayReplayAction. */
    interface IHalfwayReplayAction {

        /** HalfwayReplayAction teamIndex */
        teamIndex?: (number|null);

        /** HalfwayReplayAction actionArray */
        actionArray?: (WarAction.IWarActionContainer[]|null);
    }

    /** Represents a HalfwayReplayAction. */
    class HalfwayReplayAction implements IHalfwayReplayAction {

        /**
         * Constructs a new HalfwayReplayAction.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarSerialization.IHalfwayReplayAction);

        /** HalfwayReplayAction teamIndex. */
        public teamIndex: number;

        /** HalfwayReplayAction actionArray. */
        public actionArray: WarAction.IWarActionContainer[];

        /**
         * Creates a new HalfwayReplayAction instance using the specified properties.
         * @param [properties] Properties to set
         * @returns HalfwayReplayAction instance
         */
        public static create(properties?: WarSerialization.IHalfwayReplayAction): WarSerialization.HalfwayReplayAction;

        /**
         * Encodes the specified HalfwayReplayAction message. Does not implicitly {@link WarSerialization.HalfwayReplayAction.verify|verify} messages.
         * @param message HalfwayReplayAction message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarSerialization.IHalfwayReplayAction, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified HalfwayReplayAction message, length delimited. Does not implicitly {@link WarSerialization.HalfwayReplayAction.verify|verify} messages.
         * @param message HalfwayReplayAction message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarSerialization.IHalfwayReplayAction, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a HalfwayReplayAction message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns HalfwayReplayAction
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarSerialization.HalfwayReplayAction;

        /**
         * Decodes a HalfwayReplayAction message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns HalfwayReplayAction
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarSerialization.HalfwayReplayAction;

        /**
         * Verifies a HalfwayReplayAction message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a HalfwayReplayAction message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns HalfwayReplayAction
         */
        public static fromObject(object: { [k: string]: any }): WarSerialization.HalfwayReplayAction;

        /**
         * Creates a plain object from a HalfwayReplayAction message. Also converts values to other types if specified.
         * @param message HalfwayReplayAction
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarSerialization.HalfwayReplayAction, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this HalfwayReplayAction to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TileCustomCrystalData. */
    interface ITileCustomCrystalData {

        /** TileCustomCrystalData radius */
        radius?: (number|null);

        /** TileCustomCrystalData priority */
        priority?: (number|null);

        /** TileCustomCrystalData canAffectSelf */
        canAffectSelf?: (boolean|null);

        /** TileCustomCrystalData canAffectAlly */
        canAffectAlly?: (boolean|null);

        /** TileCustomCrystalData canAffectEnemy */
        canAffectEnemy?: (boolean|null);

        /** TileCustomCrystalData deltaFund */
        deltaFund?: (number|null);

        /** TileCustomCrystalData deltaEnergyPercentage */
        deltaEnergyPercentage?: (number|null);

        /** TileCustomCrystalData deltaHp */
        deltaHp?: (number|null);

        /** TileCustomCrystalData deltaFuelPercentage */
        deltaFuelPercentage?: (number|null);

        /** TileCustomCrystalData deltaPrimaryAmmoPercentage */
        deltaPrimaryAmmoPercentage?: (number|null);
    }

    /** Represents a TileCustomCrystalData. */
    class TileCustomCrystalData implements ITileCustomCrystalData {

        /**
         * Constructs a new TileCustomCrystalData.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarSerialization.ITileCustomCrystalData);

        /** TileCustomCrystalData radius. */
        public radius: number;

        /** TileCustomCrystalData priority. */
        public priority: number;

        /** TileCustomCrystalData canAffectSelf. */
        public canAffectSelf: boolean;

        /** TileCustomCrystalData canAffectAlly. */
        public canAffectAlly: boolean;

        /** TileCustomCrystalData canAffectEnemy. */
        public canAffectEnemy: boolean;

        /** TileCustomCrystalData deltaFund. */
        public deltaFund: number;

        /** TileCustomCrystalData deltaEnergyPercentage. */
        public deltaEnergyPercentage: number;

        /** TileCustomCrystalData deltaHp. */
        public deltaHp: number;

        /** TileCustomCrystalData deltaFuelPercentage. */
        public deltaFuelPercentage: number;

        /** TileCustomCrystalData deltaPrimaryAmmoPercentage. */
        public deltaPrimaryAmmoPercentage: number;

        /**
         * Creates a new TileCustomCrystalData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TileCustomCrystalData instance
         */
        public static create(properties?: WarSerialization.ITileCustomCrystalData): WarSerialization.TileCustomCrystalData;

        /**
         * Encodes the specified TileCustomCrystalData message. Does not implicitly {@link WarSerialization.TileCustomCrystalData.verify|verify} messages.
         * @param message TileCustomCrystalData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarSerialization.ITileCustomCrystalData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified TileCustomCrystalData message, length delimited. Does not implicitly {@link WarSerialization.TileCustomCrystalData.verify|verify} messages.
         * @param message TileCustomCrystalData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarSerialization.ITileCustomCrystalData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a TileCustomCrystalData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TileCustomCrystalData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarSerialization.TileCustomCrystalData;

        /**
         * Decodes a TileCustomCrystalData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TileCustomCrystalData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarSerialization.TileCustomCrystalData;

        /**
         * Verifies a TileCustomCrystalData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TileCustomCrystalData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TileCustomCrystalData
         */
        public static fromObject(object: { [k: string]: any }): WarSerialization.TileCustomCrystalData;

        /**
         * Creates a plain object from a TileCustomCrystalData message. Also converts values to other types if specified.
         * @param message TileCustomCrystalData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarSerialization.TileCustomCrystalData, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TileCustomCrystalData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TileCustomCannonData. */
    interface ITileCustomCannonData {

        /** TileCustomCannonData rangeForUp */
        rangeForUp?: (number|null);

        /** TileCustomCannonData rangeForDown */
        rangeForDown?: (number|null);

        /** TileCustomCannonData rangeForLeft */
        rangeForLeft?: (number|null);

        /** TileCustomCannonData rangeForRight */
        rangeForRight?: (number|null);

        /** TileCustomCannonData priority */
        priority?: (number|null);

        /** TileCustomCannonData canAffectSelf */
        canAffectSelf?: (boolean|null);

        /** TileCustomCannonData canAffectAlly */
        canAffectAlly?: (boolean|null);

        /** TileCustomCannonData canAffectEnemy */
        canAffectEnemy?: (boolean|null);

        /** TileCustomCannonData maxTargetCount */
        maxTargetCount?: (number|null);

        /** TileCustomCannonData deltaHp */
        deltaHp?: (number|null);

        /** TileCustomCannonData deltaFuelPercentage */
        deltaFuelPercentage?: (number|null);

        /** TileCustomCannonData deltaPrimaryAmmoPercentage */
        deltaPrimaryAmmoPercentage?: (number|null);
    }

    /** Represents a TileCustomCannonData. */
    class TileCustomCannonData implements ITileCustomCannonData {

        /**
         * Constructs a new TileCustomCannonData.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarSerialization.ITileCustomCannonData);

        /** TileCustomCannonData rangeForUp. */
        public rangeForUp: number;

        /** TileCustomCannonData rangeForDown. */
        public rangeForDown: number;

        /** TileCustomCannonData rangeForLeft. */
        public rangeForLeft: number;

        /** TileCustomCannonData rangeForRight. */
        public rangeForRight: number;

        /** TileCustomCannonData priority. */
        public priority: number;

        /** TileCustomCannonData canAffectSelf. */
        public canAffectSelf: boolean;

        /** TileCustomCannonData canAffectAlly. */
        public canAffectAlly: boolean;

        /** TileCustomCannonData canAffectEnemy. */
        public canAffectEnemy: boolean;

        /** TileCustomCannonData maxTargetCount. */
        public maxTargetCount: number;

        /** TileCustomCannonData deltaHp. */
        public deltaHp: number;

        /** TileCustomCannonData deltaFuelPercentage. */
        public deltaFuelPercentage: number;

        /** TileCustomCannonData deltaPrimaryAmmoPercentage. */
        public deltaPrimaryAmmoPercentage: number;

        /**
         * Creates a new TileCustomCannonData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TileCustomCannonData instance
         */
        public static create(properties?: WarSerialization.ITileCustomCannonData): WarSerialization.TileCustomCannonData;

        /**
         * Encodes the specified TileCustomCannonData message. Does not implicitly {@link WarSerialization.TileCustomCannonData.verify|verify} messages.
         * @param message TileCustomCannonData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarSerialization.ITileCustomCannonData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified TileCustomCannonData message, length delimited. Does not implicitly {@link WarSerialization.TileCustomCannonData.verify|verify} messages.
         * @param message TileCustomCannonData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarSerialization.ITileCustomCannonData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a TileCustomCannonData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TileCustomCannonData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarSerialization.TileCustomCannonData;

        /**
         * Decodes a TileCustomCannonData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TileCustomCannonData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarSerialization.TileCustomCannonData;

        /**
         * Verifies a TileCustomCannonData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TileCustomCannonData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TileCustomCannonData
         */
        public static fromObject(object: { [k: string]: any }): WarSerialization.TileCustomCannonData;

        /**
         * Creates a plain object from a TileCustomCannonData message. Also converts values to other types if specified.
         * @param message TileCustomCannonData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarSerialization.TileCustomCannonData, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TileCustomCannonData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TileCustomLaserTurretData. */
    interface ITileCustomLaserTurretData {

        /** TileCustomLaserTurretData rangeForUp */
        rangeForUp?: (number|null);

        /** TileCustomLaserTurretData rangeForDown */
        rangeForDown?: (number|null);

        /** TileCustomLaserTurretData rangeForLeft */
        rangeForLeft?: (number|null);

        /** TileCustomLaserTurretData rangeForRight */
        rangeForRight?: (number|null);

        /** TileCustomLaserTurretData priority */
        priority?: (number|null);

        /** TileCustomLaserTurretData canAffectSelf */
        canAffectSelf?: (boolean|null);

        /** TileCustomLaserTurretData canAffectAlly */
        canAffectAlly?: (boolean|null);

        /** TileCustomLaserTurretData canAffectEnemy */
        canAffectEnemy?: (boolean|null);

        /** TileCustomLaserTurretData deltaHp */
        deltaHp?: (number|null);

        /** TileCustomLaserTurretData deltaFuelPercentage */
        deltaFuelPercentage?: (number|null);

        /** TileCustomLaserTurretData deltaPrimaryAmmoPercentage */
        deltaPrimaryAmmoPercentage?: (number|null);
    }

    /** Represents a TileCustomLaserTurretData. */
    class TileCustomLaserTurretData implements ITileCustomLaserTurretData {

        /**
         * Constructs a new TileCustomLaserTurretData.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarSerialization.ITileCustomLaserTurretData);

        /** TileCustomLaserTurretData rangeForUp. */
        public rangeForUp: number;

        /** TileCustomLaserTurretData rangeForDown. */
        public rangeForDown: number;

        /** TileCustomLaserTurretData rangeForLeft. */
        public rangeForLeft: number;

        /** TileCustomLaserTurretData rangeForRight. */
        public rangeForRight: number;

        /** TileCustomLaserTurretData priority. */
        public priority: number;

        /** TileCustomLaserTurretData canAffectSelf. */
        public canAffectSelf: boolean;

        /** TileCustomLaserTurretData canAffectAlly. */
        public canAffectAlly: boolean;

        /** TileCustomLaserTurretData canAffectEnemy. */
        public canAffectEnemy: boolean;

        /** TileCustomLaserTurretData deltaHp. */
        public deltaHp: number;

        /** TileCustomLaserTurretData deltaFuelPercentage. */
        public deltaFuelPercentage: number;

        /** TileCustomLaserTurretData deltaPrimaryAmmoPercentage. */
        public deltaPrimaryAmmoPercentage: number;

        /**
         * Creates a new TileCustomLaserTurretData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TileCustomLaserTurretData instance
         */
        public static create(properties?: WarSerialization.ITileCustomLaserTurretData): WarSerialization.TileCustomLaserTurretData;

        /**
         * Encodes the specified TileCustomLaserTurretData message. Does not implicitly {@link WarSerialization.TileCustomLaserTurretData.verify|verify} messages.
         * @param message TileCustomLaserTurretData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarSerialization.ITileCustomLaserTurretData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified TileCustomLaserTurretData message, length delimited. Does not implicitly {@link WarSerialization.TileCustomLaserTurretData.verify|verify} messages.
         * @param message TileCustomLaserTurretData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarSerialization.ITileCustomLaserTurretData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a TileCustomLaserTurretData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TileCustomLaserTurretData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarSerialization.TileCustomLaserTurretData;

        /**
         * Decodes a TileCustomLaserTurretData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TileCustomLaserTurretData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarSerialization.TileCustomLaserTurretData;

        /**
         * Verifies a TileCustomLaserTurretData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TileCustomLaserTurretData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TileCustomLaserTurretData
         */
        public static fromObject(object: { [k: string]: any }): WarSerialization.TileCustomLaserTurretData;

        /**
         * Creates a plain object from a TileCustomLaserTurretData message. Also converts values to other types if specified.
         * @param message TileCustomLaserTurretData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarSerialization.TileCustomLaserTurretData, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TileCustomLaserTurretData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SerialTile. */
    interface ISerialTile {

        /** SerialTile gridIndex */
        gridIndex?: (Structure.IGridIndex|null);

        /** SerialTile playerIndex */
        playerIndex?: (number|null);

        /** SerialTile baseType */
        baseType?: (number|null);

        /** SerialTile objectType */
        objectType?: (number|null);

        /** SerialTile baseShapeId */
        baseShapeId?: (number|null);

        /** SerialTile objectShapeId */
        objectShapeId?: (number|null);

        /** SerialTile currentHp */
        currentHp?: (number|null);

        /** SerialTile currentBuildPoint */
        currentBuildPoint?: (number|null);

        /** SerialTile currentCapturePoint */
        currentCapturePoint?: (number|null);

        /** SerialTile decoratorType */
        decoratorType?: (number|null);

        /** SerialTile decoratorShapeId */
        decoratorShapeId?: (number|null);

        /** SerialTile locationFlags */
        locationFlags?: (number|null);

        /** SerialTile isHighlighted */
        isHighlighted?: (boolean|null);

        /** SerialTile customCrystalData */
        customCrystalData?: (WarSerialization.ITileCustomCrystalData|null);

        /** SerialTile customCannonData */
        customCannonData?: (WarSerialization.ITileCustomCannonData|null);

        /** SerialTile customLaserTurretData */
        customLaserTurretData?: (WarSerialization.ITileCustomLaserTurretData|null);
    }

    /** Represents a SerialTile. */
    class SerialTile implements ISerialTile {

        /**
         * Constructs a new SerialTile.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarSerialization.ISerialTile);

        /** SerialTile gridIndex. */
        public gridIndex?: (Structure.IGridIndex|null);

        /** SerialTile playerIndex. */
        public playerIndex: number;

        /** SerialTile baseType. */
        public baseType: number;

        /** SerialTile objectType. */
        public objectType: number;

        /** SerialTile baseShapeId. */
        public baseShapeId: number;

        /** SerialTile objectShapeId. */
        public objectShapeId: number;

        /** SerialTile currentHp. */
        public currentHp: number;

        /** SerialTile currentBuildPoint. */
        public currentBuildPoint: number;

        /** SerialTile currentCapturePoint. */
        public currentCapturePoint: number;

        /** SerialTile decoratorType. */
        public decoratorType: number;

        /** SerialTile decoratorShapeId. */
        public decoratorShapeId: number;

        /** SerialTile locationFlags. */
        public locationFlags: number;

        /** SerialTile isHighlighted. */
        public isHighlighted: boolean;

        /** SerialTile customCrystalData. */
        public customCrystalData?: (WarSerialization.ITileCustomCrystalData|null);

        /** SerialTile customCannonData. */
        public customCannonData?: (WarSerialization.ITileCustomCannonData|null);

        /** SerialTile customLaserTurretData. */
        public customLaserTurretData?: (WarSerialization.ITileCustomLaserTurretData|null);

        /**
         * Creates a new SerialTile instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SerialTile instance
         */
        public static create(properties?: WarSerialization.ISerialTile): WarSerialization.SerialTile;

        /**
         * Encodes the specified SerialTile message. Does not implicitly {@link WarSerialization.SerialTile.verify|verify} messages.
         * @param message SerialTile message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarSerialization.ISerialTile, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SerialTile message, length delimited. Does not implicitly {@link WarSerialization.SerialTile.verify|verify} messages.
         * @param message SerialTile message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarSerialization.ISerialTile, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SerialTile message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SerialTile
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarSerialization.SerialTile;

        /**
         * Decodes a SerialTile message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SerialTile
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarSerialization.SerialTile;

        /**
         * Verifies a SerialTile message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SerialTile message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SerialTile
         */
        public static fromObject(object: { [k: string]: any }): WarSerialization.SerialTile;

        /**
         * Creates a plain object from a SerialTile message. Also converts values to other types if specified.
         * @param message SerialTile
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarSerialization.SerialTile, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SerialTile to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SerialUnit. */
    interface ISerialUnit {

        /** SerialUnit gridIndex */
        gridIndex?: (Structure.IGridIndex|null);

        /** SerialUnit playerIndex */
        playerIndex?: (number|null);

        /** SerialUnit unitType */
        unitType?: (number|null);

        /** SerialUnit unitId */
        unitId?: (number|null);

        /** SerialUnit actionState */
        actionState?: (number|null);

        /** SerialUnit primaryWeaponCurrentAmmo */
        primaryWeaponCurrentAmmo?: (number|null);

        /** SerialUnit currentHp */
        currentHp?: (number|null);

        /** SerialUnit isCapturingTile */
        isCapturingTile?: (boolean|null);

        /** SerialUnit isDiving */
        isDiving?: (boolean|null);

        /** SerialUnit flareCurrentAmmo */
        flareCurrentAmmo?: (number|null);

        /** SerialUnit currentFuel */
        currentFuel?: (number|null);

        /** SerialUnit currentBuildMaterial */
        currentBuildMaterial?: (number|null);

        /** SerialUnit currentProduceMaterial */
        currentProduceMaterial?: (number|null);

        /** SerialUnit currentPromotion */
        currentPromotion?: (number|null);

        /** SerialUnit isBuildingTile */
        isBuildingTile?: (boolean|null);

        /** SerialUnit loaderUnitId */
        loaderUnitId?: (number|null);

        /** SerialUnit hasLoadedCo */
        hasLoadedCo?: (boolean|null);

        /** SerialUnit aiMode */
        aiMode?: (number|null);
    }

    /** Represents a SerialUnit. */
    class SerialUnit implements ISerialUnit {

        /**
         * Constructs a new SerialUnit.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarSerialization.ISerialUnit);

        /** SerialUnit gridIndex. */
        public gridIndex?: (Structure.IGridIndex|null);

        /** SerialUnit playerIndex. */
        public playerIndex: number;

        /** SerialUnit unitType. */
        public unitType: number;

        /** SerialUnit unitId. */
        public unitId: number;

        /** SerialUnit actionState. */
        public actionState: number;

        /** SerialUnit primaryWeaponCurrentAmmo. */
        public primaryWeaponCurrentAmmo: number;

        /** SerialUnit currentHp. */
        public currentHp: number;

        /** SerialUnit isCapturingTile. */
        public isCapturingTile: boolean;

        /** SerialUnit isDiving. */
        public isDiving: boolean;

        /** SerialUnit flareCurrentAmmo. */
        public flareCurrentAmmo: number;

        /** SerialUnit currentFuel. */
        public currentFuel: number;

        /** SerialUnit currentBuildMaterial. */
        public currentBuildMaterial: number;

        /** SerialUnit currentProduceMaterial. */
        public currentProduceMaterial: number;

        /** SerialUnit currentPromotion. */
        public currentPromotion: number;

        /** SerialUnit isBuildingTile. */
        public isBuildingTile: boolean;

        /** SerialUnit loaderUnitId. */
        public loaderUnitId: number;

        /** SerialUnit hasLoadedCo. */
        public hasLoadedCo: boolean;

        /** SerialUnit aiMode. */
        public aiMode: number;

        /**
         * Creates a new SerialUnit instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SerialUnit instance
         */
        public static create(properties?: WarSerialization.ISerialUnit): WarSerialization.SerialUnit;

        /**
         * Encodes the specified SerialUnit message. Does not implicitly {@link WarSerialization.SerialUnit.verify|verify} messages.
         * @param message SerialUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarSerialization.ISerialUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SerialUnit message, length delimited. Does not implicitly {@link WarSerialization.SerialUnit.verify|verify} messages.
         * @param message SerialUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarSerialization.ISerialUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SerialUnit message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SerialUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarSerialization.SerialUnit;

        /**
         * Decodes a SerialUnit message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SerialUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarSerialization.SerialUnit;

        /**
         * Verifies a SerialUnit message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SerialUnit message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SerialUnit
         */
        public static fromObject(object: { [k: string]: any }): WarSerialization.SerialUnit;

        /**
         * Creates a plain object from a SerialUnit message. Also converts values to other types if specified.
         * @param message SerialUnit
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarSerialization.SerialUnit, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SerialUnit to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SerialPlayer. */
    interface ISerialPlayer {

        /** SerialPlayer fund */
        fund?: (number|null);

        /** SerialPlayer hasVotedForDraw */
        hasVotedForDraw?: (boolean|null);

        /** SerialPlayer aliveState */
        aliveState?: (number|null);

        /** SerialPlayer playerIndex */
        playerIndex?: (number|null);

        /** SerialPlayer deprecatedTeamIndex */
        deprecatedTeamIndex?: (number|null);

        /** SerialPlayer userId */
        userId?: (number|null);

        /** SerialPlayer coId */
        coId?: (number|null);

        /** SerialPlayer coCurrentEnergy */
        coCurrentEnergy?: (number|null);

        /** SerialPlayer coUsingSkillType */
        coUsingSkillType?: (number|null);

        /** SerialPlayer coIsDestroyedInTurn */
        coIsDestroyedInTurn?: (boolean|null);

        /** SerialPlayer watchOngoingSrcUserIdArray */
        watchOngoingSrcUserIdArray?: (number[]|null);

        /** SerialPlayer watchRequestSrcUserIdArray */
        watchRequestSrcUserIdArray?: (number[]|null);

        /** SerialPlayer restTimeToBoot */
        restTimeToBoot?: (number|null);

        /** SerialPlayer unitAndTileSkinId */
        unitAndTileSkinId?: (number|null);

        /** SerialPlayer coPowerActivatedCount */
        coPowerActivatedCount?: (number|null);

        /** SerialPlayer hasTakenManualAction */
        hasTakenManualAction?: (boolean|null);
    }

    /** Represents a SerialPlayer. */
    class SerialPlayer implements ISerialPlayer {

        /**
         * Constructs a new SerialPlayer.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarSerialization.ISerialPlayer);

        /** SerialPlayer fund. */
        public fund: number;

        /** SerialPlayer hasVotedForDraw. */
        public hasVotedForDraw: boolean;

        /** SerialPlayer aliveState. */
        public aliveState: number;

        /** SerialPlayer playerIndex. */
        public playerIndex: number;

        /** SerialPlayer deprecatedTeamIndex. */
        public deprecatedTeamIndex: number;

        /** SerialPlayer userId. */
        public userId: number;

        /** SerialPlayer coId. */
        public coId: number;

        /** SerialPlayer coCurrentEnergy. */
        public coCurrentEnergy: number;

        /** SerialPlayer coUsingSkillType. */
        public coUsingSkillType: number;

        /** SerialPlayer coIsDestroyedInTurn. */
        public coIsDestroyedInTurn: boolean;

        /** SerialPlayer watchOngoingSrcUserIdArray. */
        public watchOngoingSrcUserIdArray: number[];

        /** SerialPlayer watchRequestSrcUserIdArray. */
        public watchRequestSrcUserIdArray: number[];

        /** SerialPlayer restTimeToBoot. */
        public restTimeToBoot: number;

        /** SerialPlayer unitAndTileSkinId. */
        public unitAndTileSkinId: number;

        /** SerialPlayer coPowerActivatedCount. */
        public coPowerActivatedCount: number;

        /** SerialPlayer hasTakenManualAction. */
        public hasTakenManualAction: boolean;

        /**
         * Creates a new SerialPlayer instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SerialPlayer instance
         */
        public static create(properties?: WarSerialization.ISerialPlayer): WarSerialization.SerialPlayer;

        /**
         * Encodes the specified SerialPlayer message. Does not implicitly {@link WarSerialization.SerialPlayer.verify|verify} messages.
         * @param message SerialPlayer message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarSerialization.ISerialPlayer, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SerialPlayer message, length delimited. Does not implicitly {@link WarSerialization.SerialPlayer.verify|verify} messages.
         * @param message SerialPlayer message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarSerialization.ISerialPlayer, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SerialPlayer message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SerialPlayer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarSerialization.SerialPlayer;

        /**
         * Decodes a SerialPlayer message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SerialPlayer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarSerialization.SerialPlayer;

        /**
         * Verifies a SerialPlayer message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SerialPlayer message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SerialPlayer
         */
        public static fromObject(object: { [k: string]: any }): WarSerialization.SerialPlayer;

        /**
         * Creates a plain object from a SerialPlayer message. Also converts values to other types if specified.
         * @param message SerialPlayer
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarSerialization.SerialPlayer, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SerialPlayer to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SerialPlayerManager. */
    interface ISerialPlayerManager {

        /** SerialPlayerManager players */
        players?: (WarSerialization.ISerialPlayer[]|null);
    }

    /** Represents a SerialPlayerManager. */
    class SerialPlayerManager implements ISerialPlayerManager {

        /**
         * Constructs a new SerialPlayerManager.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarSerialization.ISerialPlayerManager);

        /** SerialPlayerManager players. */
        public players: WarSerialization.ISerialPlayer[];

        /**
         * Creates a new SerialPlayerManager instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SerialPlayerManager instance
         */
        public static create(properties?: WarSerialization.ISerialPlayerManager): WarSerialization.SerialPlayerManager;

        /**
         * Encodes the specified SerialPlayerManager message. Does not implicitly {@link WarSerialization.SerialPlayerManager.verify|verify} messages.
         * @param message SerialPlayerManager message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarSerialization.ISerialPlayerManager, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SerialPlayerManager message, length delimited. Does not implicitly {@link WarSerialization.SerialPlayerManager.verify|verify} messages.
         * @param message SerialPlayerManager message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarSerialization.ISerialPlayerManager, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SerialPlayerManager message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SerialPlayerManager
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarSerialization.SerialPlayerManager;

        /**
         * Decodes a SerialPlayerManager message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SerialPlayerManager
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarSerialization.SerialPlayerManager;

        /**
         * Verifies a SerialPlayerManager message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SerialPlayerManager message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SerialPlayerManager
         */
        public static fromObject(object: { [k: string]: any }): WarSerialization.SerialPlayerManager;

        /**
         * Creates a plain object from a SerialPlayerManager message. Also converts values to other types if specified.
         * @param message SerialPlayerManager
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarSerialization.SerialPlayerManager, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SerialPlayerManager to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SerialTurnManager. */
    interface ISerialTurnManager {

        /** SerialTurnManager turnIndex */
        turnIndex?: (number|null);

        /** SerialTurnManager playerIndex */
        playerIndex?: (number|null);

        /** SerialTurnManager turnPhaseCode */
        turnPhaseCode?: (number|null);

        /** SerialTurnManager enterTurnTime */
        enterTurnTime?: (number|null);
    }

    /** Represents a SerialTurnManager. */
    class SerialTurnManager implements ISerialTurnManager {

        /**
         * Constructs a new SerialTurnManager.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarSerialization.ISerialTurnManager);

        /** SerialTurnManager turnIndex. */
        public turnIndex: number;

        /** SerialTurnManager playerIndex. */
        public playerIndex: number;

        /** SerialTurnManager turnPhaseCode. */
        public turnPhaseCode: number;

        /** SerialTurnManager enterTurnTime. */
        public enterTurnTime: number;

        /**
         * Creates a new SerialTurnManager instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SerialTurnManager instance
         */
        public static create(properties?: WarSerialization.ISerialTurnManager): WarSerialization.SerialTurnManager;

        /**
         * Encodes the specified SerialTurnManager message. Does not implicitly {@link WarSerialization.SerialTurnManager.verify|verify} messages.
         * @param message SerialTurnManager message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarSerialization.ISerialTurnManager, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SerialTurnManager message, length delimited. Does not implicitly {@link WarSerialization.SerialTurnManager.verify|verify} messages.
         * @param message SerialTurnManager message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarSerialization.ISerialTurnManager, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SerialTurnManager message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SerialTurnManager
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarSerialization.SerialTurnManager;

        /**
         * Decodes a SerialTurnManager message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SerialTurnManager
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarSerialization.SerialTurnManager;

        /**
         * Verifies a SerialTurnManager message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SerialTurnManager message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SerialTurnManager
         */
        public static fromObject(object: { [k: string]: any }): WarSerialization.SerialTurnManager;

        /**
         * Creates a plain object from a SerialTurnManager message. Also converts values to other types if specified.
         * @param message SerialTurnManager
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarSerialization.SerialTurnManager, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SerialTurnManager to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SerialTileMap. */
    interface ISerialTileMap {

        /** SerialTileMap tiles */
        tiles?: (WarSerialization.ISerialTile[]|null);
    }

    /** Represents a SerialTileMap. */
    class SerialTileMap implements ISerialTileMap {

        /**
         * Constructs a new SerialTileMap.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarSerialization.ISerialTileMap);

        /** SerialTileMap tiles. */
        public tiles: WarSerialization.ISerialTile[];

        /**
         * Creates a new SerialTileMap instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SerialTileMap instance
         */
        public static create(properties?: WarSerialization.ISerialTileMap): WarSerialization.SerialTileMap;

        /**
         * Encodes the specified SerialTileMap message. Does not implicitly {@link WarSerialization.SerialTileMap.verify|verify} messages.
         * @param message SerialTileMap message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarSerialization.ISerialTileMap, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SerialTileMap message, length delimited. Does not implicitly {@link WarSerialization.SerialTileMap.verify|verify} messages.
         * @param message SerialTileMap message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarSerialization.ISerialTileMap, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SerialTileMap message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SerialTileMap
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarSerialization.SerialTileMap;

        /**
         * Decodes a SerialTileMap message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SerialTileMap
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarSerialization.SerialTileMap;

        /**
         * Verifies a SerialTileMap message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SerialTileMap message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SerialTileMap
         */
        public static fromObject(object: { [k: string]: any }): WarSerialization.SerialTileMap;

        /**
         * Creates a plain object from a SerialTileMap message. Also converts values to other types if specified.
         * @param message SerialTileMap
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarSerialization.SerialTileMap, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SerialTileMap to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SerialUnitMap. */
    interface ISerialUnitMap {

        /** SerialUnitMap nextUnitId */
        nextUnitId?: (number|null);

        /** SerialUnitMap units */
        units?: (WarSerialization.ISerialUnit[]|null);
    }

    /** Represents a SerialUnitMap. */
    class SerialUnitMap implements ISerialUnitMap {

        /**
         * Constructs a new SerialUnitMap.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarSerialization.ISerialUnitMap);

        /** SerialUnitMap nextUnitId. */
        public nextUnitId: number;

        /** SerialUnitMap units. */
        public units: WarSerialization.ISerialUnit[];

        /**
         * Creates a new SerialUnitMap instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SerialUnitMap instance
         */
        public static create(properties?: WarSerialization.ISerialUnitMap): WarSerialization.SerialUnitMap;

        /**
         * Encodes the specified SerialUnitMap message. Does not implicitly {@link WarSerialization.SerialUnitMap.verify|verify} messages.
         * @param message SerialUnitMap message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarSerialization.ISerialUnitMap, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SerialUnitMap message, length delimited. Does not implicitly {@link WarSerialization.SerialUnitMap.verify|verify} messages.
         * @param message SerialUnitMap message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarSerialization.ISerialUnitMap, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SerialUnitMap message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SerialUnitMap
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarSerialization.SerialUnitMap;

        /**
         * Decodes a SerialUnitMap message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SerialUnitMap
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarSerialization.SerialUnitMap;

        /**
         * Verifies a SerialUnitMap message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SerialUnitMap message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SerialUnitMap
         */
        public static fromObject(object: { [k: string]: any }): WarSerialization.SerialUnitMap;

        /**
         * Creates a plain object from a SerialUnitMap message. Also converts values to other types if specified.
         * @param message SerialUnitMap
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarSerialization.SerialUnitMap, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SerialUnitMap to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SerialFogMap. */
    interface ISerialFogMap {

        /** SerialFogMap forceFogCode */
        forceFogCode?: (number|null);

        /** SerialFogMap forceExpirePlayerIndex */
        forceExpirePlayerIndex?: (number|null);

        /** SerialFogMap forceExpireTurnIndex */
        forceExpireTurnIndex?: (number|null);

        /** SerialFogMap mapsFromPath */
        mapsFromPath?: (WarSerialization.IDataForFogMapFromPath[]|null);
    }

    /** Represents a SerialFogMap. */
    class SerialFogMap implements ISerialFogMap {

        /**
         * Constructs a new SerialFogMap.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarSerialization.ISerialFogMap);

        /** SerialFogMap forceFogCode. */
        public forceFogCode: number;

        /** SerialFogMap forceExpirePlayerIndex. */
        public forceExpirePlayerIndex: number;

        /** SerialFogMap forceExpireTurnIndex. */
        public forceExpireTurnIndex: number;

        /** SerialFogMap mapsFromPath. */
        public mapsFromPath: WarSerialization.IDataForFogMapFromPath[];

        /**
         * Creates a new SerialFogMap instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SerialFogMap instance
         */
        public static create(properties?: WarSerialization.ISerialFogMap): WarSerialization.SerialFogMap;

        /**
         * Encodes the specified SerialFogMap message. Does not implicitly {@link WarSerialization.SerialFogMap.verify|verify} messages.
         * @param message SerialFogMap message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarSerialization.ISerialFogMap, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SerialFogMap message, length delimited. Does not implicitly {@link WarSerialization.SerialFogMap.verify|verify} messages.
         * @param message SerialFogMap message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarSerialization.ISerialFogMap, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SerialFogMap message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SerialFogMap
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarSerialization.SerialFogMap;

        /**
         * Decodes a SerialFogMap message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SerialFogMap
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarSerialization.SerialFogMap;

        /**
         * Verifies a SerialFogMap message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SerialFogMap message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SerialFogMap
         */
        public static fromObject(object: { [k: string]: any }): WarSerialization.SerialFogMap;

        /**
         * Creates a plain object from a SerialFogMap message. Also converts values to other types if specified.
         * @param message SerialFogMap
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarSerialization.SerialFogMap, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SerialFogMap to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SerialField. */
    interface ISerialField {

        /** SerialField fogMap */
        fogMap?: (WarSerialization.ISerialFogMap|null);

        /** SerialField tileMap */
        tileMap?: (WarSerialization.ISerialTileMap|null);

        /** SerialField unitMap */
        unitMap?: (WarSerialization.ISerialUnitMap|null);
    }

    /** Represents a SerialField. */
    class SerialField implements ISerialField {

        /**
         * Constructs a new SerialField.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarSerialization.ISerialField);

        /** SerialField fogMap. */
        public fogMap?: (WarSerialization.ISerialFogMap|null);

        /** SerialField tileMap. */
        public tileMap?: (WarSerialization.ISerialTileMap|null);

        /** SerialField unitMap. */
        public unitMap?: (WarSerialization.ISerialUnitMap|null);

        /**
         * Creates a new SerialField instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SerialField instance
         */
        public static create(properties?: WarSerialization.ISerialField): WarSerialization.SerialField;

        /**
         * Encodes the specified SerialField message. Does not implicitly {@link WarSerialization.SerialField.verify|verify} messages.
         * @param message SerialField message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarSerialization.ISerialField, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SerialField message, length delimited. Does not implicitly {@link WarSerialization.SerialField.verify|verify} messages.
         * @param message SerialField message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarSerialization.ISerialField, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SerialField message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SerialField
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarSerialization.SerialField;

        /**
         * Decodes a SerialField message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SerialField
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarSerialization.SerialField;

        /**
         * Verifies a SerialField message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SerialField message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SerialField
         */
        public static fromObject(object: { [k: string]: any }): WarSerialization.SerialField;

        /**
         * Creates a plain object from a SerialField message. Also converts values to other types if specified.
         * @param message SerialField
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarSerialization.SerialField, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SerialField to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SerialWarEventManager. */
    interface ISerialWarEventManager {

        /** SerialWarEventManager warEventFullData */
        warEventFullData?: (Map.IWarEventFullData|null);

        /** SerialWarEventManager calledCountList */
        calledCountList?: (WarSerialization.IDataForWarEventCalledCount[]|null);

        /** SerialWarEventManager customCounterArray */
        customCounterArray?: (WarSerialization.ICustomCounter[]|null);
    }

    /** Represents a SerialWarEventManager. */
    class SerialWarEventManager implements ISerialWarEventManager {

        /**
         * Constructs a new SerialWarEventManager.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarSerialization.ISerialWarEventManager);

        /** SerialWarEventManager warEventFullData. */
        public warEventFullData?: (Map.IWarEventFullData|null);

        /** SerialWarEventManager calledCountList. */
        public calledCountList: WarSerialization.IDataForWarEventCalledCount[];

        /** SerialWarEventManager customCounterArray. */
        public customCounterArray: WarSerialization.ICustomCounter[];

        /**
         * Creates a new SerialWarEventManager instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SerialWarEventManager instance
         */
        public static create(properties?: WarSerialization.ISerialWarEventManager): WarSerialization.SerialWarEventManager;

        /**
         * Encodes the specified SerialWarEventManager message. Does not implicitly {@link WarSerialization.SerialWarEventManager.verify|verify} messages.
         * @param message SerialWarEventManager message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarSerialization.ISerialWarEventManager, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SerialWarEventManager message, length delimited. Does not implicitly {@link WarSerialization.SerialWarEventManager.verify|verify} messages.
         * @param message SerialWarEventManager message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarSerialization.ISerialWarEventManager, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SerialWarEventManager message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SerialWarEventManager
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarSerialization.SerialWarEventManager;

        /**
         * Decodes a SerialWarEventManager message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SerialWarEventManager
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarSerialization.SerialWarEventManager;

        /**
         * Verifies a SerialWarEventManager message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SerialWarEventManager message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SerialWarEventManager
         */
        public static fromObject(object: { [k: string]: any }): WarSerialization.SerialWarEventManager;

        /**
         * Creates a plain object from a SerialWarEventManager message. Also converts values to other types if specified.
         * @param message SerialWarEventManager
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarSerialization.SerialWarEventManager, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SerialWarEventManager to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SerialWeatherManager. */
    interface ISerialWeatherManager {

        /** SerialWeatherManager forceWeatherType */
        forceWeatherType?: (number|null);

        /** SerialWeatherManager expireTurnIndex */
        expireTurnIndex?: (number|null);

        /** SerialWeatherManager expirePlayerIndex */
        expirePlayerIndex?: (number|null);
    }

    /** Represents a SerialWeatherManager. */
    class SerialWeatherManager implements ISerialWeatherManager {

        /**
         * Constructs a new SerialWeatherManager.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarSerialization.ISerialWeatherManager);

        /** SerialWeatherManager forceWeatherType. */
        public forceWeatherType: number;

        /** SerialWeatherManager expireTurnIndex. */
        public expireTurnIndex: number;

        /** SerialWeatherManager expirePlayerIndex. */
        public expirePlayerIndex: number;

        /**
         * Creates a new SerialWeatherManager instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SerialWeatherManager instance
         */
        public static create(properties?: WarSerialization.ISerialWeatherManager): WarSerialization.SerialWeatherManager;

        /**
         * Encodes the specified SerialWeatherManager message. Does not implicitly {@link WarSerialization.SerialWeatherManager.verify|verify} messages.
         * @param message SerialWeatherManager message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarSerialization.ISerialWeatherManager, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SerialWeatherManager message, length delimited. Does not implicitly {@link WarSerialization.SerialWeatherManager.verify|verify} messages.
         * @param message SerialWeatherManager message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarSerialization.ISerialWeatherManager, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SerialWeatherManager message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SerialWeatherManager
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarSerialization.SerialWeatherManager;

        /**
         * Decodes a SerialWeatherManager message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SerialWeatherManager
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarSerialization.SerialWeatherManager;

        /**
         * Verifies a SerialWeatherManager message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SerialWeatherManager message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SerialWeatherManager
         */
        public static fromObject(object: { [k: string]: any }): WarSerialization.SerialWeatherManager;

        /**
         * Creates a plain object from a SerialWeatherManager message. Also converts values to other types if specified.
         * @param message SerialWeatherManager
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarSerialization.SerialWeatherManager, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SerialWeatherManager to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SerialExecutedActionManager. */
    interface ISerialExecutedActionManager {

        /** SerialExecutedActionManager executedActionsCount */
        executedActionsCount?: (number|null);

        /** SerialExecutedActionManager executedActionArray */
        executedActionArray?: (WarAction.IWarActionContainer[]|null);

        /** SerialExecutedActionManager halfwayReplayActionsCount */
        halfwayReplayActionsCount?: (number|null);

        /** SerialExecutedActionManager halfwayReplayActionArray */
        halfwayReplayActionArray?: (WarSerialization.IHalfwayReplayAction[]|null);
    }

    /** Represents a SerialExecutedActionManager. */
    class SerialExecutedActionManager implements ISerialExecutedActionManager {

        /**
         * Constructs a new SerialExecutedActionManager.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarSerialization.ISerialExecutedActionManager);

        /** SerialExecutedActionManager executedActionsCount. */
        public executedActionsCount: number;

        /** SerialExecutedActionManager executedActionArray. */
        public executedActionArray: WarAction.IWarActionContainer[];

        /** SerialExecutedActionManager halfwayReplayActionsCount. */
        public halfwayReplayActionsCount: number;

        /** SerialExecutedActionManager halfwayReplayActionArray. */
        public halfwayReplayActionArray: WarSerialization.IHalfwayReplayAction[];

        /**
         * Creates a new SerialExecutedActionManager instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SerialExecutedActionManager instance
         */
        public static create(properties?: WarSerialization.ISerialExecutedActionManager): WarSerialization.SerialExecutedActionManager;

        /**
         * Encodes the specified SerialExecutedActionManager message. Does not implicitly {@link WarSerialization.SerialExecutedActionManager.verify|verify} messages.
         * @param message SerialExecutedActionManager message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarSerialization.ISerialExecutedActionManager, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SerialExecutedActionManager message, length delimited. Does not implicitly {@link WarSerialization.SerialExecutedActionManager.verify|verify} messages.
         * @param message SerialExecutedActionManager message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarSerialization.ISerialExecutedActionManager, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SerialExecutedActionManager message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SerialExecutedActionManager
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarSerialization.SerialExecutedActionManager;

        /**
         * Decodes a SerialExecutedActionManager message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SerialExecutedActionManager
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarSerialization.SerialExecutedActionManager;

        /**
         * Verifies a SerialExecutedActionManager message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SerialExecutedActionManager message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SerialExecutedActionManager
         */
        public static fromObject(object: { [k: string]: any }): WarSerialization.SerialExecutedActionManager;

        /**
         * Creates a plain object from a SerialExecutedActionManager message. Also converts values to other types if specified.
         * @param message SerialExecutedActionManager
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarSerialization.SerialExecutedActionManager, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SerialExecutedActionManager to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SerialWar. */
    interface ISerialWar {

        /** SerialWar settingsForCommon */
        settingsForCommon?: (WarSettings.ISettingsForCommon|null);

        /** SerialWar settingsForMcw */
        settingsForMcw?: (WarSettings.ISettingsForMcw|null);

        /** SerialWar settingsForScw */
        settingsForScw?: (WarSettings.ISettingsForScw|null);

        /** SerialWar settingsForMrw */
        settingsForMrw?: (WarSettings.ISettingsForMrw|null);

        /** SerialWar settingsForMfw */
        settingsForMfw?: (WarSettings.ISettingsForMfw|null);

        /** SerialWar settingsForSfw */
        settingsForSfw?: (WarSettings.ISettingsForSfw|null);

        /** SerialWar settingsForSrw */
        settingsForSrw?: (WarSettings.ISettingsForSrw|null);

        /** SerialWar settingsForCcw */
        settingsForCcw?: (WarSettings.ISettingsForCcw|null);

        /** SerialWar warId */
        warId?: (number|null);

        /** SerialWar seedRandomInitialState */
        seedRandomInitialState?: (Structure.ISeedRandomState|null);

        /** SerialWar seedRandomCurrentState */
        seedRandomCurrentState?: (Structure.ISeedRandomState|null);

        /** SerialWar deprecatedExecutedActions */
        deprecatedExecutedActions?: (WarAction.IWarActionContainer[]|null);

        /** SerialWar remainingVotesForDraw */
        remainingVotesForDraw?: (number|null);

        /** SerialWar playerManager */
        playerManager?: (WarSerialization.ISerialPlayerManager|null);

        /** SerialWar turnManager */
        turnManager?: (WarSerialization.ISerialTurnManager|null);

        /** SerialWar field */
        field?: (WarSerialization.ISerialField|null);

        /** SerialWar warEventManager */
        warEventManager?: (WarSerialization.ISerialWarEventManager|null);

        /** SerialWar weatherManager */
        weatherManager?: (WarSerialization.ISerialWeatherManager|null);

        /** SerialWar deprecatedHalfwayReplayActionArray */
        deprecatedHalfwayReplayActionArray?: (WarSerialization.IHalfwayReplayAction[]|null);

        /** SerialWar isEnded */
        isEnded?: (boolean|null);

        /** SerialWar executedActionManager */
        executedActionManager?: (WarSerialization.ISerialExecutedActionManager|null);
    }

    /** Represents a SerialWar. */
    class SerialWar implements ISerialWar {

        /**
         * Constructs a new SerialWar.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarSerialization.ISerialWar);

        /** SerialWar settingsForCommon. */
        public settingsForCommon?: (WarSettings.ISettingsForCommon|null);

        /** SerialWar settingsForMcw. */
        public settingsForMcw?: (WarSettings.ISettingsForMcw|null);

        /** SerialWar settingsForScw. */
        public settingsForScw?: (WarSettings.ISettingsForScw|null);

        /** SerialWar settingsForMrw. */
        public settingsForMrw?: (WarSettings.ISettingsForMrw|null);

        /** SerialWar settingsForMfw. */
        public settingsForMfw?: (WarSettings.ISettingsForMfw|null);

        /** SerialWar settingsForSfw. */
        public settingsForSfw?: (WarSettings.ISettingsForSfw|null);

        /** SerialWar settingsForSrw. */
        public settingsForSrw?: (WarSettings.ISettingsForSrw|null);

        /** SerialWar settingsForCcw. */
        public settingsForCcw?: (WarSettings.ISettingsForCcw|null);

        /** SerialWar warId. */
        public warId: number;

        /** SerialWar seedRandomInitialState. */
        public seedRandomInitialState?: (Structure.ISeedRandomState|null);

        /** SerialWar seedRandomCurrentState. */
        public seedRandomCurrentState?: (Structure.ISeedRandomState|null);

        /** SerialWar deprecatedExecutedActions. */
        public deprecatedExecutedActions: WarAction.IWarActionContainer[];

        /** SerialWar remainingVotesForDraw. */
        public remainingVotesForDraw: number;

        /** SerialWar playerManager. */
        public playerManager?: (WarSerialization.ISerialPlayerManager|null);

        /** SerialWar turnManager. */
        public turnManager?: (WarSerialization.ISerialTurnManager|null);

        /** SerialWar field. */
        public field?: (WarSerialization.ISerialField|null);

        /** SerialWar warEventManager. */
        public warEventManager?: (WarSerialization.ISerialWarEventManager|null);

        /** SerialWar weatherManager. */
        public weatherManager?: (WarSerialization.ISerialWeatherManager|null);

        /** SerialWar deprecatedHalfwayReplayActionArray. */
        public deprecatedHalfwayReplayActionArray: WarSerialization.IHalfwayReplayAction[];

        /** SerialWar isEnded. */
        public isEnded: boolean;

        /** SerialWar executedActionManager. */
        public executedActionManager?: (WarSerialization.ISerialExecutedActionManager|null);

        /**
         * Creates a new SerialWar instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SerialWar instance
         */
        public static create(properties?: WarSerialization.ISerialWar): WarSerialization.SerialWar;

        /**
         * Encodes the specified SerialWar message. Does not implicitly {@link WarSerialization.SerialWar.verify|verify} messages.
         * @param message SerialWar message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarSerialization.ISerialWar, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SerialWar message, length delimited. Does not implicitly {@link WarSerialization.SerialWar.verify|verify} messages.
         * @param message SerialWar message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarSerialization.ISerialWar, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SerialWar message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SerialWar
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarSerialization.SerialWar;

        /**
         * Decodes a SerialWar message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SerialWar
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarSerialization.SerialWar;

        /**
         * Verifies a SerialWar message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SerialWar message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SerialWar
         */
        public static fromObject(object: { [k: string]: any }): WarSerialization.SerialWar;

        /**
         * Creates a plain object from a SerialWar message. Also converts values to other types if specified.
         * @param message SerialWar
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarSerialization.SerialWar, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SerialWar to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Properties of a WarAction. */
export declare interface IWarAction {
}

/** Represents a WarAction. */
export declare class WarAction implements IWarAction {

    /**
     * Constructs a new WarAction.
     * @param [properties] Properties to set
     */
    constructor(properties?: IWarAction);

    /**
     * Creates a new WarAction instance using the specified properties.
     * @param [properties] Properties to set
     * @returns WarAction instance
     */
    public static create(properties?: IWarAction): WarAction;

    /**
     * Encodes the specified WarAction message. Does not implicitly {@link WarAction.verify|verify} messages.
     * @param message WarAction message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IWarAction, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Encodes the specified WarAction message, length delimited. Does not implicitly {@link WarAction.verify|verify} messages.
     * @param message WarAction message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IWarAction, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Decodes a WarAction message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns WarAction
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction;

    /**
     * Decodes a WarAction message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns WarAction
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction;

    /**
     * Verifies a WarAction message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a WarAction message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns WarAction
     */
    public static fromObject(object: { [k: string]: any }): WarAction;

    /**
     * Creates a plain object from a WarAction message. Also converts values to other types if specified.
     * @param message WarAction
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: WarAction, options?: protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this WarAction to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export declare namespace WarAction {

    /** Properties of a WarActionSystemBeginTurn. */
    interface IWarActionSystemBeginTurn {

        /** WarActionSystemBeginTurn extraData */
        extraData?: (WarAction.WarActionSystemBeginTurn.IExtraDataForSystemBeginTurn|null);
    }

    /** Represents a WarActionSystemBeginTurn. */
    class WarActionSystemBeginTurn implements IWarActionSystemBeginTurn {

        /**
         * Constructs a new WarActionSystemBeginTurn.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarAction.IWarActionSystemBeginTurn);

        /** WarActionSystemBeginTurn extraData. */
        public extraData?: (WarAction.WarActionSystemBeginTurn.IExtraDataForSystemBeginTurn|null);

        /**
         * Creates a new WarActionSystemBeginTurn instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WarActionSystemBeginTurn instance
         */
        public static create(properties?: WarAction.IWarActionSystemBeginTurn): WarAction.WarActionSystemBeginTurn;

        /**
         * Encodes the specified WarActionSystemBeginTurn message. Does not implicitly {@link WarAction.WarActionSystemBeginTurn.verify|verify} messages.
         * @param message WarActionSystemBeginTurn message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarAction.IWarActionSystemBeginTurn, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WarActionSystemBeginTurn message, length delimited. Does not implicitly {@link WarAction.WarActionSystemBeginTurn.verify|verify} messages.
         * @param message WarActionSystemBeginTurn message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarAction.IWarActionSystemBeginTurn, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarActionSystemBeginTurn message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarActionSystemBeginTurn
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionSystemBeginTurn;

        /**
         * Decodes a WarActionSystemBeginTurn message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WarActionSystemBeginTurn
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionSystemBeginTurn;

        /**
         * Verifies a WarActionSystemBeginTurn message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WarActionSystemBeginTurn message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WarActionSystemBeginTurn
         */
        public static fromObject(object: { [k: string]: any }): WarAction.WarActionSystemBeginTurn;

        /**
         * Creates a plain object from a WarActionSystemBeginTurn message. Also converts values to other types if specified.
         * @param message WarActionSystemBeginTurn
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarAction.WarActionSystemBeginTurn, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WarActionSystemBeginTurn to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace WarActionSystemBeginTurn {

        /** Properties of an ExtraDataForSystemBeginTurn. */
        interface IExtraDataForSystemBeginTurn {

            /** ExtraDataForSystemBeginTurn commonExtraData */
            commonExtraData?: (Structure.ICommonExtraDataForWarAction|null);
        }

        /** Represents an ExtraDataForSystemBeginTurn. */
        class ExtraDataForSystemBeginTurn implements IExtraDataForSystemBeginTurn {

            /**
             * Constructs a new ExtraDataForSystemBeginTurn.
             * @param [properties] Properties to set
             */
            constructor(properties?: WarAction.WarActionSystemBeginTurn.IExtraDataForSystemBeginTurn);

            /** ExtraDataForSystemBeginTurn commonExtraData. */
            public commonExtraData?: (Structure.ICommonExtraDataForWarAction|null);

            /**
             * Creates a new ExtraDataForSystemBeginTurn instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ExtraDataForSystemBeginTurn instance
             */
            public static create(properties?: WarAction.WarActionSystemBeginTurn.IExtraDataForSystemBeginTurn): WarAction.WarActionSystemBeginTurn.ExtraDataForSystemBeginTurn;

            /**
             * Encodes the specified ExtraDataForSystemBeginTurn message. Does not implicitly {@link WarAction.WarActionSystemBeginTurn.ExtraDataForSystemBeginTurn.verify|verify} messages.
             * @param message ExtraDataForSystemBeginTurn message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: WarAction.WarActionSystemBeginTurn.IExtraDataForSystemBeginTurn, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified ExtraDataForSystemBeginTurn message, length delimited. Does not implicitly {@link WarAction.WarActionSystemBeginTurn.ExtraDataForSystemBeginTurn.verify|verify} messages.
             * @param message ExtraDataForSystemBeginTurn message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: WarAction.WarActionSystemBeginTurn.IExtraDataForSystemBeginTurn, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an ExtraDataForSystemBeginTurn message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ExtraDataForSystemBeginTurn
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionSystemBeginTurn.ExtraDataForSystemBeginTurn;

            /**
             * Decodes an ExtraDataForSystemBeginTurn message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ExtraDataForSystemBeginTurn
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionSystemBeginTurn.ExtraDataForSystemBeginTurn;

            /**
             * Verifies an ExtraDataForSystemBeginTurn message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ExtraDataForSystemBeginTurn message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ExtraDataForSystemBeginTurn
             */
            public static fromObject(object: { [k: string]: any }): WarAction.WarActionSystemBeginTurn.ExtraDataForSystemBeginTurn;

            /**
             * Creates a plain object from an ExtraDataForSystemBeginTurn message. Also converts values to other types if specified.
             * @param message ExtraDataForSystemBeginTurn
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: WarAction.WarActionSystemBeginTurn.ExtraDataForSystemBeginTurn, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ExtraDataForSystemBeginTurn to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a WarActionSystemCallWarEvent. */
    interface IWarActionSystemCallWarEvent {

        /** WarActionSystemCallWarEvent warEventId */
        warEventId?: (number|null);

        /** WarActionSystemCallWarEvent extraData */
        extraData?: (WarAction.WarActionSystemCallWarEvent.IExtraDataForSystemCallWarEvent|null);
    }

    /** Represents a WarActionSystemCallWarEvent. */
    class WarActionSystemCallWarEvent implements IWarActionSystemCallWarEvent {

        /**
         * Constructs a new WarActionSystemCallWarEvent.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarAction.IWarActionSystemCallWarEvent);

        /** WarActionSystemCallWarEvent warEventId. */
        public warEventId: number;

        /** WarActionSystemCallWarEvent extraData. */
        public extraData?: (WarAction.WarActionSystemCallWarEvent.IExtraDataForSystemCallWarEvent|null);

        /**
         * Creates a new WarActionSystemCallWarEvent instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WarActionSystemCallWarEvent instance
         */
        public static create(properties?: WarAction.IWarActionSystemCallWarEvent): WarAction.WarActionSystemCallWarEvent;

        /**
         * Encodes the specified WarActionSystemCallWarEvent message. Does not implicitly {@link WarAction.WarActionSystemCallWarEvent.verify|verify} messages.
         * @param message WarActionSystemCallWarEvent message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarAction.IWarActionSystemCallWarEvent, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WarActionSystemCallWarEvent message, length delimited. Does not implicitly {@link WarAction.WarActionSystemCallWarEvent.verify|verify} messages.
         * @param message WarActionSystemCallWarEvent message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarAction.IWarActionSystemCallWarEvent, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarActionSystemCallWarEvent message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarActionSystemCallWarEvent
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionSystemCallWarEvent;

        /**
         * Decodes a WarActionSystemCallWarEvent message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WarActionSystemCallWarEvent
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionSystemCallWarEvent;

        /**
         * Verifies a WarActionSystemCallWarEvent message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WarActionSystemCallWarEvent message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WarActionSystemCallWarEvent
         */
        public static fromObject(object: { [k: string]: any }): WarAction.WarActionSystemCallWarEvent;

        /**
         * Creates a plain object from a WarActionSystemCallWarEvent message. Also converts values to other types if specified.
         * @param message WarActionSystemCallWarEvent
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarAction.WarActionSystemCallWarEvent, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WarActionSystemCallWarEvent to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace WarActionSystemCallWarEvent {

        /** Properties of an ExtraDataForSystemCallWarEvent. */
        interface IExtraDataForSystemCallWarEvent {

            /** ExtraDataForSystemCallWarEvent commonExtraData */
            commonExtraData?: (Structure.ICommonExtraDataForWarAction|null);

            /** ExtraDataForSystemCallWarEvent warEventId */
            warEventId?: (number|null);
        }

        /** Represents an ExtraDataForSystemCallWarEvent. */
        class ExtraDataForSystemCallWarEvent implements IExtraDataForSystemCallWarEvent {

            /**
             * Constructs a new ExtraDataForSystemCallWarEvent.
             * @param [properties] Properties to set
             */
            constructor(properties?: WarAction.WarActionSystemCallWarEvent.IExtraDataForSystemCallWarEvent);

            /** ExtraDataForSystemCallWarEvent commonExtraData. */
            public commonExtraData?: (Structure.ICommonExtraDataForWarAction|null);

            /** ExtraDataForSystemCallWarEvent warEventId. */
            public warEventId: number;

            /**
             * Creates a new ExtraDataForSystemCallWarEvent instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ExtraDataForSystemCallWarEvent instance
             */
            public static create(properties?: WarAction.WarActionSystemCallWarEvent.IExtraDataForSystemCallWarEvent): WarAction.WarActionSystemCallWarEvent.ExtraDataForSystemCallWarEvent;

            /**
             * Encodes the specified ExtraDataForSystemCallWarEvent message. Does not implicitly {@link WarAction.WarActionSystemCallWarEvent.ExtraDataForSystemCallWarEvent.verify|verify} messages.
             * @param message ExtraDataForSystemCallWarEvent message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: WarAction.WarActionSystemCallWarEvent.IExtraDataForSystemCallWarEvent, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified ExtraDataForSystemCallWarEvent message, length delimited. Does not implicitly {@link WarAction.WarActionSystemCallWarEvent.ExtraDataForSystemCallWarEvent.verify|verify} messages.
             * @param message ExtraDataForSystemCallWarEvent message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: WarAction.WarActionSystemCallWarEvent.IExtraDataForSystemCallWarEvent, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an ExtraDataForSystemCallWarEvent message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ExtraDataForSystemCallWarEvent
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionSystemCallWarEvent.ExtraDataForSystemCallWarEvent;

            /**
             * Decodes an ExtraDataForSystemCallWarEvent message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ExtraDataForSystemCallWarEvent
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionSystemCallWarEvent.ExtraDataForSystemCallWarEvent;

            /**
             * Verifies an ExtraDataForSystemCallWarEvent message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ExtraDataForSystemCallWarEvent message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ExtraDataForSystemCallWarEvent
             */
            public static fromObject(object: { [k: string]: any }): WarAction.WarActionSystemCallWarEvent.ExtraDataForSystemCallWarEvent;

            /**
             * Creates a plain object from an ExtraDataForSystemCallWarEvent message. Also converts values to other types if specified.
             * @param message ExtraDataForSystemCallWarEvent
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: WarAction.WarActionSystemCallWarEvent.ExtraDataForSystemCallWarEvent, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ExtraDataForSystemCallWarEvent to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a WarActionSystemDestroyPlayerForce. */
    interface IWarActionSystemDestroyPlayerForce {

        /** WarActionSystemDestroyPlayerForce targetPlayerIndex */
        targetPlayerIndex?: (number|null);

        /** WarActionSystemDestroyPlayerForce extraData */
        extraData?: (WarAction.WarActionSystemDestroyPlayerForce.IExtraDataForSystemDestroyPlayerForce|null);
    }

    /** Represents a WarActionSystemDestroyPlayerForce. */
    class WarActionSystemDestroyPlayerForce implements IWarActionSystemDestroyPlayerForce {

        /**
         * Constructs a new WarActionSystemDestroyPlayerForce.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarAction.IWarActionSystemDestroyPlayerForce);

        /** WarActionSystemDestroyPlayerForce targetPlayerIndex. */
        public targetPlayerIndex: number;

        /** WarActionSystemDestroyPlayerForce extraData. */
        public extraData?: (WarAction.WarActionSystemDestroyPlayerForce.IExtraDataForSystemDestroyPlayerForce|null);

        /**
         * Creates a new WarActionSystemDestroyPlayerForce instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WarActionSystemDestroyPlayerForce instance
         */
        public static create(properties?: WarAction.IWarActionSystemDestroyPlayerForce): WarAction.WarActionSystemDestroyPlayerForce;

        /**
         * Encodes the specified WarActionSystemDestroyPlayerForce message. Does not implicitly {@link WarAction.WarActionSystemDestroyPlayerForce.verify|verify} messages.
         * @param message WarActionSystemDestroyPlayerForce message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarAction.IWarActionSystemDestroyPlayerForce, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WarActionSystemDestroyPlayerForce message, length delimited. Does not implicitly {@link WarAction.WarActionSystemDestroyPlayerForce.verify|verify} messages.
         * @param message WarActionSystemDestroyPlayerForce message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarAction.IWarActionSystemDestroyPlayerForce, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarActionSystemDestroyPlayerForce message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarActionSystemDestroyPlayerForce
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionSystemDestroyPlayerForce;

        /**
         * Decodes a WarActionSystemDestroyPlayerForce message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WarActionSystemDestroyPlayerForce
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionSystemDestroyPlayerForce;

        /**
         * Verifies a WarActionSystemDestroyPlayerForce message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WarActionSystemDestroyPlayerForce message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WarActionSystemDestroyPlayerForce
         */
        public static fromObject(object: { [k: string]: any }): WarAction.WarActionSystemDestroyPlayerForce;

        /**
         * Creates a plain object from a WarActionSystemDestroyPlayerForce message. Also converts values to other types if specified.
         * @param message WarActionSystemDestroyPlayerForce
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarAction.WarActionSystemDestroyPlayerForce, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WarActionSystemDestroyPlayerForce to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace WarActionSystemDestroyPlayerForce {

        /** Properties of an ExtraDataForSystemDestroyPlayerForce. */
        interface IExtraDataForSystemDestroyPlayerForce {

            /** ExtraDataForSystemDestroyPlayerForce commonExtraData */
            commonExtraData?: (Structure.ICommonExtraDataForWarAction|null);

            /** ExtraDataForSystemDestroyPlayerForce targetPlayerIndex */
            targetPlayerIndex?: (number|null);
        }

        /** Represents an ExtraDataForSystemDestroyPlayerForce. */
        class ExtraDataForSystemDestroyPlayerForce implements IExtraDataForSystemDestroyPlayerForce {

            /**
             * Constructs a new ExtraDataForSystemDestroyPlayerForce.
             * @param [properties] Properties to set
             */
            constructor(properties?: WarAction.WarActionSystemDestroyPlayerForce.IExtraDataForSystemDestroyPlayerForce);

            /** ExtraDataForSystemDestroyPlayerForce commonExtraData. */
            public commonExtraData?: (Structure.ICommonExtraDataForWarAction|null);

            /** ExtraDataForSystemDestroyPlayerForce targetPlayerIndex. */
            public targetPlayerIndex: number;

            /**
             * Creates a new ExtraDataForSystemDestroyPlayerForce instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ExtraDataForSystemDestroyPlayerForce instance
             */
            public static create(properties?: WarAction.WarActionSystemDestroyPlayerForce.IExtraDataForSystemDestroyPlayerForce): WarAction.WarActionSystemDestroyPlayerForce.ExtraDataForSystemDestroyPlayerForce;

            /**
             * Encodes the specified ExtraDataForSystemDestroyPlayerForce message. Does not implicitly {@link WarAction.WarActionSystemDestroyPlayerForce.ExtraDataForSystemDestroyPlayerForce.verify|verify} messages.
             * @param message ExtraDataForSystemDestroyPlayerForce message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: WarAction.WarActionSystemDestroyPlayerForce.IExtraDataForSystemDestroyPlayerForce, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified ExtraDataForSystemDestroyPlayerForce message, length delimited. Does not implicitly {@link WarAction.WarActionSystemDestroyPlayerForce.ExtraDataForSystemDestroyPlayerForce.verify|verify} messages.
             * @param message ExtraDataForSystemDestroyPlayerForce message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: WarAction.WarActionSystemDestroyPlayerForce.IExtraDataForSystemDestroyPlayerForce, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an ExtraDataForSystemDestroyPlayerForce message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ExtraDataForSystemDestroyPlayerForce
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionSystemDestroyPlayerForce.ExtraDataForSystemDestroyPlayerForce;

            /**
             * Decodes an ExtraDataForSystemDestroyPlayerForce message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ExtraDataForSystemDestroyPlayerForce
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionSystemDestroyPlayerForce.ExtraDataForSystemDestroyPlayerForce;

            /**
             * Verifies an ExtraDataForSystemDestroyPlayerForce message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ExtraDataForSystemDestroyPlayerForce message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ExtraDataForSystemDestroyPlayerForce
             */
            public static fromObject(object: { [k: string]: any }): WarAction.WarActionSystemDestroyPlayerForce.ExtraDataForSystemDestroyPlayerForce;

            /**
             * Creates a plain object from an ExtraDataForSystemDestroyPlayerForce message. Also converts values to other types if specified.
             * @param message ExtraDataForSystemDestroyPlayerForce
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: WarAction.WarActionSystemDestroyPlayerForce.ExtraDataForSystemDestroyPlayerForce, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ExtraDataForSystemDestroyPlayerForce to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a WarActionSystemEndWar. */
    interface IWarActionSystemEndWar {

        /** WarActionSystemEndWar extraData */
        extraData?: (WarAction.WarActionSystemEndWar.IExtraDataForSystemEndWar|null);
    }

    /** Represents a WarActionSystemEndWar. */
    class WarActionSystemEndWar implements IWarActionSystemEndWar {

        /**
         * Constructs a new WarActionSystemEndWar.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarAction.IWarActionSystemEndWar);

        /** WarActionSystemEndWar extraData. */
        public extraData?: (WarAction.WarActionSystemEndWar.IExtraDataForSystemEndWar|null);

        /**
         * Creates a new WarActionSystemEndWar instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WarActionSystemEndWar instance
         */
        public static create(properties?: WarAction.IWarActionSystemEndWar): WarAction.WarActionSystemEndWar;

        /**
         * Encodes the specified WarActionSystemEndWar message. Does not implicitly {@link WarAction.WarActionSystemEndWar.verify|verify} messages.
         * @param message WarActionSystemEndWar message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarAction.IWarActionSystemEndWar, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WarActionSystemEndWar message, length delimited. Does not implicitly {@link WarAction.WarActionSystemEndWar.verify|verify} messages.
         * @param message WarActionSystemEndWar message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarAction.IWarActionSystemEndWar, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarActionSystemEndWar message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarActionSystemEndWar
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionSystemEndWar;

        /**
         * Decodes a WarActionSystemEndWar message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WarActionSystemEndWar
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionSystemEndWar;

        /**
         * Verifies a WarActionSystemEndWar message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WarActionSystemEndWar message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WarActionSystemEndWar
         */
        public static fromObject(object: { [k: string]: any }): WarAction.WarActionSystemEndWar;

        /**
         * Creates a plain object from a WarActionSystemEndWar message. Also converts values to other types if specified.
         * @param message WarActionSystemEndWar
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarAction.WarActionSystemEndWar, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WarActionSystemEndWar to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace WarActionSystemEndWar {

        /** Properties of an ExtraDataForSystemEndWar. */
        interface IExtraDataForSystemEndWar {

            /** ExtraDataForSystemEndWar commonExtraData */
            commonExtraData?: (Structure.ICommonExtraDataForWarAction|null);
        }

        /** Represents an ExtraDataForSystemEndWar. */
        class ExtraDataForSystemEndWar implements IExtraDataForSystemEndWar {

            /**
             * Constructs a new ExtraDataForSystemEndWar.
             * @param [properties] Properties to set
             */
            constructor(properties?: WarAction.WarActionSystemEndWar.IExtraDataForSystemEndWar);

            /** ExtraDataForSystemEndWar commonExtraData. */
            public commonExtraData?: (Structure.ICommonExtraDataForWarAction|null);

            /**
             * Creates a new ExtraDataForSystemEndWar instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ExtraDataForSystemEndWar instance
             */
            public static create(properties?: WarAction.WarActionSystemEndWar.IExtraDataForSystemEndWar): WarAction.WarActionSystemEndWar.ExtraDataForSystemEndWar;

            /**
             * Encodes the specified ExtraDataForSystemEndWar message. Does not implicitly {@link WarAction.WarActionSystemEndWar.ExtraDataForSystemEndWar.verify|verify} messages.
             * @param message ExtraDataForSystemEndWar message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: WarAction.WarActionSystemEndWar.IExtraDataForSystemEndWar, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified ExtraDataForSystemEndWar message, length delimited. Does not implicitly {@link WarAction.WarActionSystemEndWar.ExtraDataForSystemEndWar.verify|verify} messages.
             * @param message ExtraDataForSystemEndWar message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: WarAction.WarActionSystemEndWar.IExtraDataForSystemEndWar, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an ExtraDataForSystemEndWar message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ExtraDataForSystemEndWar
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionSystemEndWar.ExtraDataForSystemEndWar;

            /**
             * Decodes an ExtraDataForSystemEndWar message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ExtraDataForSystemEndWar
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionSystemEndWar.ExtraDataForSystemEndWar;

            /**
             * Verifies an ExtraDataForSystemEndWar message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ExtraDataForSystemEndWar message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ExtraDataForSystemEndWar
             */
            public static fromObject(object: { [k: string]: any }): WarAction.WarActionSystemEndWar.ExtraDataForSystemEndWar;

            /**
             * Creates a plain object from an ExtraDataForSystemEndWar message. Also converts values to other types if specified.
             * @param message ExtraDataForSystemEndWar
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: WarAction.WarActionSystemEndWar.ExtraDataForSystemEndWar, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ExtraDataForSystemEndWar to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a WarActionSystemEndTurn. */
    interface IWarActionSystemEndTurn {

        /** WarActionSystemEndTurn extraData */
        extraData?: (WarAction.WarActionSystemEndTurn.IExtraDataForSystemEndTurn|null);
    }

    /** Represents a WarActionSystemEndTurn. */
    class WarActionSystemEndTurn implements IWarActionSystemEndTurn {

        /**
         * Constructs a new WarActionSystemEndTurn.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarAction.IWarActionSystemEndTurn);

        /** WarActionSystemEndTurn extraData. */
        public extraData?: (WarAction.WarActionSystemEndTurn.IExtraDataForSystemEndTurn|null);

        /**
         * Creates a new WarActionSystemEndTurn instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WarActionSystemEndTurn instance
         */
        public static create(properties?: WarAction.IWarActionSystemEndTurn): WarAction.WarActionSystemEndTurn;

        /**
         * Encodes the specified WarActionSystemEndTurn message. Does not implicitly {@link WarAction.WarActionSystemEndTurn.verify|verify} messages.
         * @param message WarActionSystemEndTurn message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarAction.IWarActionSystemEndTurn, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WarActionSystemEndTurn message, length delimited. Does not implicitly {@link WarAction.WarActionSystemEndTurn.verify|verify} messages.
         * @param message WarActionSystemEndTurn message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarAction.IWarActionSystemEndTurn, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarActionSystemEndTurn message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarActionSystemEndTurn
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionSystemEndTurn;

        /**
         * Decodes a WarActionSystemEndTurn message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WarActionSystemEndTurn
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionSystemEndTurn;

        /**
         * Verifies a WarActionSystemEndTurn message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WarActionSystemEndTurn message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WarActionSystemEndTurn
         */
        public static fromObject(object: { [k: string]: any }): WarAction.WarActionSystemEndTurn;

        /**
         * Creates a plain object from a WarActionSystemEndTurn message. Also converts values to other types if specified.
         * @param message WarActionSystemEndTurn
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarAction.WarActionSystemEndTurn, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WarActionSystemEndTurn to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace WarActionSystemEndTurn {

        /** Properties of an ExtraDataForSystemEndTurn. */
        interface IExtraDataForSystemEndTurn {

            /** ExtraDataForSystemEndTurn commonExtraData */
            commonExtraData?: (Structure.ICommonExtraDataForWarAction|null);
        }

        /** Represents an ExtraDataForSystemEndTurn. */
        class ExtraDataForSystemEndTurn implements IExtraDataForSystemEndTurn {

            /**
             * Constructs a new ExtraDataForSystemEndTurn.
             * @param [properties] Properties to set
             */
            constructor(properties?: WarAction.WarActionSystemEndTurn.IExtraDataForSystemEndTurn);

            /** ExtraDataForSystemEndTurn commonExtraData. */
            public commonExtraData?: (Structure.ICommonExtraDataForWarAction|null);

            /**
             * Creates a new ExtraDataForSystemEndTurn instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ExtraDataForSystemEndTurn instance
             */
            public static create(properties?: WarAction.WarActionSystemEndTurn.IExtraDataForSystemEndTurn): WarAction.WarActionSystemEndTurn.ExtraDataForSystemEndTurn;

            /**
             * Encodes the specified ExtraDataForSystemEndTurn message. Does not implicitly {@link WarAction.WarActionSystemEndTurn.ExtraDataForSystemEndTurn.verify|verify} messages.
             * @param message ExtraDataForSystemEndTurn message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: WarAction.WarActionSystemEndTurn.IExtraDataForSystemEndTurn, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified ExtraDataForSystemEndTurn message, length delimited. Does not implicitly {@link WarAction.WarActionSystemEndTurn.ExtraDataForSystemEndTurn.verify|verify} messages.
             * @param message ExtraDataForSystemEndTurn message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: WarAction.WarActionSystemEndTurn.IExtraDataForSystemEndTurn, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an ExtraDataForSystemEndTurn message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ExtraDataForSystemEndTurn
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionSystemEndTurn.ExtraDataForSystemEndTurn;

            /**
             * Decodes an ExtraDataForSystemEndTurn message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ExtraDataForSystemEndTurn
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionSystemEndTurn.ExtraDataForSystemEndTurn;

            /**
             * Verifies an ExtraDataForSystemEndTurn message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ExtraDataForSystemEndTurn message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ExtraDataForSystemEndTurn
             */
            public static fromObject(object: { [k: string]: any }): WarAction.WarActionSystemEndTurn.ExtraDataForSystemEndTurn;

            /**
             * Creates a plain object from an ExtraDataForSystemEndTurn message. Also converts values to other types if specified.
             * @param message ExtraDataForSystemEndTurn
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: WarAction.WarActionSystemEndTurn.ExtraDataForSystemEndTurn, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ExtraDataForSystemEndTurn to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a WarActionSystemHandleBootPlayer. */
    interface IWarActionSystemHandleBootPlayer {

        /** WarActionSystemHandleBootPlayer extraData */
        extraData?: (WarAction.WarActionSystemHandleBootPlayer.IExtraDataForSystemHandleBootPlayer|null);
    }

    /** Represents a WarActionSystemHandleBootPlayer. */
    class WarActionSystemHandleBootPlayer implements IWarActionSystemHandleBootPlayer {

        /**
         * Constructs a new WarActionSystemHandleBootPlayer.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarAction.IWarActionSystemHandleBootPlayer);

        /** WarActionSystemHandleBootPlayer extraData. */
        public extraData?: (WarAction.WarActionSystemHandleBootPlayer.IExtraDataForSystemHandleBootPlayer|null);

        /**
         * Creates a new WarActionSystemHandleBootPlayer instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WarActionSystemHandleBootPlayer instance
         */
        public static create(properties?: WarAction.IWarActionSystemHandleBootPlayer): WarAction.WarActionSystemHandleBootPlayer;

        /**
         * Encodes the specified WarActionSystemHandleBootPlayer message. Does not implicitly {@link WarAction.WarActionSystemHandleBootPlayer.verify|verify} messages.
         * @param message WarActionSystemHandleBootPlayer message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarAction.IWarActionSystemHandleBootPlayer, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WarActionSystemHandleBootPlayer message, length delimited. Does not implicitly {@link WarAction.WarActionSystemHandleBootPlayer.verify|verify} messages.
         * @param message WarActionSystemHandleBootPlayer message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarAction.IWarActionSystemHandleBootPlayer, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarActionSystemHandleBootPlayer message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarActionSystemHandleBootPlayer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionSystemHandleBootPlayer;

        /**
         * Decodes a WarActionSystemHandleBootPlayer message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WarActionSystemHandleBootPlayer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionSystemHandleBootPlayer;

        /**
         * Verifies a WarActionSystemHandleBootPlayer message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WarActionSystemHandleBootPlayer message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WarActionSystemHandleBootPlayer
         */
        public static fromObject(object: { [k: string]: any }): WarAction.WarActionSystemHandleBootPlayer;

        /**
         * Creates a plain object from a WarActionSystemHandleBootPlayer message. Also converts values to other types if specified.
         * @param message WarActionSystemHandleBootPlayer
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarAction.WarActionSystemHandleBootPlayer, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WarActionSystemHandleBootPlayer to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace WarActionSystemHandleBootPlayer {

        /** Properties of an ExtraDataForSystemHandleBootPlayer. */
        interface IExtraDataForSystemHandleBootPlayer {

            /** ExtraDataForSystemHandleBootPlayer commonExtraData */
            commonExtraData?: (Structure.ICommonExtraDataForWarAction|null);
        }

        /** Represents an ExtraDataForSystemHandleBootPlayer. */
        class ExtraDataForSystemHandleBootPlayer implements IExtraDataForSystemHandleBootPlayer {

            /**
             * Constructs a new ExtraDataForSystemHandleBootPlayer.
             * @param [properties] Properties to set
             */
            constructor(properties?: WarAction.WarActionSystemHandleBootPlayer.IExtraDataForSystemHandleBootPlayer);

            /** ExtraDataForSystemHandleBootPlayer commonExtraData. */
            public commonExtraData?: (Structure.ICommonExtraDataForWarAction|null);

            /**
             * Creates a new ExtraDataForSystemHandleBootPlayer instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ExtraDataForSystemHandleBootPlayer instance
             */
            public static create(properties?: WarAction.WarActionSystemHandleBootPlayer.IExtraDataForSystemHandleBootPlayer): WarAction.WarActionSystemHandleBootPlayer.ExtraDataForSystemHandleBootPlayer;

            /**
             * Encodes the specified ExtraDataForSystemHandleBootPlayer message. Does not implicitly {@link WarAction.WarActionSystemHandleBootPlayer.ExtraDataForSystemHandleBootPlayer.verify|verify} messages.
             * @param message ExtraDataForSystemHandleBootPlayer message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: WarAction.WarActionSystemHandleBootPlayer.IExtraDataForSystemHandleBootPlayer, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified ExtraDataForSystemHandleBootPlayer message, length delimited. Does not implicitly {@link WarAction.WarActionSystemHandleBootPlayer.ExtraDataForSystemHandleBootPlayer.verify|verify} messages.
             * @param message ExtraDataForSystemHandleBootPlayer message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: WarAction.WarActionSystemHandleBootPlayer.IExtraDataForSystemHandleBootPlayer, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an ExtraDataForSystemHandleBootPlayer message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ExtraDataForSystemHandleBootPlayer
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionSystemHandleBootPlayer.ExtraDataForSystemHandleBootPlayer;

            /**
             * Decodes an ExtraDataForSystemHandleBootPlayer message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ExtraDataForSystemHandleBootPlayer
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionSystemHandleBootPlayer.ExtraDataForSystemHandleBootPlayer;

            /**
             * Verifies an ExtraDataForSystemHandleBootPlayer message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ExtraDataForSystemHandleBootPlayer message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ExtraDataForSystemHandleBootPlayer
             */
            public static fromObject(object: { [k: string]: any }): WarAction.WarActionSystemHandleBootPlayer.ExtraDataForSystemHandleBootPlayer;

            /**
             * Creates a plain object from an ExtraDataForSystemHandleBootPlayer message. Also converts values to other types if specified.
             * @param message ExtraDataForSystemHandleBootPlayer
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: WarAction.WarActionSystemHandleBootPlayer.ExtraDataForSystemHandleBootPlayer, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ExtraDataForSystemHandleBootPlayer to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a WarActionSystemVoteForDraw. */
    interface IWarActionSystemVoteForDraw {

        /** WarActionSystemVoteForDraw isAgree */
        isAgree?: (boolean|null);

        /** WarActionSystemVoteForDraw extraData */
        extraData?: (WarAction.WarActionSystemVoteForDraw.IExtraDataForSystemVoteForDraw|null);
    }

    /** Represents a WarActionSystemVoteForDraw. */
    class WarActionSystemVoteForDraw implements IWarActionSystemVoteForDraw {

        /**
         * Constructs a new WarActionSystemVoteForDraw.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarAction.IWarActionSystemVoteForDraw);

        /** WarActionSystemVoteForDraw isAgree. */
        public isAgree: boolean;

        /** WarActionSystemVoteForDraw extraData. */
        public extraData?: (WarAction.WarActionSystemVoteForDraw.IExtraDataForSystemVoteForDraw|null);

        /**
         * Creates a new WarActionSystemVoteForDraw instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WarActionSystemVoteForDraw instance
         */
        public static create(properties?: WarAction.IWarActionSystemVoteForDraw): WarAction.WarActionSystemVoteForDraw;

        /**
         * Encodes the specified WarActionSystemVoteForDraw message. Does not implicitly {@link WarAction.WarActionSystemVoteForDraw.verify|verify} messages.
         * @param message WarActionSystemVoteForDraw message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarAction.IWarActionSystemVoteForDraw, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WarActionSystemVoteForDraw message, length delimited. Does not implicitly {@link WarAction.WarActionSystemVoteForDraw.verify|verify} messages.
         * @param message WarActionSystemVoteForDraw message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarAction.IWarActionSystemVoteForDraw, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarActionSystemVoteForDraw message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarActionSystemVoteForDraw
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionSystemVoteForDraw;

        /**
         * Decodes a WarActionSystemVoteForDraw message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WarActionSystemVoteForDraw
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionSystemVoteForDraw;

        /**
         * Verifies a WarActionSystemVoteForDraw message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WarActionSystemVoteForDraw message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WarActionSystemVoteForDraw
         */
        public static fromObject(object: { [k: string]: any }): WarAction.WarActionSystemVoteForDraw;

        /**
         * Creates a plain object from a WarActionSystemVoteForDraw message. Also converts values to other types if specified.
         * @param message WarActionSystemVoteForDraw
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarAction.WarActionSystemVoteForDraw, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WarActionSystemVoteForDraw to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace WarActionSystemVoteForDraw {

        /** Properties of an ExtraDataForSystemVoteForDraw. */
        interface IExtraDataForSystemVoteForDraw {

            /** ExtraDataForSystemVoteForDraw commonExtraData */
            commonExtraData?: (Structure.ICommonExtraDataForWarAction|null);

            /** ExtraDataForSystemVoteForDraw isAgree */
            isAgree?: (boolean|null);
        }

        /** Represents an ExtraDataForSystemVoteForDraw. */
        class ExtraDataForSystemVoteForDraw implements IExtraDataForSystemVoteForDraw {

            /**
             * Constructs a new ExtraDataForSystemVoteForDraw.
             * @param [properties] Properties to set
             */
            constructor(properties?: WarAction.WarActionSystemVoteForDraw.IExtraDataForSystemVoteForDraw);

            /** ExtraDataForSystemVoteForDraw commonExtraData. */
            public commonExtraData?: (Structure.ICommonExtraDataForWarAction|null);

            /** ExtraDataForSystemVoteForDraw isAgree. */
            public isAgree: boolean;

            /**
             * Creates a new ExtraDataForSystemVoteForDraw instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ExtraDataForSystemVoteForDraw instance
             */
            public static create(properties?: WarAction.WarActionSystemVoteForDraw.IExtraDataForSystemVoteForDraw): WarAction.WarActionSystemVoteForDraw.ExtraDataForSystemVoteForDraw;

            /**
             * Encodes the specified ExtraDataForSystemVoteForDraw message. Does not implicitly {@link WarAction.WarActionSystemVoteForDraw.ExtraDataForSystemVoteForDraw.verify|verify} messages.
             * @param message ExtraDataForSystemVoteForDraw message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: WarAction.WarActionSystemVoteForDraw.IExtraDataForSystemVoteForDraw, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified ExtraDataForSystemVoteForDraw message, length delimited. Does not implicitly {@link WarAction.WarActionSystemVoteForDraw.ExtraDataForSystemVoteForDraw.verify|verify} messages.
             * @param message ExtraDataForSystemVoteForDraw message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: WarAction.WarActionSystemVoteForDraw.IExtraDataForSystemVoteForDraw, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an ExtraDataForSystemVoteForDraw message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ExtraDataForSystemVoteForDraw
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionSystemVoteForDraw.ExtraDataForSystemVoteForDraw;

            /**
             * Decodes an ExtraDataForSystemVoteForDraw message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ExtraDataForSystemVoteForDraw
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionSystemVoteForDraw.ExtraDataForSystemVoteForDraw;

            /**
             * Verifies an ExtraDataForSystemVoteForDraw message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ExtraDataForSystemVoteForDraw message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ExtraDataForSystemVoteForDraw
             */
            public static fromObject(object: { [k: string]: any }): WarAction.WarActionSystemVoteForDraw.ExtraDataForSystemVoteForDraw;

            /**
             * Creates a plain object from an ExtraDataForSystemVoteForDraw message. Also converts values to other types if specified.
             * @param message ExtraDataForSystemVoteForDraw
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: WarAction.WarActionSystemVoteForDraw.ExtraDataForSystemVoteForDraw, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ExtraDataForSystemVoteForDraw to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a WarActionPlayerEndTurn. */
    interface IWarActionPlayerEndTurn {

        /** WarActionPlayerEndTurn extraData */
        extraData?: (WarAction.WarActionPlayerEndTurn.IExtraDataForPlayerEndTurn|null);
    }

    /** Represents a WarActionPlayerEndTurn. */
    class WarActionPlayerEndTurn implements IWarActionPlayerEndTurn {

        /**
         * Constructs a new WarActionPlayerEndTurn.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarAction.IWarActionPlayerEndTurn);

        /** WarActionPlayerEndTurn extraData. */
        public extraData?: (WarAction.WarActionPlayerEndTurn.IExtraDataForPlayerEndTurn|null);

        /**
         * Creates a new WarActionPlayerEndTurn instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WarActionPlayerEndTurn instance
         */
        public static create(properties?: WarAction.IWarActionPlayerEndTurn): WarAction.WarActionPlayerEndTurn;

        /**
         * Encodes the specified WarActionPlayerEndTurn message. Does not implicitly {@link WarAction.WarActionPlayerEndTurn.verify|verify} messages.
         * @param message WarActionPlayerEndTurn message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarAction.IWarActionPlayerEndTurn, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WarActionPlayerEndTurn message, length delimited. Does not implicitly {@link WarAction.WarActionPlayerEndTurn.verify|verify} messages.
         * @param message WarActionPlayerEndTurn message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarAction.IWarActionPlayerEndTurn, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarActionPlayerEndTurn message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarActionPlayerEndTurn
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionPlayerEndTurn;

        /**
         * Decodes a WarActionPlayerEndTurn message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WarActionPlayerEndTurn
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionPlayerEndTurn;

        /**
         * Verifies a WarActionPlayerEndTurn message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WarActionPlayerEndTurn message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WarActionPlayerEndTurn
         */
        public static fromObject(object: { [k: string]: any }): WarAction.WarActionPlayerEndTurn;

        /**
         * Creates a plain object from a WarActionPlayerEndTurn message. Also converts values to other types if specified.
         * @param message WarActionPlayerEndTurn
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarAction.WarActionPlayerEndTurn, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WarActionPlayerEndTurn to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace WarActionPlayerEndTurn {

        /** Properties of an ExtraDataForPlayerEndTurn. */
        interface IExtraDataForPlayerEndTurn {

            /** ExtraDataForPlayerEndTurn commonExtraData */
            commonExtraData?: (Structure.ICommonExtraDataForWarAction|null);
        }

        /** Represents an ExtraDataForPlayerEndTurn. */
        class ExtraDataForPlayerEndTurn implements IExtraDataForPlayerEndTurn {

            /**
             * Constructs a new ExtraDataForPlayerEndTurn.
             * @param [properties] Properties to set
             */
            constructor(properties?: WarAction.WarActionPlayerEndTurn.IExtraDataForPlayerEndTurn);

            /** ExtraDataForPlayerEndTurn commonExtraData. */
            public commonExtraData?: (Structure.ICommonExtraDataForWarAction|null);

            /**
             * Creates a new ExtraDataForPlayerEndTurn instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ExtraDataForPlayerEndTurn instance
             */
            public static create(properties?: WarAction.WarActionPlayerEndTurn.IExtraDataForPlayerEndTurn): WarAction.WarActionPlayerEndTurn.ExtraDataForPlayerEndTurn;

            /**
             * Encodes the specified ExtraDataForPlayerEndTurn message. Does not implicitly {@link WarAction.WarActionPlayerEndTurn.ExtraDataForPlayerEndTurn.verify|verify} messages.
             * @param message ExtraDataForPlayerEndTurn message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: WarAction.WarActionPlayerEndTurn.IExtraDataForPlayerEndTurn, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified ExtraDataForPlayerEndTurn message, length delimited. Does not implicitly {@link WarAction.WarActionPlayerEndTurn.ExtraDataForPlayerEndTurn.verify|verify} messages.
             * @param message ExtraDataForPlayerEndTurn message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: WarAction.WarActionPlayerEndTurn.IExtraDataForPlayerEndTurn, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an ExtraDataForPlayerEndTurn message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ExtraDataForPlayerEndTurn
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionPlayerEndTurn.ExtraDataForPlayerEndTurn;

            /**
             * Decodes an ExtraDataForPlayerEndTurn message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ExtraDataForPlayerEndTurn
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionPlayerEndTurn.ExtraDataForPlayerEndTurn;

            /**
             * Verifies an ExtraDataForPlayerEndTurn message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ExtraDataForPlayerEndTurn message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ExtraDataForPlayerEndTurn
             */
            public static fromObject(object: { [k: string]: any }): WarAction.WarActionPlayerEndTurn.ExtraDataForPlayerEndTurn;

            /**
             * Creates a plain object from an ExtraDataForPlayerEndTurn message. Also converts values to other types if specified.
             * @param message ExtraDataForPlayerEndTurn
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: WarAction.WarActionPlayerEndTurn.ExtraDataForPlayerEndTurn, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ExtraDataForPlayerEndTurn to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a WarActionPlayerSurrender. */
    interface IWarActionPlayerSurrender {

        /** WarActionPlayerSurrender deprecatedIsBoot */
        deprecatedIsBoot?: (boolean|null);

        /** WarActionPlayerSurrender extraData */
        extraData?: (WarAction.WarActionPlayerSurrender.IExtraDataForPlayerSurrender|null);
    }

    /** Represents a WarActionPlayerSurrender. */
    class WarActionPlayerSurrender implements IWarActionPlayerSurrender {

        /**
         * Constructs a new WarActionPlayerSurrender.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarAction.IWarActionPlayerSurrender);

        /** WarActionPlayerSurrender deprecatedIsBoot. */
        public deprecatedIsBoot: boolean;

        /** WarActionPlayerSurrender extraData. */
        public extraData?: (WarAction.WarActionPlayerSurrender.IExtraDataForPlayerSurrender|null);

        /**
         * Creates a new WarActionPlayerSurrender instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WarActionPlayerSurrender instance
         */
        public static create(properties?: WarAction.IWarActionPlayerSurrender): WarAction.WarActionPlayerSurrender;

        /**
         * Encodes the specified WarActionPlayerSurrender message. Does not implicitly {@link WarAction.WarActionPlayerSurrender.verify|verify} messages.
         * @param message WarActionPlayerSurrender message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarAction.IWarActionPlayerSurrender, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WarActionPlayerSurrender message, length delimited. Does not implicitly {@link WarAction.WarActionPlayerSurrender.verify|verify} messages.
         * @param message WarActionPlayerSurrender message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarAction.IWarActionPlayerSurrender, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarActionPlayerSurrender message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarActionPlayerSurrender
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionPlayerSurrender;

        /**
         * Decodes a WarActionPlayerSurrender message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WarActionPlayerSurrender
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionPlayerSurrender;

        /**
         * Verifies a WarActionPlayerSurrender message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WarActionPlayerSurrender message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WarActionPlayerSurrender
         */
        public static fromObject(object: { [k: string]: any }): WarAction.WarActionPlayerSurrender;

        /**
         * Creates a plain object from a WarActionPlayerSurrender message. Also converts values to other types if specified.
         * @param message WarActionPlayerSurrender
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarAction.WarActionPlayerSurrender, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WarActionPlayerSurrender to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace WarActionPlayerSurrender {

        /** Properties of an ExtraDataForPlayerSurrender. */
        interface IExtraDataForPlayerSurrender {

            /** ExtraDataForPlayerSurrender commonExtraData */
            commonExtraData?: (Structure.ICommonExtraDataForWarAction|null);
        }

        /** Represents an ExtraDataForPlayerSurrender. */
        class ExtraDataForPlayerSurrender implements IExtraDataForPlayerSurrender {

            /**
             * Constructs a new ExtraDataForPlayerSurrender.
             * @param [properties] Properties to set
             */
            constructor(properties?: WarAction.WarActionPlayerSurrender.IExtraDataForPlayerSurrender);

            /** ExtraDataForPlayerSurrender commonExtraData. */
            public commonExtraData?: (Structure.ICommonExtraDataForWarAction|null);

            /**
             * Creates a new ExtraDataForPlayerSurrender instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ExtraDataForPlayerSurrender instance
             */
            public static create(properties?: WarAction.WarActionPlayerSurrender.IExtraDataForPlayerSurrender): WarAction.WarActionPlayerSurrender.ExtraDataForPlayerSurrender;

            /**
             * Encodes the specified ExtraDataForPlayerSurrender message. Does not implicitly {@link WarAction.WarActionPlayerSurrender.ExtraDataForPlayerSurrender.verify|verify} messages.
             * @param message ExtraDataForPlayerSurrender message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: WarAction.WarActionPlayerSurrender.IExtraDataForPlayerSurrender, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified ExtraDataForPlayerSurrender message, length delimited. Does not implicitly {@link WarAction.WarActionPlayerSurrender.ExtraDataForPlayerSurrender.verify|verify} messages.
             * @param message ExtraDataForPlayerSurrender message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: WarAction.WarActionPlayerSurrender.IExtraDataForPlayerSurrender, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an ExtraDataForPlayerSurrender message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ExtraDataForPlayerSurrender
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionPlayerSurrender.ExtraDataForPlayerSurrender;

            /**
             * Decodes an ExtraDataForPlayerSurrender message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ExtraDataForPlayerSurrender
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionPlayerSurrender.ExtraDataForPlayerSurrender;

            /**
             * Verifies an ExtraDataForPlayerSurrender message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ExtraDataForPlayerSurrender message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ExtraDataForPlayerSurrender
             */
            public static fromObject(object: { [k: string]: any }): WarAction.WarActionPlayerSurrender.ExtraDataForPlayerSurrender;

            /**
             * Creates a plain object from an ExtraDataForPlayerSurrender message. Also converts values to other types if specified.
             * @param message ExtraDataForPlayerSurrender
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: WarAction.WarActionPlayerSurrender.ExtraDataForPlayerSurrender, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ExtraDataForPlayerSurrender to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a WarActionPlayerProduceUnit. */
    interface IWarActionPlayerProduceUnit {

        /** WarActionPlayerProduceUnit gridIndex */
        gridIndex?: (Structure.IGridIndex|null);

        /** WarActionPlayerProduceUnit unitType */
        unitType?: (number|null);

        /** WarActionPlayerProduceUnit unitHp */
        unitHp?: (number|null);

        /** WarActionPlayerProduceUnit extraData */
        extraData?: (WarAction.WarActionPlayerProduceUnit.IExtraDataForPlayerProduceUnit|null);
    }

    /** Represents a WarActionPlayerProduceUnit. */
    class WarActionPlayerProduceUnit implements IWarActionPlayerProduceUnit {

        /**
         * Constructs a new WarActionPlayerProduceUnit.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarAction.IWarActionPlayerProduceUnit);

        /** WarActionPlayerProduceUnit gridIndex. */
        public gridIndex?: (Structure.IGridIndex|null);

        /** WarActionPlayerProduceUnit unitType. */
        public unitType: number;

        /** WarActionPlayerProduceUnit unitHp. */
        public unitHp: number;

        /** WarActionPlayerProduceUnit extraData. */
        public extraData?: (WarAction.WarActionPlayerProduceUnit.IExtraDataForPlayerProduceUnit|null);

        /**
         * Creates a new WarActionPlayerProduceUnit instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WarActionPlayerProduceUnit instance
         */
        public static create(properties?: WarAction.IWarActionPlayerProduceUnit): WarAction.WarActionPlayerProduceUnit;

        /**
         * Encodes the specified WarActionPlayerProduceUnit message. Does not implicitly {@link WarAction.WarActionPlayerProduceUnit.verify|verify} messages.
         * @param message WarActionPlayerProduceUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarAction.IWarActionPlayerProduceUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WarActionPlayerProduceUnit message, length delimited. Does not implicitly {@link WarAction.WarActionPlayerProduceUnit.verify|verify} messages.
         * @param message WarActionPlayerProduceUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarAction.IWarActionPlayerProduceUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarActionPlayerProduceUnit message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarActionPlayerProduceUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionPlayerProduceUnit;

        /**
         * Decodes a WarActionPlayerProduceUnit message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WarActionPlayerProduceUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionPlayerProduceUnit;

        /**
         * Verifies a WarActionPlayerProduceUnit message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WarActionPlayerProduceUnit message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WarActionPlayerProduceUnit
         */
        public static fromObject(object: { [k: string]: any }): WarAction.WarActionPlayerProduceUnit;

        /**
         * Creates a plain object from a WarActionPlayerProduceUnit message. Also converts values to other types if specified.
         * @param message WarActionPlayerProduceUnit
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarAction.WarActionPlayerProduceUnit, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WarActionPlayerProduceUnit to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace WarActionPlayerProduceUnit {

        /** Properties of an ExtraDataForPlayerProduceUnit. */
        interface IExtraDataForPlayerProduceUnit {

            /** ExtraDataForPlayerProduceUnit commonExtraData */
            commonExtraData?: (Structure.ICommonExtraDataForWarAction|null);
        }

        /** Represents an ExtraDataForPlayerProduceUnit. */
        class ExtraDataForPlayerProduceUnit implements IExtraDataForPlayerProduceUnit {

            /**
             * Constructs a new ExtraDataForPlayerProduceUnit.
             * @param [properties] Properties to set
             */
            constructor(properties?: WarAction.WarActionPlayerProduceUnit.IExtraDataForPlayerProduceUnit);

            /** ExtraDataForPlayerProduceUnit commonExtraData. */
            public commonExtraData?: (Structure.ICommonExtraDataForWarAction|null);

            /**
             * Creates a new ExtraDataForPlayerProduceUnit instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ExtraDataForPlayerProduceUnit instance
             */
            public static create(properties?: WarAction.WarActionPlayerProduceUnit.IExtraDataForPlayerProduceUnit): WarAction.WarActionPlayerProduceUnit.ExtraDataForPlayerProduceUnit;

            /**
             * Encodes the specified ExtraDataForPlayerProduceUnit message. Does not implicitly {@link WarAction.WarActionPlayerProduceUnit.ExtraDataForPlayerProduceUnit.verify|verify} messages.
             * @param message ExtraDataForPlayerProduceUnit message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: WarAction.WarActionPlayerProduceUnit.IExtraDataForPlayerProduceUnit, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified ExtraDataForPlayerProduceUnit message, length delimited. Does not implicitly {@link WarAction.WarActionPlayerProduceUnit.ExtraDataForPlayerProduceUnit.verify|verify} messages.
             * @param message ExtraDataForPlayerProduceUnit message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: WarAction.WarActionPlayerProduceUnit.IExtraDataForPlayerProduceUnit, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an ExtraDataForPlayerProduceUnit message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ExtraDataForPlayerProduceUnit
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionPlayerProduceUnit.ExtraDataForPlayerProduceUnit;

            /**
             * Decodes an ExtraDataForPlayerProduceUnit message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ExtraDataForPlayerProduceUnit
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionPlayerProduceUnit.ExtraDataForPlayerProduceUnit;

            /**
             * Verifies an ExtraDataForPlayerProduceUnit message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ExtraDataForPlayerProduceUnit message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ExtraDataForPlayerProduceUnit
             */
            public static fromObject(object: { [k: string]: any }): WarAction.WarActionPlayerProduceUnit.ExtraDataForPlayerProduceUnit;

            /**
             * Creates a plain object from an ExtraDataForPlayerProduceUnit message. Also converts values to other types if specified.
             * @param message ExtraDataForPlayerProduceUnit
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: WarAction.WarActionPlayerProduceUnit.ExtraDataForPlayerProduceUnit, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ExtraDataForPlayerProduceUnit to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a WarActionPlayerDeleteUnit. */
    interface IWarActionPlayerDeleteUnit {

        /** WarActionPlayerDeleteUnit gridIndex */
        gridIndex?: (Structure.IGridIndex|null);

        /** WarActionPlayerDeleteUnit extraData */
        extraData?: (WarAction.WarActionPlayerDeleteUnit.IExtraDataForPlayerDeleteUnit|null);
    }

    /** Represents a WarActionPlayerDeleteUnit. */
    class WarActionPlayerDeleteUnit implements IWarActionPlayerDeleteUnit {

        /**
         * Constructs a new WarActionPlayerDeleteUnit.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarAction.IWarActionPlayerDeleteUnit);

        /** WarActionPlayerDeleteUnit gridIndex. */
        public gridIndex?: (Structure.IGridIndex|null);

        /** WarActionPlayerDeleteUnit extraData. */
        public extraData?: (WarAction.WarActionPlayerDeleteUnit.IExtraDataForPlayerDeleteUnit|null);

        /**
         * Creates a new WarActionPlayerDeleteUnit instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WarActionPlayerDeleteUnit instance
         */
        public static create(properties?: WarAction.IWarActionPlayerDeleteUnit): WarAction.WarActionPlayerDeleteUnit;

        /**
         * Encodes the specified WarActionPlayerDeleteUnit message. Does not implicitly {@link WarAction.WarActionPlayerDeleteUnit.verify|verify} messages.
         * @param message WarActionPlayerDeleteUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarAction.IWarActionPlayerDeleteUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WarActionPlayerDeleteUnit message, length delimited. Does not implicitly {@link WarAction.WarActionPlayerDeleteUnit.verify|verify} messages.
         * @param message WarActionPlayerDeleteUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarAction.IWarActionPlayerDeleteUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarActionPlayerDeleteUnit message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarActionPlayerDeleteUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionPlayerDeleteUnit;

        /**
         * Decodes a WarActionPlayerDeleteUnit message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WarActionPlayerDeleteUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionPlayerDeleteUnit;

        /**
         * Verifies a WarActionPlayerDeleteUnit message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WarActionPlayerDeleteUnit message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WarActionPlayerDeleteUnit
         */
        public static fromObject(object: { [k: string]: any }): WarAction.WarActionPlayerDeleteUnit;

        /**
         * Creates a plain object from a WarActionPlayerDeleteUnit message. Also converts values to other types if specified.
         * @param message WarActionPlayerDeleteUnit
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarAction.WarActionPlayerDeleteUnit, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WarActionPlayerDeleteUnit to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace WarActionPlayerDeleteUnit {

        /** Properties of an ExtraDataForPlayerDeleteUnit. */
        interface IExtraDataForPlayerDeleteUnit {

            /** ExtraDataForPlayerDeleteUnit commonExtraData */
            commonExtraData?: (Structure.ICommonExtraDataForWarAction|null);
        }

        /** Represents an ExtraDataForPlayerDeleteUnit. */
        class ExtraDataForPlayerDeleteUnit implements IExtraDataForPlayerDeleteUnit {

            /**
             * Constructs a new ExtraDataForPlayerDeleteUnit.
             * @param [properties] Properties to set
             */
            constructor(properties?: WarAction.WarActionPlayerDeleteUnit.IExtraDataForPlayerDeleteUnit);

            /** ExtraDataForPlayerDeleteUnit commonExtraData. */
            public commonExtraData?: (Structure.ICommonExtraDataForWarAction|null);

            /**
             * Creates a new ExtraDataForPlayerDeleteUnit instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ExtraDataForPlayerDeleteUnit instance
             */
            public static create(properties?: WarAction.WarActionPlayerDeleteUnit.IExtraDataForPlayerDeleteUnit): WarAction.WarActionPlayerDeleteUnit.ExtraDataForPlayerDeleteUnit;

            /**
             * Encodes the specified ExtraDataForPlayerDeleteUnit message. Does not implicitly {@link WarAction.WarActionPlayerDeleteUnit.ExtraDataForPlayerDeleteUnit.verify|verify} messages.
             * @param message ExtraDataForPlayerDeleteUnit message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: WarAction.WarActionPlayerDeleteUnit.IExtraDataForPlayerDeleteUnit, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified ExtraDataForPlayerDeleteUnit message, length delimited. Does not implicitly {@link WarAction.WarActionPlayerDeleteUnit.ExtraDataForPlayerDeleteUnit.verify|verify} messages.
             * @param message ExtraDataForPlayerDeleteUnit message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: WarAction.WarActionPlayerDeleteUnit.IExtraDataForPlayerDeleteUnit, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an ExtraDataForPlayerDeleteUnit message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ExtraDataForPlayerDeleteUnit
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionPlayerDeleteUnit.ExtraDataForPlayerDeleteUnit;

            /**
             * Decodes an ExtraDataForPlayerDeleteUnit message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ExtraDataForPlayerDeleteUnit
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionPlayerDeleteUnit.ExtraDataForPlayerDeleteUnit;

            /**
             * Verifies an ExtraDataForPlayerDeleteUnit message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ExtraDataForPlayerDeleteUnit message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ExtraDataForPlayerDeleteUnit
             */
            public static fromObject(object: { [k: string]: any }): WarAction.WarActionPlayerDeleteUnit.ExtraDataForPlayerDeleteUnit;

            /**
             * Creates a plain object from an ExtraDataForPlayerDeleteUnit message. Also converts values to other types if specified.
             * @param message ExtraDataForPlayerDeleteUnit
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: WarAction.WarActionPlayerDeleteUnit.ExtraDataForPlayerDeleteUnit, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ExtraDataForPlayerDeleteUnit to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a WarActionPlayerVoteForDraw. */
    interface IWarActionPlayerVoteForDraw {

        /** WarActionPlayerVoteForDraw isAgree */
        isAgree?: (boolean|null);

        /** WarActionPlayerVoteForDraw extraData */
        extraData?: (WarAction.WarActionPlayerVoteForDraw.IExtraDataForPlayerVoteForDraw|null);
    }

    /** Represents a WarActionPlayerVoteForDraw. */
    class WarActionPlayerVoteForDraw implements IWarActionPlayerVoteForDraw {

        /**
         * Constructs a new WarActionPlayerVoteForDraw.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarAction.IWarActionPlayerVoteForDraw);

        /** WarActionPlayerVoteForDraw isAgree. */
        public isAgree: boolean;

        /** WarActionPlayerVoteForDraw extraData. */
        public extraData?: (WarAction.WarActionPlayerVoteForDraw.IExtraDataForPlayerVoteForDraw|null);

        /**
         * Creates a new WarActionPlayerVoteForDraw instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WarActionPlayerVoteForDraw instance
         */
        public static create(properties?: WarAction.IWarActionPlayerVoteForDraw): WarAction.WarActionPlayerVoteForDraw;

        /**
         * Encodes the specified WarActionPlayerVoteForDraw message. Does not implicitly {@link WarAction.WarActionPlayerVoteForDraw.verify|verify} messages.
         * @param message WarActionPlayerVoteForDraw message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarAction.IWarActionPlayerVoteForDraw, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WarActionPlayerVoteForDraw message, length delimited. Does not implicitly {@link WarAction.WarActionPlayerVoteForDraw.verify|verify} messages.
         * @param message WarActionPlayerVoteForDraw message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarAction.IWarActionPlayerVoteForDraw, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarActionPlayerVoteForDraw message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarActionPlayerVoteForDraw
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionPlayerVoteForDraw;

        /**
         * Decodes a WarActionPlayerVoteForDraw message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WarActionPlayerVoteForDraw
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionPlayerVoteForDraw;

        /**
         * Verifies a WarActionPlayerVoteForDraw message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WarActionPlayerVoteForDraw message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WarActionPlayerVoteForDraw
         */
        public static fromObject(object: { [k: string]: any }): WarAction.WarActionPlayerVoteForDraw;

        /**
         * Creates a plain object from a WarActionPlayerVoteForDraw message. Also converts values to other types if specified.
         * @param message WarActionPlayerVoteForDraw
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarAction.WarActionPlayerVoteForDraw, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WarActionPlayerVoteForDraw to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace WarActionPlayerVoteForDraw {

        /** Properties of an ExtraDataForPlayerVoteForDraw. */
        interface IExtraDataForPlayerVoteForDraw {

            /** ExtraDataForPlayerVoteForDraw commonExtraData */
            commonExtraData?: (Structure.ICommonExtraDataForWarAction|null);

            /** ExtraDataForPlayerVoteForDraw isAgree */
            isAgree?: (boolean|null);
        }

        /** Represents an ExtraDataForPlayerVoteForDraw. */
        class ExtraDataForPlayerVoteForDraw implements IExtraDataForPlayerVoteForDraw {

            /**
             * Constructs a new ExtraDataForPlayerVoteForDraw.
             * @param [properties] Properties to set
             */
            constructor(properties?: WarAction.WarActionPlayerVoteForDraw.IExtraDataForPlayerVoteForDraw);

            /** ExtraDataForPlayerVoteForDraw commonExtraData. */
            public commonExtraData?: (Structure.ICommonExtraDataForWarAction|null);

            /** ExtraDataForPlayerVoteForDraw isAgree. */
            public isAgree: boolean;

            /**
             * Creates a new ExtraDataForPlayerVoteForDraw instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ExtraDataForPlayerVoteForDraw instance
             */
            public static create(properties?: WarAction.WarActionPlayerVoteForDraw.IExtraDataForPlayerVoteForDraw): WarAction.WarActionPlayerVoteForDraw.ExtraDataForPlayerVoteForDraw;

            /**
             * Encodes the specified ExtraDataForPlayerVoteForDraw message. Does not implicitly {@link WarAction.WarActionPlayerVoteForDraw.ExtraDataForPlayerVoteForDraw.verify|verify} messages.
             * @param message ExtraDataForPlayerVoteForDraw message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: WarAction.WarActionPlayerVoteForDraw.IExtraDataForPlayerVoteForDraw, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified ExtraDataForPlayerVoteForDraw message, length delimited. Does not implicitly {@link WarAction.WarActionPlayerVoteForDraw.ExtraDataForPlayerVoteForDraw.verify|verify} messages.
             * @param message ExtraDataForPlayerVoteForDraw message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: WarAction.WarActionPlayerVoteForDraw.IExtraDataForPlayerVoteForDraw, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an ExtraDataForPlayerVoteForDraw message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ExtraDataForPlayerVoteForDraw
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionPlayerVoteForDraw.ExtraDataForPlayerVoteForDraw;

            /**
             * Decodes an ExtraDataForPlayerVoteForDraw message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ExtraDataForPlayerVoteForDraw
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionPlayerVoteForDraw.ExtraDataForPlayerVoteForDraw;

            /**
             * Verifies an ExtraDataForPlayerVoteForDraw message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ExtraDataForPlayerVoteForDraw message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ExtraDataForPlayerVoteForDraw
             */
            public static fromObject(object: { [k: string]: any }): WarAction.WarActionPlayerVoteForDraw.ExtraDataForPlayerVoteForDraw;

            /**
             * Creates a plain object from an ExtraDataForPlayerVoteForDraw message. Also converts values to other types if specified.
             * @param message ExtraDataForPlayerVoteForDraw
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: WarAction.WarActionPlayerVoteForDraw.ExtraDataForPlayerVoteForDraw, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ExtraDataForPlayerVoteForDraw to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a WarActionPlayerUseCoSkill. */
    interface IWarActionPlayerUseCoSkill {

        /** WarActionPlayerUseCoSkill skillType */
        skillType?: (number|null);

        /** WarActionPlayerUseCoSkill extraData */
        extraData?: (WarAction.WarActionPlayerUseCoSkill.IExtraDataForPlayerUseCoSkill|null);
    }

    /** Represents a WarActionPlayerUseCoSkill. */
    class WarActionPlayerUseCoSkill implements IWarActionPlayerUseCoSkill {

        /**
         * Constructs a new WarActionPlayerUseCoSkill.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarAction.IWarActionPlayerUseCoSkill);

        /** WarActionPlayerUseCoSkill skillType. */
        public skillType: number;

        /** WarActionPlayerUseCoSkill extraData. */
        public extraData?: (WarAction.WarActionPlayerUseCoSkill.IExtraDataForPlayerUseCoSkill|null);

        /**
         * Creates a new WarActionPlayerUseCoSkill instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WarActionPlayerUseCoSkill instance
         */
        public static create(properties?: WarAction.IWarActionPlayerUseCoSkill): WarAction.WarActionPlayerUseCoSkill;

        /**
         * Encodes the specified WarActionPlayerUseCoSkill message. Does not implicitly {@link WarAction.WarActionPlayerUseCoSkill.verify|verify} messages.
         * @param message WarActionPlayerUseCoSkill message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarAction.IWarActionPlayerUseCoSkill, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WarActionPlayerUseCoSkill message, length delimited. Does not implicitly {@link WarAction.WarActionPlayerUseCoSkill.verify|verify} messages.
         * @param message WarActionPlayerUseCoSkill message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarAction.IWarActionPlayerUseCoSkill, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarActionPlayerUseCoSkill message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarActionPlayerUseCoSkill
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionPlayerUseCoSkill;

        /**
         * Decodes a WarActionPlayerUseCoSkill message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WarActionPlayerUseCoSkill
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionPlayerUseCoSkill;

        /**
         * Verifies a WarActionPlayerUseCoSkill message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WarActionPlayerUseCoSkill message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WarActionPlayerUseCoSkill
         */
        public static fromObject(object: { [k: string]: any }): WarAction.WarActionPlayerUseCoSkill;

        /**
         * Creates a plain object from a WarActionPlayerUseCoSkill message. Also converts values to other types if specified.
         * @param message WarActionPlayerUseCoSkill
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarAction.WarActionPlayerUseCoSkill, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WarActionPlayerUseCoSkill to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace WarActionPlayerUseCoSkill {

        /** Properties of an ExtraDataForPlayerUseCoSkill. */
        interface IExtraDataForPlayerUseCoSkill {

            /** ExtraDataForPlayerUseCoSkill commonExtraData */
            commonExtraData?: (Structure.ICommonExtraDataForWarAction|null);

            /** ExtraDataForPlayerUseCoSkill skillType */
            skillType?: (number|null);

            /** ExtraDataForPlayerUseCoSkill skillDataArray */
            skillDataArray?: (Structure.IDataForUseCoSkill[]|null);
        }

        /** Represents an ExtraDataForPlayerUseCoSkill. */
        class ExtraDataForPlayerUseCoSkill implements IExtraDataForPlayerUseCoSkill {

            /**
             * Constructs a new ExtraDataForPlayerUseCoSkill.
             * @param [properties] Properties to set
             */
            constructor(properties?: WarAction.WarActionPlayerUseCoSkill.IExtraDataForPlayerUseCoSkill);

            /** ExtraDataForPlayerUseCoSkill commonExtraData. */
            public commonExtraData?: (Structure.ICommonExtraDataForWarAction|null);

            /** ExtraDataForPlayerUseCoSkill skillType. */
            public skillType: number;

            /** ExtraDataForPlayerUseCoSkill skillDataArray. */
            public skillDataArray: Structure.IDataForUseCoSkill[];

            /**
             * Creates a new ExtraDataForPlayerUseCoSkill instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ExtraDataForPlayerUseCoSkill instance
             */
            public static create(properties?: WarAction.WarActionPlayerUseCoSkill.IExtraDataForPlayerUseCoSkill): WarAction.WarActionPlayerUseCoSkill.ExtraDataForPlayerUseCoSkill;

            /**
             * Encodes the specified ExtraDataForPlayerUseCoSkill message. Does not implicitly {@link WarAction.WarActionPlayerUseCoSkill.ExtraDataForPlayerUseCoSkill.verify|verify} messages.
             * @param message ExtraDataForPlayerUseCoSkill message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: WarAction.WarActionPlayerUseCoSkill.IExtraDataForPlayerUseCoSkill, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified ExtraDataForPlayerUseCoSkill message, length delimited. Does not implicitly {@link WarAction.WarActionPlayerUseCoSkill.ExtraDataForPlayerUseCoSkill.verify|verify} messages.
             * @param message ExtraDataForPlayerUseCoSkill message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: WarAction.WarActionPlayerUseCoSkill.IExtraDataForPlayerUseCoSkill, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an ExtraDataForPlayerUseCoSkill message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ExtraDataForPlayerUseCoSkill
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionPlayerUseCoSkill.ExtraDataForPlayerUseCoSkill;

            /**
             * Decodes an ExtraDataForPlayerUseCoSkill message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ExtraDataForPlayerUseCoSkill
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionPlayerUseCoSkill.ExtraDataForPlayerUseCoSkill;

            /**
             * Verifies an ExtraDataForPlayerUseCoSkill message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ExtraDataForPlayerUseCoSkill message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ExtraDataForPlayerUseCoSkill
             */
            public static fromObject(object: { [k: string]: any }): WarAction.WarActionPlayerUseCoSkill.ExtraDataForPlayerUseCoSkill;

            /**
             * Creates a plain object from an ExtraDataForPlayerUseCoSkill message. Also converts values to other types if specified.
             * @param message ExtraDataForPlayerUseCoSkill
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: WarAction.WarActionPlayerUseCoSkill.ExtraDataForPlayerUseCoSkill, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ExtraDataForPlayerUseCoSkill to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a WarActionUnitWait. */
    interface IWarActionUnitWait {

        /** WarActionUnitWait path */
        path?: (Structure.IMovePath|null);

        /** WarActionUnitWait launchUnitId */
        launchUnitId?: (number|null);

        /** WarActionUnitWait extraData */
        extraData?: (WarAction.WarActionUnitWait.IExtraDataForUnitWait|null);
    }

    /** Represents a WarActionUnitWait. */
    class WarActionUnitWait implements IWarActionUnitWait {

        /**
         * Constructs a new WarActionUnitWait.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarAction.IWarActionUnitWait);

        /** WarActionUnitWait path. */
        public path?: (Structure.IMovePath|null);

        /** WarActionUnitWait launchUnitId. */
        public launchUnitId: number;

        /** WarActionUnitWait extraData. */
        public extraData?: (WarAction.WarActionUnitWait.IExtraDataForUnitWait|null);

        /**
         * Creates a new WarActionUnitWait instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WarActionUnitWait instance
         */
        public static create(properties?: WarAction.IWarActionUnitWait): WarAction.WarActionUnitWait;

        /**
         * Encodes the specified WarActionUnitWait message. Does not implicitly {@link WarAction.WarActionUnitWait.verify|verify} messages.
         * @param message WarActionUnitWait message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarAction.IWarActionUnitWait, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WarActionUnitWait message, length delimited. Does not implicitly {@link WarAction.WarActionUnitWait.verify|verify} messages.
         * @param message WarActionUnitWait message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarAction.IWarActionUnitWait, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarActionUnitWait message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarActionUnitWait
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionUnitWait;

        /**
         * Decodes a WarActionUnitWait message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WarActionUnitWait
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionUnitWait;

        /**
         * Verifies a WarActionUnitWait message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WarActionUnitWait message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WarActionUnitWait
         */
        public static fromObject(object: { [k: string]: any }): WarAction.WarActionUnitWait;

        /**
         * Creates a plain object from a WarActionUnitWait message. Also converts values to other types if specified.
         * @param message WarActionUnitWait
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarAction.WarActionUnitWait, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WarActionUnitWait to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace WarActionUnitWait {

        /** Properties of an ExtraDataForUnitWait. */
        interface IExtraDataForUnitWait {

            /** ExtraDataForUnitWait commonExtraData */
            commonExtraData?: (Structure.ICommonExtraDataForWarAction|null);
        }

        /** Represents an ExtraDataForUnitWait. */
        class ExtraDataForUnitWait implements IExtraDataForUnitWait {

            /**
             * Constructs a new ExtraDataForUnitWait.
             * @param [properties] Properties to set
             */
            constructor(properties?: WarAction.WarActionUnitWait.IExtraDataForUnitWait);

            /** ExtraDataForUnitWait commonExtraData. */
            public commonExtraData?: (Structure.ICommonExtraDataForWarAction|null);

            /**
             * Creates a new ExtraDataForUnitWait instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ExtraDataForUnitWait instance
             */
            public static create(properties?: WarAction.WarActionUnitWait.IExtraDataForUnitWait): WarAction.WarActionUnitWait.ExtraDataForUnitWait;

            /**
             * Encodes the specified ExtraDataForUnitWait message. Does not implicitly {@link WarAction.WarActionUnitWait.ExtraDataForUnitWait.verify|verify} messages.
             * @param message ExtraDataForUnitWait message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: WarAction.WarActionUnitWait.IExtraDataForUnitWait, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified ExtraDataForUnitWait message, length delimited. Does not implicitly {@link WarAction.WarActionUnitWait.ExtraDataForUnitWait.verify|verify} messages.
             * @param message ExtraDataForUnitWait message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: WarAction.WarActionUnitWait.IExtraDataForUnitWait, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an ExtraDataForUnitWait message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ExtraDataForUnitWait
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionUnitWait.ExtraDataForUnitWait;

            /**
             * Decodes an ExtraDataForUnitWait message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ExtraDataForUnitWait
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionUnitWait.ExtraDataForUnitWait;

            /**
             * Verifies an ExtraDataForUnitWait message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ExtraDataForUnitWait message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ExtraDataForUnitWait
             */
            public static fromObject(object: { [k: string]: any }): WarAction.WarActionUnitWait.ExtraDataForUnitWait;

            /**
             * Creates a plain object from an ExtraDataForUnitWait message. Also converts values to other types if specified.
             * @param message ExtraDataForUnitWait
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: WarAction.WarActionUnitWait.ExtraDataForUnitWait, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ExtraDataForUnitWait to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a WarActionUnitBeLoaded. */
    interface IWarActionUnitBeLoaded {

        /** WarActionUnitBeLoaded path */
        path?: (Structure.IMovePath|null);

        /** WarActionUnitBeLoaded launchUnitId */
        launchUnitId?: (number|null);

        /** WarActionUnitBeLoaded extraData */
        extraData?: (WarAction.WarActionUnitBeLoaded.IExtraDataForUnitBeLoaded|null);
    }

    /** Represents a WarActionUnitBeLoaded. */
    class WarActionUnitBeLoaded implements IWarActionUnitBeLoaded {

        /**
         * Constructs a new WarActionUnitBeLoaded.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarAction.IWarActionUnitBeLoaded);

        /** WarActionUnitBeLoaded path. */
        public path?: (Structure.IMovePath|null);

        /** WarActionUnitBeLoaded launchUnitId. */
        public launchUnitId: number;

        /** WarActionUnitBeLoaded extraData. */
        public extraData?: (WarAction.WarActionUnitBeLoaded.IExtraDataForUnitBeLoaded|null);

        /**
         * Creates a new WarActionUnitBeLoaded instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WarActionUnitBeLoaded instance
         */
        public static create(properties?: WarAction.IWarActionUnitBeLoaded): WarAction.WarActionUnitBeLoaded;

        /**
         * Encodes the specified WarActionUnitBeLoaded message. Does not implicitly {@link WarAction.WarActionUnitBeLoaded.verify|verify} messages.
         * @param message WarActionUnitBeLoaded message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarAction.IWarActionUnitBeLoaded, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WarActionUnitBeLoaded message, length delimited. Does not implicitly {@link WarAction.WarActionUnitBeLoaded.verify|verify} messages.
         * @param message WarActionUnitBeLoaded message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarAction.IWarActionUnitBeLoaded, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarActionUnitBeLoaded message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarActionUnitBeLoaded
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionUnitBeLoaded;

        /**
         * Decodes a WarActionUnitBeLoaded message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WarActionUnitBeLoaded
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionUnitBeLoaded;

        /**
         * Verifies a WarActionUnitBeLoaded message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WarActionUnitBeLoaded message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WarActionUnitBeLoaded
         */
        public static fromObject(object: { [k: string]: any }): WarAction.WarActionUnitBeLoaded;

        /**
         * Creates a plain object from a WarActionUnitBeLoaded message. Also converts values to other types if specified.
         * @param message WarActionUnitBeLoaded
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarAction.WarActionUnitBeLoaded, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WarActionUnitBeLoaded to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace WarActionUnitBeLoaded {

        /** Properties of an ExtraDataForUnitBeLoaded. */
        interface IExtraDataForUnitBeLoaded {

            /** ExtraDataForUnitBeLoaded commonExtraData */
            commonExtraData?: (Structure.ICommonExtraDataForWarAction|null);
        }

        /** Represents an ExtraDataForUnitBeLoaded. */
        class ExtraDataForUnitBeLoaded implements IExtraDataForUnitBeLoaded {

            /**
             * Constructs a new ExtraDataForUnitBeLoaded.
             * @param [properties] Properties to set
             */
            constructor(properties?: WarAction.WarActionUnitBeLoaded.IExtraDataForUnitBeLoaded);

            /** ExtraDataForUnitBeLoaded commonExtraData. */
            public commonExtraData?: (Structure.ICommonExtraDataForWarAction|null);

            /**
             * Creates a new ExtraDataForUnitBeLoaded instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ExtraDataForUnitBeLoaded instance
             */
            public static create(properties?: WarAction.WarActionUnitBeLoaded.IExtraDataForUnitBeLoaded): WarAction.WarActionUnitBeLoaded.ExtraDataForUnitBeLoaded;

            /**
             * Encodes the specified ExtraDataForUnitBeLoaded message. Does not implicitly {@link WarAction.WarActionUnitBeLoaded.ExtraDataForUnitBeLoaded.verify|verify} messages.
             * @param message ExtraDataForUnitBeLoaded message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: WarAction.WarActionUnitBeLoaded.IExtraDataForUnitBeLoaded, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified ExtraDataForUnitBeLoaded message, length delimited. Does not implicitly {@link WarAction.WarActionUnitBeLoaded.ExtraDataForUnitBeLoaded.verify|verify} messages.
             * @param message ExtraDataForUnitBeLoaded message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: WarAction.WarActionUnitBeLoaded.IExtraDataForUnitBeLoaded, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an ExtraDataForUnitBeLoaded message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ExtraDataForUnitBeLoaded
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionUnitBeLoaded.ExtraDataForUnitBeLoaded;

            /**
             * Decodes an ExtraDataForUnitBeLoaded message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ExtraDataForUnitBeLoaded
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionUnitBeLoaded.ExtraDataForUnitBeLoaded;

            /**
             * Verifies an ExtraDataForUnitBeLoaded message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ExtraDataForUnitBeLoaded message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ExtraDataForUnitBeLoaded
             */
            public static fromObject(object: { [k: string]: any }): WarAction.WarActionUnitBeLoaded.ExtraDataForUnitBeLoaded;

            /**
             * Creates a plain object from an ExtraDataForUnitBeLoaded message. Also converts values to other types if specified.
             * @param message ExtraDataForUnitBeLoaded
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: WarAction.WarActionUnitBeLoaded.ExtraDataForUnitBeLoaded, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ExtraDataForUnitBeLoaded to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a WarActionUnitCaptureTile. */
    interface IWarActionUnitCaptureTile {

        /** WarActionUnitCaptureTile path */
        path?: (Structure.IMovePath|null);

        /** WarActionUnitCaptureTile launchUnitId */
        launchUnitId?: (number|null);

        /** WarActionUnitCaptureTile extraData */
        extraData?: (WarAction.WarActionUnitCaptureTile.IExtraDataForUnitCaptureTile|null);
    }

    /** Represents a WarActionUnitCaptureTile. */
    class WarActionUnitCaptureTile implements IWarActionUnitCaptureTile {

        /**
         * Constructs a new WarActionUnitCaptureTile.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarAction.IWarActionUnitCaptureTile);

        /** WarActionUnitCaptureTile path. */
        public path?: (Structure.IMovePath|null);

        /** WarActionUnitCaptureTile launchUnitId. */
        public launchUnitId: number;

        /** WarActionUnitCaptureTile extraData. */
        public extraData?: (WarAction.WarActionUnitCaptureTile.IExtraDataForUnitCaptureTile|null);

        /**
         * Creates a new WarActionUnitCaptureTile instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WarActionUnitCaptureTile instance
         */
        public static create(properties?: WarAction.IWarActionUnitCaptureTile): WarAction.WarActionUnitCaptureTile;

        /**
         * Encodes the specified WarActionUnitCaptureTile message. Does not implicitly {@link WarAction.WarActionUnitCaptureTile.verify|verify} messages.
         * @param message WarActionUnitCaptureTile message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarAction.IWarActionUnitCaptureTile, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WarActionUnitCaptureTile message, length delimited. Does not implicitly {@link WarAction.WarActionUnitCaptureTile.verify|verify} messages.
         * @param message WarActionUnitCaptureTile message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarAction.IWarActionUnitCaptureTile, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarActionUnitCaptureTile message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarActionUnitCaptureTile
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionUnitCaptureTile;

        /**
         * Decodes a WarActionUnitCaptureTile message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WarActionUnitCaptureTile
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionUnitCaptureTile;

        /**
         * Verifies a WarActionUnitCaptureTile message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WarActionUnitCaptureTile message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WarActionUnitCaptureTile
         */
        public static fromObject(object: { [k: string]: any }): WarAction.WarActionUnitCaptureTile;

        /**
         * Creates a plain object from a WarActionUnitCaptureTile message. Also converts values to other types if specified.
         * @param message WarActionUnitCaptureTile
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarAction.WarActionUnitCaptureTile, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WarActionUnitCaptureTile to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace WarActionUnitCaptureTile {

        /** Properties of an ExtraDataForUnitCaptureTile. */
        interface IExtraDataForUnitCaptureTile {

            /** ExtraDataForUnitCaptureTile commonExtraData */
            commonExtraData?: (Structure.ICommonExtraDataForWarAction|null);
        }

        /** Represents an ExtraDataForUnitCaptureTile. */
        class ExtraDataForUnitCaptureTile implements IExtraDataForUnitCaptureTile {

            /**
             * Constructs a new ExtraDataForUnitCaptureTile.
             * @param [properties] Properties to set
             */
            constructor(properties?: WarAction.WarActionUnitCaptureTile.IExtraDataForUnitCaptureTile);

            /** ExtraDataForUnitCaptureTile commonExtraData. */
            public commonExtraData?: (Structure.ICommonExtraDataForWarAction|null);

            /**
             * Creates a new ExtraDataForUnitCaptureTile instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ExtraDataForUnitCaptureTile instance
             */
            public static create(properties?: WarAction.WarActionUnitCaptureTile.IExtraDataForUnitCaptureTile): WarAction.WarActionUnitCaptureTile.ExtraDataForUnitCaptureTile;

            /**
             * Encodes the specified ExtraDataForUnitCaptureTile message. Does not implicitly {@link WarAction.WarActionUnitCaptureTile.ExtraDataForUnitCaptureTile.verify|verify} messages.
             * @param message ExtraDataForUnitCaptureTile message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: WarAction.WarActionUnitCaptureTile.IExtraDataForUnitCaptureTile, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified ExtraDataForUnitCaptureTile message, length delimited. Does not implicitly {@link WarAction.WarActionUnitCaptureTile.ExtraDataForUnitCaptureTile.verify|verify} messages.
             * @param message ExtraDataForUnitCaptureTile message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: WarAction.WarActionUnitCaptureTile.IExtraDataForUnitCaptureTile, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an ExtraDataForUnitCaptureTile message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ExtraDataForUnitCaptureTile
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionUnitCaptureTile.ExtraDataForUnitCaptureTile;

            /**
             * Decodes an ExtraDataForUnitCaptureTile message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ExtraDataForUnitCaptureTile
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionUnitCaptureTile.ExtraDataForUnitCaptureTile;

            /**
             * Verifies an ExtraDataForUnitCaptureTile message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ExtraDataForUnitCaptureTile message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ExtraDataForUnitCaptureTile
             */
            public static fromObject(object: { [k: string]: any }): WarAction.WarActionUnitCaptureTile.ExtraDataForUnitCaptureTile;

            /**
             * Creates a plain object from an ExtraDataForUnitCaptureTile message. Also converts values to other types if specified.
             * @param message ExtraDataForUnitCaptureTile
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: WarAction.WarActionUnitCaptureTile.ExtraDataForUnitCaptureTile, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ExtraDataForUnitCaptureTile to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a WarActionUnitAttackTile. */
    interface IWarActionUnitAttackTile {

        /** WarActionUnitAttackTile path */
        path?: (Structure.IMovePath|null);

        /** WarActionUnitAttackTile launchUnitId */
        launchUnitId?: (number|null);

        /** WarActionUnitAttackTile targetGridIndex */
        targetGridIndex?: (Structure.IGridIndex|null);

        /** WarActionUnitAttackTile extraData */
        extraData?: (WarAction.WarActionUnitAttackTile.IExtraDataForUnitAttackTile|null);
    }

    /** Represents a WarActionUnitAttackTile. */
    class WarActionUnitAttackTile implements IWarActionUnitAttackTile {

        /**
         * Constructs a new WarActionUnitAttackTile.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarAction.IWarActionUnitAttackTile);

        /** WarActionUnitAttackTile path. */
        public path?: (Structure.IMovePath|null);

        /** WarActionUnitAttackTile launchUnitId. */
        public launchUnitId: number;

        /** WarActionUnitAttackTile targetGridIndex. */
        public targetGridIndex?: (Structure.IGridIndex|null);

        /** WarActionUnitAttackTile extraData. */
        public extraData?: (WarAction.WarActionUnitAttackTile.IExtraDataForUnitAttackTile|null);

        /**
         * Creates a new WarActionUnitAttackTile instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WarActionUnitAttackTile instance
         */
        public static create(properties?: WarAction.IWarActionUnitAttackTile): WarAction.WarActionUnitAttackTile;

        /**
         * Encodes the specified WarActionUnitAttackTile message. Does not implicitly {@link WarAction.WarActionUnitAttackTile.verify|verify} messages.
         * @param message WarActionUnitAttackTile message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarAction.IWarActionUnitAttackTile, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WarActionUnitAttackTile message, length delimited. Does not implicitly {@link WarAction.WarActionUnitAttackTile.verify|verify} messages.
         * @param message WarActionUnitAttackTile message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarAction.IWarActionUnitAttackTile, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarActionUnitAttackTile message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarActionUnitAttackTile
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionUnitAttackTile;

        /**
         * Decodes a WarActionUnitAttackTile message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WarActionUnitAttackTile
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionUnitAttackTile;

        /**
         * Verifies a WarActionUnitAttackTile message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WarActionUnitAttackTile message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WarActionUnitAttackTile
         */
        public static fromObject(object: { [k: string]: any }): WarAction.WarActionUnitAttackTile;

        /**
         * Creates a plain object from a WarActionUnitAttackTile message. Also converts values to other types if specified.
         * @param message WarActionUnitAttackTile
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarAction.WarActionUnitAttackTile, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WarActionUnitAttackTile to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace WarActionUnitAttackTile {

        /** Properties of an ExtraDataForUnitAttackTile. */
        interface IExtraDataForUnitAttackTile {

            /** ExtraDataForUnitAttackTile commonExtraData */
            commonExtraData?: (Structure.ICommonExtraDataForWarAction|null);

            /** ExtraDataForUnitAttackTile targetGridIndex */
            targetGridIndex?: (Structure.IGridIndex|null);
        }

        /** Represents an ExtraDataForUnitAttackTile. */
        class ExtraDataForUnitAttackTile implements IExtraDataForUnitAttackTile {

            /**
             * Constructs a new ExtraDataForUnitAttackTile.
             * @param [properties] Properties to set
             */
            constructor(properties?: WarAction.WarActionUnitAttackTile.IExtraDataForUnitAttackTile);

            /** ExtraDataForUnitAttackTile commonExtraData. */
            public commonExtraData?: (Structure.ICommonExtraDataForWarAction|null);

            /** ExtraDataForUnitAttackTile targetGridIndex. */
            public targetGridIndex?: (Structure.IGridIndex|null);

            /**
             * Creates a new ExtraDataForUnitAttackTile instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ExtraDataForUnitAttackTile instance
             */
            public static create(properties?: WarAction.WarActionUnitAttackTile.IExtraDataForUnitAttackTile): WarAction.WarActionUnitAttackTile.ExtraDataForUnitAttackTile;

            /**
             * Encodes the specified ExtraDataForUnitAttackTile message. Does not implicitly {@link WarAction.WarActionUnitAttackTile.ExtraDataForUnitAttackTile.verify|verify} messages.
             * @param message ExtraDataForUnitAttackTile message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: WarAction.WarActionUnitAttackTile.IExtraDataForUnitAttackTile, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified ExtraDataForUnitAttackTile message, length delimited. Does not implicitly {@link WarAction.WarActionUnitAttackTile.ExtraDataForUnitAttackTile.verify|verify} messages.
             * @param message ExtraDataForUnitAttackTile message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: WarAction.WarActionUnitAttackTile.IExtraDataForUnitAttackTile, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an ExtraDataForUnitAttackTile message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ExtraDataForUnitAttackTile
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionUnitAttackTile.ExtraDataForUnitAttackTile;

            /**
             * Decodes an ExtraDataForUnitAttackTile message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ExtraDataForUnitAttackTile
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionUnitAttackTile.ExtraDataForUnitAttackTile;

            /**
             * Verifies an ExtraDataForUnitAttackTile message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ExtraDataForUnitAttackTile message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ExtraDataForUnitAttackTile
             */
            public static fromObject(object: { [k: string]: any }): WarAction.WarActionUnitAttackTile.ExtraDataForUnitAttackTile;

            /**
             * Creates a plain object from an ExtraDataForUnitAttackTile message. Also converts values to other types if specified.
             * @param message ExtraDataForUnitAttackTile
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: WarAction.WarActionUnitAttackTile.ExtraDataForUnitAttackTile, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ExtraDataForUnitAttackTile to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a WarActionUnitAttackUnit. */
    interface IWarActionUnitAttackUnit {

        /** WarActionUnitAttackUnit path */
        path?: (Structure.IMovePath|null);

        /** WarActionUnitAttackUnit launchUnitId */
        launchUnitId?: (number|null);

        /** WarActionUnitAttackUnit targetGridIndex */
        targetGridIndex?: (Structure.IGridIndex|null);

        /** WarActionUnitAttackUnit extraData */
        extraData?: (WarAction.WarActionUnitAttackUnit.IExtraDataForUnitAttackUnit|null);
    }

    /** Represents a WarActionUnitAttackUnit. */
    class WarActionUnitAttackUnit implements IWarActionUnitAttackUnit {

        /**
         * Constructs a new WarActionUnitAttackUnit.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarAction.IWarActionUnitAttackUnit);

        /** WarActionUnitAttackUnit path. */
        public path?: (Structure.IMovePath|null);

        /** WarActionUnitAttackUnit launchUnitId. */
        public launchUnitId: number;

        /** WarActionUnitAttackUnit targetGridIndex. */
        public targetGridIndex?: (Structure.IGridIndex|null);

        /** WarActionUnitAttackUnit extraData. */
        public extraData?: (WarAction.WarActionUnitAttackUnit.IExtraDataForUnitAttackUnit|null);

        /**
         * Creates a new WarActionUnitAttackUnit instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WarActionUnitAttackUnit instance
         */
        public static create(properties?: WarAction.IWarActionUnitAttackUnit): WarAction.WarActionUnitAttackUnit;

        /**
         * Encodes the specified WarActionUnitAttackUnit message. Does not implicitly {@link WarAction.WarActionUnitAttackUnit.verify|verify} messages.
         * @param message WarActionUnitAttackUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarAction.IWarActionUnitAttackUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WarActionUnitAttackUnit message, length delimited. Does not implicitly {@link WarAction.WarActionUnitAttackUnit.verify|verify} messages.
         * @param message WarActionUnitAttackUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarAction.IWarActionUnitAttackUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarActionUnitAttackUnit message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarActionUnitAttackUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionUnitAttackUnit;

        /**
         * Decodes a WarActionUnitAttackUnit message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WarActionUnitAttackUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionUnitAttackUnit;

        /**
         * Verifies a WarActionUnitAttackUnit message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WarActionUnitAttackUnit message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WarActionUnitAttackUnit
         */
        public static fromObject(object: { [k: string]: any }): WarAction.WarActionUnitAttackUnit;

        /**
         * Creates a plain object from a WarActionUnitAttackUnit message. Also converts values to other types if specified.
         * @param message WarActionUnitAttackUnit
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarAction.WarActionUnitAttackUnit, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WarActionUnitAttackUnit to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace WarActionUnitAttackUnit {

        /** Properties of an ExtraDataForUnitAttackUnit. */
        interface IExtraDataForUnitAttackUnit {

            /** ExtraDataForUnitAttackUnit commonExtraData */
            commonExtraData?: (Structure.ICommonExtraDataForWarAction|null);

            /** ExtraDataForUnitAttackUnit targetGridIndex */
            targetGridIndex?: (Structure.IGridIndex|null);
        }

        /** Represents an ExtraDataForUnitAttackUnit. */
        class ExtraDataForUnitAttackUnit implements IExtraDataForUnitAttackUnit {

            /**
             * Constructs a new ExtraDataForUnitAttackUnit.
             * @param [properties] Properties to set
             */
            constructor(properties?: WarAction.WarActionUnitAttackUnit.IExtraDataForUnitAttackUnit);

            /** ExtraDataForUnitAttackUnit commonExtraData. */
            public commonExtraData?: (Structure.ICommonExtraDataForWarAction|null);

            /** ExtraDataForUnitAttackUnit targetGridIndex. */
            public targetGridIndex?: (Structure.IGridIndex|null);

            /**
             * Creates a new ExtraDataForUnitAttackUnit instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ExtraDataForUnitAttackUnit instance
             */
            public static create(properties?: WarAction.WarActionUnitAttackUnit.IExtraDataForUnitAttackUnit): WarAction.WarActionUnitAttackUnit.ExtraDataForUnitAttackUnit;

            /**
             * Encodes the specified ExtraDataForUnitAttackUnit message. Does not implicitly {@link WarAction.WarActionUnitAttackUnit.ExtraDataForUnitAttackUnit.verify|verify} messages.
             * @param message ExtraDataForUnitAttackUnit message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: WarAction.WarActionUnitAttackUnit.IExtraDataForUnitAttackUnit, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified ExtraDataForUnitAttackUnit message, length delimited. Does not implicitly {@link WarAction.WarActionUnitAttackUnit.ExtraDataForUnitAttackUnit.verify|verify} messages.
             * @param message ExtraDataForUnitAttackUnit message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: WarAction.WarActionUnitAttackUnit.IExtraDataForUnitAttackUnit, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an ExtraDataForUnitAttackUnit message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ExtraDataForUnitAttackUnit
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionUnitAttackUnit.ExtraDataForUnitAttackUnit;

            /**
             * Decodes an ExtraDataForUnitAttackUnit message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ExtraDataForUnitAttackUnit
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionUnitAttackUnit.ExtraDataForUnitAttackUnit;

            /**
             * Verifies an ExtraDataForUnitAttackUnit message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ExtraDataForUnitAttackUnit message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ExtraDataForUnitAttackUnit
             */
            public static fromObject(object: { [k: string]: any }): WarAction.WarActionUnitAttackUnit.ExtraDataForUnitAttackUnit;

            /**
             * Creates a plain object from an ExtraDataForUnitAttackUnit message. Also converts values to other types if specified.
             * @param message ExtraDataForUnitAttackUnit
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: WarAction.WarActionUnitAttackUnit.ExtraDataForUnitAttackUnit, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ExtraDataForUnitAttackUnit to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a WarActionUnitDropUnit. */
    interface IWarActionUnitDropUnit {

        /** WarActionUnitDropUnit path */
        path?: (Structure.IMovePath|null);

        /** WarActionUnitDropUnit launchUnitId */
        launchUnitId?: (number|null);

        /** WarActionUnitDropUnit dropDestinations */
        dropDestinations?: (Structure.IDropDestination[]|null);

        /** WarActionUnitDropUnit isDropBlocked */
        isDropBlocked?: (boolean|null);

        /** WarActionUnitDropUnit extraData */
        extraData?: (WarAction.WarActionUnitDropUnit.IExtraDataForUnitDropUnit|null);
    }

    /** Represents a WarActionUnitDropUnit. */
    class WarActionUnitDropUnit implements IWarActionUnitDropUnit {

        /**
         * Constructs a new WarActionUnitDropUnit.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarAction.IWarActionUnitDropUnit);

        /** WarActionUnitDropUnit path. */
        public path?: (Structure.IMovePath|null);

        /** WarActionUnitDropUnit launchUnitId. */
        public launchUnitId: number;

        /** WarActionUnitDropUnit dropDestinations. */
        public dropDestinations: Structure.IDropDestination[];

        /** WarActionUnitDropUnit isDropBlocked. */
        public isDropBlocked: boolean;

        /** WarActionUnitDropUnit extraData. */
        public extraData?: (WarAction.WarActionUnitDropUnit.IExtraDataForUnitDropUnit|null);

        /**
         * Creates a new WarActionUnitDropUnit instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WarActionUnitDropUnit instance
         */
        public static create(properties?: WarAction.IWarActionUnitDropUnit): WarAction.WarActionUnitDropUnit;

        /**
         * Encodes the specified WarActionUnitDropUnit message. Does not implicitly {@link WarAction.WarActionUnitDropUnit.verify|verify} messages.
         * @param message WarActionUnitDropUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarAction.IWarActionUnitDropUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WarActionUnitDropUnit message, length delimited. Does not implicitly {@link WarAction.WarActionUnitDropUnit.verify|verify} messages.
         * @param message WarActionUnitDropUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarAction.IWarActionUnitDropUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarActionUnitDropUnit message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarActionUnitDropUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionUnitDropUnit;

        /**
         * Decodes a WarActionUnitDropUnit message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WarActionUnitDropUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionUnitDropUnit;

        /**
         * Verifies a WarActionUnitDropUnit message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WarActionUnitDropUnit message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WarActionUnitDropUnit
         */
        public static fromObject(object: { [k: string]: any }): WarAction.WarActionUnitDropUnit;

        /**
         * Creates a plain object from a WarActionUnitDropUnit message. Also converts values to other types if specified.
         * @param message WarActionUnitDropUnit
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarAction.WarActionUnitDropUnit, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WarActionUnitDropUnit to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace WarActionUnitDropUnit {

        /** Properties of an ExtraDataForUnitDropUnit. */
        interface IExtraDataForUnitDropUnit {

            /** ExtraDataForUnitDropUnit commonExtraData */
            commonExtraData?: (Structure.ICommonExtraDataForWarAction|null);

            /** ExtraDataForUnitDropUnit isDropBlocked */
            isDropBlocked?: (boolean|null);

            /** ExtraDataForUnitDropUnit droppingUnitAndPathArray */
            droppingUnitAndPathArray?: (Structure.IMovingUnitAndPath[]|null);
        }

        /** Represents an ExtraDataForUnitDropUnit. */
        class ExtraDataForUnitDropUnit implements IExtraDataForUnitDropUnit {

            /**
             * Constructs a new ExtraDataForUnitDropUnit.
             * @param [properties] Properties to set
             */
            constructor(properties?: WarAction.WarActionUnitDropUnit.IExtraDataForUnitDropUnit);

            /** ExtraDataForUnitDropUnit commonExtraData. */
            public commonExtraData?: (Structure.ICommonExtraDataForWarAction|null);

            /** ExtraDataForUnitDropUnit isDropBlocked. */
            public isDropBlocked: boolean;

            /** ExtraDataForUnitDropUnit droppingUnitAndPathArray. */
            public droppingUnitAndPathArray: Structure.IMovingUnitAndPath[];

            /**
             * Creates a new ExtraDataForUnitDropUnit instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ExtraDataForUnitDropUnit instance
             */
            public static create(properties?: WarAction.WarActionUnitDropUnit.IExtraDataForUnitDropUnit): WarAction.WarActionUnitDropUnit.ExtraDataForUnitDropUnit;

            /**
             * Encodes the specified ExtraDataForUnitDropUnit message. Does not implicitly {@link WarAction.WarActionUnitDropUnit.ExtraDataForUnitDropUnit.verify|verify} messages.
             * @param message ExtraDataForUnitDropUnit message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: WarAction.WarActionUnitDropUnit.IExtraDataForUnitDropUnit, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified ExtraDataForUnitDropUnit message, length delimited. Does not implicitly {@link WarAction.WarActionUnitDropUnit.ExtraDataForUnitDropUnit.verify|verify} messages.
             * @param message ExtraDataForUnitDropUnit message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: WarAction.WarActionUnitDropUnit.IExtraDataForUnitDropUnit, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an ExtraDataForUnitDropUnit message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ExtraDataForUnitDropUnit
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionUnitDropUnit.ExtraDataForUnitDropUnit;

            /**
             * Decodes an ExtraDataForUnitDropUnit message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ExtraDataForUnitDropUnit
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionUnitDropUnit.ExtraDataForUnitDropUnit;

            /**
             * Verifies an ExtraDataForUnitDropUnit message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ExtraDataForUnitDropUnit message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ExtraDataForUnitDropUnit
             */
            public static fromObject(object: { [k: string]: any }): WarAction.WarActionUnitDropUnit.ExtraDataForUnitDropUnit;

            /**
             * Creates a plain object from an ExtraDataForUnitDropUnit message. Also converts values to other types if specified.
             * @param message ExtraDataForUnitDropUnit
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: WarAction.WarActionUnitDropUnit.ExtraDataForUnitDropUnit, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ExtraDataForUnitDropUnit to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a WarActionUnitBuildTile. */
    interface IWarActionUnitBuildTile {

        /** WarActionUnitBuildTile path */
        path?: (Structure.IMovePath|null);

        /** WarActionUnitBuildTile launchUnitId */
        launchUnitId?: (number|null);

        /** WarActionUnitBuildTile extraData */
        extraData?: (WarAction.WarActionUnitBuildTile.IExtraDataForUnitBuildTile|null);
    }

    /** Represents a WarActionUnitBuildTile. */
    class WarActionUnitBuildTile implements IWarActionUnitBuildTile {

        /**
         * Constructs a new WarActionUnitBuildTile.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarAction.IWarActionUnitBuildTile);

        /** WarActionUnitBuildTile path. */
        public path?: (Structure.IMovePath|null);

        /** WarActionUnitBuildTile launchUnitId. */
        public launchUnitId: number;

        /** WarActionUnitBuildTile extraData. */
        public extraData?: (WarAction.WarActionUnitBuildTile.IExtraDataForUnitBuildTile|null);

        /**
         * Creates a new WarActionUnitBuildTile instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WarActionUnitBuildTile instance
         */
        public static create(properties?: WarAction.IWarActionUnitBuildTile): WarAction.WarActionUnitBuildTile;

        /**
         * Encodes the specified WarActionUnitBuildTile message. Does not implicitly {@link WarAction.WarActionUnitBuildTile.verify|verify} messages.
         * @param message WarActionUnitBuildTile message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarAction.IWarActionUnitBuildTile, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WarActionUnitBuildTile message, length delimited. Does not implicitly {@link WarAction.WarActionUnitBuildTile.verify|verify} messages.
         * @param message WarActionUnitBuildTile message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarAction.IWarActionUnitBuildTile, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarActionUnitBuildTile message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarActionUnitBuildTile
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionUnitBuildTile;

        /**
         * Decodes a WarActionUnitBuildTile message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WarActionUnitBuildTile
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionUnitBuildTile;

        /**
         * Verifies a WarActionUnitBuildTile message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WarActionUnitBuildTile message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WarActionUnitBuildTile
         */
        public static fromObject(object: { [k: string]: any }): WarAction.WarActionUnitBuildTile;

        /**
         * Creates a plain object from a WarActionUnitBuildTile message. Also converts values to other types if specified.
         * @param message WarActionUnitBuildTile
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarAction.WarActionUnitBuildTile, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WarActionUnitBuildTile to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace WarActionUnitBuildTile {

        /** Properties of an ExtraDataForUnitBuildTile. */
        interface IExtraDataForUnitBuildTile {

            /** ExtraDataForUnitBuildTile commonExtraData */
            commonExtraData?: (Structure.ICommonExtraDataForWarAction|null);
        }

        /** Represents an ExtraDataForUnitBuildTile. */
        class ExtraDataForUnitBuildTile implements IExtraDataForUnitBuildTile {

            /**
             * Constructs a new ExtraDataForUnitBuildTile.
             * @param [properties] Properties to set
             */
            constructor(properties?: WarAction.WarActionUnitBuildTile.IExtraDataForUnitBuildTile);

            /** ExtraDataForUnitBuildTile commonExtraData. */
            public commonExtraData?: (Structure.ICommonExtraDataForWarAction|null);

            /**
             * Creates a new ExtraDataForUnitBuildTile instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ExtraDataForUnitBuildTile instance
             */
            public static create(properties?: WarAction.WarActionUnitBuildTile.IExtraDataForUnitBuildTile): WarAction.WarActionUnitBuildTile.ExtraDataForUnitBuildTile;

            /**
             * Encodes the specified ExtraDataForUnitBuildTile message. Does not implicitly {@link WarAction.WarActionUnitBuildTile.ExtraDataForUnitBuildTile.verify|verify} messages.
             * @param message ExtraDataForUnitBuildTile message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: WarAction.WarActionUnitBuildTile.IExtraDataForUnitBuildTile, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified ExtraDataForUnitBuildTile message, length delimited. Does not implicitly {@link WarAction.WarActionUnitBuildTile.ExtraDataForUnitBuildTile.verify|verify} messages.
             * @param message ExtraDataForUnitBuildTile message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: WarAction.WarActionUnitBuildTile.IExtraDataForUnitBuildTile, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an ExtraDataForUnitBuildTile message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ExtraDataForUnitBuildTile
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionUnitBuildTile.ExtraDataForUnitBuildTile;

            /**
             * Decodes an ExtraDataForUnitBuildTile message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ExtraDataForUnitBuildTile
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionUnitBuildTile.ExtraDataForUnitBuildTile;

            /**
             * Verifies an ExtraDataForUnitBuildTile message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ExtraDataForUnitBuildTile message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ExtraDataForUnitBuildTile
             */
            public static fromObject(object: { [k: string]: any }): WarAction.WarActionUnitBuildTile.ExtraDataForUnitBuildTile;

            /**
             * Creates a plain object from an ExtraDataForUnitBuildTile message. Also converts values to other types if specified.
             * @param message ExtraDataForUnitBuildTile
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: WarAction.WarActionUnitBuildTile.ExtraDataForUnitBuildTile, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ExtraDataForUnitBuildTile to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a WarActionUnitDive. */
    interface IWarActionUnitDive {

        /** WarActionUnitDive path */
        path?: (Structure.IMovePath|null);

        /** WarActionUnitDive launchUnitId */
        launchUnitId?: (number|null);

        /** WarActionUnitDive extraData */
        extraData?: (WarAction.WarActionUnitDive.IExtraDataForUnitDive|null);
    }

    /** Represents a WarActionUnitDive. */
    class WarActionUnitDive implements IWarActionUnitDive {

        /**
         * Constructs a new WarActionUnitDive.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarAction.IWarActionUnitDive);

        /** WarActionUnitDive path. */
        public path?: (Structure.IMovePath|null);

        /** WarActionUnitDive launchUnitId. */
        public launchUnitId: number;

        /** WarActionUnitDive extraData. */
        public extraData?: (WarAction.WarActionUnitDive.IExtraDataForUnitDive|null);

        /**
         * Creates a new WarActionUnitDive instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WarActionUnitDive instance
         */
        public static create(properties?: WarAction.IWarActionUnitDive): WarAction.WarActionUnitDive;

        /**
         * Encodes the specified WarActionUnitDive message. Does not implicitly {@link WarAction.WarActionUnitDive.verify|verify} messages.
         * @param message WarActionUnitDive message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarAction.IWarActionUnitDive, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WarActionUnitDive message, length delimited. Does not implicitly {@link WarAction.WarActionUnitDive.verify|verify} messages.
         * @param message WarActionUnitDive message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarAction.IWarActionUnitDive, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarActionUnitDive message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarActionUnitDive
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionUnitDive;

        /**
         * Decodes a WarActionUnitDive message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WarActionUnitDive
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionUnitDive;

        /**
         * Verifies a WarActionUnitDive message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WarActionUnitDive message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WarActionUnitDive
         */
        public static fromObject(object: { [k: string]: any }): WarAction.WarActionUnitDive;

        /**
         * Creates a plain object from a WarActionUnitDive message. Also converts values to other types if specified.
         * @param message WarActionUnitDive
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarAction.WarActionUnitDive, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WarActionUnitDive to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace WarActionUnitDive {

        /** Properties of an ExtraDataForUnitDive. */
        interface IExtraDataForUnitDive {

            /** ExtraDataForUnitDive commonExtraData */
            commonExtraData?: (Structure.ICommonExtraDataForWarAction|null);
        }

        /** Represents an ExtraDataForUnitDive. */
        class ExtraDataForUnitDive implements IExtraDataForUnitDive {

            /**
             * Constructs a new ExtraDataForUnitDive.
             * @param [properties] Properties to set
             */
            constructor(properties?: WarAction.WarActionUnitDive.IExtraDataForUnitDive);

            /** ExtraDataForUnitDive commonExtraData. */
            public commonExtraData?: (Structure.ICommonExtraDataForWarAction|null);

            /**
             * Creates a new ExtraDataForUnitDive instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ExtraDataForUnitDive instance
             */
            public static create(properties?: WarAction.WarActionUnitDive.IExtraDataForUnitDive): WarAction.WarActionUnitDive.ExtraDataForUnitDive;

            /**
             * Encodes the specified ExtraDataForUnitDive message. Does not implicitly {@link WarAction.WarActionUnitDive.ExtraDataForUnitDive.verify|verify} messages.
             * @param message ExtraDataForUnitDive message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: WarAction.WarActionUnitDive.IExtraDataForUnitDive, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified ExtraDataForUnitDive message, length delimited. Does not implicitly {@link WarAction.WarActionUnitDive.ExtraDataForUnitDive.verify|verify} messages.
             * @param message ExtraDataForUnitDive message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: WarAction.WarActionUnitDive.IExtraDataForUnitDive, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an ExtraDataForUnitDive message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ExtraDataForUnitDive
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionUnitDive.ExtraDataForUnitDive;

            /**
             * Decodes an ExtraDataForUnitDive message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ExtraDataForUnitDive
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionUnitDive.ExtraDataForUnitDive;

            /**
             * Verifies an ExtraDataForUnitDive message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ExtraDataForUnitDive message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ExtraDataForUnitDive
             */
            public static fromObject(object: { [k: string]: any }): WarAction.WarActionUnitDive.ExtraDataForUnitDive;

            /**
             * Creates a plain object from an ExtraDataForUnitDive message. Also converts values to other types if specified.
             * @param message ExtraDataForUnitDive
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: WarAction.WarActionUnitDive.ExtraDataForUnitDive, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ExtraDataForUnitDive to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a WarActionUnitSurface. */
    interface IWarActionUnitSurface {

        /** WarActionUnitSurface path */
        path?: (Structure.IMovePath|null);

        /** WarActionUnitSurface launchUnitId */
        launchUnitId?: (number|null);

        /** WarActionUnitSurface extraData */
        extraData?: (WarAction.WarActionUnitSurface.IExtraDataForUnitSurface|null);
    }

    /** Represents a WarActionUnitSurface. */
    class WarActionUnitSurface implements IWarActionUnitSurface {

        /**
         * Constructs a new WarActionUnitSurface.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarAction.IWarActionUnitSurface);

        /** WarActionUnitSurface path. */
        public path?: (Structure.IMovePath|null);

        /** WarActionUnitSurface launchUnitId. */
        public launchUnitId: number;

        /** WarActionUnitSurface extraData. */
        public extraData?: (WarAction.WarActionUnitSurface.IExtraDataForUnitSurface|null);

        /**
         * Creates a new WarActionUnitSurface instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WarActionUnitSurface instance
         */
        public static create(properties?: WarAction.IWarActionUnitSurface): WarAction.WarActionUnitSurface;

        /**
         * Encodes the specified WarActionUnitSurface message. Does not implicitly {@link WarAction.WarActionUnitSurface.verify|verify} messages.
         * @param message WarActionUnitSurface message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarAction.IWarActionUnitSurface, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WarActionUnitSurface message, length delimited. Does not implicitly {@link WarAction.WarActionUnitSurface.verify|verify} messages.
         * @param message WarActionUnitSurface message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarAction.IWarActionUnitSurface, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarActionUnitSurface message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarActionUnitSurface
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionUnitSurface;

        /**
         * Decodes a WarActionUnitSurface message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WarActionUnitSurface
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionUnitSurface;

        /**
         * Verifies a WarActionUnitSurface message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WarActionUnitSurface message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WarActionUnitSurface
         */
        public static fromObject(object: { [k: string]: any }): WarAction.WarActionUnitSurface;

        /**
         * Creates a plain object from a WarActionUnitSurface message. Also converts values to other types if specified.
         * @param message WarActionUnitSurface
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarAction.WarActionUnitSurface, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WarActionUnitSurface to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace WarActionUnitSurface {

        /** Properties of an ExtraDataForUnitSurface. */
        interface IExtraDataForUnitSurface {

            /** ExtraDataForUnitSurface commonExtraData */
            commonExtraData?: (Structure.ICommonExtraDataForWarAction|null);
        }

        /** Represents an ExtraDataForUnitSurface. */
        class ExtraDataForUnitSurface implements IExtraDataForUnitSurface {

            /**
             * Constructs a new ExtraDataForUnitSurface.
             * @param [properties] Properties to set
             */
            constructor(properties?: WarAction.WarActionUnitSurface.IExtraDataForUnitSurface);

            /** ExtraDataForUnitSurface commonExtraData. */
            public commonExtraData?: (Structure.ICommonExtraDataForWarAction|null);

            /**
             * Creates a new ExtraDataForUnitSurface instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ExtraDataForUnitSurface instance
             */
            public static create(properties?: WarAction.WarActionUnitSurface.IExtraDataForUnitSurface): WarAction.WarActionUnitSurface.ExtraDataForUnitSurface;

            /**
             * Encodes the specified ExtraDataForUnitSurface message. Does not implicitly {@link WarAction.WarActionUnitSurface.ExtraDataForUnitSurface.verify|verify} messages.
             * @param message ExtraDataForUnitSurface message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: WarAction.WarActionUnitSurface.IExtraDataForUnitSurface, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified ExtraDataForUnitSurface message, length delimited. Does not implicitly {@link WarAction.WarActionUnitSurface.ExtraDataForUnitSurface.verify|verify} messages.
             * @param message ExtraDataForUnitSurface message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: WarAction.WarActionUnitSurface.IExtraDataForUnitSurface, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an ExtraDataForUnitSurface message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ExtraDataForUnitSurface
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionUnitSurface.ExtraDataForUnitSurface;

            /**
             * Decodes an ExtraDataForUnitSurface message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ExtraDataForUnitSurface
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionUnitSurface.ExtraDataForUnitSurface;

            /**
             * Verifies an ExtraDataForUnitSurface message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ExtraDataForUnitSurface message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ExtraDataForUnitSurface
             */
            public static fromObject(object: { [k: string]: any }): WarAction.WarActionUnitSurface.ExtraDataForUnitSurface;

            /**
             * Creates a plain object from an ExtraDataForUnitSurface message. Also converts values to other types if specified.
             * @param message ExtraDataForUnitSurface
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: WarAction.WarActionUnitSurface.ExtraDataForUnitSurface, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ExtraDataForUnitSurface to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a WarActionUnitJoinUnit. */
    interface IWarActionUnitJoinUnit {

        /** WarActionUnitJoinUnit path */
        path?: (Structure.IMovePath|null);

        /** WarActionUnitJoinUnit launchUnitId */
        launchUnitId?: (number|null);

        /** WarActionUnitJoinUnit extraData */
        extraData?: (WarAction.WarActionUnitJoinUnit.IExtraDataForUnitJoinUnit|null);
    }

    /** Represents a WarActionUnitJoinUnit. */
    class WarActionUnitJoinUnit implements IWarActionUnitJoinUnit {

        /**
         * Constructs a new WarActionUnitJoinUnit.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarAction.IWarActionUnitJoinUnit);

        /** WarActionUnitJoinUnit path. */
        public path?: (Structure.IMovePath|null);

        /** WarActionUnitJoinUnit launchUnitId. */
        public launchUnitId: number;

        /** WarActionUnitJoinUnit extraData. */
        public extraData?: (WarAction.WarActionUnitJoinUnit.IExtraDataForUnitJoinUnit|null);

        /**
         * Creates a new WarActionUnitJoinUnit instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WarActionUnitJoinUnit instance
         */
        public static create(properties?: WarAction.IWarActionUnitJoinUnit): WarAction.WarActionUnitJoinUnit;

        /**
         * Encodes the specified WarActionUnitJoinUnit message. Does not implicitly {@link WarAction.WarActionUnitJoinUnit.verify|verify} messages.
         * @param message WarActionUnitJoinUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarAction.IWarActionUnitJoinUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WarActionUnitJoinUnit message, length delimited. Does not implicitly {@link WarAction.WarActionUnitJoinUnit.verify|verify} messages.
         * @param message WarActionUnitJoinUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarAction.IWarActionUnitJoinUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarActionUnitJoinUnit message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarActionUnitJoinUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionUnitJoinUnit;

        /**
         * Decodes a WarActionUnitJoinUnit message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WarActionUnitJoinUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionUnitJoinUnit;

        /**
         * Verifies a WarActionUnitJoinUnit message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WarActionUnitJoinUnit message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WarActionUnitJoinUnit
         */
        public static fromObject(object: { [k: string]: any }): WarAction.WarActionUnitJoinUnit;

        /**
         * Creates a plain object from a WarActionUnitJoinUnit message. Also converts values to other types if specified.
         * @param message WarActionUnitJoinUnit
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarAction.WarActionUnitJoinUnit, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WarActionUnitJoinUnit to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace WarActionUnitJoinUnit {

        /** Properties of an ExtraDataForUnitJoinUnit. */
        interface IExtraDataForUnitJoinUnit {

            /** ExtraDataForUnitJoinUnit commonExtraData */
            commonExtraData?: (Structure.ICommonExtraDataForWarAction|null);
        }

        /** Represents an ExtraDataForUnitJoinUnit. */
        class ExtraDataForUnitJoinUnit implements IExtraDataForUnitJoinUnit {

            /**
             * Constructs a new ExtraDataForUnitJoinUnit.
             * @param [properties] Properties to set
             */
            constructor(properties?: WarAction.WarActionUnitJoinUnit.IExtraDataForUnitJoinUnit);

            /** ExtraDataForUnitJoinUnit commonExtraData. */
            public commonExtraData?: (Structure.ICommonExtraDataForWarAction|null);

            /**
             * Creates a new ExtraDataForUnitJoinUnit instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ExtraDataForUnitJoinUnit instance
             */
            public static create(properties?: WarAction.WarActionUnitJoinUnit.IExtraDataForUnitJoinUnit): WarAction.WarActionUnitJoinUnit.ExtraDataForUnitJoinUnit;

            /**
             * Encodes the specified ExtraDataForUnitJoinUnit message. Does not implicitly {@link WarAction.WarActionUnitJoinUnit.ExtraDataForUnitJoinUnit.verify|verify} messages.
             * @param message ExtraDataForUnitJoinUnit message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: WarAction.WarActionUnitJoinUnit.IExtraDataForUnitJoinUnit, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified ExtraDataForUnitJoinUnit message, length delimited. Does not implicitly {@link WarAction.WarActionUnitJoinUnit.ExtraDataForUnitJoinUnit.verify|verify} messages.
             * @param message ExtraDataForUnitJoinUnit message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: WarAction.WarActionUnitJoinUnit.IExtraDataForUnitJoinUnit, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an ExtraDataForUnitJoinUnit message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ExtraDataForUnitJoinUnit
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionUnitJoinUnit.ExtraDataForUnitJoinUnit;

            /**
             * Decodes an ExtraDataForUnitJoinUnit message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ExtraDataForUnitJoinUnit
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionUnitJoinUnit.ExtraDataForUnitJoinUnit;

            /**
             * Verifies an ExtraDataForUnitJoinUnit message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ExtraDataForUnitJoinUnit message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ExtraDataForUnitJoinUnit
             */
            public static fromObject(object: { [k: string]: any }): WarAction.WarActionUnitJoinUnit.ExtraDataForUnitJoinUnit;

            /**
             * Creates a plain object from an ExtraDataForUnitJoinUnit message. Also converts values to other types if specified.
             * @param message ExtraDataForUnitJoinUnit
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: WarAction.WarActionUnitJoinUnit.ExtraDataForUnitJoinUnit, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ExtraDataForUnitJoinUnit to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a WarActionUnitLaunchFlare. */
    interface IWarActionUnitLaunchFlare {

        /** WarActionUnitLaunchFlare path */
        path?: (Structure.IMovePath|null);

        /** WarActionUnitLaunchFlare launchUnitId */
        launchUnitId?: (number|null);

        /** WarActionUnitLaunchFlare targetGridIndex */
        targetGridIndex?: (Structure.IGridIndex|null);

        /** WarActionUnitLaunchFlare extraData */
        extraData?: (WarAction.WarActionUnitLaunchFlare.IExtraDataForUnitLaunchFlare|null);
    }

    /** Represents a WarActionUnitLaunchFlare. */
    class WarActionUnitLaunchFlare implements IWarActionUnitLaunchFlare {

        /**
         * Constructs a new WarActionUnitLaunchFlare.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarAction.IWarActionUnitLaunchFlare);

        /** WarActionUnitLaunchFlare path. */
        public path?: (Structure.IMovePath|null);

        /** WarActionUnitLaunchFlare launchUnitId. */
        public launchUnitId: number;

        /** WarActionUnitLaunchFlare targetGridIndex. */
        public targetGridIndex?: (Structure.IGridIndex|null);

        /** WarActionUnitLaunchFlare extraData. */
        public extraData?: (WarAction.WarActionUnitLaunchFlare.IExtraDataForUnitLaunchFlare|null);

        /**
         * Creates a new WarActionUnitLaunchFlare instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WarActionUnitLaunchFlare instance
         */
        public static create(properties?: WarAction.IWarActionUnitLaunchFlare): WarAction.WarActionUnitLaunchFlare;

        /**
         * Encodes the specified WarActionUnitLaunchFlare message. Does not implicitly {@link WarAction.WarActionUnitLaunchFlare.verify|verify} messages.
         * @param message WarActionUnitLaunchFlare message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarAction.IWarActionUnitLaunchFlare, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WarActionUnitLaunchFlare message, length delimited. Does not implicitly {@link WarAction.WarActionUnitLaunchFlare.verify|verify} messages.
         * @param message WarActionUnitLaunchFlare message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarAction.IWarActionUnitLaunchFlare, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarActionUnitLaunchFlare message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarActionUnitLaunchFlare
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionUnitLaunchFlare;

        /**
         * Decodes a WarActionUnitLaunchFlare message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WarActionUnitLaunchFlare
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionUnitLaunchFlare;

        /**
         * Verifies a WarActionUnitLaunchFlare message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WarActionUnitLaunchFlare message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WarActionUnitLaunchFlare
         */
        public static fromObject(object: { [k: string]: any }): WarAction.WarActionUnitLaunchFlare;

        /**
         * Creates a plain object from a WarActionUnitLaunchFlare message. Also converts values to other types if specified.
         * @param message WarActionUnitLaunchFlare
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarAction.WarActionUnitLaunchFlare, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WarActionUnitLaunchFlare to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace WarActionUnitLaunchFlare {

        /** Properties of an ExtraDataForUnitLaunchFlare. */
        interface IExtraDataForUnitLaunchFlare {

            /** ExtraDataForUnitLaunchFlare commonExtraData */
            commonExtraData?: (Structure.ICommonExtraDataForWarAction|null);

            /** ExtraDataForUnitLaunchFlare targetGridIndex */
            targetGridIndex?: (Structure.IGridIndex|null);

            /** ExtraDataForUnitLaunchFlare flareRadius */
            flareRadius?: (number|null);
        }

        /** Represents an ExtraDataForUnitLaunchFlare. */
        class ExtraDataForUnitLaunchFlare implements IExtraDataForUnitLaunchFlare {

            /**
             * Constructs a new ExtraDataForUnitLaunchFlare.
             * @param [properties] Properties to set
             */
            constructor(properties?: WarAction.WarActionUnitLaunchFlare.IExtraDataForUnitLaunchFlare);

            /** ExtraDataForUnitLaunchFlare commonExtraData. */
            public commonExtraData?: (Structure.ICommonExtraDataForWarAction|null);

            /** ExtraDataForUnitLaunchFlare targetGridIndex. */
            public targetGridIndex?: (Structure.IGridIndex|null);

            /** ExtraDataForUnitLaunchFlare flareRadius. */
            public flareRadius: number;

            /**
             * Creates a new ExtraDataForUnitLaunchFlare instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ExtraDataForUnitLaunchFlare instance
             */
            public static create(properties?: WarAction.WarActionUnitLaunchFlare.IExtraDataForUnitLaunchFlare): WarAction.WarActionUnitLaunchFlare.ExtraDataForUnitLaunchFlare;

            /**
             * Encodes the specified ExtraDataForUnitLaunchFlare message. Does not implicitly {@link WarAction.WarActionUnitLaunchFlare.ExtraDataForUnitLaunchFlare.verify|verify} messages.
             * @param message ExtraDataForUnitLaunchFlare message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: WarAction.WarActionUnitLaunchFlare.IExtraDataForUnitLaunchFlare, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified ExtraDataForUnitLaunchFlare message, length delimited. Does not implicitly {@link WarAction.WarActionUnitLaunchFlare.ExtraDataForUnitLaunchFlare.verify|verify} messages.
             * @param message ExtraDataForUnitLaunchFlare message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: WarAction.WarActionUnitLaunchFlare.IExtraDataForUnitLaunchFlare, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an ExtraDataForUnitLaunchFlare message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ExtraDataForUnitLaunchFlare
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionUnitLaunchFlare.ExtraDataForUnitLaunchFlare;

            /**
             * Decodes an ExtraDataForUnitLaunchFlare message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ExtraDataForUnitLaunchFlare
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionUnitLaunchFlare.ExtraDataForUnitLaunchFlare;

            /**
             * Verifies an ExtraDataForUnitLaunchFlare message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ExtraDataForUnitLaunchFlare message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ExtraDataForUnitLaunchFlare
             */
            public static fromObject(object: { [k: string]: any }): WarAction.WarActionUnitLaunchFlare.ExtraDataForUnitLaunchFlare;

            /**
             * Creates a plain object from an ExtraDataForUnitLaunchFlare message. Also converts values to other types if specified.
             * @param message ExtraDataForUnitLaunchFlare
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: WarAction.WarActionUnitLaunchFlare.ExtraDataForUnitLaunchFlare, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ExtraDataForUnitLaunchFlare to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a WarActionUnitLaunchSilo. */
    interface IWarActionUnitLaunchSilo {

        /** WarActionUnitLaunchSilo path */
        path?: (Structure.IMovePath|null);

        /** WarActionUnitLaunchSilo launchUnitId */
        launchUnitId?: (number|null);

        /** WarActionUnitLaunchSilo targetGridIndex */
        targetGridIndex?: (Structure.IGridIndex|null);

        /** WarActionUnitLaunchSilo extraData */
        extraData?: (WarAction.WarActionUnitLaunchSilo.IExtraDataForUnitLaunchSilo|null);
    }

    /** Represents a WarActionUnitLaunchSilo. */
    class WarActionUnitLaunchSilo implements IWarActionUnitLaunchSilo {

        /**
         * Constructs a new WarActionUnitLaunchSilo.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarAction.IWarActionUnitLaunchSilo);

        /** WarActionUnitLaunchSilo path. */
        public path?: (Structure.IMovePath|null);

        /** WarActionUnitLaunchSilo launchUnitId. */
        public launchUnitId: number;

        /** WarActionUnitLaunchSilo targetGridIndex. */
        public targetGridIndex?: (Structure.IGridIndex|null);

        /** WarActionUnitLaunchSilo extraData. */
        public extraData?: (WarAction.WarActionUnitLaunchSilo.IExtraDataForUnitLaunchSilo|null);

        /**
         * Creates a new WarActionUnitLaunchSilo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WarActionUnitLaunchSilo instance
         */
        public static create(properties?: WarAction.IWarActionUnitLaunchSilo): WarAction.WarActionUnitLaunchSilo;

        /**
         * Encodes the specified WarActionUnitLaunchSilo message. Does not implicitly {@link WarAction.WarActionUnitLaunchSilo.verify|verify} messages.
         * @param message WarActionUnitLaunchSilo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarAction.IWarActionUnitLaunchSilo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WarActionUnitLaunchSilo message, length delimited. Does not implicitly {@link WarAction.WarActionUnitLaunchSilo.verify|verify} messages.
         * @param message WarActionUnitLaunchSilo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarAction.IWarActionUnitLaunchSilo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarActionUnitLaunchSilo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarActionUnitLaunchSilo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionUnitLaunchSilo;

        /**
         * Decodes a WarActionUnitLaunchSilo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WarActionUnitLaunchSilo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionUnitLaunchSilo;

        /**
         * Verifies a WarActionUnitLaunchSilo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WarActionUnitLaunchSilo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WarActionUnitLaunchSilo
         */
        public static fromObject(object: { [k: string]: any }): WarAction.WarActionUnitLaunchSilo;

        /**
         * Creates a plain object from a WarActionUnitLaunchSilo message. Also converts values to other types if specified.
         * @param message WarActionUnitLaunchSilo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarAction.WarActionUnitLaunchSilo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WarActionUnitLaunchSilo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace WarActionUnitLaunchSilo {

        /** Properties of an ExtraDataForUnitLaunchSilo. */
        interface IExtraDataForUnitLaunchSilo {

            /** ExtraDataForUnitLaunchSilo commonExtraData */
            commonExtraData?: (Structure.ICommonExtraDataForWarAction|null);

            /** ExtraDataForUnitLaunchSilo targetGridIndex */
            targetGridIndex?: (Structure.IGridIndex|null);
        }

        /** Represents an ExtraDataForUnitLaunchSilo. */
        class ExtraDataForUnitLaunchSilo implements IExtraDataForUnitLaunchSilo {

            /**
             * Constructs a new ExtraDataForUnitLaunchSilo.
             * @param [properties] Properties to set
             */
            constructor(properties?: WarAction.WarActionUnitLaunchSilo.IExtraDataForUnitLaunchSilo);

            /** ExtraDataForUnitLaunchSilo commonExtraData. */
            public commonExtraData?: (Structure.ICommonExtraDataForWarAction|null);

            /** ExtraDataForUnitLaunchSilo targetGridIndex. */
            public targetGridIndex?: (Structure.IGridIndex|null);

            /**
             * Creates a new ExtraDataForUnitLaunchSilo instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ExtraDataForUnitLaunchSilo instance
             */
            public static create(properties?: WarAction.WarActionUnitLaunchSilo.IExtraDataForUnitLaunchSilo): WarAction.WarActionUnitLaunchSilo.ExtraDataForUnitLaunchSilo;

            /**
             * Encodes the specified ExtraDataForUnitLaunchSilo message. Does not implicitly {@link WarAction.WarActionUnitLaunchSilo.ExtraDataForUnitLaunchSilo.verify|verify} messages.
             * @param message ExtraDataForUnitLaunchSilo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: WarAction.WarActionUnitLaunchSilo.IExtraDataForUnitLaunchSilo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified ExtraDataForUnitLaunchSilo message, length delimited. Does not implicitly {@link WarAction.WarActionUnitLaunchSilo.ExtraDataForUnitLaunchSilo.verify|verify} messages.
             * @param message ExtraDataForUnitLaunchSilo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: WarAction.WarActionUnitLaunchSilo.IExtraDataForUnitLaunchSilo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an ExtraDataForUnitLaunchSilo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ExtraDataForUnitLaunchSilo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionUnitLaunchSilo.ExtraDataForUnitLaunchSilo;

            /**
             * Decodes an ExtraDataForUnitLaunchSilo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ExtraDataForUnitLaunchSilo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionUnitLaunchSilo.ExtraDataForUnitLaunchSilo;

            /**
             * Verifies an ExtraDataForUnitLaunchSilo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ExtraDataForUnitLaunchSilo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ExtraDataForUnitLaunchSilo
             */
            public static fromObject(object: { [k: string]: any }): WarAction.WarActionUnitLaunchSilo.ExtraDataForUnitLaunchSilo;

            /**
             * Creates a plain object from an ExtraDataForUnitLaunchSilo message. Also converts values to other types if specified.
             * @param message ExtraDataForUnitLaunchSilo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: WarAction.WarActionUnitLaunchSilo.ExtraDataForUnitLaunchSilo, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ExtraDataForUnitLaunchSilo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a WarActionUnitProduceUnit. */
    interface IWarActionUnitProduceUnit {

        /** WarActionUnitProduceUnit path */
        path?: (Structure.IMovePath|null);

        /** WarActionUnitProduceUnit launchUnitId */
        launchUnitId?: (number|null);

        /** WarActionUnitProduceUnit extraData */
        extraData?: (WarAction.WarActionUnitProduceUnit.IExtraDataForUnitProduceUnit|null);
    }

    /** Represents a WarActionUnitProduceUnit. */
    class WarActionUnitProduceUnit implements IWarActionUnitProduceUnit {

        /**
         * Constructs a new WarActionUnitProduceUnit.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarAction.IWarActionUnitProduceUnit);

        /** WarActionUnitProduceUnit path. */
        public path?: (Structure.IMovePath|null);

        /** WarActionUnitProduceUnit launchUnitId. */
        public launchUnitId: number;

        /** WarActionUnitProduceUnit extraData. */
        public extraData?: (WarAction.WarActionUnitProduceUnit.IExtraDataForUnitProduceUnit|null);

        /**
         * Creates a new WarActionUnitProduceUnit instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WarActionUnitProduceUnit instance
         */
        public static create(properties?: WarAction.IWarActionUnitProduceUnit): WarAction.WarActionUnitProduceUnit;

        /**
         * Encodes the specified WarActionUnitProduceUnit message. Does not implicitly {@link WarAction.WarActionUnitProduceUnit.verify|verify} messages.
         * @param message WarActionUnitProduceUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarAction.IWarActionUnitProduceUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WarActionUnitProduceUnit message, length delimited. Does not implicitly {@link WarAction.WarActionUnitProduceUnit.verify|verify} messages.
         * @param message WarActionUnitProduceUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarAction.IWarActionUnitProduceUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarActionUnitProduceUnit message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarActionUnitProduceUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionUnitProduceUnit;

        /**
         * Decodes a WarActionUnitProduceUnit message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WarActionUnitProduceUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionUnitProduceUnit;

        /**
         * Verifies a WarActionUnitProduceUnit message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WarActionUnitProduceUnit message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WarActionUnitProduceUnit
         */
        public static fromObject(object: { [k: string]: any }): WarAction.WarActionUnitProduceUnit;

        /**
         * Creates a plain object from a WarActionUnitProduceUnit message. Also converts values to other types if specified.
         * @param message WarActionUnitProduceUnit
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarAction.WarActionUnitProduceUnit, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WarActionUnitProduceUnit to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace WarActionUnitProduceUnit {

        /** Properties of an ExtraDataForUnitProduceUnit. */
        interface IExtraDataForUnitProduceUnit {

            /** ExtraDataForUnitProduceUnit commonExtraData */
            commonExtraData?: (Structure.ICommonExtraDataForWarAction|null);
        }

        /** Represents an ExtraDataForUnitProduceUnit. */
        class ExtraDataForUnitProduceUnit implements IExtraDataForUnitProduceUnit {

            /**
             * Constructs a new ExtraDataForUnitProduceUnit.
             * @param [properties] Properties to set
             */
            constructor(properties?: WarAction.WarActionUnitProduceUnit.IExtraDataForUnitProduceUnit);

            /** ExtraDataForUnitProduceUnit commonExtraData. */
            public commonExtraData?: (Structure.ICommonExtraDataForWarAction|null);

            /**
             * Creates a new ExtraDataForUnitProduceUnit instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ExtraDataForUnitProduceUnit instance
             */
            public static create(properties?: WarAction.WarActionUnitProduceUnit.IExtraDataForUnitProduceUnit): WarAction.WarActionUnitProduceUnit.ExtraDataForUnitProduceUnit;

            /**
             * Encodes the specified ExtraDataForUnitProduceUnit message. Does not implicitly {@link WarAction.WarActionUnitProduceUnit.ExtraDataForUnitProduceUnit.verify|verify} messages.
             * @param message ExtraDataForUnitProduceUnit message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: WarAction.WarActionUnitProduceUnit.IExtraDataForUnitProduceUnit, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified ExtraDataForUnitProduceUnit message, length delimited. Does not implicitly {@link WarAction.WarActionUnitProduceUnit.ExtraDataForUnitProduceUnit.verify|verify} messages.
             * @param message ExtraDataForUnitProduceUnit message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: WarAction.WarActionUnitProduceUnit.IExtraDataForUnitProduceUnit, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an ExtraDataForUnitProduceUnit message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ExtraDataForUnitProduceUnit
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionUnitProduceUnit.ExtraDataForUnitProduceUnit;

            /**
             * Decodes an ExtraDataForUnitProduceUnit message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ExtraDataForUnitProduceUnit
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionUnitProduceUnit.ExtraDataForUnitProduceUnit;

            /**
             * Verifies an ExtraDataForUnitProduceUnit message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ExtraDataForUnitProduceUnit message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ExtraDataForUnitProduceUnit
             */
            public static fromObject(object: { [k: string]: any }): WarAction.WarActionUnitProduceUnit.ExtraDataForUnitProduceUnit;

            /**
             * Creates a plain object from an ExtraDataForUnitProduceUnit message. Also converts values to other types if specified.
             * @param message ExtraDataForUnitProduceUnit
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: WarAction.WarActionUnitProduceUnit.ExtraDataForUnitProduceUnit, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ExtraDataForUnitProduceUnit to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a WarActionUnitSupplyUnit. */
    interface IWarActionUnitSupplyUnit {

        /** WarActionUnitSupplyUnit path */
        path?: (Structure.IMovePath|null);

        /** WarActionUnitSupplyUnit launchUnitId */
        launchUnitId?: (number|null);

        /** WarActionUnitSupplyUnit extraData */
        extraData?: (WarAction.WarActionUnitSupplyUnit.IExtraDataForUnitSupplyUnit|null);
    }

    /** Represents a WarActionUnitSupplyUnit. */
    class WarActionUnitSupplyUnit implements IWarActionUnitSupplyUnit {

        /**
         * Constructs a new WarActionUnitSupplyUnit.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarAction.IWarActionUnitSupplyUnit);

        /** WarActionUnitSupplyUnit path. */
        public path?: (Structure.IMovePath|null);

        /** WarActionUnitSupplyUnit launchUnitId. */
        public launchUnitId: number;

        /** WarActionUnitSupplyUnit extraData. */
        public extraData?: (WarAction.WarActionUnitSupplyUnit.IExtraDataForUnitSupplyUnit|null);

        /**
         * Creates a new WarActionUnitSupplyUnit instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WarActionUnitSupplyUnit instance
         */
        public static create(properties?: WarAction.IWarActionUnitSupplyUnit): WarAction.WarActionUnitSupplyUnit;

        /**
         * Encodes the specified WarActionUnitSupplyUnit message. Does not implicitly {@link WarAction.WarActionUnitSupplyUnit.verify|verify} messages.
         * @param message WarActionUnitSupplyUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarAction.IWarActionUnitSupplyUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WarActionUnitSupplyUnit message, length delimited. Does not implicitly {@link WarAction.WarActionUnitSupplyUnit.verify|verify} messages.
         * @param message WarActionUnitSupplyUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarAction.IWarActionUnitSupplyUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarActionUnitSupplyUnit message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarActionUnitSupplyUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionUnitSupplyUnit;

        /**
         * Decodes a WarActionUnitSupplyUnit message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WarActionUnitSupplyUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionUnitSupplyUnit;

        /**
         * Verifies a WarActionUnitSupplyUnit message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WarActionUnitSupplyUnit message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WarActionUnitSupplyUnit
         */
        public static fromObject(object: { [k: string]: any }): WarAction.WarActionUnitSupplyUnit;

        /**
         * Creates a plain object from a WarActionUnitSupplyUnit message. Also converts values to other types if specified.
         * @param message WarActionUnitSupplyUnit
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarAction.WarActionUnitSupplyUnit, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WarActionUnitSupplyUnit to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace WarActionUnitSupplyUnit {

        /** Properties of an ExtraDataForUnitSupplyUnit. */
        interface IExtraDataForUnitSupplyUnit {

            /** ExtraDataForUnitSupplyUnit commonExtraData */
            commonExtraData?: (Structure.ICommonExtraDataForWarAction|null);
        }

        /** Represents an ExtraDataForUnitSupplyUnit. */
        class ExtraDataForUnitSupplyUnit implements IExtraDataForUnitSupplyUnit {

            /**
             * Constructs a new ExtraDataForUnitSupplyUnit.
             * @param [properties] Properties to set
             */
            constructor(properties?: WarAction.WarActionUnitSupplyUnit.IExtraDataForUnitSupplyUnit);

            /** ExtraDataForUnitSupplyUnit commonExtraData. */
            public commonExtraData?: (Structure.ICommonExtraDataForWarAction|null);

            /**
             * Creates a new ExtraDataForUnitSupplyUnit instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ExtraDataForUnitSupplyUnit instance
             */
            public static create(properties?: WarAction.WarActionUnitSupplyUnit.IExtraDataForUnitSupplyUnit): WarAction.WarActionUnitSupplyUnit.ExtraDataForUnitSupplyUnit;

            /**
             * Encodes the specified ExtraDataForUnitSupplyUnit message. Does not implicitly {@link WarAction.WarActionUnitSupplyUnit.ExtraDataForUnitSupplyUnit.verify|verify} messages.
             * @param message ExtraDataForUnitSupplyUnit message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: WarAction.WarActionUnitSupplyUnit.IExtraDataForUnitSupplyUnit, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified ExtraDataForUnitSupplyUnit message, length delimited. Does not implicitly {@link WarAction.WarActionUnitSupplyUnit.ExtraDataForUnitSupplyUnit.verify|verify} messages.
             * @param message ExtraDataForUnitSupplyUnit message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: WarAction.WarActionUnitSupplyUnit.IExtraDataForUnitSupplyUnit, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an ExtraDataForUnitSupplyUnit message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ExtraDataForUnitSupplyUnit
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionUnitSupplyUnit.ExtraDataForUnitSupplyUnit;

            /**
             * Decodes an ExtraDataForUnitSupplyUnit message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ExtraDataForUnitSupplyUnit
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionUnitSupplyUnit.ExtraDataForUnitSupplyUnit;

            /**
             * Verifies an ExtraDataForUnitSupplyUnit message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ExtraDataForUnitSupplyUnit message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ExtraDataForUnitSupplyUnit
             */
            public static fromObject(object: { [k: string]: any }): WarAction.WarActionUnitSupplyUnit.ExtraDataForUnitSupplyUnit;

            /**
             * Creates a plain object from an ExtraDataForUnitSupplyUnit message. Also converts values to other types if specified.
             * @param message ExtraDataForUnitSupplyUnit
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: WarAction.WarActionUnitSupplyUnit.ExtraDataForUnitSupplyUnit, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ExtraDataForUnitSupplyUnit to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a WarActionUnitLoadCo. */
    interface IWarActionUnitLoadCo {

        /** WarActionUnitLoadCo path */
        path?: (Structure.IMovePath|null);

        /** WarActionUnitLoadCo launchUnitId */
        launchUnitId?: (number|null);

        /** WarActionUnitLoadCo extraData */
        extraData?: (WarAction.WarActionUnitLoadCo.IExtraDataForUnitLoadCo|null);
    }

    /** Represents a WarActionUnitLoadCo. */
    class WarActionUnitLoadCo implements IWarActionUnitLoadCo {

        /**
         * Constructs a new WarActionUnitLoadCo.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarAction.IWarActionUnitLoadCo);

        /** WarActionUnitLoadCo path. */
        public path?: (Structure.IMovePath|null);

        /** WarActionUnitLoadCo launchUnitId. */
        public launchUnitId: number;

        /** WarActionUnitLoadCo extraData. */
        public extraData?: (WarAction.WarActionUnitLoadCo.IExtraDataForUnitLoadCo|null);

        /**
         * Creates a new WarActionUnitLoadCo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WarActionUnitLoadCo instance
         */
        public static create(properties?: WarAction.IWarActionUnitLoadCo): WarAction.WarActionUnitLoadCo;

        /**
         * Encodes the specified WarActionUnitLoadCo message. Does not implicitly {@link WarAction.WarActionUnitLoadCo.verify|verify} messages.
         * @param message WarActionUnitLoadCo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarAction.IWarActionUnitLoadCo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WarActionUnitLoadCo message, length delimited. Does not implicitly {@link WarAction.WarActionUnitLoadCo.verify|verify} messages.
         * @param message WarActionUnitLoadCo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarAction.IWarActionUnitLoadCo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarActionUnitLoadCo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarActionUnitLoadCo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionUnitLoadCo;

        /**
         * Decodes a WarActionUnitLoadCo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WarActionUnitLoadCo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionUnitLoadCo;

        /**
         * Verifies a WarActionUnitLoadCo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WarActionUnitLoadCo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WarActionUnitLoadCo
         */
        public static fromObject(object: { [k: string]: any }): WarAction.WarActionUnitLoadCo;

        /**
         * Creates a plain object from a WarActionUnitLoadCo message. Also converts values to other types if specified.
         * @param message WarActionUnitLoadCo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarAction.WarActionUnitLoadCo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WarActionUnitLoadCo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace WarActionUnitLoadCo {

        /** Properties of an ExtraDataForUnitLoadCo. */
        interface IExtraDataForUnitLoadCo {

            /** ExtraDataForUnitLoadCo commonExtraData */
            commonExtraData?: (Structure.ICommonExtraDataForWarAction|null);
        }

        /** Represents an ExtraDataForUnitLoadCo. */
        class ExtraDataForUnitLoadCo implements IExtraDataForUnitLoadCo {

            /**
             * Constructs a new ExtraDataForUnitLoadCo.
             * @param [properties] Properties to set
             */
            constructor(properties?: WarAction.WarActionUnitLoadCo.IExtraDataForUnitLoadCo);

            /** ExtraDataForUnitLoadCo commonExtraData. */
            public commonExtraData?: (Structure.ICommonExtraDataForWarAction|null);

            /**
             * Creates a new ExtraDataForUnitLoadCo instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ExtraDataForUnitLoadCo instance
             */
            public static create(properties?: WarAction.WarActionUnitLoadCo.IExtraDataForUnitLoadCo): WarAction.WarActionUnitLoadCo.ExtraDataForUnitLoadCo;

            /**
             * Encodes the specified ExtraDataForUnitLoadCo message. Does not implicitly {@link WarAction.WarActionUnitLoadCo.ExtraDataForUnitLoadCo.verify|verify} messages.
             * @param message ExtraDataForUnitLoadCo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: WarAction.WarActionUnitLoadCo.IExtraDataForUnitLoadCo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified ExtraDataForUnitLoadCo message, length delimited. Does not implicitly {@link WarAction.WarActionUnitLoadCo.ExtraDataForUnitLoadCo.verify|verify} messages.
             * @param message ExtraDataForUnitLoadCo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: WarAction.WarActionUnitLoadCo.IExtraDataForUnitLoadCo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an ExtraDataForUnitLoadCo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ExtraDataForUnitLoadCo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionUnitLoadCo.ExtraDataForUnitLoadCo;

            /**
             * Decodes an ExtraDataForUnitLoadCo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ExtraDataForUnitLoadCo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionUnitLoadCo.ExtraDataForUnitLoadCo;

            /**
             * Verifies an ExtraDataForUnitLoadCo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ExtraDataForUnitLoadCo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ExtraDataForUnitLoadCo
             */
            public static fromObject(object: { [k: string]: any }): WarAction.WarActionUnitLoadCo.ExtraDataForUnitLoadCo;

            /**
             * Creates a plain object from an ExtraDataForUnitLoadCo message. Also converts values to other types if specified.
             * @param message ExtraDataForUnitLoadCo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: WarAction.WarActionUnitLoadCo.ExtraDataForUnitLoadCo, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ExtraDataForUnitLoadCo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a WarActionUnitUseCoSkill. */
    interface IWarActionUnitUseCoSkill {

        /** WarActionUnitUseCoSkill path */
        path?: (Structure.IMovePath|null);

        /** WarActionUnitUseCoSkill launchUnitId */
        launchUnitId?: (number|null);

        /** WarActionUnitUseCoSkill skillType */
        skillType?: (number|null);

        /** WarActionUnitUseCoSkill extraData */
        extraData?: (WarAction.WarActionUnitUseCoSkill.IExtraDataForUnitUseCoSkill|null);
    }

    /** Represents a WarActionUnitUseCoSkill. */
    class WarActionUnitUseCoSkill implements IWarActionUnitUseCoSkill {

        /**
         * Constructs a new WarActionUnitUseCoSkill.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarAction.IWarActionUnitUseCoSkill);

        /** WarActionUnitUseCoSkill path. */
        public path?: (Structure.IMovePath|null);

        /** WarActionUnitUseCoSkill launchUnitId. */
        public launchUnitId: number;

        /** WarActionUnitUseCoSkill skillType. */
        public skillType: number;

        /** WarActionUnitUseCoSkill extraData. */
        public extraData?: (WarAction.WarActionUnitUseCoSkill.IExtraDataForUnitUseCoSkill|null);

        /**
         * Creates a new WarActionUnitUseCoSkill instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WarActionUnitUseCoSkill instance
         */
        public static create(properties?: WarAction.IWarActionUnitUseCoSkill): WarAction.WarActionUnitUseCoSkill;

        /**
         * Encodes the specified WarActionUnitUseCoSkill message. Does not implicitly {@link WarAction.WarActionUnitUseCoSkill.verify|verify} messages.
         * @param message WarActionUnitUseCoSkill message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarAction.IWarActionUnitUseCoSkill, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WarActionUnitUseCoSkill message, length delimited. Does not implicitly {@link WarAction.WarActionUnitUseCoSkill.verify|verify} messages.
         * @param message WarActionUnitUseCoSkill message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarAction.IWarActionUnitUseCoSkill, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarActionUnitUseCoSkill message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarActionUnitUseCoSkill
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionUnitUseCoSkill;

        /**
         * Decodes a WarActionUnitUseCoSkill message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WarActionUnitUseCoSkill
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionUnitUseCoSkill;

        /**
         * Verifies a WarActionUnitUseCoSkill message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WarActionUnitUseCoSkill message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WarActionUnitUseCoSkill
         */
        public static fromObject(object: { [k: string]: any }): WarAction.WarActionUnitUseCoSkill;

        /**
         * Creates a plain object from a WarActionUnitUseCoSkill message. Also converts values to other types if specified.
         * @param message WarActionUnitUseCoSkill
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarAction.WarActionUnitUseCoSkill, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WarActionUnitUseCoSkill to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace WarActionUnitUseCoSkill {

        /** Properties of an ExtraDataForUnitUseCoSkill. */
        interface IExtraDataForUnitUseCoSkill {

            /** ExtraDataForUnitUseCoSkill commonExtraData */
            commonExtraData?: (Structure.ICommonExtraDataForWarAction|null);

            /** ExtraDataForUnitUseCoSkill skillType */
            skillType?: (number|null);

            /** ExtraDataForUnitUseCoSkill skillDataArray */
            skillDataArray?: (Structure.IDataForUseCoSkill[]|null);
        }

        /** Represents an ExtraDataForUnitUseCoSkill. */
        class ExtraDataForUnitUseCoSkill implements IExtraDataForUnitUseCoSkill {

            /**
             * Constructs a new ExtraDataForUnitUseCoSkill.
             * @param [properties] Properties to set
             */
            constructor(properties?: WarAction.WarActionUnitUseCoSkill.IExtraDataForUnitUseCoSkill);

            /** ExtraDataForUnitUseCoSkill commonExtraData. */
            public commonExtraData?: (Structure.ICommonExtraDataForWarAction|null);

            /** ExtraDataForUnitUseCoSkill skillType. */
            public skillType: number;

            /** ExtraDataForUnitUseCoSkill skillDataArray. */
            public skillDataArray: Structure.IDataForUseCoSkill[];

            /**
             * Creates a new ExtraDataForUnitUseCoSkill instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ExtraDataForUnitUseCoSkill instance
             */
            public static create(properties?: WarAction.WarActionUnitUseCoSkill.IExtraDataForUnitUseCoSkill): WarAction.WarActionUnitUseCoSkill.ExtraDataForUnitUseCoSkill;

            /**
             * Encodes the specified ExtraDataForUnitUseCoSkill message. Does not implicitly {@link WarAction.WarActionUnitUseCoSkill.ExtraDataForUnitUseCoSkill.verify|verify} messages.
             * @param message ExtraDataForUnitUseCoSkill message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: WarAction.WarActionUnitUseCoSkill.IExtraDataForUnitUseCoSkill, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified ExtraDataForUnitUseCoSkill message, length delimited. Does not implicitly {@link WarAction.WarActionUnitUseCoSkill.ExtraDataForUnitUseCoSkill.verify|verify} messages.
             * @param message ExtraDataForUnitUseCoSkill message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: WarAction.WarActionUnitUseCoSkill.IExtraDataForUnitUseCoSkill, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an ExtraDataForUnitUseCoSkill message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ExtraDataForUnitUseCoSkill
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionUnitUseCoSkill.ExtraDataForUnitUseCoSkill;

            /**
             * Decodes an ExtraDataForUnitUseCoSkill message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ExtraDataForUnitUseCoSkill
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionUnitUseCoSkill.ExtraDataForUnitUseCoSkill;

            /**
             * Verifies an ExtraDataForUnitUseCoSkill message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ExtraDataForUnitUseCoSkill message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ExtraDataForUnitUseCoSkill
             */
            public static fromObject(object: { [k: string]: any }): WarAction.WarActionUnitUseCoSkill.ExtraDataForUnitUseCoSkill;

            /**
             * Creates a plain object from an ExtraDataForUnitUseCoSkill message. Also converts values to other types if specified.
             * @param message ExtraDataForUnitUseCoSkill
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: WarAction.WarActionUnitUseCoSkill.ExtraDataForUnitUseCoSkill, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ExtraDataForUnitUseCoSkill to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a WarActionContainer. */
    interface IWarActionContainer {

        /** WarActionContainer actionId */
        actionId?: (number|null);

        /** WarActionContainer WarActionSystemBeginTurn */
        WarActionSystemBeginTurn?: (WarAction.IWarActionSystemBeginTurn|null);

        /** WarActionContainer WarActionSystemCallWarEvent */
        WarActionSystemCallWarEvent?: (WarAction.IWarActionSystemCallWarEvent|null);

        /** WarActionContainer WarActionSystemDestroyPlayerForce */
        WarActionSystemDestroyPlayerForce?: (WarAction.IWarActionSystemDestroyPlayerForce|null);

        /** WarActionContainer WarActionSystemEndWar */
        WarActionSystemEndWar?: (WarAction.IWarActionSystemEndWar|null);

        /** WarActionContainer WarActionSystemEndTurn */
        WarActionSystemEndTurn?: (WarAction.IWarActionSystemEndTurn|null);

        /** WarActionContainer WarActionSystemHandleBootPlayer */
        WarActionSystemHandleBootPlayer?: (WarAction.IWarActionSystemHandleBootPlayer|null);

        /** WarActionContainer WarActionSystemVoteForDraw */
        WarActionSystemVoteForDraw?: (WarAction.IWarActionSystemVoteForDraw|null);

        /** WarActionContainer WarActionPlayerEndTurn */
        WarActionPlayerEndTurn?: (WarAction.IWarActionPlayerEndTurn|null);

        /** WarActionContainer WarActionPlayerSurrender */
        WarActionPlayerSurrender?: (WarAction.IWarActionPlayerSurrender|null);

        /** WarActionContainer WarActionPlayerProduceUnit */
        WarActionPlayerProduceUnit?: (WarAction.IWarActionPlayerProduceUnit|null);

        /** WarActionContainer WarActionPlayerDeleteUnit */
        WarActionPlayerDeleteUnit?: (WarAction.IWarActionPlayerDeleteUnit|null);

        /** WarActionContainer WarActionPlayerVoteForDraw */
        WarActionPlayerVoteForDraw?: (WarAction.IWarActionPlayerVoteForDraw|null);

        /** WarActionContainer WarActionPlayerUseCoSkill */
        WarActionPlayerUseCoSkill?: (WarAction.IWarActionPlayerUseCoSkill|null);

        /** WarActionContainer WarActionUnitWait */
        WarActionUnitWait?: (WarAction.IWarActionUnitWait|null);

        /** WarActionContainer WarActionUnitBeLoaded */
        WarActionUnitBeLoaded?: (WarAction.IWarActionUnitBeLoaded|null);

        /** WarActionContainer WarActionUnitCaptureTile */
        WarActionUnitCaptureTile?: (WarAction.IWarActionUnitCaptureTile|null);

        /** WarActionContainer WarActionUnitAttackTile */
        WarActionUnitAttackTile?: (WarAction.IWarActionUnitAttackTile|null);

        /** WarActionContainer WarActionUnitAttackUnit */
        WarActionUnitAttackUnit?: (WarAction.IWarActionUnitAttackUnit|null);

        /** WarActionContainer WarActionUnitDropUnit */
        WarActionUnitDropUnit?: (WarAction.IWarActionUnitDropUnit|null);

        /** WarActionContainer WarActionUnitBuildTile */
        WarActionUnitBuildTile?: (WarAction.IWarActionUnitBuildTile|null);

        /** WarActionContainer WarActionUnitDive */
        WarActionUnitDive?: (WarAction.IWarActionUnitDive|null);

        /** WarActionContainer WarActionUnitSurface */
        WarActionUnitSurface?: (WarAction.IWarActionUnitSurface|null);

        /** WarActionContainer WarActionUnitJoinUnit */
        WarActionUnitJoinUnit?: (WarAction.IWarActionUnitJoinUnit|null);

        /** WarActionContainer WarActionUnitLaunchFlare */
        WarActionUnitLaunchFlare?: (WarAction.IWarActionUnitLaunchFlare|null);

        /** WarActionContainer WarActionUnitLaunchSilo */
        WarActionUnitLaunchSilo?: (WarAction.IWarActionUnitLaunchSilo|null);

        /** WarActionContainer WarActionUnitProduceUnit */
        WarActionUnitProduceUnit?: (WarAction.IWarActionUnitProduceUnit|null);

        /** WarActionContainer WarActionUnitSupplyUnit */
        WarActionUnitSupplyUnit?: (WarAction.IWarActionUnitSupplyUnit|null);

        /** WarActionContainer WarActionUnitLoadCo */
        WarActionUnitLoadCo?: (WarAction.IWarActionUnitLoadCo|null);

        /** WarActionContainer WarActionUnitUseCoSkill */
        WarActionUnitUseCoSkill?: (WarAction.IWarActionUnitUseCoSkill|null);
    }

    /** Represents a WarActionContainer. */
    class WarActionContainer implements IWarActionContainer {

        /**
         * Constructs a new WarActionContainer.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarAction.IWarActionContainer);

        /** WarActionContainer actionId. */
        public actionId: number;

        /** WarActionContainer WarActionSystemBeginTurn. */
        public WarActionSystemBeginTurn?: (WarAction.IWarActionSystemBeginTurn|null);

        /** WarActionContainer WarActionSystemCallWarEvent. */
        public WarActionSystemCallWarEvent?: (WarAction.IWarActionSystemCallWarEvent|null);

        /** WarActionContainer WarActionSystemDestroyPlayerForce. */
        public WarActionSystemDestroyPlayerForce?: (WarAction.IWarActionSystemDestroyPlayerForce|null);

        /** WarActionContainer WarActionSystemEndWar. */
        public WarActionSystemEndWar?: (WarAction.IWarActionSystemEndWar|null);

        /** WarActionContainer WarActionSystemEndTurn. */
        public WarActionSystemEndTurn?: (WarAction.IWarActionSystemEndTurn|null);

        /** WarActionContainer WarActionSystemHandleBootPlayer. */
        public WarActionSystemHandleBootPlayer?: (WarAction.IWarActionSystemHandleBootPlayer|null);

        /** WarActionContainer WarActionSystemVoteForDraw. */
        public WarActionSystemVoteForDraw?: (WarAction.IWarActionSystemVoteForDraw|null);

        /** WarActionContainer WarActionPlayerEndTurn. */
        public WarActionPlayerEndTurn?: (WarAction.IWarActionPlayerEndTurn|null);

        /** WarActionContainer WarActionPlayerSurrender. */
        public WarActionPlayerSurrender?: (WarAction.IWarActionPlayerSurrender|null);

        /** WarActionContainer WarActionPlayerProduceUnit. */
        public WarActionPlayerProduceUnit?: (WarAction.IWarActionPlayerProduceUnit|null);

        /** WarActionContainer WarActionPlayerDeleteUnit. */
        public WarActionPlayerDeleteUnit?: (WarAction.IWarActionPlayerDeleteUnit|null);

        /** WarActionContainer WarActionPlayerVoteForDraw. */
        public WarActionPlayerVoteForDraw?: (WarAction.IWarActionPlayerVoteForDraw|null);

        /** WarActionContainer WarActionPlayerUseCoSkill. */
        public WarActionPlayerUseCoSkill?: (WarAction.IWarActionPlayerUseCoSkill|null);

        /** WarActionContainer WarActionUnitWait. */
        public WarActionUnitWait?: (WarAction.IWarActionUnitWait|null);

        /** WarActionContainer WarActionUnitBeLoaded. */
        public WarActionUnitBeLoaded?: (WarAction.IWarActionUnitBeLoaded|null);

        /** WarActionContainer WarActionUnitCaptureTile. */
        public WarActionUnitCaptureTile?: (WarAction.IWarActionUnitCaptureTile|null);

        /** WarActionContainer WarActionUnitAttackTile. */
        public WarActionUnitAttackTile?: (WarAction.IWarActionUnitAttackTile|null);

        /** WarActionContainer WarActionUnitAttackUnit. */
        public WarActionUnitAttackUnit?: (WarAction.IWarActionUnitAttackUnit|null);

        /** WarActionContainer WarActionUnitDropUnit. */
        public WarActionUnitDropUnit?: (WarAction.IWarActionUnitDropUnit|null);

        /** WarActionContainer WarActionUnitBuildTile. */
        public WarActionUnitBuildTile?: (WarAction.IWarActionUnitBuildTile|null);

        /** WarActionContainer WarActionUnitDive. */
        public WarActionUnitDive?: (WarAction.IWarActionUnitDive|null);

        /** WarActionContainer WarActionUnitSurface. */
        public WarActionUnitSurface?: (WarAction.IWarActionUnitSurface|null);

        /** WarActionContainer WarActionUnitJoinUnit. */
        public WarActionUnitJoinUnit?: (WarAction.IWarActionUnitJoinUnit|null);

        /** WarActionContainer WarActionUnitLaunchFlare. */
        public WarActionUnitLaunchFlare?: (WarAction.IWarActionUnitLaunchFlare|null);

        /** WarActionContainer WarActionUnitLaunchSilo. */
        public WarActionUnitLaunchSilo?: (WarAction.IWarActionUnitLaunchSilo|null);

        /** WarActionContainer WarActionUnitProduceUnit. */
        public WarActionUnitProduceUnit?: (WarAction.IWarActionUnitProduceUnit|null);

        /** WarActionContainer WarActionUnitSupplyUnit. */
        public WarActionUnitSupplyUnit?: (WarAction.IWarActionUnitSupplyUnit|null);

        /** WarActionContainer WarActionUnitLoadCo. */
        public WarActionUnitLoadCo?: (WarAction.IWarActionUnitLoadCo|null);

        /** WarActionContainer WarActionUnitUseCoSkill. */
        public WarActionUnitUseCoSkill?: (WarAction.IWarActionUnitUseCoSkill|null);

        /**
         * Creates a new WarActionContainer instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WarActionContainer instance
         */
        public static create(properties?: WarAction.IWarActionContainer): WarAction.WarActionContainer;

        /**
         * Encodes the specified WarActionContainer message. Does not implicitly {@link WarAction.WarActionContainer.verify|verify} messages.
         * @param message WarActionContainer message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarAction.IWarActionContainer, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WarActionContainer message, length delimited. Does not implicitly {@link WarAction.WarActionContainer.verify|verify} messages.
         * @param message WarActionContainer message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarAction.IWarActionContainer, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarActionContainer message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarActionContainer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionContainer;

        /**
         * Decodes a WarActionContainer message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WarActionContainer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionContainer;

        /**
         * Verifies a WarActionContainer message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WarActionContainer message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WarActionContainer
         */
        public static fromObject(object: { [k: string]: any }): WarAction.WarActionContainer;

        /**
         * Creates a plain object from a WarActionContainer message. Also converts values to other types if specified.
         * @param message WarActionContainer
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarAction.WarActionContainer, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WarActionContainer to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Properties of a Broadcast. */
export declare interface IBroadcast {
}

/** Represents a Broadcast. */
export declare class Broadcast implements IBroadcast {

    /**
     * Constructs a new Broadcast.
     * @param [properties] Properties to set
     */
    constructor(properties?: IBroadcast);

    /**
     * Creates a new Broadcast instance using the specified properties.
     * @param [properties] Properties to set
     * @returns Broadcast instance
     */
    public static create(properties?: IBroadcast): Broadcast;

    /**
     * Encodes the specified Broadcast message. Does not implicitly {@link Broadcast.verify|verify} messages.
     * @param message Broadcast message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IBroadcast, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Encodes the specified Broadcast message, length delimited. Does not implicitly {@link Broadcast.verify|verify} messages.
     * @param message Broadcast message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IBroadcast, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Decodes a Broadcast message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns Broadcast
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Broadcast;

    /**
     * Decodes a Broadcast message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns Broadcast
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Broadcast;

    /**
     * Verifies a Broadcast message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a Broadcast message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns Broadcast
     */
    public static fromObject(object: { [k: string]: any }): Broadcast;

    /**
     * Creates a plain object from a Broadcast message. Also converts values to other types if specified.
     * @param message Broadcast
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: Broadcast, options?: protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this Broadcast to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export declare namespace Broadcast {

    /** Properties of a BroadcastMessage. */
    interface IBroadcastMessage {

        /** BroadcastMessage messageId */
        messageId?: (number|null);

        /** BroadcastMessage textList */
        textList?: (Structure.ILanguageText[]|null);

        /** BroadcastMessage startTime */
        startTime?: (number|null);

        /** BroadcastMessage endTime */
        endTime?: (number|null);
    }

    /** Represents a BroadcastMessage. */
    class BroadcastMessage implements IBroadcastMessage {

        /**
         * Constructs a new BroadcastMessage.
         * @param [properties] Properties to set
         */
        constructor(properties?: Broadcast.IBroadcastMessage);

        /** BroadcastMessage messageId. */
        public messageId: number;

        /** BroadcastMessage textList. */
        public textList: Structure.ILanguageText[];

        /** BroadcastMessage startTime. */
        public startTime: number;

        /** BroadcastMessage endTime. */
        public endTime: number;

        /**
         * Creates a new BroadcastMessage instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BroadcastMessage instance
         */
        public static create(properties?: Broadcast.IBroadcastMessage): Broadcast.BroadcastMessage;

        /**
         * Encodes the specified BroadcastMessage message. Does not implicitly {@link Broadcast.BroadcastMessage.verify|verify} messages.
         * @param message BroadcastMessage message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Broadcast.IBroadcastMessage, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified BroadcastMessage message, length delimited. Does not implicitly {@link Broadcast.BroadcastMessage.verify|verify} messages.
         * @param message BroadcastMessage message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Broadcast.IBroadcastMessage, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a BroadcastMessage message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BroadcastMessage
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Broadcast.BroadcastMessage;

        /**
         * Decodes a BroadcastMessage message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BroadcastMessage
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Broadcast.BroadcastMessage;

        /**
         * Verifies a BroadcastMessage message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a BroadcastMessage message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns BroadcastMessage
         */
        public static fromObject(object: { [k: string]: any }): Broadcast.BroadcastMessage;

        /**
         * Creates a plain object from a BroadcastMessage message. Also converts values to other types if specified.
         * @param message BroadcastMessage
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Broadcast.BroadcastMessage, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this BroadcastMessage to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a BroadcastInfo. */
    interface IBroadcastInfo {

        /** BroadcastInfo messageList */
        messageList?: (Broadcast.IBroadcastMessage[]|null);
    }

    /** Represents a BroadcastInfo. */
    class BroadcastInfo implements IBroadcastInfo {

        /**
         * Constructs a new BroadcastInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: Broadcast.IBroadcastInfo);

        /** BroadcastInfo messageList. */
        public messageList: Broadcast.IBroadcastMessage[];

        /**
         * Creates a new BroadcastInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BroadcastInfo instance
         */
        public static create(properties?: Broadcast.IBroadcastInfo): Broadcast.BroadcastInfo;

        /**
         * Encodes the specified BroadcastInfo message. Does not implicitly {@link Broadcast.BroadcastInfo.verify|verify} messages.
         * @param message BroadcastInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Broadcast.IBroadcastInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified BroadcastInfo message, length delimited. Does not implicitly {@link Broadcast.BroadcastInfo.verify|verify} messages.
         * @param message BroadcastInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Broadcast.IBroadcastInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a BroadcastInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BroadcastInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Broadcast.BroadcastInfo;

        /**
         * Decodes a BroadcastInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BroadcastInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Broadcast.BroadcastInfo;

        /**
         * Verifies a BroadcastInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a BroadcastInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns BroadcastInfo
         */
        public static fromObject(object: { [k: string]: any }): Broadcast.BroadcastInfo;

        /**
         * Creates a plain object from a BroadcastInfo message. Also converts values to other types if specified.
         * @param message BroadcastInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Broadcast.BroadcastInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this BroadcastInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Properties of a ChangeLog. */
export declare interface IChangeLog {
}

/** Represents a ChangeLog. */
export declare class ChangeLog implements IChangeLog {

    /**
     * Constructs a new ChangeLog.
     * @param [properties] Properties to set
     */
    constructor(properties?: IChangeLog);

    /**
     * Creates a new ChangeLog instance using the specified properties.
     * @param [properties] Properties to set
     * @returns ChangeLog instance
     */
    public static create(properties?: IChangeLog): ChangeLog;

    /**
     * Encodes the specified ChangeLog message. Does not implicitly {@link ChangeLog.verify|verify} messages.
     * @param message ChangeLog message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IChangeLog, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Encodes the specified ChangeLog message, length delimited. Does not implicitly {@link ChangeLog.verify|verify} messages.
     * @param message ChangeLog message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IChangeLog, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Decodes a ChangeLog message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns ChangeLog
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): ChangeLog;

    /**
     * Decodes a ChangeLog message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns ChangeLog
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): ChangeLog;

    /**
     * Verifies a ChangeLog message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a ChangeLog message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns ChangeLog
     */
    public static fromObject(object: { [k: string]: any }): ChangeLog;

    /**
     * Creates a plain object from a ChangeLog message. Also converts values to other types if specified.
     * @param message ChangeLog
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: ChangeLog, options?: protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this ChangeLog to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export declare namespace ChangeLog {

    /** Properties of a ChangeLogMessage. */
    interface IChangeLogMessage {

        /** ChangeLogMessage messageId */
        messageId?: (number|null);

        /** ChangeLogMessage textList */
        textList?: (Structure.ILanguageText[]|null);

        /** ChangeLogMessage createTimestamp */
        createTimestamp?: (number|null);
    }

    /** Represents a ChangeLogMessage. */
    class ChangeLogMessage implements IChangeLogMessage {

        /**
         * Constructs a new ChangeLogMessage.
         * @param [properties] Properties to set
         */
        constructor(properties?: ChangeLog.IChangeLogMessage);

        /** ChangeLogMessage messageId. */
        public messageId: number;

        /** ChangeLogMessage textList. */
        public textList: Structure.ILanguageText[];

        /** ChangeLogMessage createTimestamp. */
        public createTimestamp: number;

        /**
         * Creates a new ChangeLogMessage instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ChangeLogMessage instance
         */
        public static create(properties?: ChangeLog.IChangeLogMessage): ChangeLog.ChangeLogMessage;

        /**
         * Encodes the specified ChangeLogMessage message. Does not implicitly {@link ChangeLog.ChangeLogMessage.verify|verify} messages.
         * @param message ChangeLogMessage message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: ChangeLog.IChangeLogMessage, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified ChangeLogMessage message, length delimited. Does not implicitly {@link ChangeLog.ChangeLogMessage.verify|verify} messages.
         * @param message ChangeLogMessage message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: ChangeLog.IChangeLogMessage, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a ChangeLogMessage message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ChangeLogMessage
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): ChangeLog.ChangeLogMessage;

        /**
         * Decodes a ChangeLogMessage message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ChangeLogMessage
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): ChangeLog.ChangeLogMessage;

        /**
         * Verifies a ChangeLogMessage message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ChangeLogMessage message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ChangeLogMessage
         */
        public static fromObject(object: { [k: string]: any }): ChangeLog.ChangeLogMessage;

        /**
         * Creates a plain object from a ChangeLogMessage message. Also converts values to other types if specified.
         * @param message ChangeLogMessage
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: ChangeLog.ChangeLogMessage, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ChangeLogMessage to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ChangeLogInfo. */
    interface IChangeLogInfo {

        /** ChangeLogInfo messageList */
        messageList?: (ChangeLog.IChangeLogMessage[]|null);
    }

    /** Represents a ChangeLogInfo. */
    class ChangeLogInfo implements IChangeLogInfo {

        /**
         * Constructs a new ChangeLogInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: ChangeLog.IChangeLogInfo);

        /** ChangeLogInfo messageList. */
        public messageList: ChangeLog.IChangeLogMessage[];

        /**
         * Creates a new ChangeLogInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ChangeLogInfo instance
         */
        public static create(properties?: ChangeLog.IChangeLogInfo): ChangeLog.ChangeLogInfo;

        /**
         * Encodes the specified ChangeLogInfo message. Does not implicitly {@link ChangeLog.ChangeLogInfo.verify|verify} messages.
         * @param message ChangeLogInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: ChangeLog.IChangeLogInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified ChangeLogInfo message, length delimited. Does not implicitly {@link ChangeLog.ChangeLogInfo.verify|verify} messages.
         * @param message ChangeLogInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: ChangeLog.IChangeLogInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a ChangeLogInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ChangeLogInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): ChangeLog.ChangeLogInfo;

        /**
         * Decodes a ChangeLogInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ChangeLogInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): ChangeLog.ChangeLogInfo;

        /**
         * Verifies a ChangeLogInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ChangeLogInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ChangeLogInfo
         */
        public static fromObject(object: { [k: string]: any }): ChangeLog.ChangeLogInfo;

        /**
         * Creates a plain object from a ChangeLogInfo message. Also converts values to other types if specified.
         * @param message ChangeLogInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: ChangeLog.ChangeLogInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ChangeLogInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Properties of a Structure. */
export declare interface IStructure {
}

/** Represents a Structure. */
export declare class Structure implements IStructure {

    /**
     * Constructs a new Structure.
     * @param [properties] Properties to set
     */
    constructor(properties?: IStructure);

    /**
     * Creates a new Structure instance using the specified properties.
     * @param [properties] Properties to set
     * @returns Structure instance
     */
    public static create(properties?: IStructure): Structure;

    /**
     * Encodes the specified Structure message. Does not implicitly {@link Structure.verify|verify} messages.
     * @param message Structure message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IStructure, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Encodes the specified Structure message, length delimited. Does not implicitly {@link Structure.verify|verify} messages.
     * @param message Structure message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IStructure, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Decodes a Structure message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns Structure
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Structure;

    /**
     * Decodes a Structure message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns Structure
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Structure;

    /**
     * Verifies a Structure message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a Structure message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns Structure
     */
    public static fromObject(object: { [k: string]: any }): Structure;

    /**
     * Creates a plain object from a Structure message. Also converts values to other types if specified.
     * @param message Structure
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: Structure, options?: protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this Structure to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export declare namespace Structure {

    /** Properties of a GridIndex. */
    interface IGridIndex {

        /** GridIndex x */
        x?: (number|null);

        /** GridIndex y */
        y?: (number|null);
    }

    /** Represents a GridIndex. */
    class GridIndex implements IGridIndex {

        /**
         * Constructs a new GridIndex.
         * @param [properties] Properties to set
         */
        constructor(properties?: Structure.IGridIndex);

        /** GridIndex x. */
        public x: number;

        /** GridIndex y. */
        public y: number;

        /**
         * Creates a new GridIndex instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GridIndex instance
         */
        public static create(properties?: Structure.IGridIndex): Structure.GridIndex;

        /**
         * Encodes the specified GridIndex message. Does not implicitly {@link Structure.GridIndex.verify|verify} messages.
         * @param message GridIndex message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Structure.IGridIndex, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified GridIndex message, length delimited. Does not implicitly {@link Structure.GridIndex.verify|verify} messages.
         * @param message GridIndex message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Structure.IGridIndex, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GridIndex message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GridIndex
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Structure.GridIndex;

        /**
         * Decodes a GridIndex message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GridIndex
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Structure.GridIndex;

        /**
         * Verifies a GridIndex message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GridIndex message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GridIndex
         */
        public static fromObject(object: { [k: string]: any }): Structure.GridIndex;

        /**
         * Creates a plain object from a GridIndex message. Also converts values to other types if specified.
         * @param message GridIndex
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Structure.GridIndex, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GridIndex to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GridIndexAndPathInfo. */
    interface IGridIndexAndPathInfo {

        /** GridIndexAndPathInfo gridIndex */
        gridIndex?: (Structure.IGridIndex|null);

        /** GridIndexAndPathInfo isVisible */
        isVisible?: (boolean|null);

        /** GridIndexAndPathInfo isBlocked */
        isBlocked?: (boolean|null);
    }

    /** Represents a GridIndexAndPathInfo. */
    class GridIndexAndPathInfo implements IGridIndexAndPathInfo {

        /**
         * Constructs a new GridIndexAndPathInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: Structure.IGridIndexAndPathInfo);

        /** GridIndexAndPathInfo gridIndex. */
        public gridIndex?: (Structure.IGridIndex|null);

        /** GridIndexAndPathInfo isVisible. */
        public isVisible: boolean;

        /** GridIndexAndPathInfo isBlocked. */
        public isBlocked: boolean;

        /**
         * Creates a new GridIndexAndPathInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GridIndexAndPathInfo instance
         */
        public static create(properties?: Structure.IGridIndexAndPathInfo): Structure.GridIndexAndPathInfo;

        /**
         * Encodes the specified GridIndexAndPathInfo message. Does not implicitly {@link Structure.GridIndexAndPathInfo.verify|verify} messages.
         * @param message GridIndexAndPathInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Structure.IGridIndexAndPathInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified GridIndexAndPathInfo message, length delimited. Does not implicitly {@link Structure.GridIndexAndPathInfo.verify|verify} messages.
         * @param message GridIndexAndPathInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Structure.IGridIndexAndPathInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GridIndexAndPathInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GridIndexAndPathInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Structure.GridIndexAndPathInfo;

        /**
         * Decodes a GridIndexAndPathInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GridIndexAndPathInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Structure.GridIndexAndPathInfo;

        /**
         * Verifies a GridIndexAndPathInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GridIndexAndPathInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GridIndexAndPathInfo
         */
        public static fromObject(object: { [k: string]: any }): Structure.GridIndexAndPathInfo;

        /**
         * Creates a plain object from a GridIndexAndPathInfo message. Also converts values to other types if specified.
         * @param message GridIndexAndPathInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Structure.GridIndexAndPathInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GridIndexAndPathInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MovePath. */
    interface IMovePath {

        /** MovePath nodes */
        nodes?: (Structure.IGridIndex[]|null);

        /** MovePath isBlocked */
        isBlocked?: (boolean|null);

        /** MovePath fuelConsumption */
        fuelConsumption?: (number|null);
    }

    /** Represents a MovePath. */
    class MovePath implements IMovePath {

        /**
         * Constructs a new MovePath.
         * @param [properties] Properties to set
         */
        constructor(properties?: Structure.IMovePath);

        /** MovePath nodes. */
        public nodes: Structure.IGridIndex[];

        /** MovePath isBlocked. */
        public isBlocked: boolean;

        /** MovePath fuelConsumption. */
        public fuelConsumption: number;

        /**
         * Creates a new MovePath instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MovePath instance
         */
        public static create(properties?: Structure.IMovePath): Structure.MovePath;

        /**
         * Encodes the specified MovePath message. Does not implicitly {@link Structure.MovePath.verify|verify} messages.
         * @param message MovePath message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Structure.IMovePath, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MovePath message, length delimited. Does not implicitly {@link Structure.MovePath.verify|verify} messages.
         * @param message MovePath message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Structure.IMovePath, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MovePath message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MovePath
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Structure.MovePath;

        /**
         * Decodes a MovePath message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MovePath
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Structure.MovePath;

        /**
         * Verifies a MovePath message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MovePath message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MovePath
         */
        public static fromObject(object: { [k: string]: any }): Structure.MovePath;

        /**
         * Creates a plain object from a MovePath message. Also converts values to other types if specified.
         * @param message MovePath
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Structure.MovePath, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MovePath to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MovingUnitAndPath. */
    interface IMovingUnitAndPath {

        /** MovingUnitAndPath unit */
        unit?: (WarSerialization.ISerialUnit|null);

        /** MovingUnitAndPath path */
        path?: (Structure.IGridIndexAndPathInfo[]|null);
    }

    /** Represents a MovingUnitAndPath. */
    class MovingUnitAndPath implements IMovingUnitAndPath {

        /**
         * Constructs a new MovingUnitAndPath.
         * @param [properties] Properties to set
         */
        constructor(properties?: Structure.IMovingUnitAndPath);

        /** MovingUnitAndPath unit. */
        public unit?: (WarSerialization.ISerialUnit|null);

        /** MovingUnitAndPath path. */
        public path: Structure.IGridIndexAndPathInfo[];

        /**
         * Creates a new MovingUnitAndPath instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MovingUnitAndPath instance
         */
        public static create(properties?: Structure.IMovingUnitAndPath): Structure.MovingUnitAndPath;

        /**
         * Encodes the specified MovingUnitAndPath message. Does not implicitly {@link Structure.MovingUnitAndPath.verify|verify} messages.
         * @param message MovingUnitAndPath message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Structure.IMovingUnitAndPath, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MovingUnitAndPath message, length delimited. Does not implicitly {@link Structure.MovingUnitAndPath.verify|verify} messages.
         * @param message MovingUnitAndPath message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Structure.IMovingUnitAndPath, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MovingUnitAndPath message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MovingUnitAndPath
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Structure.MovingUnitAndPath;

        /**
         * Decodes a MovingUnitAndPath message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MovingUnitAndPath
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Structure.MovingUnitAndPath;

        /**
         * Verifies a MovingUnitAndPath message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MovingUnitAndPath message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MovingUnitAndPath
         */
        public static fromObject(object: { [k: string]: any }): Structure.MovingUnitAndPath;

        /**
         * Creates a plain object from a MovingUnitAndPath message. Also converts values to other types if specified.
         * @param message MovingUnitAndPath
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Structure.MovingUnitAndPath, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MovingUnitAndPath to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DropDestination. */
    interface IDropDestination {

        /** DropDestination unitId */
        unitId?: (number|null);

        /** DropDestination gridIndex */
        gridIndex?: (Structure.IGridIndex|null);
    }

    /** Represents a DropDestination. */
    class DropDestination implements IDropDestination {

        /**
         * Constructs a new DropDestination.
         * @param [properties] Properties to set
         */
        constructor(properties?: Structure.IDropDestination);

        /** DropDestination unitId. */
        public unitId: number;

        /** DropDestination gridIndex. */
        public gridIndex?: (Structure.IGridIndex|null);

        /**
         * Creates a new DropDestination instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DropDestination instance
         */
        public static create(properties?: Structure.IDropDestination): Structure.DropDestination;

        /**
         * Encodes the specified DropDestination message. Does not implicitly {@link Structure.DropDestination.verify|verify} messages.
         * @param message DropDestination message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Structure.IDropDestination, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified DropDestination message, length delimited. Does not implicitly {@link Structure.DropDestination.verify|verify} messages.
         * @param message DropDestination message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Structure.IDropDestination, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a DropDestination message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DropDestination
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Structure.DropDestination;

        /**
         * Decodes a DropDestination message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DropDestination
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Structure.DropDestination;

        /**
         * Verifies a DropDestination message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DropDestination message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DropDestination
         */
        public static fromObject(object: { [k: string]: any }): Structure.DropDestination;

        /**
         * Creates a plain object from a DropDestination message. Also converts values to other types if specified.
         * @param message DropDestination
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Structure.DropDestination, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DropDestination to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SeedRandomState. */
    interface ISeedRandomState {

        /** SeedRandomState i */
        i?: (number|null);

        /** SeedRandomState j */
        j?: (number|null);

        /** SeedRandomState S */
        S?: (number[]|null);
    }

    /** Represents a SeedRandomState. */
    class SeedRandomState implements ISeedRandomState {

        /**
         * Constructs a new SeedRandomState.
         * @param [properties] Properties to set
         */
        constructor(properties?: Structure.ISeedRandomState);

        /** SeedRandomState i. */
        public i: number;

        /** SeedRandomState j. */
        public j: number;

        /** SeedRandomState S. */
        public S: number[];

        /**
         * Creates a new SeedRandomState instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SeedRandomState instance
         */
        public static create(properties?: Structure.ISeedRandomState): Structure.SeedRandomState;

        /**
         * Encodes the specified SeedRandomState message. Does not implicitly {@link Structure.SeedRandomState.verify|verify} messages.
         * @param message SeedRandomState message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Structure.ISeedRandomState, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SeedRandomState message, length delimited. Does not implicitly {@link Structure.SeedRandomState.verify|verify} messages.
         * @param message SeedRandomState message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Structure.ISeedRandomState, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SeedRandomState message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SeedRandomState
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Structure.SeedRandomState;

        /**
         * Decodes a SeedRandomState message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SeedRandomState
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Structure.SeedRandomState;

        /**
         * Verifies a SeedRandomState message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SeedRandomState message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SeedRandomState
         */
        public static fromObject(object: { [k: string]: any }): Structure.SeedRandomState;

        /**
         * Creates a plain object from a SeedRandomState message. Also converts values to other types if specified.
         * @param message SeedRandomState
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Structure.SeedRandomState, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SeedRandomState to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a LanguageText. */
    interface ILanguageText {

        /** LanguageText languageType */
        languageType?: (number|null);

        /** LanguageText text */
        text?: (string|null);
    }

    /** Represents a LanguageText. */
    class LanguageText implements ILanguageText {

        /**
         * Constructs a new LanguageText.
         * @param [properties] Properties to set
         */
        constructor(properties?: Structure.ILanguageText);

        /** LanguageText languageType. */
        public languageType: number;

        /** LanguageText text. */
        public text: string;

        /**
         * Creates a new LanguageText instance using the specified properties.
         * @param [properties] Properties to set
         * @returns LanguageText instance
         */
        public static create(properties?: Structure.ILanguageText): Structure.LanguageText;

        /**
         * Encodes the specified LanguageText message. Does not implicitly {@link Structure.LanguageText.verify|verify} messages.
         * @param message LanguageText message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Structure.ILanguageText, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified LanguageText message, length delimited. Does not implicitly {@link Structure.LanguageText.verify|verify} messages.
         * @param message LanguageText message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Structure.ILanguageText, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a LanguageText message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns LanguageText
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Structure.LanguageText;

        /**
         * Decodes a LanguageText message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns LanguageText
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Structure.LanguageText;

        /**
         * Verifies a LanguageText message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a LanguageText message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns LanguageText
         */
        public static fromObject(object: { [k: string]: any }): Structure.LanguageText;

        /**
         * Creates a plain object from a LanguageText message. Also converts values to other types if specified.
         * @param message LanguageText
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Structure.LanguageText, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this LanguageText to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WarPlayerInfo. */
    interface IWarPlayerInfo {

        /** WarPlayerInfo playerIndex */
        playerIndex?: (number|null);

        /** WarPlayerInfo userId */
        userId?: (number|null);

        /** WarPlayerInfo coId */
        coId?: (number|null);

        /** WarPlayerInfo teamIndex */
        teamIndex?: (number|null);

        /** WarPlayerInfo isAlive */
        isAlive?: (boolean|null);

        /** WarPlayerInfo restTimeToBoot */
        restTimeToBoot?: (number|null);

        /** WarPlayerInfo unitAndTileSkinId */
        unitAndTileSkinId?: (number|null);
    }

    /** Represents a WarPlayerInfo. */
    class WarPlayerInfo implements IWarPlayerInfo {

        /**
         * Constructs a new WarPlayerInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: Structure.IWarPlayerInfo);

        /** WarPlayerInfo playerIndex. */
        public playerIndex: number;

        /** WarPlayerInfo userId. */
        public userId: number;

        /** WarPlayerInfo coId. */
        public coId: number;

        /** WarPlayerInfo teamIndex. */
        public teamIndex: number;

        /** WarPlayerInfo isAlive. */
        public isAlive: boolean;

        /** WarPlayerInfo restTimeToBoot. */
        public restTimeToBoot: number;

        /** WarPlayerInfo unitAndTileSkinId. */
        public unitAndTileSkinId: number;

        /**
         * Creates a new WarPlayerInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WarPlayerInfo instance
         */
        public static create(properties?: Structure.IWarPlayerInfo): Structure.WarPlayerInfo;

        /**
         * Encodes the specified WarPlayerInfo message. Does not implicitly {@link Structure.WarPlayerInfo.verify|verify} messages.
         * @param message WarPlayerInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Structure.IWarPlayerInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WarPlayerInfo message, length delimited. Does not implicitly {@link Structure.WarPlayerInfo.verify|verify} messages.
         * @param message WarPlayerInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Structure.IWarPlayerInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarPlayerInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarPlayerInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Structure.WarPlayerInfo;

        /**
         * Decodes a WarPlayerInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WarPlayerInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Structure.WarPlayerInfo;

        /**
         * Verifies a WarPlayerInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WarPlayerInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WarPlayerInfo
         */
        public static fromObject(object: { [k: string]: any }): Structure.WarPlayerInfo;

        /**
         * Creates a plain object from a WarPlayerInfo message. Also converts values to other types if specified.
         * @param message WarPlayerInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Structure.WarPlayerInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WarPlayerInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DataForModifyUnit. */
    interface IDataForModifyUnit {

        /** DataForModifyUnit unitId */
        unitId?: (number|null);

        /** DataForModifyUnit gridIndex */
        gridIndex?: (Structure.IGridIndex|null);

        /** DataForModifyUnit deltaHp */
        deltaHp?: (number|null);

        /** DataForModifyUnit deltaPrimaryWeaponAmmo */
        deltaPrimaryWeaponAmmo?: (number|null);

        /** DataForModifyUnit deltaFuel */
        deltaFuel?: (number|null);

        /** DataForModifyUnit deltaFlareAmmo */
        deltaFlareAmmo?: (number|null);
    }

    /** Represents a DataForModifyUnit. */
    class DataForModifyUnit implements IDataForModifyUnit {

        /**
         * Constructs a new DataForModifyUnit.
         * @param [properties] Properties to set
         */
        constructor(properties?: Structure.IDataForModifyUnit);

        /** DataForModifyUnit unitId. */
        public unitId: number;

        /** DataForModifyUnit gridIndex. */
        public gridIndex?: (Structure.IGridIndex|null);

        /** DataForModifyUnit deltaHp. */
        public deltaHp: number;

        /** DataForModifyUnit deltaPrimaryWeaponAmmo. */
        public deltaPrimaryWeaponAmmo: number;

        /** DataForModifyUnit deltaFuel. */
        public deltaFuel: number;

        /** DataForModifyUnit deltaFlareAmmo. */
        public deltaFlareAmmo: number;

        /**
         * Creates a new DataForModifyUnit instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DataForModifyUnit instance
         */
        public static create(properties?: Structure.IDataForModifyUnit): Structure.DataForModifyUnit;

        /**
         * Encodes the specified DataForModifyUnit message. Does not implicitly {@link Structure.DataForModifyUnit.verify|verify} messages.
         * @param message DataForModifyUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Structure.IDataForModifyUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified DataForModifyUnit message, length delimited. Does not implicitly {@link Structure.DataForModifyUnit.verify|verify} messages.
         * @param message DataForModifyUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Structure.IDataForModifyUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a DataForModifyUnit message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DataForModifyUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Structure.DataForModifyUnit;

        /**
         * Decodes a DataForModifyUnit message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DataForModifyUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Structure.DataForModifyUnit;

        /**
         * Verifies a DataForModifyUnit message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DataForModifyUnit message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DataForModifyUnit
         */
        public static fromObject(object: { [k: string]: any }): Structure.DataForModifyUnit;

        /**
         * Creates a plain object from a DataForModifyUnit message. Also converts values to other types if specified.
         * @param message DataForModifyUnit
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Structure.DataForModifyUnit, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DataForModifyUnit to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DataForUseCoSkill. */
    interface IDataForUseCoSkill {

        /** DataForUseCoSkill skillIndex */
        skillIndex?: (number|null);

        /** DataForUseCoSkill fixedAreaDamageCenter */
        fixedAreaDamageCenter?: (Structure.IGridIndex|null);

        /** DataForUseCoSkill newWeatherType */
        newWeatherType?: (number|null);
    }

    /** Represents a DataForUseCoSkill. */
    class DataForUseCoSkill implements IDataForUseCoSkill {

        /**
         * Constructs a new DataForUseCoSkill.
         * @param [properties] Properties to set
         */
        constructor(properties?: Structure.IDataForUseCoSkill);

        /** DataForUseCoSkill skillIndex. */
        public skillIndex: number;

        /** DataForUseCoSkill fixedAreaDamageCenter. */
        public fixedAreaDamageCenter?: (Structure.IGridIndex|null);

        /** DataForUseCoSkill newWeatherType. */
        public newWeatherType: number;

        /**
         * Creates a new DataForUseCoSkill instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DataForUseCoSkill instance
         */
        public static create(properties?: Structure.IDataForUseCoSkill): Structure.DataForUseCoSkill;

        /**
         * Encodes the specified DataForUseCoSkill message. Does not implicitly {@link Structure.DataForUseCoSkill.verify|verify} messages.
         * @param message DataForUseCoSkill message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Structure.IDataForUseCoSkill, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified DataForUseCoSkill message, length delimited. Does not implicitly {@link Structure.DataForUseCoSkill.verify|verify} messages.
         * @param message DataForUseCoSkill message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Structure.IDataForUseCoSkill, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a DataForUseCoSkill message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DataForUseCoSkill
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Structure.DataForUseCoSkill;

        /**
         * Decodes a DataForUseCoSkill message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DataForUseCoSkill
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Structure.DataForUseCoSkill;

        /**
         * Verifies a DataForUseCoSkill message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DataForUseCoSkill message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DataForUseCoSkill
         */
        public static fromObject(object: { [k: string]: any }): Structure.DataForUseCoSkill;

        /**
         * Creates a plain object from a DataForUseCoSkill message. Also converts values to other types if specified.
         * @param message DataForUseCoSkill
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Structure.DataForUseCoSkill, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DataForUseCoSkill to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DataForReviewWarRule. */
    interface IDataForReviewWarRule {

        /** DataForReviewWarRule mapId */
        mapId?: (number|null);

        /** DataForReviewWarRule submitterUserId */
        submitterUserId?: (number|null);

        /** DataForReviewWarRule submitTimestamp */
        submitTimestamp?: (number|null);

        /** DataForReviewWarRule reviewStatus */
        reviewStatus?: (number|null);

        /** DataForReviewWarRule reviewComment */
        reviewComment?: (string|null);

        /** DataForReviewWarRule warRuleArray */
        warRuleArray?: (WarRule.IWarRuleArray|null);
    }

    /** Represents a DataForReviewWarRule. */
    class DataForReviewWarRule implements IDataForReviewWarRule {

        /**
         * Constructs a new DataForReviewWarRule.
         * @param [properties] Properties to set
         */
        constructor(properties?: Structure.IDataForReviewWarRule);

        /** DataForReviewWarRule mapId. */
        public mapId: number;

        /** DataForReviewWarRule submitterUserId. */
        public submitterUserId: number;

        /** DataForReviewWarRule submitTimestamp. */
        public submitTimestamp: number;

        /** DataForReviewWarRule reviewStatus. */
        public reviewStatus: number;

        /** DataForReviewWarRule reviewComment. */
        public reviewComment: string;

        /** DataForReviewWarRule warRuleArray. */
        public warRuleArray?: (WarRule.IWarRuleArray|null);

        /**
         * Creates a new DataForReviewWarRule instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DataForReviewWarRule instance
         */
        public static create(properties?: Structure.IDataForReviewWarRule): Structure.DataForReviewWarRule;

        /**
         * Encodes the specified DataForReviewWarRule message. Does not implicitly {@link Structure.DataForReviewWarRule.verify|verify} messages.
         * @param message DataForReviewWarRule message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Structure.IDataForReviewWarRule, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified DataForReviewWarRule message, length delimited. Does not implicitly {@link Structure.DataForReviewWarRule.verify|verify} messages.
         * @param message DataForReviewWarRule message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Structure.IDataForReviewWarRule, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a DataForReviewWarRule message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DataForReviewWarRule
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Structure.DataForReviewWarRule;

        /**
         * Decodes a DataForReviewWarRule message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DataForReviewWarRule
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Structure.DataForReviewWarRule;

        /**
         * Verifies a DataForReviewWarRule message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DataForReviewWarRule message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DataForReviewWarRule
         */
        public static fromObject(object: { [k: string]: any }): Structure.DataForReviewWarRule;

        /**
         * Creates a plain object from a DataForReviewWarRule message. Also converts values to other types if specified.
         * @param message DataForReviewWarRule
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Structure.DataForReviewWarRule, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DataForReviewWarRule to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DataForPlayerInRoom. */
    interface IDataForPlayerInRoom {

        /** DataForPlayerInRoom playerIndex */
        playerIndex?: (number|null);

        /** DataForPlayerInRoom userId */
        userId?: (number|null);

        /** DataForPlayerInRoom coId */
        coId?: (number|null);

        /** DataForPlayerInRoom isReady */
        isReady?: (boolean|null);

        /** DataForPlayerInRoom unitAndTileSkinId */
        unitAndTileSkinId?: (number|null);
    }

    /** Represents a DataForPlayerInRoom. */
    class DataForPlayerInRoom implements IDataForPlayerInRoom {

        /**
         * Constructs a new DataForPlayerInRoom.
         * @param [properties] Properties to set
         */
        constructor(properties?: Structure.IDataForPlayerInRoom);

        /** DataForPlayerInRoom playerIndex. */
        public playerIndex: number;

        /** DataForPlayerInRoom userId. */
        public userId: number;

        /** DataForPlayerInRoom coId. */
        public coId: number;

        /** DataForPlayerInRoom isReady. */
        public isReady: boolean;

        /** DataForPlayerInRoom unitAndTileSkinId. */
        public unitAndTileSkinId: number;

        /**
         * Creates a new DataForPlayerInRoom instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DataForPlayerInRoom instance
         */
        public static create(properties?: Structure.IDataForPlayerInRoom): Structure.DataForPlayerInRoom;

        /**
         * Encodes the specified DataForPlayerInRoom message. Does not implicitly {@link Structure.DataForPlayerInRoom.verify|verify} messages.
         * @param message DataForPlayerInRoom message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Structure.IDataForPlayerInRoom, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified DataForPlayerInRoom message, length delimited. Does not implicitly {@link Structure.DataForPlayerInRoom.verify|verify} messages.
         * @param message DataForPlayerInRoom message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Structure.IDataForPlayerInRoom, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a DataForPlayerInRoom message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DataForPlayerInRoom
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Structure.DataForPlayerInRoom;

        /**
         * Decodes a DataForPlayerInRoom message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DataForPlayerInRoom
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Structure.DataForPlayerInRoom;

        /**
         * Verifies a DataForPlayerInRoom message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DataForPlayerInRoom message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DataForPlayerInRoom
         */
        public static fromObject(object: { [k: string]: any }): Structure.DataForPlayerInRoom;

        /**
         * Creates a plain object from a DataForPlayerInRoom message. Also converts values to other types if specified.
         * @param message DataForPlayerInRoom
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Structure.DataForPlayerInRoom, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DataForPlayerInRoom to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DataForPlayerBanCo. */
    interface IDataForPlayerBanCo {

        /** DataForPlayerBanCo srcPlayerIndex */
        srcPlayerIndex?: (number|null);

        /** DataForPlayerBanCo bannedCoIdList */
        bannedCoIdList?: (number[]|null);
    }

    /** Represents a DataForPlayerBanCo. */
    class DataForPlayerBanCo implements IDataForPlayerBanCo {

        /**
         * Constructs a new DataForPlayerBanCo.
         * @param [properties] Properties to set
         */
        constructor(properties?: Structure.IDataForPlayerBanCo);

        /** DataForPlayerBanCo srcPlayerIndex. */
        public srcPlayerIndex: number;

        /** DataForPlayerBanCo bannedCoIdList. */
        public bannedCoIdList: number[];

        /**
         * Creates a new DataForPlayerBanCo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DataForPlayerBanCo instance
         */
        public static create(properties?: Structure.IDataForPlayerBanCo): Structure.DataForPlayerBanCo;

        /**
         * Encodes the specified DataForPlayerBanCo message. Does not implicitly {@link Structure.DataForPlayerBanCo.verify|verify} messages.
         * @param message DataForPlayerBanCo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Structure.IDataForPlayerBanCo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified DataForPlayerBanCo message, length delimited. Does not implicitly {@link Structure.DataForPlayerBanCo.verify|verify} messages.
         * @param message DataForPlayerBanCo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Structure.IDataForPlayerBanCo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a DataForPlayerBanCo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DataForPlayerBanCo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Structure.DataForPlayerBanCo;

        /**
         * Decodes a DataForPlayerBanCo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DataForPlayerBanCo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Structure.DataForPlayerBanCo;

        /**
         * Verifies a DataForPlayerBanCo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DataForPlayerBanCo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DataForPlayerBanCo
         */
        public static fromObject(object: { [k: string]: any }): Structure.DataForPlayerBanCo;

        /**
         * Creates a plain object from a DataForPlayerBanCo message. Also converts values to other types if specified.
         * @param message DataForPlayerBanCo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Structure.DataForPlayerBanCo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DataForPlayerBanCo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DataForMrwPlayerRank. */
    interface IDataForMrwPlayerRank {

        /** DataForMrwPlayerRank warType */
        warType?: (number|null);

        /** DataForMrwPlayerRank playersCountUnneutral */
        playersCountUnneutral?: (number|null);

        /** DataForMrwPlayerRank userId */
        userId?: (number|null);
    }

    /** Represents a DataForMrwPlayerRank. */
    class DataForMrwPlayerRank implements IDataForMrwPlayerRank {

        /**
         * Constructs a new DataForMrwPlayerRank.
         * @param [properties] Properties to set
         */
        constructor(properties?: Structure.IDataForMrwPlayerRank);

        /** DataForMrwPlayerRank warType. */
        public warType: number;

        /** DataForMrwPlayerRank playersCountUnneutral. */
        public playersCountUnneutral: number;

        /** DataForMrwPlayerRank userId. */
        public userId: number;

        /**
         * Creates a new DataForMrwPlayerRank instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DataForMrwPlayerRank instance
         */
        public static create(properties?: Structure.IDataForMrwPlayerRank): Structure.DataForMrwPlayerRank;

        /**
         * Encodes the specified DataForMrwPlayerRank message. Does not implicitly {@link Structure.DataForMrwPlayerRank.verify|verify} messages.
         * @param message DataForMrwPlayerRank message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Structure.IDataForMrwPlayerRank, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified DataForMrwPlayerRank message, length delimited. Does not implicitly {@link Structure.DataForMrwPlayerRank.verify|verify} messages.
         * @param message DataForMrwPlayerRank message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Structure.IDataForMrwPlayerRank, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a DataForMrwPlayerRank message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DataForMrwPlayerRank
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Structure.DataForMrwPlayerRank;

        /**
         * Decodes a DataForMrwPlayerRank message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DataForMrwPlayerRank
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Structure.DataForMrwPlayerRank;

        /**
         * Verifies a DataForMrwPlayerRank message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DataForMrwPlayerRank message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DataForMrwPlayerRank
         */
        public static fromObject(object: { [k: string]: any }): Structure.DataForMrwPlayerRank;

        /**
         * Creates a plain object from a DataForMrwPlayerRank message. Also converts values to other types if specified.
         * @param message DataForMrwPlayerRank
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Structure.DataForMrwPlayerRank, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DataForMrwPlayerRank to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a BattleDamageInfo. */
    interface IBattleDamageInfo {

        /** BattleDamageInfo attackerUnitId */
        attackerUnitId?: (number|null);

        /** BattleDamageInfo targetUnitId */
        targetUnitId?: (number|null);

        /** BattleDamageInfo targetTileGridIndex */
        targetTileGridIndex?: (Structure.IGridIndex|null);

        /** BattleDamageInfo damage */
        damage?: (number|null);
    }

    /** Represents a BattleDamageInfo. */
    class BattleDamageInfo implements IBattleDamageInfo {

        /**
         * Constructs a new BattleDamageInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: Structure.IBattleDamageInfo);

        /** BattleDamageInfo attackerUnitId. */
        public attackerUnitId: number;

        /** BattleDamageInfo targetUnitId. */
        public targetUnitId: number;

        /** BattleDamageInfo targetTileGridIndex. */
        public targetTileGridIndex?: (Structure.IGridIndex|null);

        /** BattleDamageInfo damage. */
        public damage: number;

        /**
         * Creates a new BattleDamageInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BattleDamageInfo instance
         */
        public static create(properties?: Structure.IBattleDamageInfo): Structure.BattleDamageInfo;

        /**
         * Encodes the specified BattleDamageInfo message. Does not implicitly {@link Structure.BattleDamageInfo.verify|verify} messages.
         * @param message BattleDamageInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Structure.IBattleDamageInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified BattleDamageInfo message, length delimited. Does not implicitly {@link Structure.BattleDamageInfo.verify|verify} messages.
         * @param message BattleDamageInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Structure.IBattleDamageInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a BattleDamageInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BattleDamageInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Structure.BattleDamageInfo;

        /**
         * Decodes a BattleDamageInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BattleDamageInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Structure.BattleDamageInfo;

        /**
         * Verifies a BattleDamageInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a BattleDamageInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns BattleDamageInfo
         */
        public static fromObject(object: { [k: string]: any }): Structure.BattleDamageInfo;

        /**
         * Creates a plain object from a BattleDamageInfo message. Also converts values to other types if specified.
         * @param message BattleDamageInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Structure.BattleDamageInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this BattleDamageInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CommonExtraDataForWarAction. */
    interface ICommonExtraDataForWarAction {

        /** CommonExtraDataForWarAction playerArrayAfterAction */
        playerArrayAfterAction?: (WarSerialization.ISerialPlayer[]|null);

        /** CommonExtraDataForWarAction unitArrayAfterAction */
        unitArrayAfterAction?: (WarSerialization.ISerialUnit[]|null);

        /** CommonExtraDataForWarAction destroyedUnitIdArray */
        destroyedUnitIdArray?: (number[]|null);

        /** CommonExtraDataForWarAction tileArrayAfterAction */
        tileArrayAfterAction?: (WarSerialization.ISerialTile[]|null);

        /** CommonExtraDataForWarAction nextUnitId */
        nextUnitId?: (number|null);

        /** CommonExtraDataForWarAction movingUnitAndPath */
        movingUnitAndPath?: (Structure.IMovingUnitAndPath|null);

        /** CommonExtraDataForWarAction visibilityArrayFromPathsAfterAction */
        visibilityArrayFromPathsAfterAction?: (number[]|null);
    }

    /** Represents a CommonExtraDataForWarAction. */
    class CommonExtraDataForWarAction implements ICommonExtraDataForWarAction {

        /**
         * Constructs a new CommonExtraDataForWarAction.
         * @param [properties] Properties to set
         */
        constructor(properties?: Structure.ICommonExtraDataForWarAction);

        /** CommonExtraDataForWarAction playerArrayAfterAction. */
        public playerArrayAfterAction: WarSerialization.ISerialPlayer[];

        /** CommonExtraDataForWarAction unitArrayAfterAction. */
        public unitArrayAfterAction: WarSerialization.ISerialUnit[];

        /** CommonExtraDataForWarAction destroyedUnitIdArray. */
        public destroyedUnitIdArray: number[];

        /** CommonExtraDataForWarAction tileArrayAfterAction. */
        public tileArrayAfterAction: WarSerialization.ISerialTile[];

        /** CommonExtraDataForWarAction nextUnitId. */
        public nextUnitId: number;

        /** CommonExtraDataForWarAction movingUnitAndPath. */
        public movingUnitAndPath?: (Structure.IMovingUnitAndPath|null);

        /** CommonExtraDataForWarAction visibilityArrayFromPathsAfterAction. */
        public visibilityArrayFromPathsAfterAction: number[];

        /**
         * Creates a new CommonExtraDataForWarAction instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CommonExtraDataForWarAction instance
         */
        public static create(properties?: Structure.ICommonExtraDataForWarAction): Structure.CommonExtraDataForWarAction;

        /**
         * Encodes the specified CommonExtraDataForWarAction message. Does not implicitly {@link Structure.CommonExtraDataForWarAction.verify|verify} messages.
         * @param message CommonExtraDataForWarAction message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Structure.ICommonExtraDataForWarAction, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified CommonExtraDataForWarAction message, length delimited. Does not implicitly {@link Structure.CommonExtraDataForWarAction.verify|verify} messages.
         * @param message CommonExtraDataForWarAction message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Structure.ICommonExtraDataForWarAction, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CommonExtraDataForWarAction message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CommonExtraDataForWarAction
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Structure.CommonExtraDataForWarAction;

        /**
         * Decodes a CommonExtraDataForWarAction message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CommonExtraDataForWarAction
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Structure.CommonExtraDataForWarAction;

        /**
         * Verifies a CommonExtraDataForWarAction message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CommonExtraDataForWarAction message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CommonExtraDataForWarAction
         */
        public static fromObject(object: { [k: string]: any }): Structure.CommonExtraDataForWarAction;

        /**
         * Creates a plain object from a CommonExtraDataForWarAction message. Also converts values to other types if specified.
         * @param message CommonExtraDataForWarAction
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Structure.CommonExtraDataForWarAction, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CommonExtraDataForWarAction to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Properties of a MultiCustomRoom. */
export declare interface IMultiCustomRoom {
}

/** Represents a MultiCustomRoom. */
export declare class MultiCustomRoom implements IMultiCustomRoom {

    /**
     * Constructs a new MultiCustomRoom.
     * @param [properties] Properties to set
     */
    constructor(properties?: IMultiCustomRoom);

    /**
     * Creates a new MultiCustomRoom instance using the specified properties.
     * @param [properties] Properties to set
     * @returns MultiCustomRoom instance
     */
    public static create(properties?: IMultiCustomRoom): MultiCustomRoom;

    /**
     * Encodes the specified MultiCustomRoom message. Does not implicitly {@link MultiCustomRoom.verify|verify} messages.
     * @param message MultiCustomRoom message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IMultiCustomRoom, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Encodes the specified MultiCustomRoom message, length delimited. Does not implicitly {@link MultiCustomRoom.verify|verify} messages.
     * @param message MultiCustomRoom message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IMultiCustomRoom, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Decodes a MultiCustomRoom message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns MultiCustomRoom
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): MultiCustomRoom;

    /**
     * Decodes a MultiCustomRoom message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns MultiCustomRoom
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): MultiCustomRoom;

    /**
     * Verifies a MultiCustomRoom message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a MultiCustomRoom message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns MultiCustomRoom
     */
    public static fromObject(object: { [k: string]: any }): MultiCustomRoom;

    /**
     * Creates a plain object from a MultiCustomRoom message. Also converts values to other types if specified.
     * @param message MultiCustomRoom
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: MultiCustomRoom, options?: protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this MultiCustomRoom to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export declare namespace MultiCustomRoom {

    /** Properties of a McrRoomFilter. */
    interface IMcrRoomFilter {

        /** McrRoomFilter roomId */
        roomId?: (number|null);

        /** McrRoomFilter mapName */
        mapName?: (string|null);

        /** McrRoomFilter userNickname */
        userNickname?: (string|null);

        /** McrRoomFilter coName */
        coName?: (string|null);

        /** McrRoomFilter hasFog */
        hasFog?: (boolean|null);

        /** McrRoomFilter userIdInRoom */
        userIdInRoom?: (number|null);

        /** McrRoomFilter userIdNotInRoom */
        userIdNotInRoom?: (number|null);

        /** McrRoomFilter isJoinable */
        isJoinable?: (boolean|null);
    }

    /** Represents a McrRoomFilter. */
    class McrRoomFilter implements IMcrRoomFilter {

        /**
         * Constructs a new McrRoomFilter.
         * @param [properties] Properties to set
         */
        constructor(properties?: MultiCustomRoom.IMcrRoomFilter);

        /** McrRoomFilter roomId. */
        public roomId: number;

        /** McrRoomFilter mapName. */
        public mapName: string;

        /** McrRoomFilter userNickname. */
        public userNickname: string;

        /** McrRoomFilter coName. */
        public coName: string;

        /** McrRoomFilter hasFog. */
        public hasFog: boolean;

        /** McrRoomFilter userIdInRoom. */
        public userIdInRoom: number;

        /** McrRoomFilter userIdNotInRoom. */
        public userIdNotInRoom: number;

        /** McrRoomFilter isJoinable. */
        public isJoinable: boolean;

        /**
         * Creates a new McrRoomFilter instance using the specified properties.
         * @param [properties] Properties to set
         * @returns McrRoomFilter instance
         */
        public static create(properties?: MultiCustomRoom.IMcrRoomFilter): MultiCustomRoom.McrRoomFilter;

        /**
         * Encodes the specified McrRoomFilter message. Does not implicitly {@link MultiCustomRoom.McrRoomFilter.verify|verify} messages.
         * @param message McrRoomFilter message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: MultiCustomRoom.IMcrRoomFilter, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified McrRoomFilter message, length delimited. Does not implicitly {@link MultiCustomRoom.McrRoomFilter.verify|verify} messages.
         * @param message McrRoomFilter message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: MultiCustomRoom.IMcrRoomFilter, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a McrRoomFilter message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns McrRoomFilter
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): MultiCustomRoom.McrRoomFilter;

        /**
         * Decodes a McrRoomFilter message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns McrRoomFilter
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): MultiCustomRoom.McrRoomFilter;

        /**
         * Verifies a McrRoomFilter message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a McrRoomFilter message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns McrRoomFilter
         */
        public static fromObject(object: { [k: string]: any }): MultiCustomRoom.McrRoomFilter;

        /**
         * Creates a plain object from a McrRoomFilter message. Also converts values to other types if specified.
         * @param message McrRoomFilter
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: MultiCustomRoom.McrRoomFilter, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this McrRoomFilter to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a McrRoomInfo. */
    interface IMcrRoomInfo {

        /** McrRoomInfo roomId */
        roomId?: (number|null);

        /** McrRoomInfo createTime */
        createTime?: (number|null);

        /** McrRoomInfo creatorUserId */
        creatorUserId?: (number|null);

        /** McrRoomInfo ownerPlayerIndex */
        ownerPlayerIndex?: (number|null);

        /** McrRoomInfo settingsForCommon */
        settingsForCommon?: (WarSettings.ISettingsForCommon|null);

        /** McrRoomInfo settingsForMcw */
        settingsForMcw?: (WarSettings.ISettingsForMcw|null);

        /** McrRoomInfo playerDataList */
        playerDataList?: (Structure.IDataForPlayerInRoom[]|null);
    }

    /** Represents a McrRoomInfo. */
    class McrRoomInfo implements IMcrRoomInfo {

        /**
         * Constructs a new McrRoomInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: MultiCustomRoom.IMcrRoomInfo);

        /** McrRoomInfo roomId. */
        public roomId: number;

        /** McrRoomInfo createTime. */
        public createTime: number;

        /** McrRoomInfo creatorUserId. */
        public creatorUserId: number;

        /** McrRoomInfo ownerPlayerIndex. */
        public ownerPlayerIndex: number;

        /** McrRoomInfo settingsForCommon. */
        public settingsForCommon?: (WarSettings.ISettingsForCommon|null);

        /** McrRoomInfo settingsForMcw. */
        public settingsForMcw?: (WarSettings.ISettingsForMcw|null);

        /** McrRoomInfo playerDataList. */
        public playerDataList: Structure.IDataForPlayerInRoom[];

        /**
         * Creates a new McrRoomInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns McrRoomInfo instance
         */
        public static create(properties?: MultiCustomRoom.IMcrRoomInfo): MultiCustomRoom.McrRoomInfo;

        /**
         * Encodes the specified McrRoomInfo message. Does not implicitly {@link MultiCustomRoom.McrRoomInfo.verify|verify} messages.
         * @param message McrRoomInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: MultiCustomRoom.IMcrRoomInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified McrRoomInfo message, length delimited. Does not implicitly {@link MultiCustomRoom.McrRoomInfo.verify|verify} messages.
         * @param message McrRoomInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: MultiCustomRoom.IMcrRoomInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a McrRoomInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns McrRoomInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): MultiCustomRoom.McrRoomInfo;

        /**
         * Decodes a McrRoomInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns McrRoomInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): MultiCustomRoom.McrRoomInfo;

        /**
         * Verifies a McrRoomInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a McrRoomInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns McrRoomInfo
         */
        public static fromObject(object: { [k: string]: any }): MultiCustomRoom.McrRoomInfo;

        /**
         * Creates a plain object from a McrRoomInfo message. Also converts values to other types if specified.
         * @param message McrRoomInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: MultiCustomRoom.McrRoomInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this McrRoomInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a McrRoomStaticInfo. */
    interface IMcrRoomStaticInfo {

        /** McrRoomStaticInfo roomId */
        roomId?: (number|null);

        /** McrRoomStaticInfo createTime */
        createTime?: (number|null);

        /** McrRoomStaticInfo creatorUserId */
        creatorUserId?: (number|null);

        /** McrRoomStaticInfo settingsForCommon */
        settingsForCommon?: (WarSettings.ISettingsForCommon|null);

        /** McrRoomStaticInfo settingsForMcw */
        settingsForMcw?: (WarSettings.ISettingsForMcw|null);
    }

    /** Represents a McrRoomStaticInfo. */
    class McrRoomStaticInfo implements IMcrRoomStaticInfo {

        /**
         * Constructs a new McrRoomStaticInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: MultiCustomRoom.IMcrRoomStaticInfo);

        /** McrRoomStaticInfo roomId. */
        public roomId: number;

        /** McrRoomStaticInfo createTime. */
        public createTime: number;

        /** McrRoomStaticInfo creatorUserId. */
        public creatorUserId: number;

        /** McrRoomStaticInfo settingsForCommon. */
        public settingsForCommon?: (WarSettings.ISettingsForCommon|null);

        /** McrRoomStaticInfo settingsForMcw. */
        public settingsForMcw?: (WarSettings.ISettingsForMcw|null);

        /**
         * Creates a new McrRoomStaticInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns McrRoomStaticInfo instance
         */
        public static create(properties?: MultiCustomRoom.IMcrRoomStaticInfo): MultiCustomRoom.McrRoomStaticInfo;

        /**
         * Encodes the specified McrRoomStaticInfo message. Does not implicitly {@link MultiCustomRoom.McrRoomStaticInfo.verify|verify} messages.
         * @param message McrRoomStaticInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: MultiCustomRoom.IMcrRoomStaticInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified McrRoomStaticInfo message, length delimited. Does not implicitly {@link MultiCustomRoom.McrRoomStaticInfo.verify|verify} messages.
         * @param message McrRoomStaticInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: MultiCustomRoom.IMcrRoomStaticInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a McrRoomStaticInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns McrRoomStaticInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): MultiCustomRoom.McrRoomStaticInfo;

        /**
         * Decodes a McrRoomStaticInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns McrRoomStaticInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): MultiCustomRoom.McrRoomStaticInfo;

        /**
         * Verifies a McrRoomStaticInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a McrRoomStaticInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns McrRoomStaticInfo
         */
        public static fromObject(object: { [k: string]: any }): MultiCustomRoom.McrRoomStaticInfo;

        /**
         * Creates a plain object from a McrRoomStaticInfo message. Also converts values to other types if specified.
         * @param message McrRoomStaticInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: MultiCustomRoom.McrRoomStaticInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this McrRoomStaticInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a McrRoomPlayerInfo. */
    interface IMcrRoomPlayerInfo {

        /** McrRoomPlayerInfo roomId */
        roomId?: (number|null);

        /** McrRoomPlayerInfo ownerPlayerIndex */
        ownerPlayerIndex?: (number|null);

        /** McrRoomPlayerInfo playerDataList */
        playerDataList?: (Structure.IDataForPlayerInRoom[]|null);
    }

    /** Represents a McrRoomPlayerInfo. */
    class McrRoomPlayerInfo implements IMcrRoomPlayerInfo {

        /**
         * Constructs a new McrRoomPlayerInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: MultiCustomRoom.IMcrRoomPlayerInfo);

        /** McrRoomPlayerInfo roomId. */
        public roomId: number;

        /** McrRoomPlayerInfo ownerPlayerIndex. */
        public ownerPlayerIndex: number;

        /** McrRoomPlayerInfo playerDataList. */
        public playerDataList: Structure.IDataForPlayerInRoom[];

        /**
         * Creates a new McrRoomPlayerInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns McrRoomPlayerInfo instance
         */
        public static create(properties?: MultiCustomRoom.IMcrRoomPlayerInfo): MultiCustomRoom.McrRoomPlayerInfo;

        /**
         * Encodes the specified McrRoomPlayerInfo message. Does not implicitly {@link MultiCustomRoom.McrRoomPlayerInfo.verify|verify} messages.
         * @param message McrRoomPlayerInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: MultiCustomRoom.IMcrRoomPlayerInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified McrRoomPlayerInfo message, length delimited. Does not implicitly {@link MultiCustomRoom.McrRoomPlayerInfo.verify|verify} messages.
         * @param message McrRoomPlayerInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: MultiCustomRoom.IMcrRoomPlayerInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a McrRoomPlayerInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns McrRoomPlayerInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): MultiCustomRoom.McrRoomPlayerInfo;

        /**
         * Decodes a McrRoomPlayerInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns McrRoomPlayerInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): MultiCustomRoom.McrRoomPlayerInfo;

        /**
         * Verifies a McrRoomPlayerInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a McrRoomPlayerInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns McrRoomPlayerInfo
         */
        public static fromObject(object: { [k: string]: any }): MultiCustomRoom.McrRoomPlayerInfo;

        /**
         * Creates a plain object from a McrRoomPlayerInfo message. Also converts values to other types if specified.
         * @param message McrRoomPlayerInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: MultiCustomRoom.McrRoomPlayerInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this McrRoomPlayerInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Properties of a MultiFreeRoom. */
export declare interface IMultiFreeRoom {
}

/** Represents a MultiFreeRoom. */
export declare class MultiFreeRoom implements IMultiFreeRoom {

    /**
     * Constructs a new MultiFreeRoom.
     * @param [properties] Properties to set
     */
    constructor(properties?: IMultiFreeRoom);

    /**
     * Creates a new MultiFreeRoom instance using the specified properties.
     * @param [properties] Properties to set
     * @returns MultiFreeRoom instance
     */
    public static create(properties?: IMultiFreeRoom): MultiFreeRoom;

    /**
     * Encodes the specified MultiFreeRoom message. Does not implicitly {@link MultiFreeRoom.verify|verify} messages.
     * @param message MultiFreeRoom message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IMultiFreeRoom, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Encodes the specified MultiFreeRoom message, length delimited. Does not implicitly {@link MultiFreeRoom.verify|verify} messages.
     * @param message MultiFreeRoom message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IMultiFreeRoom, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Decodes a MultiFreeRoom message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns MultiFreeRoom
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): MultiFreeRoom;

    /**
     * Decodes a MultiFreeRoom message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns MultiFreeRoom
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): MultiFreeRoom;

    /**
     * Verifies a MultiFreeRoom message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a MultiFreeRoom message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns MultiFreeRoom
     */
    public static fromObject(object: { [k: string]: any }): MultiFreeRoom;

    /**
     * Creates a plain object from a MultiFreeRoom message. Also converts values to other types if specified.
     * @param message MultiFreeRoom
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: MultiFreeRoom, options?: protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this MultiFreeRoom to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export declare namespace MultiFreeRoom {

    /** Properties of a MfrRoomFilter. */
    interface IMfrRoomFilter {

        /** MfrRoomFilter roomId */
        roomId?: (number|null);

        /** MfrRoomFilter userNickname */
        userNickname?: (string|null);

        /** MfrRoomFilter coName */
        coName?: (string|null);

        /** MfrRoomFilter hasFog */
        hasFog?: (boolean|null);

        /** MfrRoomFilter userIdInRoom */
        userIdInRoom?: (number|null);

        /** MfrRoomFilter userIdNotInRoom */
        userIdNotInRoom?: (number|null);

        /** MfrRoomFilter isJoinable */
        isJoinable?: (boolean|null);
    }

    /** Represents a MfrRoomFilter. */
    class MfrRoomFilter implements IMfrRoomFilter {

        /**
         * Constructs a new MfrRoomFilter.
         * @param [properties] Properties to set
         */
        constructor(properties?: MultiFreeRoom.IMfrRoomFilter);

        /** MfrRoomFilter roomId. */
        public roomId: number;

        /** MfrRoomFilter userNickname. */
        public userNickname: string;

        /** MfrRoomFilter coName. */
        public coName: string;

        /** MfrRoomFilter hasFog. */
        public hasFog: boolean;

        /** MfrRoomFilter userIdInRoom. */
        public userIdInRoom: number;

        /** MfrRoomFilter userIdNotInRoom. */
        public userIdNotInRoom: number;

        /** MfrRoomFilter isJoinable. */
        public isJoinable: boolean;

        /**
         * Creates a new MfrRoomFilter instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MfrRoomFilter instance
         */
        public static create(properties?: MultiFreeRoom.IMfrRoomFilter): MultiFreeRoom.MfrRoomFilter;

        /**
         * Encodes the specified MfrRoomFilter message. Does not implicitly {@link MultiFreeRoom.MfrRoomFilter.verify|verify} messages.
         * @param message MfrRoomFilter message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: MultiFreeRoom.IMfrRoomFilter, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MfrRoomFilter message, length delimited. Does not implicitly {@link MultiFreeRoom.MfrRoomFilter.verify|verify} messages.
         * @param message MfrRoomFilter message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: MultiFreeRoom.IMfrRoomFilter, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MfrRoomFilter message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MfrRoomFilter
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): MultiFreeRoom.MfrRoomFilter;

        /**
         * Decodes a MfrRoomFilter message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MfrRoomFilter
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): MultiFreeRoom.MfrRoomFilter;

        /**
         * Verifies a MfrRoomFilter message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MfrRoomFilter message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MfrRoomFilter
         */
        public static fromObject(object: { [k: string]: any }): MultiFreeRoom.MfrRoomFilter;

        /**
         * Creates a plain object from a MfrRoomFilter message. Also converts values to other types if specified.
         * @param message MfrRoomFilter
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: MultiFreeRoom.MfrRoomFilter, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MfrRoomFilter to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MfrRoomInfo. */
    interface IMfrRoomInfo {

        /** MfrRoomInfo roomId */
        roomId?: (number|null);

        /** MfrRoomInfo createTime */
        createTime?: (number|null);

        /** MfrRoomInfo creatorUserId */
        creatorUserId?: (number|null);

        /** MfrRoomInfo ownerPlayerIndex */
        ownerPlayerIndex?: (number|null);

        /** MfrRoomInfo settingsForMfw */
        settingsForMfw?: (WarSettings.ISettingsForMfw|null);

        /** MfrRoomInfo playerDataList */
        playerDataList?: (Structure.IDataForPlayerInRoom[]|null);
    }

    /** Represents a MfrRoomInfo. */
    class MfrRoomInfo implements IMfrRoomInfo {

        /**
         * Constructs a new MfrRoomInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: MultiFreeRoom.IMfrRoomInfo);

        /** MfrRoomInfo roomId. */
        public roomId: number;

        /** MfrRoomInfo createTime. */
        public createTime: number;

        /** MfrRoomInfo creatorUserId. */
        public creatorUserId: number;

        /** MfrRoomInfo ownerPlayerIndex. */
        public ownerPlayerIndex: number;

        /** MfrRoomInfo settingsForMfw. */
        public settingsForMfw?: (WarSettings.ISettingsForMfw|null);

        /** MfrRoomInfo playerDataList. */
        public playerDataList: Structure.IDataForPlayerInRoom[];

        /**
         * Creates a new MfrRoomInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MfrRoomInfo instance
         */
        public static create(properties?: MultiFreeRoom.IMfrRoomInfo): MultiFreeRoom.MfrRoomInfo;

        /**
         * Encodes the specified MfrRoomInfo message. Does not implicitly {@link MultiFreeRoom.MfrRoomInfo.verify|verify} messages.
         * @param message MfrRoomInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: MultiFreeRoom.IMfrRoomInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MfrRoomInfo message, length delimited. Does not implicitly {@link MultiFreeRoom.MfrRoomInfo.verify|verify} messages.
         * @param message MfrRoomInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: MultiFreeRoom.IMfrRoomInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MfrRoomInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MfrRoomInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): MultiFreeRoom.MfrRoomInfo;

        /**
         * Decodes a MfrRoomInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MfrRoomInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): MultiFreeRoom.MfrRoomInfo;

        /**
         * Verifies a MfrRoomInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MfrRoomInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MfrRoomInfo
         */
        public static fromObject(object: { [k: string]: any }): MultiFreeRoom.MfrRoomInfo;

        /**
         * Creates a plain object from a MfrRoomInfo message. Also converts values to other types if specified.
         * @param message MfrRoomInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: MultiFreeRoom.MfrRoomInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MfrRoomInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MfrRoomStaticInfo. */
    interface IMfrRoomStaticInfo {

        /** MfrRoomStaticInfo roomId */
        roomId?: (number|null);

        /** MfrRoomStaticInfo createTime */
        createTime?: (number|null);

        /** MfrRoomStaticInfo creatorUserId */
        creatorUserId?: (number|null);

        /** MfrRoomStaticInfo settingsForMfw */
        settingsForMfw?: (WarSettings.ISettingsForMfw|null);
    }

    /** Represents a MfrRoomStaticInfo. */
    class MfrRoomStaticInfo implements IMfrRoomStaticInfo {

        /**
         * Constructs a new MfrRoomStaticInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: MultiFreeRoom.IMfrRoomStaticInfo);

        /** MfrRoomStaticInfo roomId. */
        public roomId: number;

        /** MfrRoomStaticInfo createTime. */
        public createTime: number;

        /** MfrRoomStaticInfo creatorUserId. */
        public creatorUserId: number;

        /** MfrRoomStaticInfo settingsForMfw. */
        public settingsForMfw?: (WarSettings.ISettingsForMfw|null);

        /**
         * Creates a new MfrRoomStaticInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MfrRoomStaticInfo instance
         */
        public static create(properties?: MultiFreeRoom.IMfrRoomStaticInfo): MultiFreeRoom.MfrRoomStaticInfo;

        /**
         * Encodes the specified MfrRoomStaticInfo message. Does not implicitly {@link MultiFreeRoom.MfrRoomStaticInfo.verify|verify} messages.
         * @param message MfrRoomStaticInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: MultiFreeRoom.IMfrRoomStaticInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MfrRoomStaticInfo message, length delimited. Does not implicitly {@link MultiFreeRoom.MfrRoomStaticInfo.verify|verify} messages.
         * @param message MfrRoomStaticInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: MultiFreeRoom.IMfrRoomStaticInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MfrRoomStaticInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MfrRoomStaticInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): MultiFreeRoom.MfrRoomStaticInfo;

        /**
         * Decodes a MfrRoomStaticInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MfrRoomStaticInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): MultiFreeRoom.MfrRoomStaticInfo;

        /**
         * Verifies a MfrRoomStaticInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MfrRoomStaticInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MfrRoomStaticInfo
         */
        public static fromObject(object: { [k: string]: any }): MultiFreeRoom.MfrRoomStaticInfo;

        /**
         * Creates a plain object from a MfrRoomStaticInfo message. Also converts values to other types if specified.
         * @param message MfrRoomStaticInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: MultiFreeRoom.MfrRoomStaticInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MfrRoomStaticInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MfrRoomPlayerInfo. */
    interface IMfrRoomPlayerInfo {

        /** MfrRoomPlayerInfo roomId */
        roomId?: (number|null);

        /** MfrRoomPlayerInfo ownerPlayerIndex */
        ownerPlayerIndex?: (number|null);

        /** MfrRoomPlayerInfo playerDataList */
        playerDataList?: (Structure.IDataForPlayerInRoom[]|null);
    }

    /** Represents a MfrRoomPlayerInfo. */
    class MfrRoomPlayerInfo implements IMfrRoomPlayerInfo {

        /**
         * Constructs a new MfrRoomPlayerInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: MultiFreeRoom.IMfrRoomPlayerInfo);

        /** MfrRoomPlayerInfo roomId. */
        public roomId: number;

        /** MfrRoomPlayerInfo ownerPlayerIndex. */
        public ownerPlayerIndex: number;

        /** MfrRoomPlayerInfo playerDataList. */
        public playerDataList: Structure.IDataForPlayerInRoom[];

        /**
         * Creates a new MfrRoomPlayerInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MfrRoomPlayerInfo instance
         */
        public static create(properties?: MultiFreeRoom.IMfrRoomPlayerInfo): MultiFreeRoom.MfrRoomPlayerInfo;

        /**
         * Encodes the specified MfrRoomPlayerInfo message. Does not implicitly {@link MultiFreeRoom.MfrRoomPlayerInfo.verify|verify} messages.
         * @param message MfrRoomPlayerInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: MultiFreeRoom.IMfrRoomPlayerInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MfrRoomPlayerInfo message, length delimited. Does not implicitly {@link MultiFreeRoom.MfrRoomPlayerInfo.verify|verify} messages.
         * @param message MfrRoomPlayerInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: MultiFreeRoom.IMfrRoomPlayerInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MfrRoomPlayerInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MfrRoomPlayerInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): MultiFreeRoom.MfrRoomPlayerInfo;

        /**
         * Decodes a MfrRoomPlayerInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MfrRoomPlayerInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): MultiFreeRoom.MfrRoomPlayerInfo;

        /**
         * Verifies a MfrRoomPlayerInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MfrRoomPlayerInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MfrRoomPlayerInfo
         */
        public static fromObject(object: { [k: string]: any }): MultiFreeRoom.MfrRoomPlayerInfo;

        /**
         * Creates a plain object from a MfrRoomPlayerInfo message. Also converts values to other types if specified.
         * @param message MfrRoomPlayerInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: MultiFreeRoom.MfrRoomPlayerInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MfrRoomPlayerInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Properties of a CoopCustomRoom. */
export declare interface ICoopCustomRoom {
}

/** Represents a CoopCustomRoom. */
export declare class CoopCustomRoom implements ICoopCustomRoom {

    /**
     * Constructs a new CoopCustomRoom.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICoopCustomRoom);

    /**
     * Creates a new CoopCustomRoom instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CoopCustomRoom instance
     */
    public static create(properties?: ICoopCustomRoom): CoopCustomRoom;

    /**
     * Encodes the specified CoopCustomRoom message. Does not implicitly {@link CoopCustomRoom.verify|verify} messages.
     * @param message CoopCustomRoom message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICoopCustomRoom, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Encodes the specified CoopCustomRoom message, length delimited. Does not implicitly {@link CoopCustomRoom.verify|verify} messages.
     * @param message CoopCustomRoom message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICoopCustomRoom, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Decodes a CoopCustomRoom message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CoopCustomRoom
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CoopCustomRoom;

    /**
     * Decodes a CoopCustomRoom message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CoopCustomRoom
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CoopCustomRoom;

    /**
     * Verifies a CoopCustomRoom message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CoopCustomRoom message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CoopCustomRoom
     */
    public static fromObject(object: { [k: string]: any }): CoopCustomRoom;

    /**
     * Creates a plain object from a CoopCustomRoom message. Also converts values to other types if specified.
     * @param message CoopCustomRoom
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CoopCustomRoom, options?: protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CoopCustomRoom to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export declare namespace CoopCustomRoom {

    /** Properties of a CcrRoomFilter. */
    interface ICcrRoomFilter {

        /** CcrRoomFilter roomId */
        roomId?: (number|null);

        /** CcrRoomFilter mapName */
        mapName?: (string|null);

        /** CcrRoomFilter userNickname */
        userNickname?: (string|null);

        /** CcrRoomFilter coName */
        coName?: (string|null);

        /** CcrRoomFilter hasFog */
        hasFog?: (boolean|null);

        /** CcrRoomFilter userIdInRoom */
        userIdInRoom?: (number|null);

        /** CcrRoomFilter userIdNotInRoom */
        userIdNotInRoom?: (number|null);

        /** CcrRoomFilter isJoinable */
        isJoinable?: (boolean|null);
    }

    /** Represents a CcrRoomFilter. */
    class CcrRoomFilter implements ICcrRoomFilter {

        /**
         * Constructs a new CcrRoomFilter.
         * @param [properties] Properties to set
         */
        constructor(properties?: CoopCustomRoom.ICcrRoomFilter);

        /** CcrRoomFilter roomId. */
        public roomId: number;

        /** CcrRoomFilter mapName. */
        public mapName: string;

        /** CcrRoomFilter userNickname. */
        public userNickname: string;

        /** CcrRoomFilter coName. */
        public coName: string;

        /** CcrRoomFilter hasFog. */
        public hasFog: boolean;

        /** CcrRoomFilter userIdInRoom. */
        public userIdInRoom: number;

        /** CcrRoomFilter userIdNotInRoom. */
        public userIdNotInRoom: number;

        /** CcrRoomFilter isJoinable. */
        public isJoinable: boolean;

        /**
         * Creates a new CcrRoomFilter instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CcrRoomFilter instance
         */
        public static create(properties?: CoopCustomRoom.ICcrRoomFilter): CoopCustomRoom.CcrRoomFilter;

        /**
         * Encodes the specified CcrRoomFilter message. Does not implicitly {@link CoopCustomRoom.CcrRoomFilter.verify|verify} messages.
         * @param message CcrRoomFilter message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: CoopCustomRoom.ICcrRoomFilter, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified CcrRoomFilter message, length delimited. Does not implicitly {@link CoopCustomRoom.CcrRoomFilter.verify|verify} messages.
         * @param message CcrRoomFilter message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: CoopCustomRoom.ICcrRoomFilter, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CcrRoomFilter message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CcrRoomFilter
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CoopCustomRoom.CcrRoomFilter;

        /**
         * Decodes a CcrRoomFilter message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CcrRoomFilter
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CoopCustomRoom.CcrRoomFilter;

        /**
         * Verifies a CcrRoomFilter message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CcrRoomFilter message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CcrRoomFilter
         */
        public static fromObject(object: { [k: string]: any }): CoopCustomRoom.CcrRoomFilter;

        /**
         * Creates a plain object from a CcrRoomFilter message. Also converts values to other types if specified.
         * @param message CcrRoomFilter
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: CoopCustomRoom.CcrRoomFilter, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CcrRoomFilter to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CcrRoomInfo. */
    interface ICcrRoomInfo {

        /** CcrRoomInfo roomId */
        roomId?: (number|null);

        /** CcrRoomInfo createTime */
        createTime?: (number|null);

        /** CcrRoomInfo creatorUserId */
        creatorUserId?: (number|null);

        /** CcrRoomInfo ownerPlayerIndex */
        ownerPlayerIndex?: (number|null);

        /** CcrRoomInfo settingsForCommon */
        settingsForCommon?: (WarSettings.ISettingsForCommon|null);

        /** CcrRoomInfo settingsForCcw */
        settingsForCcw?: (WarSettings.ISettingsForCcw|null);

        /** CcrRoomInfo playerDataList */
        playerDataList?: (Structure.IDataForPlayerInRoom[]|null);
    }

    /** Represents a CcrRoomInfo. */
    class CcrRoomInfo implements ICcrRoomInfo {

        /**
         * Constructs a new CcrRoomInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: CoopCustomRoom.ICcrRoomInfo);

        /** CcrRoomInfo roomId. */
        public roomId: number;

        /** CcrRoomInfo createTime. */
        public createTime: number;

        /** CcrRoomInfo creatorUserId. */
        public creatorUserId: number;

        /** CcrRoomInfo ownerPlayerIndex. */
        public ownerPlayerIndex: number;

        /** CcrRoomInfo settingsForCommon. */
        public settingsForCommon?: (WarSettings.ISettingsForCommon|null);

        /** CcrRoomInfo settingsForCcw. */
        public settingsForCcw?: (WarSettings.ISettingsForCcw|null);

        /** CcrRoomInfo playerDataList. */
        public playerDataList: Structure.IDataForPlayerInRoom[];

        /**
         * Creates a new CcrRoomInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CcrRoomInfo instance
         */
        public static create(properties?: CoopCustomRoom.ICcrRoomInfo): CoopCustomRoom.CcrRoomInfo;

        /**
         * Encodes the specified CcrRoomInfo message. Does not implicitly {@link CoopCustomRoom.CcrRoomInfo.verify|verify} messages.
         * @param message CcrRoomInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: CoopCustomRoom.ICcrRoomInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified CcrRoomInfo message, length delimited. Does not implicitly {@link CoopCustomRoom.CcrRoomInfo.verify|verify} messages.
         * @param message CcrRoomInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: CoopCustomRoom.ICcrRoomInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CcrRoomInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CcrRoomInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CoopCustomRoom.CcrRoomInfo;

        /**
         * Decodes a CcrRoomInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CcrRoomInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CoopCustomRoom.CcrRoomInfo;

        /**
         * Verifies a CcrRoomInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CcrRoomInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CcrRoomInfo
         */
        public static fromObject(object: { [k: string]: any }): CoopCustomRoom.CcrRoomInfo;

        /**
         * Creates a plain object from a CcrRoomInfo message. Also converts values to other types if specified.
         * @param message CcrRoomInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: CoopCustomRoom.CcrRoomInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CcrRoomInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CcrRoomStaticInfo. */
    interface ICcrRoomStaticInfo {

        /** CcrRoomStaticInfo roomId */
        roomId?: (number|null);

        /** CcrRoomStaticInfo createTime */
        createTime?: (number|null);

        /** CcrRoomStaticInfo creatorUserId */
        creatorUserId?: (number|null);

        /** CcrRoomStaticInfo settingsForCommon */
        settingsForCommon?: (WarSettings.ISettingsForCommon|null);

        /** CcrRoomStaticInfo settingsForCcw */
        settingsForCcw?: (WarSettings.ISettingsForCcw|null);
    }

    /** Represents a CcrRoomStaticInfo. */
    class CcrRoomStaticInfo implements ICcrRoomStaticInfo {

        /**
         * Constructs a new CcrRoomStaticInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: CoopCustomRoom.ICcrRoomStaticInfo);

        /** CcrRoomStaticInfo roomId. */
        public roomId: number;

        /** CcrRoomStaticInfo createTime. */
        public createTime: number;

        /** CcrRoomStaticInfo creatorUserId. */
        public creatorUserId: number;

        /** CcrRoomStaticInfo settingsForCommon. */
        public settingsForCommon?: (WarSettings.ISettingsForCommon|null);

        /** CcrRoomStaticInfo settingsForCcw. */
        public settingsForCcw?: (WarSettings.ISettingsForCcw|null);

        /**
         * Creates a new CcrRoomStaticInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CcrRoomStaticInfo instance
         */
        public static create(properties?: CoopCustomRoom.ICcrRoomStaticInfo): CoopCustomRoom.CcrRoomStaticInfo;

        /**
         * Encodes the specified CcrRoomStaticInfo message. Does not implicitly {@link CoopCustomRoom.CcrRoomStaticInfo.verify|verify} messages.
         * @param message CcrRoomStaticInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: CoopCustomRoom.ICcrRoomStaticInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified CcrRoomStaticInfo message, length delimited. Does not implicitly {@link CoopCustomRoom.CcrRoomStaticInfo.verify|verify} messages.
         * @param message CcrRoomStaticInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: CoopCustomRoom.ICcrRoomStaticInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CcrRoomStaticInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CcrRoomStaticInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CoopCustomRoom.CcrRoomStaticInfo;

        /**
         * Decodes a CcrRoomStaticInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CcrRoomStaticInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CoopCustomRoom.CcrRoomStaticInfo;

        /**
         * Verifies a CcrRoomStaticInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CcrRoomStaticInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CcrRoomStaticInfo
         */
        public static fromObject(object: { [k: string]: any }): CoopCustomRoom.CcrRoomStaticInfo;

        /**
         * Creates a plain object from a CcrRoomStaticInfo message. Also converts values to other types if specified.
         * @param message CcrRoomStaticInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: CoopCustomRoom.CcrRoomStaticInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CcrRoomStaticInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CcrRoomPlayerInfo. */
    interface ICcrRoomPlayerInfo {

        /** CcrRoomPlayerInfo roomId */
        roomId?: (number|null);

        /** CcrRoomPlayerInfo ownerPlayerIndex */
        ownerPlayerIndex?: (number|null);

        /** CcrRoomPlayerInfo playerDataList */
        playerDataList?: (Structure.IDataForPlayerInRoom[]|null);
    }

    /** Represents a CcrRoomPlayerInfo. */
    class CcrRoomPlayerInfo implements ICcrRoomPlayerInfo {

        /**
         * Constructs a new CcrRoomPlayerInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: CoopCustomRoom.ICcrRoomPlayerInfo);

        /** CcrRoomPlayerInfo roomId. */
        public roomId: number;

        /** CcrRoomPlayerInfo ownerPlayerIndex. */
        public ownerPlayerIndex: number;

        /** CcrRoomPlayerInfo playerDataList. */
        public playerDataList: Structure.IDataForPlayerInRoom[];

        /**
         * Creates a new CcrRoomPlayerInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CcrRoomPlayerInfo instance
         */
        public static create(properties?: CoopCustomRoom.ICcrRoomPlayerInfo): CoopCustomRoom.CcrRoomPlayerInfo;

        /**
         * Encodes the specified CcrRoomPlayerInfo message. Does not implicitly {@link CoopCustomRoom.CcrRoomPlayerInfo.verify|verify} messages.
         * @param message CcrRoomPlayerInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: CoopCustomRoom.ICcrRoomPlayerInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified CcrRoomPlayerInfo message, length delimited. Does not implicitly {@link CoopCustomRoom.CcrRoomPlayerInfo.verify|verify} messages.
         * @param message CcrRoomPlayerInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: CoopCustomRoom.ICcrRoomPlayerInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CcrRoomPlayerInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CcrRoomPlayerInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CoopCustomRoom.CcrRoomPlayerInfo;

        /**
         * Decodes a CcrRoomPlayerInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CcrRoomPlayerInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CoopCustomRoom.CcrRoomPlayerInfo;

        /**
         * Verifies a CcrRoomPlayerInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CcrRoomPlayerInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CcrRoomPlayerInfo
         */
        public static fromObject(object: { [k: string]: any }): CoopCustomRoom.CcrRoomPlayerInfo;

        /**
         * Creates a plain object from a CcrRoomPlayerInfo message. Also converts values to other types if specified.
         * @param message CcrRoomPlayerInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: CoopCustomRoom.CcrRoomPlayerInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CcrRoomPlayerInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Properties of a MultiPlayerWar. */
export declare interface IMultiPlayerWar {
}

/** Represents a MultiPlayerWar. */
export declare class MultiPlayerWar implements IMultiPlayerWar {

    /**
     * Constructs a new MultiPlayerWar.
     * @param [properties] Properties to set
     */
    constructor(properties?: IMultiPlayerWar);

    /**
     * Creates a new MultiPlayerWar instance using the specified properties.
     * @param [properties] Properties to set
     * @returns MultiPlayerWar instance
     */
    public static create(properties?: IMultiPlayerWar): MultiPlayerWar;

    /**
     * Encodes the specified MultiPlayerWar message. Does not implicitly {@link MultiPlayerWar.verify|verify} messages.
     * @param message MultiPlayerWar message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IMultiPlayerWar, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Encodes the specified MultiPlayerWar message, length delimited. Does not implicitly {@link MultiPlayerWar.verify|verify} messages.
     * @param message MultiPlayerWar message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IMultiPlayerWar, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Decodes a MultiPlayerWar message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns MultiPlayerWar
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): MultiPlayerWar;

    /**
     * Decodes a MultiPlayerWar message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns MultiPlayerWar
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): MultiPlayerWar;

    /**
     * Verifies a MultiPlayerWar message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a MultiPlayerWar message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns MultiPlayerWar
     */
    public static fromObject(object: { [k: string]: any }): MultiPlayerWar;

    /**
     * Creates a plain object from a MultiPlayerWar message. Also converts values to other types if specified.
     * @param message MultiPlayerWar
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: MultiPlayerWar, options?: protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this MultiPlayerWar to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export declare namespace MultiPlayerWar {

    /** Properties of a MpwWatchSrcUserInfo. */
    interface IMpwWatchSrcUserInfo {

        /** MpwWatchSrcUserInfo userId */
        userId?: (number|null);

        /** MpwWatchSrcUserInfo isRequestingOthers */
        isRequestingOthers?: (boolean|null);

        /** MpwWatchSrcUserInfo isWatchingOthers */
        isWatchingOthers?: (boolean|null);
    }

    /** Represents a MpwWatchSrcUserInfo. */
    class MpwWatchSrcUserInfo implements IMpwWatchSrcUserInfo {

        /**
         * Constructs a new MpwWatchSrcUserInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: MultiPlayerWar.IMpwWatchSrcUserInfo);

        /** MpwWatchSrcUserInfo userId. */
        public userId: number;

        /** MpwWatchSrcUserInfo isRequestingOthers. */
        public isRequestingOthers: boolean;

        /** MpwWatchSrcUserInfo isWatchingOthers. */
        public isWatchingOthers: boolean;

        /**
         * Creates a new MpwWatchSrcUserInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MpwWatchSrcUserInfo instance
         */
        public static create(properties?: MultiPlayerWar.IMpwWatchSrcUserInfo): MultiPlayerWar.MpwWatchSrcUserInfo;

        /**
         * Encodes the specified MpwWatchSrcUserInfo message. Does not implicitly {@link MultiPlayerWar.MpwWatchSrcUserInfo.verify|verify} messages.
         * @param message MpwWatchSrcUserInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: MultiPlayerWar.IMpwWatchSrcUserInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MpwWatchSrcUserInfo message, length delimited. Does not implicitly {@link MultiPlayerWar.MpwWatchSrcUserInfo.verify|verify} messages.
         * @param message MpwWatchSrcUserInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: MultiPlayerWar.IMpwWatchSrcUserInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MpwWatchSrcUserInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MpwWatchSrcUserInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): MultiPlayerWar.MpwWatchSrcUserInfo;

        /**
         * Decodes a MpwWatchSrcUserInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MpwWatchSrcUserInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): MultiPlayerWar.MpwWatchSrcUserInfo;

        /**
         * Verifies a MpwWatchSrcUserInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MpwWatchSrcUserInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MpwWatchSrcUserInfo
         */
        public static fromObject(object: { [k: string]: any }): MultiPlayerWar.MpwWatchSrcUserInfo;

        /**
         * Creates a plain object from a MpwWatchSrcUserInfo message. Also converts values to other types if specified.
         * @param message MpwWatchSrcUserInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: MultiPlayerWar.MpwWatchSrcUserInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MpwWatchSrcUserInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MpwWatchIncomingInfo. */
    interface IMpwWatchIncomingInfo {

        /** MpwWatchIncomingInfo warId */
        warId?: (number|null);

        /** MpwWatchIncomingInfo ongoingSrcUserIdArray */
        ongoingSrcUserIdArray?: (number[]|null);

        /** MpwWatchIncomingInfo requestSrcUserIdArray */
        requestSrcUserIdArray?: (number[]|null);

        /** MpwWatchIncomingInfo srcUserInfoArray */
        srcUserInfoArray?: (MultiPlayerWar.IMpwWatchSrcUserInfo[]|null);
    }

    /** Represents a MpwWatchIncomingInfo. */
    class MpwWatchIncomingInfo implements IMpwWatchIncomingInfo {

        /**
         * Constructs a new MpwWatchIncomingInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: MultiPlayerWar.IMpwWatchIncomingInfo);

        /** MpwWatchIncomingInfo warId. */
        public warId: number;

        /** MpwWatchIncomingInfo ongoingSrcUserIdArray. */
        public ongoingSrcUserIdArray: number[];

        /** MpwWatchIncomingInfo requestSrcUserIdArray. */
        public requestSrcUserIdArray: number[];

        /** MpwWatchIncomingInfo srcUserInfoArray. */
        public srcUserInfoArray: MultiPlayerWar.IMpwWatchSrcUserInfo[];

        /**
         * Creates a new MpwWatchIncomingInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MpwWatchIncomingInfo instance
         */
        public static create(properties?: MultiPlayerWar.IMpwWatchIncomingInfo): MultiPlayerWar.MpwWatchIncomingInfo;

        /**
         * Encodes the specified MpwWatchIncomingInfo message. Does not implicitly {@link MultiPlayerWar.MpwWatchIncomingInfo.verify|verify} messages.
         * @param message MpwWatchIncomingInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: MultiPlayerWar.IMpwWatchIncomingInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MpwWatchIncomingInfo message, length delimited. Does not implicitly {@link MultiPlayerWar.MpwWatchIncomingInfo.verify|verify} messages.
         * @param message MpwWatchIncomingInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: MultiPlayerWar.IMpwWatchIncomingInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MpwWatchIncomingInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MpwWatchIncomingInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): MultiPlayerWar.MpwWatchIncomingInfo;

        /**
         * Decodes a MpwWatchIncomingInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MpwWatchIncomingInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): MultiPlayerWar.MpwWatchIncomingInfo;

        /**
         * Verifies a MpwWatchIncomingInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MpwWatchIncomingInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MpwWatchIncomingInfo
         */
        public static fromObject(object: { [k: string]: any }): MultiPlayerWar.MpwWatchIncomingInfo;

        /**
         * Creates a plain object from a MpwWatchIncomingInfo message. Also converts values to other types if specified.
         * @param message MpwWatchIncomingInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: MultiPlayerWar.MpwWatchIncomingInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MpwWatchIncomingInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MpwWatchOutgoingInfo. */
    interface IMpwWatchOutgoingInfo {

        /** MpwWatchOutgoingInfo warId */
        warId?: (number|null);

        /** MpwWatchOutgoingInfo ongoingDstUserIdArray */
        ongoingDstUserIdArray?: (number[]|null);

        /** MpwWatchOutgoingInfo requestDstUserIdArray */
        requestDstUserIdArray?: (number[]|null);
    }

    /** Represents a MpwWatchOutgoingInfo. */
    class MpwWatchOutgoingInfo implements IMpwWatchOutgoingInfo {

        /**
         * Constructs a new MpwWatchOutgoingInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: MultiPlayerWar.IMpwWatchOutgoingInfo);

        /** MpwWatchOutgoingInfo warId. */
        public warId: number;

        /** MpwWatchOutgoingInfo ongoingDstUserIdArray. */
        public ongoingDstUserIdArray: number[];

        /** MpwWatchOutgoingInfo requestDstUserIdArray. */
        public requestDstUserIdArray: number[];

        /**
         * Creates a new MpwWatchOutgoingInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MpwWatchOutgoingInfo instance
         */
        public static create(properties?: MultiPlayerWar.IMpwWatchOutgoingInfo): MultiPlayerWar.MpwWatchOutgoingInfo;

        /**
         * Encodes the specified MpwWatchOutgoingInfo message. Does not implicitly {@link MultiPlayerWar.MpwWatchOutgoingInfo.verify|verify} messages.
         * @param message MpwWatchOutgoingInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: MultiPlayerWar.IMpwWatchOutgoingInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MpwWatchOutgoingInfo message, length delimited. Does not implicitly {@link MultiPlayerWar.MpwWatchOutgoingInfo.verify|verify} messages.
         * @param message MpwWatchOutgoingInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: MultiPlayerWar.IMpwWatchOutgoingInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MpwWatchOutgoingInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MpwWatchOutgoingInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): MultiPlayerWar.MpwWatchOutgoingInfo;

        /**
         * Decodes a MpwWatchOutgoingInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MpwWatchOutgoingInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): MultiPlayerWar.MpwWatchOutgoingInfo;

        /**
         * Verifies a MpwWatchOutgoingInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MpwWatchOutgoingInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MpwWatchOutgoingInfo
         */
        public static fromObject(object: { [k: string]: any }): MultiPlayerWar.MpwWatchOutgoingInfo;

        /**
         * Creates a plain object from a MpwWatchOutgoingInfo message. Also converts values to other types if specified.
         * @param message MpwWatchOutgoingInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: MultiPlayerWar.MpwWatchOutgoingInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MpwWatchOutgoingInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MpwFilter. */
    interface IMpwFilter {

        /** MpwFilter warId */
        warId?: (number|null);

        /** MpwFilter mapName */
        mapName?: (string|null);

        /** MpwFilter userNickname */
        userNickname?: (string|null);

        /** MpwFilter coName */
        coName?: (string|null);

        /** MpwFilter userIdInWar */
        userIdInWar?: (number|null);

        /** MpwFilter watchBeRequestedUserId */
        watchBeRequestedUserId?: (number|null);

        /** MpwFilter watchBeWatchedUserId */
        watchBeWatchedUserId?: (number|null);

        /** MpwFilter watchOngoingSrcUserId */
        watchOngoingSrcUserId?: (number|null);

        /** MpwFilter watchRequestableSrcUserId */
        watchRequestableSrcUserId?: (number|null);

        /** MpwFilter playersCountUnneutral */
        playersCountUnneutral?: (number|null);
    }

    /** Represents a MpwFilter. */
    class MpwFilter implements IMpwFilter {

        /**
         * Constructs a new MpwFilter.
         * @param [properties] Properties to set
         */
        constructor(properties?: MultiPlayerWar.IMpwFilter);

        /** MpwFilter warId. */
        public warId: number;

        /** MpwFilter mapName. */
        public mapName: string;

        /** MpwFilter userNickname. */
        public userNickname: string;

        /** MpwFilter coName. */
        public coName: string;

        /** MpwFilter userIdInWar. */
        public userIdInWar: number;

        /** MpwFilter watchBeRequestedUserId. */
        public watchBeRequestedUserId: number;

        /** MpwFilter watchBeWatchedUserId. */
        public watchBeWatchedUserId: number;

        /** MpwFilter watchOngoingSrcUserId. */
        public watchOngoingSrcUserId: number;

        /** MpwFilter watchRequestableSrcUserId. */
        public watchRequestableSrcUserId: number;

        /** MpwFilter playersCountUnneutral. */
        public playersCountUnneutral: number;

        /**
         * Creates a new MpwFilter instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MpwFilter instance
         */
        public static create(properties?: MultiPlayerWar.IMpwFilter): MultiPlayerWar.MpwFilter;

        /**
         * Encodes the specified MpwFilter message. Does not implicitly {@link MultiPlayerWar.MpwFilter.verify|verify} messages.
         * @param message MpwFilter message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: MultiPlayerWar.IMpwFilter, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MpwFilter message, length delimited. Does not implicitly {@link MultiPlayerWar.MpwFilter.verify|verify} messages.
         * @param message MpwFilter message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: MultiPlayerWar.IMpwFilter, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MpwFilter message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MpwFilter
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): MultiPlayerWar.MpwFilter;

        /**
         * Decodes a MpwFilter message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MpwFilter
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): MultiPlayerWar.MpwFilter;

        /**
         * Verifies a MpwFilter message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MpwFilter message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MpwFilter
         */
        public static fromObject(object: { [k: string]: any }): MultiPlayerWar.MpwFilter;

        /**
         * Creates a plain object from a MpwFilter message. Also converts values to other types if specified.
         * @param message MpwFilter
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: MultiPlayerWar.MpwFilter, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MpwFilter to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MpwWarSettings. */
    interface IMpwWarSettings {

        /** MpwWarSettings warId */
        warId?: (number|null);

        /** MpwWarSettings settingsForCommon */
        settingsForCommon?: (WarSettings.ISettingsForCommon|null);

        /** MpwWarSettings settingsForMcw */
        settingsForMcw?: (WarSettings.ISettingsForMcw|null);

        /** MpwWarSettings settingsForMrw */
        settingsForMrw?: (WarSettings.ISettingsForMrw|null);

        /** MpwWarSettings settingsForMfw */
        settingsForMfw?: (WarSettings.ISettingsForMfw|null);

        /** MpwWarSettings settingsForCcw */
        settingsForCcw?: (WarSettings.ISettingsForCcw|null);
    }

    /** Represents a MpwWarSettings. */
    class MpwWarSettings implements IMpwWarSettings {

        /**
         * Constructs a new MpwWarSettings.
         * @param [properties] Properties to set
         */
        constructor(properties?: MultiPlayerWar.IMpwWarSettings);

        /** MpwWarSettings warId. */
        public warId: number;

        /** MpwWarSettings settingsForCommon. */
        public settingsForCommon?: (WarSettings.ISettingsForCommon|null);

        /** MpwWarSettings settingsForMcw. */
        public settingsForMcw?: (WarSettings.ISettingsForMcw|null);

        /** MpwWarSettings settingsForMrw. */
        public settingsForMrw?: (WarSettings.ISettingsForMrw|null);

        /** MpwWarSettings settingsForMfw. */
        public settingsForMfw?: (WarSettings.ISettingsForMfw|null);

        /** MpwWarSettings settingsForCcw. */
        public settingsForCcw?: (WarSettings.ISettingsForCcw|null);

        /**
         * Creates a new MpwWarSettings instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MpwWarSettings instance
         */
        public static create(properties?: MultiPlayerWar.IMpwWarSettings): MultiPlayerWar.MpwWarSettings;

        /**
         * Encodes the specified MpwWarSettings message. Does not implicitly {@link MultiPlayerWar.MpwWarSettings.verify|verify} messages.
         * @param message MpwWarSettings message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: MultiPlayerWar.IMpwWarSettings, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MpwWarSettings message, length delimited. Does not implicitly {@link MultiPlayerWar.MpwWarSettings.verify|verify} messages.
         * @param message MpwWarSettings message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: MultiPlayerWar.IMpwWarSettings, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MpwWarSettings message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MpwWarSettings
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): MultiPlayerWar.MpwWarSettings;

        /**
         * Decodes a MpwWarSettings message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MpwWarSettings
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): MultiPlayerWar.MpwWarSettings;

        /**
         * Verifies a MpwWarSettings message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MpwWarSettings message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MpwWarSettings
         */
        public static fromObject(object: { [k: string]: any }): MultiPlayerWar.MpwWarSettings;

        /**
         * Creates a plain object from a MpwWarSettings message. Also converts values to other types if specified.
         * @param message MpwWarSettings
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: MultiPlayerWar.MpwWarSettings, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MpwWarSettings to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MpwWarProgressInfo. */
    interface IMpwWarProgressInfo {

        /** MpwWarProgressInfo warId */
        warId?: (number|null);

        /** MpwWarProgressInfo playerInfoList */
        playerInfoList?: (Structure.IWarPlayerInfo[]|null);

        /** MpwWarProgressInfo playerIndexInTurn */
        playerIndexInTurn?: (number|null);

        /** MpwWarProgressInfo turnIndex */
        turnIndex?: (number|null);

        /** MpwWarProgressInfo enterTurnTime */
        enterTurnTime?: (number|null);

        /** MpwWarProgressInfo isEnded */
        isEnded?: (boolean|null);
    }

    /** Represents a MpwWarProgressInfo. */
    class MpwWarProgressInfo implements IMpwWarProgressInfo {

        /**
         * Constructs a new MpwWarProgressInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: MultiPlayerWar.IMpwWarProgressInfo);

        /** MpwWarProgressInfo warId. */
        public warId: number;

        /** MpwWarProgressInfo playerInfoList. */
        public playerInfoList: Structure.IWarPlayerInfo[];

        /** MpwWarProgressInfo playerIndexInTurn. */
        public playerIndexInTurn: number;

        /** MpwWarProgressInfo turnIndex. */
        public turnIndex: number;

        /** MpwWarProgressInfo enterTurnTime. */
        public enterTurnTime: number;

        /** MpwWarProgressInfo isEnded. */
        public isEnded: boolean;

        /**
         * Creates a new MpwWarProgressInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MpwWarProgressInfo instance
         */
        public static create(properties?: MultiPlayerWar.IMpwWarProgressInfo): MultiPlayerWar.MpwWarProgressInfo;

        /**
         * Encodes the specified MpwWarProgressInfo message. Does not implicitly {@link MultiPlayerWar.MpwWarProgressInfo.verify|verify} messages.
         * @param message MpwWarProgressInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: MultiPlayerWar.IMpwWarProgressInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MpwWarProgressInfo message, length delimited. Does not implicitly {@link MultiPlayerWar.MpwWarProgressInfo.verify|verify} messages.
         * @param message MpwWarProgressInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: MultiPlayerWar.IMpwWarProgressInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MpwWarProgressInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MpwWarProgressInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): MultiPlayerWar.MpwWarProgressInfo;

        /**
         * Decodes a MpwWarProgressInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MpwWarProgressInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): MultiPlayerWar.MpwWarProgressInfo;

        /**
         * Verifies a MpwWarProgressInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MpwWarProgressInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MpwWarProgressInfo
         */
        public static fromObject(object: { [k: string]: any }): MultiPlayerWar.MpwWarProgressInfo;

        /**
         * Creates a plain object from a MpwWarProgressInfo message. Also converts values to other types if specified.
         * @param message MpwWarProgressInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: MultiPlayerWar.MpwWarProgressInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MpwWarProgressInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Properties of a MultiRankRoom. */
export declare interface IMultiRankRoom {
}

/** Represents a MultiRankRoom. */
export declare class MultiRankRoom implements IMultiRankRoom {

    /**
     * Constructs a new MultiRankRoom.
     * @param [properties] Properties to set
     */
    constructor(properties?: IMultiRankRoom);

    /**
     * Creates a new MultiRankRoom instance using the specified properties.
     * @param [properties] Properties to set
     * @returns MultiRankRoom instance
     */
    public static create(properties?: IMultiRankRoom): MultiRankRoom;

    /**
     * Encodes the specified MultiRankRoom message. Does not implicitly {@link MultiRankRoom.verify|verify} messages.
     * @param message MultiRankRoom message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IMultiRankRoom, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Encodes the specified MultiRankRoom message, length delimited. Does not implicitly {@link MultiRankRoom.verify|verify} messages.
     * @param message MultiRankRoom message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IMultiRankRoom, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Decodes a MultiRankRoom message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns MultiRankRoom
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): MultiRankRoom;

    /**
     * Decodes a MultiRankRoom message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns MultiRankRoom
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): MultiRankRoom;

    /**
     * Verifies a MultiRankRoom message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a MultiRankRoom message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns MultiRankRoom
     */
    public static fromObject(object: { [k: string]: any }): MultiRankRoom;

    /**
     * Creates a plain object from a MultiRankRoom message. Also converts values to other types if specified.
     * @param message MultiRankRoom
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: MultiRankRoom, options?: protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this MultiRankRoom to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export declare namespace MultiRankRoom {

    /** Properties of a DataForMrrQueue. */
    interface IDataForMrrQueue {

        /** DataForMrrQueue queueType */
        queueType?: (number|null);

        /** DataForMrrQueue userId */
        userId?: (number|null);

        /** DataForMrrQueue timestamp */
        timestamp?: (number|null);

        /** DataForMrrQueue maxConcurrentCount */
        maxConcurrentCount?: (number|null);
    }

    /** Represents a DataForMrrQueue. */
    class DataForMrrQueue implements IDataForMrrQueue {

        /**
         * Constructs a new DataForMrrQueue.
         * @param [properties] Properties to set
         */
        constructor(properties?: MultiRankRoom.IDataForMrrQueue);

        /** DataForMrrQueue queueType. */
        public queueType: number;

        /** DataForMrrQueue userId. */
        public userId: number;

        /** DataForMrrQueue timestamp. */
        public timestamp: number;

        /** DataForMrrQueue maxConcurrentCount. */
        public maxConcurrentCount: number;

        /**
         * Creates a new DataForMrrQueue instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DataForMrrQueue instance
         */
        public static create(properties?: MultiRankRoom.IDataForMrrQueue): MultiRankRoom.DataForMrrQueue;

        /**
         * Encodes the specified DataForMrrQueue message. Does not implicitly {@link MultiRankRoom.DataForMrrQueue.verify|verify} messages.
         * @param message DataForMrrQueue message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: MultiRankRoom.IDataForMrrQueue, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified DataForMrrQueue message, length delimited. Does not implicitly {@link MultiRankRoom.DataForMrrQueue.verify|verify} messages.
         * @param message DataForMrrQueue message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: MultiRankRoom.IDataForMrrQueue, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a DataForMrrQueue message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DataForMrrQueue
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): MultiRankRoom.DataForMrrQueue;

        /**
         * Decodes a DataForMrrQueue message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DataForMrrQueue
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): MultiRankRoom.DataForMrrQueue;

        /**
         * Verifies a DataForMrrQueue message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DataForMrrQueue message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DataForMrrQueue
         */
        public static fromObject(object: { [k: string]: any }): MultiRankRoom.DataForMrrQueue;

        /**
         * Creates a plain object from a DataForMrrQueue message. Also converts values to other types if specified.
         * @param message DataForMrrQueue
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: MultiRankRoom.DataForMrrQueue, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DataForMrrQueue to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MrrQueueInfo. */
    interface IMrrQueueInfo {

        /** MrrQueueInfo dataList */
        dataList?: (MultiRankRoom.IDataForMrrQueue[]|null);
    }

    /** Represents a MrrQueueInfo. */
    class MrrQueueInfo implements IMrrQueueInfo {

        /**
         * Constructs a new MrrQueueInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: MultiRankRoom.IMrrQueueInfo);

        /** MrrQueueInfo dataList. */
        public dataList: MultiRankRoom.IDataForMrrQueue[];

        /**
         * Creates a new MrrQueueInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MrrQueueInfo instance
         */
        public static create(properties?: MultiRankRoom.IMrrQueueInfo): MultiRankRoom.MrrQueueInfo;

        /**
         * Encodes the specified MrrQueueInfo message. Does not implicitly {@link MultiRankRoom.MrrQueueInfo.verify|verify} messages.
         * @param message MrrQueueInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: MultiRankRoom.IMrrQueueInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MrrQueueInfo message, length delimited. Does not implicitly {@link MultiRankRoom.MrrQueueInfo.verify|verify} messages.
         * @param message MrrQueueInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: MultiRankRoom.IMrrQueueInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MrrQueueInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MrrQueueInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): MultiRankRoom.MrrQueueInfo;

        /**
         * Decodes a MrrQueueInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MrrQueueInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): MultiRankRoom.MrrQueueInfo;

        /**
         * Verifies a MrrQueueInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MrrQueueInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MrrQueueInfo
         */
        public static fromObject(object: { [k: string]: any }): MultiRankRoom.MrrQueueInfo;

        /**
         * Creates a plain object from a MrrQueueInfo message. Also converts values to other types if specified.
         * @param message MrrQueueInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: MultiRankRoom.MrrQueueInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MrrQueueInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MrrRoomInfo. */
    interface IMrrRoomInfo {

        /** MrrRoomInfo roomId */
        roomId?: (number|null);

        /** MrrRoomInfo timeForCreateRoom */
        timeForCreateRoom?: (number|null);

        /** MrrRoomInfo timeForStartSetSelfSettings */
        timeForStartSetSelfSettings?: (number|null);

        /** MrrRoomInfo settingsForCommon */
        settingsForCommon?: (WarSettings.ISettingsForCommon|null);

        /** MrrRoomInfo settingsForMrw */
        settingsForMrw?: (WarSettings.ISettingsForMrw|null);

        /** MrrRoomInfo playerDataList */
        playerDataList?: (Structure.IDataForPlayerInRoom[]|null);
    }

    /** Represents a MrrRoomInfo. */
    class MrrRoomInfo implements IMrrRoomInfo {

        /**
         * Constructs a new MrrRoomInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: MultiRankRoom.IMrrRoomInfo);

        /** MrrRoomInfo roomId. */
        public roomId: number;

        /** MrrRoomInfo timeForCreateRoom. */
        public timeForCreateRoom: number;

        /** MrrRoomInfo timeForStartSetSelfSettings. */
        public timeForStartSetSelfSettings: number;

        /** MrrRoomInfo settingsForCommon. */
        public settingsForCommon?: (WarSettings.ISettingsForCommon|null);

        /** MrrRoomInfo settingsForMrw. */
        public settingsForMrw?: (WarSettings.ISettingsForMrw|null);

        /** MrrRoomInfo playerDataList. */
        public playerDataList: Structure.IDataForPlayerInRoom[];

        /**
         * Creates a new MrrRoomInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MrrRoomInfo instance
         */
        public static create(properties?: MultiRankRoom.IMrrRoomInfo): MultiRankRoom.MrrRoomInfo;

        /**
         * Encodes the specified MrrRoomInfo message. Does not implicitly {@link MultiRankRoom.MrrRoomInfo.verify|verify} messages.
         * @param message MrrRoomInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: MultiRankRoom.IMrrRoomInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MrrRoomInfo message, length delimited. Does not implicitly {@link MultiRankRoom.MrrRoomInfo.verify|verify} messages.
         * @param message MrrRoomInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: MultiRankRoom.IMrrRoomInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MrrRoomInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MrrRoomInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): MultiRankRoom.MrrRoomInfo;

        /**
         * Decodes a MrrRoomInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MrrRoomInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): MultiRankRoom.MrrRoomInfo;

        /**
         * Verifies a MrrRoomInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MrrRoomInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MrrRoomInfo
         */
        public static fromObject(object: { [k: string]: any }): MultiRankRoom.MrrRoomInfo;

        /**
         * Creates a plain object from a MrrRoomInfo message. Also converts values to other types if specified.
         * @param message MrrRoomInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: MultiRankRoom.MrrRoomInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MrrRoomInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MrrRoomInfoList. */
    interface IMrrRoomInfoList {

        /** MrrRoomInfoList roomList */
        roomList?: (MultiRankRoom.IMrrRoomInfo[]|null);
    }

    /** Represents a MrrRoomInfoList. */
    class MrrRoomInfoList implements IMrrRoomInfoList {

        /**
         * Constructs a new MrrRoomInfoList.
         * @param [properties] Properties to set
         */
        constructor(properties?: MultiRankRoom.IMrrRoomInfoList);

        /** MrrRoomInfoList roomList. */
        public roomList: MultiRankRoom.IMrrRoomInfo[];

        /**
         * Creates a new MrrRoomInfoList instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MrrRoomInfoList instance
         */
        public static create(properties?: MultiRankRoom.IMrrRoomInfoList): MultiRankRoom.MrrRoomInfoList;

        /**
         * Encodes the specified MrrRoomInfoList message. Does not implicitly {@link MultiRankRoom.MrrRoomInfoList.verify|verify} messages.
         * @param message MrrRoomInfoList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: MultiRankRoom.IMrrRoomInfoList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MrrRoomInfoList message, length delimited. Does not implicitly {@link MultiRankRoom.MrrRoomInfoList.verify|verify} messages.
         * @param message MrrRoomInfoList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: MultiRankRoom.IMrrRoomInfoList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MrrRoomInfoList message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MrrRoomInfoList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): MultiRankRoom.MrrRoomInfoList;

        /**
         * Decodes a MrrRoomInfoList message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MrrRoomInfoList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): MultiRankRoom.MrrRoomInfoList;

        /**
         * Verifies a MrrRoomInfoList message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MrrRoomInfoList message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MrrRoomInfoList
         */
        public static fromObject(object: { [k: string]: any }): MultiRankRoom.MrrRoomInfoList;

        /**
         * Creates a plain object from a MrrRoomInfoList message. Also converts values to other types if specified.
         * @param message MrrRoomInfoList
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: MultiRankRoom.MrrRoomInfoList, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MrrRoomInfoList to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Properties of a SinglePlayerMode. */
export declare interface ISinglePlayerMode {
}

/** Represents a SinglePlayerMode. */
export declare class SinglePlayerMode implements ISinglePlayerMode {

    /**
     * Constructs a new SinglePlayerMode.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISinglePlayerMode);

    /**
     * Creates a new SinglePlayerMode instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SinglePlayerMode instance
     */
    public static create(properties?: ISinglePlayerMode): SinglePlayerMode;

    /**
     * Encodes the specified SinglePlayerMode message. Does not implicitly {@link SinglePlayerMode.verify|verify} messages.
     * @param message SinglePlayerMode message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISinglePlayerMode, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Encodes the specified SinglePlayerMode message, length delimited. Does not implicitly {@link SinglePlayerMode.verify|verify} messages.
     * @param message SinglePlayerMode message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISinglePlayerMode, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Decodes a SinglePlayerMode message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SinglePlayerMode
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): SinglePlayerMode;

    /**
     * Decodes a SinglePlayerMode message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SinglePlayerMode
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): SinglePlayerMode;

    /**
     * Verifies a SinglePlayerMode message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SinglePlayerMode message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SinglePlayerMode
     */
    public static fromObject(object: { [k: string]: any }): SinglePlayerMode;

    /**
     * Creates a plain object from a SinglePlayerMode message. Also converts values to other types if specified.
     * @param message SinglePlayerMode
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SinglePlayerMode, options?: protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SinglePlayerMode to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export declare namespace SinglePlayerMode {

    /** Properties of a SpmWarSaveSlotExtraData. */
    interface ISpmWarSaveSlotExtraData {

        /** SpmWarSaveSlotExtraData slotComment */
        slotComment?: (string|null);
    }

    /** Represents a SpmWarSaveSlotExtraData. */
    class SpmWarSaveSlotExtraData implements ISpmWarSaveSlotExtraData {

        /**
         * Constructs a new SpmWarSaveSlotExtraData.
         * @param [properties] Properties to set
         */
        constructor(properties?: SinglePlayerMode.ISpmWarSaveSlotExtraData);

        /** SpmWarSaveSlotExtraData slotComment. */
        public slotComment: string;

        /**
         * Creates a new SpmWarSaveSlotExtraData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SpmWarSaveSlotExtraData instance
         */
        public static create(properties?: SinglePlayerMode.ISpmWarSaveSlotExtraData): SinglePlayerMode.SpmWarSaveSlotExtraData;

        /**
         * Encodes the specified SpmWarSaveSlotExtraData message. Does not implicitly {@link SinglePlayerMode.SpmWarSaveSlotExtraData.verify|verify} messages.
         * @param message SpmWarSaveSlotExtraData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: SinglePlayerMode.ISpmWarSaveSlotExtraData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SpmWarSaveSlotExtraData message, length delimited. Does not implicitly {@link SinglePlayerMode.SpmWarSaveSlotExtraData.verify|verify} messages.
         * @param message SpmWarSaveSlotExtraData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: SinglePlayerMode.ISpmWarSaveSlotExtraData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SpmWarSaveSlotExtraData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SpmWarSaveSlotExtraData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): SinglePlayerMode.SpmWarSaveSlotExtraData;

        /**
         * Decodes a SpmWarSaveSlotExtraData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SpmWarSaveSlotExtraData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): SinglePlayerMode.SpmWarSaveSlotExtraData;

        /**
         * Verifies a SpmWarSaveSlotExtraData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SpmWarSaveSlotExtraData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SpmWarSaveSlotExtraData
         */
        public static fromObject(object: { [k: string]: any }): SinglePlayerMode.SpmWarSaveSlotExtraData;

        /**
         * Creates a plain object from a SpmWarSaveSlotExtraData message. Also converts values to other types if specified.
         * @param message SpmWarSaveSlotExtraData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: SinglePlayerMode.SpmWarSaveSlotExtraData, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SpmWarSaveSlotExtraData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SpmWarSaveSlotFullData. */
    interface ISpmWarSaveSlotFullData {

        /** SpmWarSaveSlotFullData slotIndex */
        slotIndex?: (number|null);

        /** SpmWarSaveSlotFullData encodedExtraData */
        encodedExtraData?: (Uint8Array|null);

        /** SpmWarSaveSlotFullData encodedWarData */
        encodedWarData?: (Uint8Array|null);
    }

    /** Represents a SpmWarSaveSlotFullData. */
    class SpmWarSaveSlotFullData implements ISpmWarSaveSlotFullData {

        /**
         * Constructs a new SpmWarSaveSlotFullData.
         * @param [properties] Properties to set
         */
        constructor(properties?: SinglePlayerMode.ISpmWarSaveSlotFullData);

        /** SpmWarSaveSlotFullData slotIndex. */
        public slotIndex: number;

        /** SpmWarSaveSlotFullData encodedExtraData. */
        public encodedExtraData: Uint8Array;

        /** SpmWarSaveSlotFullData encodedWarData. */
        public encodedWarData: Uint8Array;

        /**
         * Creates a new SpmWarSaveSlotFullData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SpmWarSaveSlotFullData instance
         */
        public static create(properties?: SinglePlayerMode.ISpmWarSaveSlotFullData): SinglePlayerMode.SpmWarSaveSlotFullData;

        /**
         * Encodes the specified SpmWarSaveSlotFullData message. Does not implicitly {@link SinglePlayerMode.SpmWarSaveSlotFullData.verify|verify} messages.
         * @param message SpmWarSaveSlotFullData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: SinglePlayerMode.ISpmWarSaveSlotFullData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SpmWarSaveSlotFullData message, length delimited. Does not implicitly {@link SinglePlayerMode.SpmWarSaveSlotFullData.verify|verify} messages.
         * @param message SpmWarSaveSlotFullData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: SinglePlayerMode.ISpmWarSaveSlotFullData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SpmWarSaveSlotFullData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SpmWarSaveSlotFullData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): SinglePlayerMode.SpmWarSaveSlotFullData;

        /**
         * Decodes a SpmWarSaveSlotFullData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SpmWarSaveSlotFullData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): SinglePlayerMode.SpmWarSaveSlotFullData;

        /**
         * Verifies a SpmWarSaveSlotFullData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SpmWarSaveSlotFullData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SpmWarSaveSlotFullData
         */
        public static fromObject(object: { [k: string]: any }): SinglePlayerMode.SpmWarSaveSlotFullData;

        /**
         * Creates a plain object from a SpmWarSaveSlotFullData message. Also converts values to other types if specified.
         * @param message SpmWarSaveSlotFullData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: SinglePlayerMode.SpmWarSaveSlotFullData, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SpmWarSaveSlotFullData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Properties of a Replay. */
export declare interface IReplay {
}

/** Represents a Replay. */
export declare class Replay implements IReplay {

    /**
     * Constructs a new Replay.
     * @param [properties] Properties to set
     */
    constructor(properties?: IReplay);

    /**
     * Creates a new Replay instance using the specified properties.
     * @param [properties] Properties to set
     * @returns Replay instance
     */
    public static create(properties?: IReplay): Replay;

    /**
     * Encodes the specified Replay message. Does not implicitly {@link Replay.verify|verify} messages.
     * @param message Replay message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IReplay, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Encodes the specified Replay message, length delimited. Does not implicitly {@link Replay.verify|verify} messages.
     * @param message Replay message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IReplay, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Decodes a Replay message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns Replay
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Replay;

    /**
     * Decodes a Replay message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns Replay
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Replay;

    /**
     * Verifies a Replay message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a Replay message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns Replay
     */
    public static fromObject(object: { [k: string]: any }): Replay;

    /**
     * Creates a plain object from a Replay message. Also converts values to other types if specified.
     * @param message Replay
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: Replay, options?: protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this Replay to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export declare namespace Replay {

    /** Properties of a ReplayFilter. */
    interface IReplayFilter {

        /** ReplayFilter replayId */
        replayId?: (number|null);

        /** ReplayFilter mapName */
        mapName?: (string|null);

        /** ReplayFilter minMyRating */
        minMyRating?: (number|null);

        /** ReplayFilter minGlobalRating */
        minGlobalRating?: (number|null);

        /** ReplayFilter userNickname */
        userNickname?: (string|null);

        /** ReplayFilter coName */
        coName?: (string|null);

        /** ReplayFilter hasFog */
        hasFog?: (boolean|null);

        /** ReplayFilter isRankedMatch */
        isRankedMatch?: (boolean|null);
    }

    /** Represents a ReplayFilter. */
    class ReplayFilter implements IReplayFilter {

        /**
         * Constructs a new ReplayFilter.
         * @param [properties] Properties to set
         */
        constructor(properties?: Replay.IReplayFilter);

        /** ReplayFilter replayId. */
        public replayId: number;

        /** ReplayFilter mapName. */
        public mapName: string;

        /** ReplayFilter minMyRating. */
        public minMyRating: number;

        /** ReplayFilter minGlobalRating. */
        public minGlobalRating: number;

        /** ReplayFilter userNickname. */
        public userNickname: string;

        /** ReplayFilter coName. */
        public coName: string;

        /** ReplayFilter hasFog. */
        public hasFog: boolean;

        /** ReplayFilter isRankedMatch. */
        public isRankedMatch: boolean;

        /**
         * Creates a new ReplayFilter instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ReplayFilter instance
         */
        public static create(properties?: Replay.IReplayFilter): Replay.ReplayFilter;

        /**
         * Encodes the specified ReplayFilter message. Does not implicitly {@link Replay.ReplayFilter.verify|verify} messages.
         * @param message ReplayFilter message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Replay.IReplayFilter, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified ReplayFilter message, length delimited. Does not implicitly {@link Replay.ReplayFilter.verify|verify} messages.
         * @param message ReplayFilter message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Replay.IReplayFilter, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a ReplayFilter message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ReplayFilter
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Replay.ReplayFilter;

        /**
         * Decodes a ReplayFilter message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ReplayFilter
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Replay.ReplayFilter;

        /**
         * Verifies a ReplayFilter message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ReplayFilter message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ReplayFilter
         */
        public static fromObject(object: { [k: string]: any }): Replay.ReplayFilter;

        /**
         * Creates a plain object from a ReplayFilter message. Also converts values to other types if specified.
         * @param message ReplayFilter
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Replay.ReplayFilter, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ReplayFilter to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ReplayInfo. */
    interface IReplayInfo {

        /** ReplayInfo replayId */
        replayId?: (number|null);

        /** ReplayInfo configVersion */
        configVersion?: (string|null);

        /** ReplayInfo warType */
        warType?: (number|null);

        /** ReplayInfo mapId */
        mapId?: (number|null);

        /** ReplayInfo hasFog */
        hasFog?: (boolean|null);

        /** ReplayInfo turnIndex */
        turnIndex?: (number|null);

        /** ReplayInfo executedActionsCount */
        executedActionsCount?: (number|null);

        /** ReplayInfo warEndTime */
        warEndTime?: (number|null);

        /** ReplayInfo totalRating */
        totalRating?: (number|null);

        /** ReplayInfo totalRaters */
        totalRaters?: (number|null);

        /** ReplayInfo isDraw */
        isDraw?: (boolean|null);

        /** ReplayInfo playerInfoList */
        playerInfoList?: (Structure.IWarPlayerInfo[]|null);
    }

    /** Represents a ReplayInfo. */
    class ReplayInfo implements IReplayInfo {

        /**
         * Constructs a new ReplayInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: Replay.IReplayInfo);

        /** ReplayInfo replayId. */
        public replayId: number;

        /** ReplayInfo configVersion. */
        public configVersion: string;

        /** ReplayInfo warType. */
        public warType: number;

        /** ReplayInfo mapId. */
        public mapId: number;

        /** ReplayInfo hasFog. */
        public hasFog: boolean;

        /** ReplayInfo turnIndex. */
        public turnIndex: number;

        /** ReplayInfo executedActionsCount. */
        public executedActionsCount: number;

        /** ReplayInfo warEndTime. */
        public warEndTime: number;

        /** ReplayInfo totalRating. */
        public totalRating: number;

        /** ReplayInfo totalRaters. */
        public totalRaters: number;

        /** ReplayInfo isDraw. */
        public isDraw: boolean;

        /** ReplayInfo playerInfoList. */
        public playerInfoList: Structure.IWarPlayerInfo[];

        /**
         * Creates a new ReplayInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ReplayInfo instance
         */
        public static create(properties?: Replay.IReplayInfo): Replay.ReplayInfo;

        /**
         * Encodes the specified ReplayInfo message. Does not implicitly {@link Replay.ReplayInfo.verify|verify} messages.
         * @param message ReplayInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Replay.IReplayInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified ReplayInfo message, length delimited. Does not implicitly {@link Replay.ReplayInfo.verify|verify} messages.
         * @param message ReplayInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Replay.IReplayInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a ReplayInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ReplayInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Replay.ReplayInfo;

        /**
         * Decodes a ReplayInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ReplayInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Replay.ReplayInfo;

        /**
         * Verifies a ReplayInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ReplayInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ReplayInfo
         */
        public static fromObject(object: { [k: string]: any }): Replay.ReplayInfo;

        /**
         * Creates a plain object from a ReplayInfo message. Also converts values to other types if specified.
         * @param message ReplayInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Replay.ReplayInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ReplayInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Properties of a Chat. */
export declare interface IChat {
}

/** Represents a Chat. */
export declare class Chat implements IChat {

    /**
     * Constructs a new Chat.
     * @param [properties] Properties to set
     */
    constructor(properties?: IChat);

    /**
     * Creates a new Chat instance using the specified properties.
     * @param [properties] Properties to set
     * @returns Chat instance
     */
    public static create(properties?: IChat): Chat;

    /**
     * Encodes the specified Chat message. Does not implicitly {@link Chat.verify|verify} messages.
     * @param message Chat message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IChat, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Encodes the specified Chat message, length delimited. Does not implicitly {@link Chat.verify|verify} messages.
     * @param message Chat message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IChat, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Decodes a Chat message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns Chat
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Chat;

    /**
     * Decodes a Chat message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns Chat
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Chat;

    /**
     * Verifies a Chat message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a Chat message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns Chat
     */
    public static fromObject(object: { [k: string]: any }): Chat;

    /**
     * Creates a plain object from a Chat message. Also converts values to other types if specified.
     * @param message Chat
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: Chat, options?: protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this Chat to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export declare namespace Chat {

    /** Properties of a ChatMessage. */
    interface IChatMessage {

        /** ChatMessage messageId */
        messageId?: (number|null);

        /** ChatMessage fromUserId */
        fromUserId?: (number|null);

        /** ChatMessage toCategory */
        toCategory?: (number|null);

        /** ChatMessage toTarget */
        toTarget?: (number|null);

        /** ChatMessage content */
        content?: (string|null);

        /** ChatMessage timestamp */
        timestamp?: (number|null);
    }

    /** Represents a ChatMessage. */
    class ChatMessage implements IChatMessage {

        /**
         * Constructs a new ChatMessage.
         * @param [properties] Properties to set
         */
        constructor(properties?: Chat.IChatMessage);

        /** ChatMessage messageId. */
        public messageId: number;

        /** ChatMessage fromUserId. */
        public fromUserId: number;

        /** ChatMessage toCategory. */
        public toCategory: number;

        /** ChatMessage toTarget. */
        public toTarget: number;

        /** ChatMessage content. */
        public content: string;

        /** ChatMessage timestamp. */
        public timestamp: number;

        /**
         * Creates a new ChatMessage instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ChatMessage instance
         */
        public static create(properties?: Chat.IChatMessage): Chat.ChatMessage;

        /**
         * Encodes the specified ChatMessage message. Does not implicitly {@link Chat.ChatMessage.verify|verify} messages.
         * @param message ChatMessage message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Chat.IChatMessage, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified ChatMessage message, length delimited. Does not implicitly {@link Chat.ChatMessage.verify|verify} messages.
         * @param message ChatMessage message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Chat.IChatMessage, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a ChatMessage message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ChatMessage
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Chat.ChatMessage;

        /**
         * Decodes a ChatMessage message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ChatMessage
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Chat.ChatMessage;

        /**
         * Verifies a ChatMessage message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ChatMessage message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ChatMessage
         */
        public static fromObject(object: { [k: string]: any }): Chat.ChatMessage;

        /**
         * Creates a plain object from a ChatMessage message. Also converts values to other types if specified.
         * @param message ChatMessage
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Chat.ChatMessage, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ChatMessage to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ChatReadProgress. */
    interface IChatReadProgress {

        /** ChatReadProgress toCategory */
        toCategory?: (number|null);

        /** ChatReadProgress toTarget */
        toTarget?: (number|null);

        /** ChatReadProgress timestamp */
        timestamp?: (number|null);
    }

    /** Represents a ChatReadProgress. */
    class ChatReadProgress implements IChatReadProgress {

        /**
         * Constructs a new ChatReadProgress.
         * @param [properties] Properties to set
         */
        constructor(properties?: Chat.IChatReadProgress);

        /** ChatReadProgress toCategory. */
        public toCategory: number;

        /** ChatReadProgress toTarget. */
        public toTarget: number;

        /** ChatReadProgress timestamp. */
        public timestamp: number;

        /**
         * Creates a new ChatReadProgress instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ChatReadProgress instance
         */
        public static create(properties?: Chat.IChatReadProgress): Chat.ChatReadProgress;

        /**
         * Encodes the specified ChatReadProgress message. Does not implicitly {@link Chat.ChatReadProgress.verify|verify} messages.
         * @param message ChatReadProgress message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Chat.IChatReadProgress, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified ChatReadProgress message, length delimited. Does not implicitly {@link Chat.ChatReadProgress.verify|verify} messages.
         * @param message ChatReadProgress message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Chat.IChatReadProgress, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a ChatReadProgress message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ChatReadProgress
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Chat.ChatReadProgress;

        /**
         * Decodes a ChatReadProgress message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ChatReadProgress
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Chat.ChatReadProgress;

        /**
         * Verifies a ChatReadProgress message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ChatReadProgress message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ChatReadProgress
         */
        public static fromObject(object: { [k: string]: any }): Chat.ChatReadProgress;

        /**
         * Creates a plain object from a ChatReadProgress message. Also converts values to other types if specified.
         * @param message ChatReadProgress
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Chat.ChatReadProgress, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ChatReadProgress to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Properties of a User. */
export declare interface IUser {
}

/** Represents a User. */
export declare class User implements IUser {

    /**
     * Constructs a new User.
     * @param [properties] Properties to set
     */
    constructor(properties?: IUser);

    /**
     * Creates a new User instance using the specified properties.
     * @param [properties] Properties to set
     * @returns User instance
     */
    public static create(properties?: IUser): User;

    /**
     * Encodes the specified User message. Does not implicitly {@link User.verify|verify} messages.
     * @param message User message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IUser, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Encodes the specified User message, length delimited. Does not implicitly {@link User.verify|verify} messages.
     * @param message User message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IUser, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Decodes a User message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns User
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): User;

    /**
     * Decodes a User message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns User
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): User;

    /**
     * Verifies a User message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a User message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns User
     */
    public static fromObject(object: { [k: string]: any }): User;

    /**
     * Creates a plain object from a User message. Also converts values to other types if specified.
     * @param message User
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: User, options?: protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this User to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export declare namespace User {

    /** Properties of a UserPrivilege. */
    interface IUserPrivilege {

        /** UserPrivilege canLogin */
        canLogin?: (boolean|null);

        /** UserPrivilege canChat */
        canChat?: (boolean|null);

        /** UserPrivilege isAdmin */
        isAdmin?: (boolean|null);

        /** UserPrivilege isMapCommittee */
        isMapCommittee?: (boolean|null);

        /** UserPrivilege isChangeLogEditor */
        isChangeLogEditor?: (boolean|null);

        /** UserPrivilege isChatManager */
        isChatManager?: (boolean|null);
    }

    /** Represents a UserPrivilege. */
    class UserPrivilege implements IUserPrivilege {

        /**
         * Constructs a new UserPrivilege.
         * @param [properties] Properties to set
         */
        constructor(properties?: User.IUserPrivilege);

        /** UserPrivilege canLogin. */
        public canLogin: boolean;

        /** UserPrivilege canChat. */
        public canChat: boolean;

        /** UserPrivilege isAdmin. */
        public isAdmin: boolean;

        /** UserPrivilege isMapCommittee. */
        public isMapCommittee: boolean;

        /** UserPrivilege isChangeLogEditor. */
        public isChangeLogEditor: boolean;

        /** UserPrivilege isChatManager. */
        public isChatManager: boolean;

        /**
         * Creates a new UserPrivilege instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UserPrivilege instance
         */
        public static create(properties?: User.IUserPrivilege): User.UserPrivilege;

        /**
         * Encodes the specified UserPrivilege message. Does not implicitly {@link User.UserPrivilege.verify|verify} messages.
         * @param message UserPrivilege message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: User.IUserPrivilege, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified UserPrivilege message, length delimited. Does not implicitly {@link User.UserPrivilege.verify|verify} messages.
         * @param message UserPrivilege message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: User.IUserPrivilege, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a UserPrivilege message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UserPrivilege
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): User.UserPrivilege;

        /**
         * Decodes a UserPrivilege message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UserPrivilege
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): User.UserPrivilege;

        /**
         * Verifies a UserPrivilege message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a UserPrivilege message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UserPrivilege
         */
        public static fromObject(object: { [k: string]: any }): User.UserPrivilege;

        /**
         * Creates a plain object from a UserPrivilege message. Also converts values to other types if specified.
         * @param message UserPrivilege
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: User.UserPrivilege, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UserPrivilege to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a UserRankInfo. */
    interface IUserRankInfo {

        /** UserRankInfo mrwArray */
        mrwArray?: (User.UserRankInfo.IUserMrwRankInfo[]|null);

        /** UserRankInfo spmOverallInfo */
        spmOverallInfo?: (User.UserRankInfo.IUserSpmOverallRankInfo|null);
    }

    /** Represents a UserRankInfo. */
    class UserRankInfo implements IUserRankInfo {

        /**
         * Constructs a new UserRankInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: User.IUserRankInfo);

        /** UserRankInfo mrwArray. */
        public mrwArray: User.UserRankInfo.IUserMrwRankInfo[];

        /** UserRankInfo spmOverallInfo. */
        public spmOverallInfo?: (User.UserRankInfo.IUserSpmOverallRankInfo|null);

        /**
         * Creates a new UserRankInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UserRankInfo instance
         */
        public static create(properties?: User.IUserRankInfo): User.UserRankInfo;

        /**
         * Encodes the specified UserRankInfo message. Does not implicitly {@link User.UserRankInfo.verify|verify} messages.
         * @param message UserRankInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: User.IUserRankInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified UserRankInfo message, length delimited. Does not implicitly {@link User.UserRankInfo.verify|verify} messages.
         * @param message UserRankInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: User.IUserRankInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a UserRankInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UserRankInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): User.UserRankInfo;

        /**
         * Decodes a UserRankInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UserRankInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): User.UserRankInfo;

        /**
         * Verifies a UserRankInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a UserRankInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UserRankInfo
         */
        public static fromObject(object: { [k: string]: any }): User.UserRankInfo;

        /**
         * Creates a plain object from a UserRankInfo message. Also converts values to other types if specified.
         * @param message UserRankInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: User.UserRankInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UserRankInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace UserRankInfo {

        /** Properties of a UserMrwRankInfo. */
        interface IUserMrwRankInfo {

            /** UserMrwRankInfo warType */
            warType?: (number|null);

            /** UserMrwRankInfo playersCountUnneutral */
            playersCountUnneutral?: (number|null);

            /** UserMrwRankInfo currentScore */
            currentScore?: (number|null);

            /** UserMrwRankInfo currentRank */
            currentRank?: (number|null);

            /** UserMrwRankInfo lastWarEndTime */
            lastWarEndTime?: (number|null);
        }

        /** Represents a UserMrwRankInfo. */
        class UserMrwRankInfo implements IUserMrwRankInfo {

            /**
             * Constructs a new UserMrwRankInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: User.UserRankInfo.IUserMrwRankInfo);

            /** UserMrwRankInfo warType. */
            public warType: number;

            /** UserMrwRankInfo playersCountUnneutral. */
            public playersCountUnneutral: number;

            /** UserMrwRankInfo currentScore. */
            public currentScore: number;

            /** UserMrwRankInfo currentRank. */
            public currentRank: number;

            /** UserMrwRankInfo lastWarEndTime. */
            public lastWarEndTime: number;

            /**
             * Creates a new UserMrwRankInfo instance using the specified properties.
             * @param [properties] Properties to set
             * @returns UserMrwRankInfo instance
             */
            public static create(properties?: User.UserRankInfo.IUserMrwRankInfo): User.UserRankInfo.UserMrwRankInfo;

            /**
             * Encodes the specified UserMrwRankInfo message. Does not implicitly {@link User.UserRankInfo.UserMrwRankInfo.verify|verify} messages.
             * @param message UserMrwRankInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: User.UserRankInfo.IUserMrwRankInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified UserMrwRankInfo message, length delimited. Does not implicitly {@link User.UserRankInfo.UserMrwRankInfo.verify|verify} messages.
             * @param message UserMrwRankInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: User.UserRankInfo.IUserMrwRankInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a UserMrwRankInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns UserMrwRankInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): User.UserRankInfo.UserMrwRankInfo;

            /**
             * Decodes a UserMrwRankInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns UserMrwRankInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): User.UserRankInfo.UserMrwRankInfo;

            /**
             * Verifies a UserMrwRankInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a UserMrwRankInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns UserMrwRankInfo
             */
            public static fromObject(object: { [k: string]: any }): User.UserRankInfo.UserMrwRankInfo;

            /**
             * Creates a plain object from a UserMrwRankInfo message. Also converts values to other types if specified.
             * @param message UserMrwRankInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: User.UserRankInfo.UserMrwRankInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this UserMrwRankInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a UserSpmOverallRankInfo. */
        interface IUserSpmOverallRankInfo {

            /** UserSpmOverallRankInfo rankScore */
            rankScore?: (number|null);

            /** UserSpmOverallRankInfo deprecatedCurrentRankIndex */
            deprecatedCurrentRankIndex?: (number|null);
        }

        /** Represents a UserSpmOverallRankInfo. */
        class UserSpmOverallRankInfo implements IUserSpmOverallRankInfo {

            /**
             * Constructs a new UserSpmOverallRankInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: User.UserRankInfo.IUserSpmOverallRankInfo);

            /** UserSpmOverallRankInfo rankScore. */
            public rankScore: number;

            /** UserSpmOverallRankInfo deprecatedCurrentRankIndex. */
            public deprecatedCurrentRankIndex: number;

            /**
             * Creates a new UserSpmOverallRankInfo instance using the specified properties.
             * @param [properties] Properties to set
             * @returns UserSpmOverallRankInfo instance
             */
            public static create(properties?: User.UserRankInfo.IUserSpmOverallRankInfo): User.UserRankInfo.UserSpmOverallRankInfo;

            /**
             * Encodes the specified UserSpmOverallRankInfo message. Does not implicitly {@link User.UserRankInfo.UserSpmOverallRankInfo.verify|verify} messages.
             * @param message UserSpmOverallRankInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: User.UserRankInfo.IUserSpmOverallRankInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified UserSpmOverallRankInfo message, length delimited. Does not implicitly {@link User.UserRankInfo.UserSpmOverallRankInfo.verify|verify} messages.
             * @param message UserSpmOverallRankInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: User.UserRankInfo.IUserSpmOverallRankInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a UserSpmOverallRankInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns UserSpmOverallRankInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): User.UserRankInfo.UserSpmOverallRankInfo;

            /**
             * Decodes a UserSpmOverallRankInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns UserSpmOverallRankInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): User.UserRankInfo.UserSpmOverallRankInfo;

            /**
             * Verifies a UserSpmOverallRankInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a UserSpmOverallRankInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns UserSpmOverallRankInfo
             */
            public static fromObject(object: { [k: string]: any }): User.UserRankInfo.UserSpmOverallRankInfo;

            /**
             * Creates a plain object from a UserSpmOverallRankInfo message. Also converts values to other types if specified.
             * @param message UserSpmOverallRankInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: User.UserRankInfo.UserSpmOverallRankInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this UserSpmOverallRankInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a UserWarStatistics. */
    interface IUserWarStatistics {

        /** UserWarStatistics mpwArray */
        mpwArray?: (User.UserWarStatistics.IUserMpwStatistics[]|null);

        /** UserWarStatistics spwArray */
        spwArray?: (User.UserWarStatistics.IUserSpwStatistics[]|null);
    }

    /** Represents a UserWarStatistics. */
    class UserWarStatistics implements IUserWarStatistics {

        /**
         * Constructs a new UserWarStatistics.
         * @param [properties] Properties to set
         */
        constructor(properties?: User.IUserWarStatistics);

        /** UserWarStatistics mpwArray. */
        public mpwArray: User.UserWarStatistics.IUserMpwStatistics[];

        /** UserWarStatistics spwArray. */
        public spwArray: User.UserWarStatistics.IUserSpwStatistics[];

        /**
         * Creates a new UserWarStatistics instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UserWarStatistics instance
         */
        public static create(properties?: User.IUserWarStatistics): User.UserWarStatistics;

        /**
         * Encodes the specified UserWarStatistics message. Does not implicitly {@link User.UserWarStatistics.verify|verify} messages.
         * @param message UserWarStatistics message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: User.IUserWarStatistics, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified UserWarStatistics message, length delimited. Does not implicitly {@link User.UserWarStatistics.verify|verify} messages.
         * @param message UserWarStatistics message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: User.IUserWarStatistics, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a UserWarStatistics message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UserWarStatistics
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): User.UserWarStatistics;

        /**
         * Decodes a UserWarStatistics message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UserWarStatistics
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): User.UserWarStatistics;

        /**
         * Verifies a UserWarStatistics message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a UserWarStatistics message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UserWarStatistics
         */
        public static fromObject(object: { [k: string]: any }): User.UserWarStatistics;

        /**
         * Creates a plain object from a UserWarStatistics message. Also converts values to other types if specified.
         * @param message UserWarStatistics
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: User.UserWarStatistics, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UserWarStatistics to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace UserWarStatistics {

        /** Properties of a UserMpwStatistics. */
        interface IUserMpwStatistics {

            /** UserMpwStatistics warType */
            warType?: (number|null);

            /** UserMpwStatistics playersCountUnneutral */
            playersCountUnneutral?: (number|null);

            /** UserMpwStatistics wins */
            wins?: (number|null);

            /** UserMpwStatistics loses */
            loses?: (number|null);

            /** UserMpwStatistics draws */
            draws?: (number|null);
        }

        /** Represents a UserMpwStatistics. */
        class UserMpwStatistics implements IUserMpwStatistics {

            /**
             * Constructs a new UserMpwStatistics.
             * @param [properties] Properties to set
             */
            constructor(properties?: User.UserWarStatistics.IUserMpwStatistics);

            /** UserMpwStatistics warType. */
            public warType: number;

            /** UserMpwStatistics playersCountUnneutral. */
            public playersCountUnneutral: number;

            /** UserMpwStatistics wins. */
            public wins: number;

            /** UserMpwStatistics loses. */
            public loses: number;

            /** UserMpwStatistics draws. */
            public draws: number;

            /**
             * Creates a new UserMpwStatistics instance using the specified properties.
             * @param [properties] Properties to set
             * @returns UserMpwStatistics instance
             */
            public static create(properties?: User.UserWarStatistics.IUserMpwStatistics): User.UserWarStatistics.UserMpwStatistics;

            /**
             * Encodes the specified UserMpwStatistics message. Does not implicitly {@link User.UserWarStatistics.UserMpwStatistics.verify|verify} messages.
             * @param message UserMpwStatistics message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: User.UserWarStatistics.IUserMpwStatistics, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified UserMpwStatistics message, length delimited. Does not implicitly {@link User.UserWarStatistics.UserMpwStatistics.verify|verify} messages.
             * @param message UserMpwStatistics message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: User.UserWarStatistics.IUserMpwStatistics, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a UserMpwStatistics message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns UserMpwStatistics
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): User.UserWarStatistics.UserMpwStatistics;

            /**
             * Decodes a UserMpwStatistics message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns UserMpwStatistics
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): User.UserWarStatistics.UserMpwStatistics;

            /**
             * Verifies a UserMpwStatistics message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a UserMpwStatistics message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns UserMpwStatistics
             */
            public static fromObject(object: { [k: string]: any }): User.UserWarStatistics.UserMpwStatistics;

            /**
             * Creates a plain object from a UserMpwStatistics message. Also converts values to other types if specified.
             * @param message UserMpwStatistics
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: User.UserWarStatistics.UserMpwStatistics, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this UserMpwStatistics to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a UserSpwStatistics. */
        interface IUserSpwStatistics {

            /** UserSpwStatistics mapId */
            mapId?: (number|null);

            /** UserSpwStatistics ruleId */
            ruleId?: (number|null);

            /** UserSpwStatistics highScore */
            highScore?: (number|null);

            /** UserSpwStatistics configVersion */
            configVersion?: (string|null);
        }

        /** Represents a UserSpwStatistics. */
        class UserSpwStatistics implements IUserSpwStatistics {

            /**
             * Constructs a new UserSpwStatistics.
             * @param [properties] Properties to set
             */
            constructor(properties?: User.UserWarStatistics.IUserSpwStatistics);

            /** UserSpwStatistics mapId. */
            public mapId: number;

            /** UserSpwStatistics ruleId. */
            public ruleId: number;

            /** UserSpwStatistics highScore. */
            public highScore: number;

            /** UserSpwStatistics configVersion. */
            public configVersion: string;

            /**
             * Creates a new UserSpwStatistics instance using the specified properties.
             * @param [properties] Properties to set
             * @returns UserSpwStatistics instance
             */
            public static create(properties?: User.UserWarStatistics.IUserSpwStatistics): User.UserWarStatistics.UserSpwStatistics;

            /**
             * Encodes the specified UserSpwStatistics message. Does not implicitly {@link User.UserWarStatistics.UserSpwStatistics.verify|verify} messages.
             * @param message UserSpwStatistics message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: User.UserWarStatistics.IUserSpwStatistics, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified UserSpwStatistics message, length delimited. Does not implicitly {@link User.UserWarStatistics.UserSpwStatistics.verify|verify} messages.
             * @param message UserSpwStatistics message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: User.UserWarStatistics.IUserSpwStatistics, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a UserSpwStatistics message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns UserSpwStatistics
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): User.UserWarStatistics.UserSpwStatistics;

            /**
             * Decodes a UserSpwStatistics message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns UserSpwStatistics
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): User.UserWarStatistics.UserSpwStatistics;

            /**
             * Verifies a UserSpwStatistics message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a UserSpwStatistics message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns UserSpwStatistics
             */
            public static fromObject(object: { [k: string]: any }): User.UserWarStatistics.UserSpwStatistics;

            /**
             * Creates a plain object from a UserSpwStatistics message. Also converts values to other types if specified.
             * @param message UserSpwStatistics
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: User.UserWarStatistics.UserSpwStatistics, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this UserSpwStatistics to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a UserOpacitySettings. */
    interface IUserOpacitySettings {

        /** UserOpacitySettings unitOpacity */
        unitOpacity?: (number|null);

        /** UserOpacitySettings tileBaseOpacity */
        tileBaseOpacity?: (number|null);

        /** UserOpacitySettings tileObjectOpacity */
        tileObjectOpacity?: (number|null);

        /** UserOpacitySettings tileDecoratorOpacity */
        tileDecoratorOpacity?: (number|null);
    }

    /** Represents a UserOpacitySettings. */
    class UserOpacitySettings implements IUserOpacitySettings {

        /**
         * Constructs a new UserOpacitySettings.
         * @param [properties] Properties to set
         */
        constructor(properties?: User.IUserOpacitySettings);

        /** UserOpacitySettings unitOpacity. */
        public unitOpacity: number;

        /** UserOpacitySettings tileBaseOpacity. */
        public tileBaseOpacity: number;

        /** UserOpacitySettings tileObjectOpacity. */
        public tileObjectOpacity: number;

        /** UserOpacitySettings tileDecoratorOpacity. */
        public tileDecoratorOpacity: number;

        /**
         * Creates a new UserOpacitySettings instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UserOpacitySettings instance
         */
        public static create(properties?: User.IUserOpacitySettings): User.UserOpacitySettings;

        /**
         * Encodes the specified UserOpacitySettings message. Does not implicitly {@link User.UserOpacitySettings.verify|verify} messages.
         * @param message UserOpacitySettings message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: User.IUserOpacitySettings, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified UserOpacitySettings message, length delimited. Does not implicitly {@link User.UserOpacitySettings.verify|verify} messages.
         * @param message UserOpacitySettings message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: User.IUserOpacitySettings, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a UserOpacitySettings message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UserOpacitySettings
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): User.UserOpacitySettings;

        /**
         * Decodes a UserOpacitySettings message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UserOpacitySettings
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): User.UserOpacitySettings;

        /**
         * Verifies a UserOpacitySettings message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a UserOpacitySettings message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UserOpacitySettings
         */
        public static fromObject(object: { [k: string]: any }): User.UserOpacitySettings;

        /**
         * Creates a plain object from a UserOpacitySettings message. Also converts values to other types if specified.
         * @param message UserOpacitySettings
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: User.UserOpacitySettings, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UserOpacitySettings to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a UserSettings. */
    interface IUserSettings {

        /** UserSettings unitAndTileTextureVersion */
        unitAndTileTextureVersion?: (number|null);

        /** UserSettings isSetPathMode */
        isSetPathMode?: (boolean|null);

        /** UserSettings isShowGridBorder */
        isShowGridBorder?: (boolean|null);

        /** UserSettings deprecatedUnitOpacity */
        deprecatedUnitOpacity?: (number|null);

        /** UserSettings isAutoScrollMap */
        isAutoScrollMap?: (boolean|null);

        /** UserSettings opacitySettings */
        opacitySettings?: (User.IUserOpacitySettings|null);
    }

    /** Represents a UserSettings. */
    class UserSettings implements IUserSettings {

        /**
         * Constructs a new UserSettings.
         * @param [properties] Properties to set
         */
        constructor(properties?: User.IUserSettings);

        /** UserSettings unitAndTileTextureVersion. */
        public unitAndTileTextureVersion: number;

        /** UserSettings isSetPathMode. */
        public isSetPathMode: boolean;

        /** UserSettings isShowGridBorder. */
        public isShowGridBorder: boolean;

        /** UserSettings deprecatedUnitOpacity. */
        public deprecatedUnitOpacity: number;

        /** UserSettings isAutoScrollMap. */
        public isAutoScrollMap: boolean;

        /** UserSettings opacitySettings. */
        public opacitySettings?: (User.IUserOpacitySettings|null);

        /**
         * Creates a new UserSettings instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UserSettings instance
         */
        public static create(properties?: User.IUserSettings): User.UserSettings;

        /**
         * Encodes the specified UserSettings message. Does not implicitly {@link User.UserSettings.verify|verify} messages.
         * @param message UserSettings message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: User.IUserSettings, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified UserSettings message, length delimited. Does not implicitly {@link User.UserSettings.verify|verify} messages.
         * @param message UserSettings message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: User.IUserSettings, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a UserSettings message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UserSettings
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): User.UserSettings;

        /**
         * Decodes a UserSettings message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UserSettings
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): User.UserSettings;

        /**
         * Verifies a UserSettings message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a UserSettings message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UserSettings
         */
        public static fromObject(object: { [k: string]: any }): User.UserSettings;

        /**
         * Creates a plain object from a UserSettings message. Also converts values to other types if specified.
         * @param message UserSettings
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: User.UserSettings, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UserSettings to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a UserMapRating. */
    interface IUserMapRating {

        /** UserMapRating mapId */
        mapId?: (number|null);

        /** UserMapRating rating */
        rating?: (number|null);
    }

    /** Represents a UserMapRating. */
    class UserMapRating implements IUserMapRating {

        /**
         * Constructs a new UserMapRating.
         * @param [properties] Properties to set
         */
        constructor(properties?: User.IUserMapRating);

        /** UserMapRating mapId. */
        public mapId: number;

        /** UserMapRating rating. */
        public rating: number;

        /**
         * Creates a new UserMapRating instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UserMapRating instance
         */
        public static create(properties?: User.IUserMapRating): User.UserMapRating;

        /**
         * Encodes the specified UserMapRating message. Does not implicitly {@link User.UserMapRating.verify|verify} messages.
         * @param message UserMapRating message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: User.IUserMapRating, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified UserMapRating message, length delimited. Does not implicitly {@link User.UserMapRating.verify|verify} messages.
         * @param message UserMapRating message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: User.IUserMapRating, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a UserMapRating message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UserMapRating
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): User.UserMapRating;

        /**
         * Decodes a UserMapRating message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UserMapRating
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): User.UserMapRating;

        /**
         * Verifies a UserMapRating message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a UserMapRating message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UserMapRating
         */
        public static fromObject(object: { [k: string]: any }): User.UserMapRating;

        /**
         * Creates a plain object from a UserMapRating message. Also converts values to other types if specified.
         * @param message UserMapRating
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: User.UserMapRating, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UserMapRating to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a UserComplexInfo. */
    interface IUserComplexInfo {

        /** UserComplexInfo userPrivilege */
        userPrivilege?: (User.IUserPrivilege|null);

        /** UserComplexInfo userRankInfo */
        userRankInfo?: (User.IUserRankInfo|null);

        /** UserComplexInfo userWarStatistics */
        userWarStatistics?: (User.IUserWarStatistics|null);

        /** UserComplexInfo userSettings */
        userSettings?: (User.IUserSettings|null);

        /** UserComplexInfo userMapRatingArray */
        userMapRatingArray?: (User.IUserMapRating[]|null);

        /** UserComplexInfo lastChatTime */
        lastChatTime?: (number|null);

        /** UserComplexInfo avatarId */
        avatarId?: (number|null);

        /** UserComplexInfo mapEditorAutoSaveTime */
        mapEditorAutoSaveTime?: (number|null);
    }

    /** Represents a UserComplexInfo. */
    class UserComplexInfo implements IUserComplexInfo {

        /**
         * Constructs a new UserComplexInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: User.IUserComplexInfo);

        /** UserComplexInfo userPrivilege. */
        public userPrivilege?: (User.IUserPrivilege|null);

        /** UserComplexInfo userRankInfo. */
        public userRankInfo?: (User.IUserRankInfo|null);

        /** UserComplexInfo userWarStatistics. */
        public userWarStatistics?: (User.IUserWarStatistics|null);

        /** UserComplexInfo userSettings. */
        public userSettings?: (User.IUserSettings|null);

        /** UserComplexInfo userMapRatingArray. */
        public userMapRatingArray: User.IUserMapRating[];

        /** UserComplexInfo lastChatTime. */
        public lastChatTime: number;

        /** UserComplexInfo avatarId. */
        public avatarId: number;

        /** UserComplexInfo mapEditorAutoSaveTime. */
        public mapEditorAutoSaveTime: number;

        /**
         * Creates a new UserComplexInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UserComplexInfo instance
         */
        public static create(properties?: User.IUserComplexInfo): User.UserComplexInfo;

        /**
         * Encodes the specified UserComplexInfo message. Does not implicitly {@link User.UserComplexInfo.verify|verify} messages.
         * @param message UserComplexInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: User.IUserComplexInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified UserComplexInfo message, length delimited. Does not implicitly {@link User.UserComplexInfo.verify|verify} messages.
         * @param message UserComplexInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: User.IUserComplexInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a UserComplexInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UserComplexInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): User.UserComplexInfo;

        /**
         * Decodes a UserComplexInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UserComplexInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): User.UserComplexInfo;

        /**
         * Verifies a UserComplexInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a UserComplexInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UserComplexInfo
         */
        public static fromObject(object: { [k: string]: any }): User.UserComplexInfo;

        /**
         * Creates a plain object from a UserComplexInfo message. Also converts values to other types if specified.
         * @param message UserComplexInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: User.UserComplexInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UserComplexInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a UserBriefInfo. */
    interface IUserBriefInfo {

        /** UserBriefInfo userId */
        userId?: (number|null);

        /** UserBriefInfo nickname */
        nickname?: (string|null);
    }

    /** Represents a UserBriefInfo. */
    class UserBriefInfo implements IUserBriefInfo {

        /**
         * Constructs a new UserBriefInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: User.IUserBriefInfo);

        /** UserBriefInfo userId. */
        public userId: number;

        /** UserBriefInfo nickname. */
        public nickname: string;

        /**
         * Creates a new UserBriefInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UserBriefInfo instance
         */
        public static create(properties?: User.IUserBriefInfo): User.UserBriefInfo;

        /**
         * Encodes the specified UserBriefInfo message. Does not implicitly {@link User.UserBriefInfo.verify|verify} messages.
         * @param message UserBriefInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: User.IUserBriefInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified UserBriefInfo message, length delimited. Does not implicitly {@link User.UserBriefInfo.verify|verify} messages.
         * @param message UserBriefInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: User.IUserBriefInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a UserBriefInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UserBriefInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): User.UserBriefInfo;

        /**
         * Decodes a UserBriefInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UserBriefInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): User.UserBriefInfo;

        /**
         * Verifies a UserBriefInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a UserBriefInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UserBriefInfo
         */
        public static fromObject(object: { [k: string]: any }): User.UserBriefInfo;

        /**
         * Creates a plain object from a UserBriefInfo message. Also converts values to other types if specified.
         * @param message UserBriefInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: User.UserBriefInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UserBriefInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a UserPublicInfo. */
    interface IUserPublicInfo {

        /** UserPublicInfo userId */
        userId?: (number|null);

        /** UserPublicInfo nickname */
        nickname?: (string|null);

        /** UserPublicInfo registerTime */
        registerTime?: (number|null);

        /** UserPublicInfo lastLoginTime */
        lastLoginTime?: (number|null);

        /** UserPublicInfo loginCount */
        loginCount?: (number|null);

        /** UserPublicInfo onlineTime */
        onlineTime?: (number|null);

        /** UserPublicInfo discordId */
        discordId?: (string|null);

        /** UserPublicInfo isOnline */
        isOnline?: (boolean|null);

        /** UserPublicInfo lastActivityTime */
        lastActivityTime?: (number|null);

        /** UserPublicInfo avatarId */
        avatarId?: (number|null);

        /** UserPublicInfo userPrivilege */
        userPrivilege?: (User.IUserPrivilege|null);

        /** UserPublicInfo userMrwRankInfoArray */
        userMrwRankInfoArray?: (User.UserRankInfo.IUserMrwRankInfo[]|null);

        /** UserPublicInfo userMpwStatisticsArray */
        userMpwStatisticsArray?: (User.UserWarStatistics.IUserMpwStatistics[]|null);

        /** UserPublicInfo spmOverallRankScore */
        spmOverallRankScore?: (number|null);
    }

    /** Represents a UserPublicInfo. */
    class UserPublicInfo implements IUserPublicInfo {

        /**
         * Constructs a new UserPublicInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: User.IUserPublicInfo);

        /** UserPublicInfo userId. */
        public userId: number;

        /** UserPublicInfo nickname. */
        public nickname: string;

        /** UserPublicInfo registerTime. */
        public registerTime: number;

        /** UserPublicInfo lastLoginTime. */
        public lastLoginTime: number;

        /** UserPublicInfo loginCount. */
        public loginCount: number;

        /** UserPublicInfo onlineTime. */
        public onlineTime: number;

        /** UserPublicInfo discordId. */
        public discordId: string;

        /** UserPublicInfo isOnline. */
        public isOnline: boolean;

        /** UserPublicInfo lastActivityTime. */
        public lastActivityTime: number;

        /** UserPublicInfo avatarId. */
        public avatarId: number;

        /** UserPublicInfo userPrivilege. */
        public userPrivilege?: (User.IUserPrivilege|null);

        /** UserPublicInfo userMrwRankInfoArray. */
        public userMrwRankInfoArray: User.UserRankInfo.IUserMrwRankInfo[];

        /** UserPublicInfo userMpwStatisticsArray. */
        public userMpwStatisticsArray: User.UserWarStatistics.IUserMpwStatistics[];

        /** UserPublicInfo spmOverallRankScore. */
        public spmOverallRankScore: number;

        /**
         * Creates a new UserPublicInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UserPublicInfo instance
         */
        public static create(properties?: User.IUserPublicInfo): User.UserPublicInfo;

        /**
         * Encodes the specified UserPublicInfo message. Does not implicitly {@link User.UserPublicInfo.verify|verify} messages.
         * @param message UserPublicInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: User.IUserPublicInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified UserPublicInfo message, length delimited. Does not implicitly {@link User.UserPublicInfo.verify|verify} messages.
         * @param message UserPublicInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: User.IUserPublicInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a UserPublicInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UserPublicInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): User.UserPublicInfo;

        /**
         * Decodes a UserPublicInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UserPublicInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): User.UserPublicInfo;

        /**
         * Verifies a UserPublicInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a UserPublicInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UserPublicInfo
         */
        public static fromObject(object: { [k: string]: any }): User.UserPublicInfo;

        /**
         * Creates a plain object from a UserPublicInfo message. Also converts values to other types if specified.
         * @param message UserPublicInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: User.UserPublicInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UserPublicInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a UserSelfInfo. */
    interface IUserSelfInfo {

        /** UserSelfInfo userId */
        userId?: (number|null);

        /** UserSelfInfo nickname */
        nickname?: (string|null);

        /** UserSelfInfo registerTime */
        registerTime?: (number|null);

        /** UserSelfInfo lastLoginTime */
        lastLoginTime?: (number|null);

        /** UserSelfInfo loginCount */
        loginCount?: (number|null);

        /** UserSelfInfo onlineTime */
        onlineTime?: (number|null);

        /** UserSelfInfo discordId */
        discordId?: (string|null);

        /** UserSelfInfo userComplexInfo */
        userComplexInfo?: (User.IUserComplexInfo|null);
    }

    /** Represents a UserSelfInfo. */
    class UserSelfInfo implements IUserSelfInfo {

        /**
         * Constructs a new UserSelfInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: User.IUserSelfInfo);

        /** UserSelfInfo userId. */
        public userId: number;

        /** UserSelfInfo nickname. */
        public nickname: string;

        /** UserSelfInfo registerTime. */
        public registerTime: number;

        /** UserSelfInfo lastLoginTime. */
        public lastLoginTime: number;

        /** UserSelfInfo loginCount. */
        public loginCount: number;

        /** UserSelfInfo onlineTime. */
        public onlineTime: number;

        /** UserSelfInfo discordId. */
        public discordId: string;

        /** UserSelfInfo userComplexInfo. */
        public userComplexInfo?: (User.IUserComplexInfo|null);

        /**
         * Creates a new UserSelfInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UserSelfInfo instance
         */
        public static create(properties?: User.IUserSelfInfo): User.UserSelfInfo;

        /**
         * Encodes the specified UserSelfInfo message. Does not implicitly {@link User.UserSelfInfo.verify|verify} messages.
         * @param message UserSelfInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: User.IUserSelfInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified UserSelfInfo message, length delimited. Does not implicitly {@link User.UserSelfInfo.verify|verify} messages.
         * @param message UserSelfInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: User.IUserSelfInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a UserSelfInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UserSelfInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): User.UserSelfInfo;

        /**
         * Decodes a UserSelfInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UserSelfInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): User.UserSelfInfo;

        /**
         * Verifies a UserSelfInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a UserSelfInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UserSelfInfo
         */
        public static fromObject(object: { [k: string]: any }): User.UserSelfInfo;

        /**
         * Creates a plain object from a UserSelfInfo message. Also converts values to other types if specified.
         * @param message UserSelfInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: User.UserSelfInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UserSelfInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Properties of a Leaderboard. */
export declare interface ILeaderboard {
}

/** Represents a Leaderboard. */
export declare class Leaderboard implements ILeaderboard {

    /**
     * Constructs a new Leaderboard.
     * @param [properties] Properties to set
     */
    constructor(properties?: ILeaderboard);

    /**
     * Creates a new Leaderboard instance using the specified properties.
     * @param [properties] Properties to set
     * @returns Leaderboard instance
     */
    public static create(properties?: ILeaderboard): Leaderboard;

    /**
     * Encodes the specified Leaderboard message. Does not implicitly {@link Leaderboard.verify|verify} messages.
     * @param message Leaderboard message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ILeaderboard, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Encodes the specified Leaderboard message, length delimited. Does not implicitly {@link Leaderboard.verify|verify} messages.
     * @param message Leaderboard message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ILeaderboard, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Decodes a Leaderboard message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns Leaderboard
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Leaderboard;

    /**
     * Decodes a Leaderboard message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns Leaderboard
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Leaderboard;

    /**
     * Verifies a Leaderboard message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a Leaderboard message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns Leaderboard
     */
    public static fromObject(object: { [k: string]: any }): Leaderboard;

    /**
     * Creates a plain object from a Leaderboard message. Also converts values to other types if specified.
     * @param message Leaderboard
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: Leaderboard, options?: protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this Leaderboard to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export declare namespace Leaderboard {

    /** Properties of a LeaderboardSpmOverall. */
    interface ILeaderboardSpmOverall {

        /** LeaderboardSpmOverall dataArray */
        dataArray?: (Leaderboard.LeaderboardSpmOverall.ISingleData[]|null);
    }

    /** Represents a LeaderboardSpmOverall. */
    class LeaderboardSpmOverall implements ILeaderboardSpmOverall {

        /**
         * Constructs a new LeaderboardSpmOverall.
         * @param [properties] Properties to set
         */
        constructor(properties?: Leaderboard.ILeaderboardSpmOverall);

        /** LeaderboardSpmOverall dataArray. */
        public dataArray: Leaderboard.LeaderboardSpmOverall.ISingleData[];

        /**
         * Creates a new LeaderboardSpmOverall instance using the specified properties.
         * @param [properties] Properties to set
         * @returns LeaderboardSpmOverall instance
         */
        public static create(properties?: Leaderboard.ILeaderboardSpmOverall): Leaderboard.LeaderboardSpmOverall;

        /**
         * Encodes the specified LeaderboardSpmOverall message. Does not implicitly {@link Leaderboard.LeaderboardSpmOverall.verify|verify} messages.
         * @param message LeaderboardSpmOverall message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Leaderboard.ILeaderboardSpmOverall, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified LeaderboardSpmOverall message, length delimited. Does not implicitly {@link Leaderboard.LeaderboardSpmOverall.verify|verify} messages.
         * @param message LeaderboardSpmOverall message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Leaderboard.ILeaderboardSpmOverall, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a LeaderboardSpmOverall message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns LeaderboardSpmOverall
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Leaderboard.LeaderboardSpmOverall;

        /**
         * Decodes a LeaderboardSpmOverall message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns LeaderboardSpmOverall
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Leaderboard.LeaderboardSpmOverall;

        /**
         * Verifies a LeaderboardSpmOverall message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a LeaderboardSpmOverall message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns LeaderboardSpmOverall
         */
        public static fromObject(object: { [k: string]: any }): Leaderboard.LeaderboardSpmOverall;

        /**
         * Creates a plain object from a LeaderboardSpmOverall message. Also converts values to other types if specified.
         * @param message LeaderboardSpmOverall
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Leaderboard.LeaderboardSpmOverall, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this LeaderboardSpmOverall to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace LeaderboardSpmOverall {

        /** Properties of a SingleData. */
        interface ISingleData {

            /** SingleData userId */
            userId?: (number|null);

            /** SingleData score */
            score?: (number|null);
        }

        /** Represents a SingleData. */
        class SingleData implements ISingleData {

            /**
             * Constructs a new SingleData.
             * @param [properties] Properties to set
             */
            constructor(properties?: Leaderboard.LeaderboardSpmOverall.ISingleData);

            /** SingleData userId. */
            public userId: number;

            /** SingleData score. */
            public score: number;

            /**
             * Creates a new SingleData instance using the specified properties.
             * @param [properties] Properties to set
             * @returns SingleData instance
             */
            public static create(properties?: Leaderboard.LeaderboardSpmOverall.ISingleData): Leaderboard.LeaderboardSpmOverall.SingleData;

            /**
             * Encodes the specified SingleData message. Does not implicitly {@link Leaderboard.LeaderboardSpmOverall.SingleData.verify|verify} messages.
             * @param message SingleData message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: Leaderboard.LeaderboardSpmOverall.ISingleData, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified SingleData message, length delimited. Does not implicitly {@link Leaderboard.LeaderboardSpmOverall.SingleData.verify|verify} messages.
             * @param message SingleData message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: Leaderboard.LeaderboardSpmOverall.ISingleData, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a SingleData message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SingleData
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Leaderboard.LeaderboardSpmOverall.SingleData;

            /**
             * Decodes a SingleData message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SingleData
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Leaderboard.LeaderboardSpmOverall.SingleData;

            /**
             * Verifies a SingleData message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SingleData message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SingleData
             */
            public static fromObject(object: { [k: string]: any }): Leaderboard.LeaderboardSpmOverall.SingleData;

            /**
             * Creates a plain object from a SingleData message. Also converts values to other types if specified.
             * @param message SingleData
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: Leaderboard.LeaderboardSpmOverall.SingleData, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SingleData to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }
}

/** Properties of a NetMessage. */
export declare interface INetMessage {
}

/** Represents a NetMessage. */
export declare class NetMessage implements INetMessage {

    /**
     * Constructs a new NetMessage.
     * @param [properties] Properties to set
     */
    constructor(properties?: INetMessage);

    /**
     * Creates a new NetMessage instance using the specified properties.
     * @param [properties] Properties to set
     * @returns NetMessage instance
     */
    public static create(properties?: INetMessage): NetMessage;

    /**
     * Encodes the specified NetMessage message. Does not implicitly {@link NetMessage.verify|verify} messages.
     * @param message NetMessage message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: INetMessage, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Encodes the specified NetMessage message, length delimited. Does not implicitly {@link NetMessage.verify|verify} messages.
     * @param message NetMessage message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: INetMessage, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Decodes a NetMessage message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns NetMessage
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage;

    /**
     * Decodes a NetMessage message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns NetMessage
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage;

    /**
     * Verifies a NetMessage message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a NetMessage message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns NetMessage
     */
    public static fromObject(object: { [k: string]: any }): NetMessage;

    /**
     * Creates a plain object from a NetMessage message. Also converts values to other types if specified.
     * @param message NetMessage
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: NetMessage, options?: protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this NetMessage to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export declare namespace NetMessage {

    /** Properties of a MessageContainer. */
    interface IMessageContainer {

        /** MessageContainer MsgCommonHeartbeat */
        MsgCommonHeartbeat?: (NetMessage.IMsgCommonHeartbeat|null);

        /** MessageContainer MsgCommonError */
        MsgCommonError?: (NetMessage.IMsgCommonError|null);

        /** MessageContainer MsgCommonServerDisconnect */
        MsgCommonServerDisconnect?: (NetMessage.IMsgCommonServerDisconnect|null);

        /** MessageContainer MsgCommonLatestConfigVersion */
        MsgCommonLatestConfigVersion?: (NetMessage.IMsgCommonLatestConfigVersion|null);

        /** MessageContainer MsgCommonGetServerStatus */
        MsgCommonGetServerStatus?: (NetMessage.IMsgCommonGetServerStatus|null);

        /** MessageContainer MsgCommonGetRankList */
        MsgCommonGetRankList?: (NetMessage.IMsgCommonGetRankList|null);

        /** MessageContainer MsgUserRegister */
        MsgUserRegister?: (NetMessage.IMsgUserRegister|null);

        /** MessageContainer MsgUserLogin */
        MsgUserLogin?: (NetMessage.IMsgUserLogin|null);

        /** MessageContainer MsgUserLogout */
        MsgUserLogout?: (NetMessage.IMsgUserLogout|null);

        /** MessageContainer MsgUserGetPublicInfo */
        MsgUserGetPublicInfo?: (NetMessage.IMsgUserGetPublicInfo|null);

        /** MessageContainer MsgUserGetBriefInfo */
        MsgUserGetBriefInfo?: (NetMessage.IMsgUserGetBriefInfo|null);

        /** MessageContainer MsgUserGetOnlineState */
        MsgUserGetOnlineState?: (NetMessage.IMsgUserGetOnlineState|null);

        /** MessageContainer MsgUserGetOnlineUserIdArray */
        MsgUserGetOnlineUserIdArray?: (NetMessage.IMsgUserGetOnlineUserIdArray|null);

        /** MessageContainer MsgUserSetNickname */
        MsgUserSetNickname?: (NetMessage.IMsgUserSetNickname|null);

        /** MessageContainer MsgUserSetDiscordId */
        MsgUserSetDiscordId?: (NetMessage.IMsgUserSetDiscordId|null);

        /** MessageContainer MsgUserSetPrivilege */
        MsgUserSetPrivilege?: (NetMessage.IMsgUserSetPrivilege|null);

        /** MessageContainer MsgUserSetPassword */
        MsgUserSetPassword?: (NetMessage.IMsgUserSetPassword|null);

        /** MessageContainer MsgUserSetSettings */
        MsgUserSetSettings?: (NetMessage.IMsgUserSetSettings|null);

        /** MessageContainer MsgUserSetMapRating */
        MsgUserSetMapRating?: (NetMessage.IMsgUserSetMapRating|null);

        /** MessageContainer MsgUserSetAvatarId */
        MsgUserSetAvatarId?: (NetMessage.IMsgUserSetAvatarId|null);

        /** MessageContainer MsgUserSetMapEditorAutoSaveTime */
        MsgUserSetMapEditorAutoSaveTime?: (NetMessage.IMsgUserSetMapEditorAutoSaveTime|null);

        /** MessageContainer MsgMapGetEnabledMapIdArray */
        MsgMapGetEnabledMapIdArray?: (NetMessage.IMsgMapGetEnabledMapIdArray|null);

        /** MessageContainer MsgMapGetBriefData */
        MsgMapGetBriefData?: (NetMessage.IMsgMapGetBriefData|null);

        /** MessageContainer MsgMapGetRawData */
        MsgMapGetRawData?: (NetMessage.IMsgMapGetRawData|null);

        /** MessageContainer MsgMeGetMapDataList */
        MsgMeGetMapDataList?: (NetMessage.IMsgMeGetMapDataList|null);

        /** MessageContainer MsgMeGetMapData */
        MsgMeGetMapData?: (NetMessage.IMsgMeGetMapData|null);

        /** MessageContainer MsgMeSubmitMap */
        MsgMeSubmitMap?: (NetMessage.IMsgMeSubmitMap|null);

        /** MessageContainer MsgChatAddMessage */
        MsgChatAddMessage?: (NetMessage.IMsgChatAddMessage|null);

        /** MessageContainer MsgChatGetAllMessages */
        MsgChatGetAllMessages?: (NetMessage.IMsgChatGetAllMessages|null);

        /** MessageContainer MsgChatUpdateReadProgress */
        MsgChatUpdateReadProgress?: (NetMessage.IMsgChatUpdateReadProgress|null);

        /** MessageContainer MsgChatGetAllReadProgressList */
        MsgChatGetAllReadProgressList?: (NetMessage.IMsgChatGetAllReadProgressList|null);

        /** MessageContainer MsgChatDeleteMessage */
        MsgChatDeleteMessage?: (NetMessage.IMsgChatDeleteMessage|null);

        /** MessageContainer MsgMmSetWarRuleAvailability */
        MsgMmSetWarRuleAvailability?: (NetMessage.IMsgMmSetWarRuleAvailability|null);

        /** MessageContainer MsgMmSetMapEnabled */
        MsgMmSetMapEnabled?: (NetMessage.IMsgMmSetMapEnabled|null);

        /** MessageContainer MsgMmGetReviewingMaps */
        MsgMmGetReviewingMaps?: (NetMessage.IMsgMmGetReviewingMaps|null);

        /** MessageContainer MsgMmReviewMap */
        MsgMmReviewMap?: (NetMessage.IMsgMmReviewMap|null);

        /** MessageContainer MsgMmSetMapTag */
        MsgMmSetMapTag?: (NetMessage.IMsgMmSetMapTag|null);

        /** MessageContainer MsgMmSetMapName */
        MsgMmSetMapName?: (NetMessage.IMsgMmSetMapName|null);

        /** MessageContainer MsgMmAddWarRule */
        MsgMmAddWarRule?: (NetMessage.IMsgMmAddWarRule|null);

        /** MessageContainer MsgMmDeleteWarRule */
        MsgMmDeleteWarRule?: (NetMessage.IMsgMmDeleteWarRule|null);

        /** MessageContainer MsgReplaySetSelfRating */
        MsgReplaySetSelfRating?: (NetMessage.IMsgReplaySetSelfRating|null);

        /** MessageContainer MsgReplayGetSelfRating */
        MsgReplayGetSelfRating?: (NetMessage.IMsgReplayGetSelfRating|null);

        /** MessageContainer MsgReplayGetReplayIdArray */
        MsgReplayGetReplayIdArray?: (NetMessage.IMsgReplayGetReplayIdArray|null);

        /** MessageContainer MsgReplayGetData */
        MsgReplayGetData?: (NetMessage.IMsgReplayGetData|null);

        /** MessageContainer MsgReplayGetReplayInfo */
        MsgReplayGetReplayInfo?: (NetMessage.IMsgReplayGetReplayInfo|null);

        /** MessageContainer MsgMcrCreateRoom */
        MsgMcrCreateRoom?: (NetMessage.IMsgMcrCreateRoom|null);

        /** MessageContainer MsgMcrExitRoom */
        MsgMcrExitRoom?: (NetMessage.IMsgMcrExitRoom|null);

        /** MessageContainer MsgMcrJoinRoom */
        MsgMcrJoinRoom?: (NetMessage.IMsgMcrJoinRoom|null);

        /** MessageContainer MsgMcrDeleteRoom */
        MsgMcrDeleteRoom?: (NetMessage.IMsgMcrDeleteRoom|null);

        /** MessageContainer MsgMcrSetReady */
        MsgMcrSetReady?: (NetMessage.IMsgMcrSetReady|null);

        /** MessageContainer MsgMcrDeletePlayer */
        MsgMcrDeletePlayer?: (NetMessage.IMsgMcrDeletePlayer|null);

        /** MessageContainer MsgMcrSetSelfSettings */
        MsgMcrSetSelfSettings?: (NetMessage.IMsgMcrSetSelfSettings|null);

        /** MessageContainer MsgMcrStartWar */
        MsgMcrStartWar?: (NetMessage.IMsgMcrStartWar|null);

        /** MessageContainer MsgMcrGetJoinedRoomIdArray */
        MsgMcrGetJoinedRoomIdArray?: (NetMessage.IMsgMcrGetJoinedRoomIdArray|null);

        /** MessageContainer MsgMcrGetJoinableRoomIdArray */
        MsgMcrGetJoinableRoomIdArray?: (NetMessage.IMsgMcrGetJoinableRoomIdArray|null);

        /** MessageContainer MsgMcrGetRoomStaticInfo */
        MsgMcrGetRoomStaticInfo?: (NetMessage.IMsgMcrGetRoomStaticInfo|null);

        /** MessageContainer MsgMcrGetRoomPlayerInfo */
        MsgMcrGetRoomPlayerInfo?: (NetMessage.IMsgMcrGetRoomPlayerInfo|null);

        /** MessageContainer MsgMpwCommonGetMyWarIdArray */
        MsgMpwCommonGetMyWarIdArray?: (NetMessage.IMsgMpwCommonGetMyWarIdArray|null);

        /** MessageContainer MsgMpwCommonContinueWar */
        MsgMpwCommonContinueWar?: (NetMessage.IMsgMpwCommonContinueWar|null);

        /** MessageContainer MsgMpwCommonSyncWar */
        MsgMpwCommonSyncWar?: (NetMessage.IMsgMpwCommonSyncWar|null);

        /** MessageContainer MsgMpwCommonHandleBoot */
        MsgMpwCommonHandleBoot?: (NetMessage.IMsgMpwCommonHandleBoot|null);

        /** MessageContainer MsgMpwCommonBroadcastGameStart */
        MsgMpwCommonBroadcastGameStart?: (NetMessage.IMsgMpwCommonBroadcastGameStart|null);

        /** MessageContainer MsgMpwCommonGetWarSettings */
        MsgMpwCommonGetWarSettings?: (NetMessage.IMsgMpwCommonGetWarSettings|null);

        /** MessageContainer MsgMpwCommonGetWarProgressInfo */
        MsgMpwCommonGetWarProgressInfo?: (NetMessage.IMsgMpwCommonGetWarProgressInfo|null);

        /** MessageContainer MsgMpwWatchMakeRequest */
        MsgMpwWatchMakeRequest?: (NetMessage.IMsgMpwWatchMakeRequest|null);

        /** MessageContainer MsgMpwWatchHandleRequest */
        MsgMpwWatchHandleRequest?: (NetMessage.IMsgMpwWatchHandleRequest|null);

        /** MessageContainer MsgMpwWatchDeleteWatcher */
        MsgMpwWatchDeleteWatcher?: (NetMessage.IMsgMpwWatchDeleteWatcher|null);

        /** MessageContainer MsgMpwWatchGetRequestableWarIdArray */
        MsgMpwWatchGetRequestableWarIdArray?: (NetMessage.IMsgMpwWatchGetRequestableWarIdArray|null);

        /** MessageContainer MsgMpwWatchGetOngoingWarIdArray */
        MsgMpwWatchGetOngoingWarIdArray?: (NetMessage.IMsgMpwWatchGetOngoingWarIdArray|null);

        /** MessageContainer MsgMpwWatchGetRequestedWarIdArray */
        MsgMpwWatchGetRequestedWarIdArray?: (NetMessage.IMsgMpwWatchGetRequestedWarIdArray|null);

        /** MessageContainer MsgMpwWatchGetWatchedWarIdArray */
        MsgMpwWatchGetWatchedWarIdArray?: (NetMessage.IMsgMpwWatchGetWatchedWarIdArray|null);

        /** MessageContainer MsgMpwWatchContinueWar */
        MsgMpwWatchContinueWar?: (NetMessage.IMsgMpwWatchContinueWar|null);

        /** MessageContainer MsgMpwWatchGetIncomingInfo */
        MsgMpwWatchGetIncomingInfo?: (NetMessage.IMsgMpwWatchGetIncomingInfo|null);

        /** MessageContainer MsgMpwWatchGetOutgoingInfo */
        MsgMpwWatchGetOutgoingInfo?: (NetMessage.IMsgMpwWatchGetOutgoingInfo|null);

        /** MessageContainer MsgMpwExecuteWarAction */
        MsgMpwExecuteWarAction?: (NetMessage.IMsgMpwExecuteWarAction|null);

        /** MessageContainer MsgMpwGetHalfwayReplayData */
        MsgMpwGetHalfwayReplayData?: (NetMessage.IMsgMpwGetHalfwayReplayData|null);

        /** MessageContainer MsgSpmCreateScw */
        MsgSpmCreateScw?: (NetMessage.IMsgSpmCreateScw|null);

        /** MessageContainer MsgSpmCreateSfw */
        MsgSpmCreateSfw?: (NetMessage.IMsgSpmCreateSfw|null);

        /** MessageContainer MsgSpmCreateSrw */
        MsgSpmCreateSrw?: (NetMessage.IMsgSpmCreateSrw|null);

        /** MessageContainer MsgSpmGetWarSaveSlotFullDataArray */
        MsgSpmGetWarSaveSlotFullDataArray?: (NetMessage.IMsgSpmGetWarSaveSlotFullDataArray|null);

        /** MessageContainer MsgSpmDeleteWarSaveSlot */
        MsgSpmDeleteWarSaveSlot?: (NetMessage.IMsgSpmDeleteWarSaveSlot|null);

        /** MessageContainer MsgSpmSaveScw */
        MsgSpmSaveScw?: (NetMessage.IMsgSpmSaveScw|null);

        /** MessageContainer MsgSpmSaveSfw */
        MsgSpmSaveSfw?: (NetMessage.IMsgSpmSaveSfw|null);

        /** MessageContainer MsgSpmSaveSrw */
        MsgSpmSaveSrw?: (NetMessage.IMsgSpmSaveSrw|null);

        /** MessageContainer MsgSpmValidateSrw */
        MsgSpmValidateSrw?: (NetMessage.IMsgSpmValidateSrw|null);

        /** MessageContainer MsgSpmGetRankList */
        MsgSpmGetRankList?: (NetMessage.IMsgSpmGetRankList|null);

        /** MessageContainer MsgSpmGetReplayData */
        MsgSpmGetReplayData?: (NetMessage.IMsgSpmGetReplayData|null);

        /** MessageContainer MsgSpmDeleteAllScoreAndReplay */
        MsgSpmDeleteAllScoreAndReplay?: (NetMessage.IMsgSpmDeleteAllScoreAndReplay|null);

        /** MessageContainer MsgMrrSetMaxConcurrentCount */
        MsgMrrSetMaxConcurrentCount?: (NetMessage.IMsgMrrSetMaxConcurrentCount|null);

        /** MessageContainer MsgMrrGetMaxConcurrentCount */
        MsgMrrGetMaxConcurrentCount?: (NetMessage.IMsgMrrGetMaxConcurrentCount|null);

        /** MessageContainer MsgMrrGetJoinedRoomIdArray */
        MsgMrrGetJoinedRoomIdArray?: (NetMessage.IMsgMrrGetJoinedRoomIdArray|null);

        /** MessageContainer MsgMrrGetRoomPublicInfo */
        MsgMrrGetRoomPublicInfo?: (NetMessage.IMsgMrrGetRoomPublicInfo|null);

        /** MessageContainer MsgMrrDeleteRoomByServer */
        MsgMrrDeleteRoomByServer?: (NetMessage.IMsgMrrDeleteRoomByServer|null);

        /** MessageContainer MsgMrrSetBannedCoIdList */
        MsgMrrSetBannedCoIdList?: (NetMessage.IMsgMrrSetBannedCoIdList|null);

        /** MessageContainer MsgMrrSetSelfSettings */
        MsgMrrSetSelfSettings?: (NetMessage.IMsgMrrSetSelfSettings|null);

        /** MessageContainer MsgBroadcastGetAllMessageIdArray */
        MsgBroadcastGetAllMessageIdArray?: (NetMessage.IMsgBroadcastGetAllMessageIdArray|null);

        /** MessageContainer MsgBroadcastAddMessage */
        MsgBroadcastAddMessage?: (NetMessage.IMsgBroadcastAddMessage|null);

        /** MessageContainer MsgBroadcastDeleteMessage */
        MsgBroadcastDeleteMessage?: (NetMessage.IMsgBroadcastDeleteMessage|null);

        /** MessageContainer MsgBroadcastDoBroadcast */
        MsgBroadcastDoBroadcast?: (NetMessage.IMsgBroadcastDoBroadcast|null);

        /** MessageContainer MsgBroadcastGetMessageData */
        MsgBroadcastGetMessageData?: (NetMessage.IMsgBroadcastGetMessageData|null);

        /** MessageContainer MsgChangeLogGetMessageList */
        MsgChangeLogGetMessageList?: (NetMessage.IMsgChangeLogGetMessageList|null);

        /** MessageContainer MsgChangeLogAddMessage */
        MsgChangeLogAddMessage?: (NetMessage.IMsgChangeLogAddMessage|null);

        /** MessageContainer MsgChangeLogModifyMessage */
        MsgChangeLogModifyMessage?: (NetMessage.IMsgChangeLogModifyMessage|null);

        /** MessageContainer MsgMfrCreateRoom */
        MsgMfrCreateRoom?: (NetMessage.IMsgMfrCreateRoom|null);

        /** MessageContainer MsgMfrExitRoom */
        MsgMfrExitRoom?: (NetMessage.IMsgMfrExitRoom|null);

        /** MessageContainer MsgMfrJoinRoom */
        MsgMfrJoinRoom?: (NetMessage.IMsgMfrJoinRoom|null);

        /** MessageContainer MsgMfrDeleteRoom */
        MsgMfrDeleteRoom?: (NetMessage.IMsgMfrDeleteRoom|null);

        /** MessageContainer MsgMfrSetReady */
        MsgMfrSetReady?: (NetMessage.IMsgMfrSetReady|null);

        /** MessageContainer MsgMfrDeletePlayer */
        MsgMfrDeletePlayer?: (NetMessage.IMsgMfrDeletePlayer|null);

        /** MessageContainer MsgMfrSetSelfSettings */
        MsgMfrSetSelfSettings?: (NetMessage.IMsgMfrSetSelfSettings|null);

        /** MessageContainer MsgMfrStartWar */
        MsgMfrStartWar?: (NetMessage.IMsgMfrStartWar|null);

        /** MessageContainer MsgMfrGetJoinedRoomIdArray */
        MsgMfrGetJoinedRoomIdArray?: (NetMessage.IMsgMfrGetJoinedRoomIdArray|null);

        /** MessageContainer MsgMfrGetJoinableRoomIdArray */
        MsgMfrGetJoinableRoomIdArray?: (NetMessage.IMsgMfrGetJoinableRoomIdArray|null);

        /** MessageContainer MsgMfrGetRoomStaticInfo */
        MsgMfrGetRoomStaticInfo?: (NetMessage.IMsgMfrGetRoomStaticInfo|null);

        /** MessageContainer MsgMfrGetRoomPlayerInfo */
        MsgMfrGetRoomPlayerInfo?: (NetMessage.IMsgMfrGetRoomPlayerInfo|null);

        /** MessageContainer MsgCcrCreateRoom */
        MsgCcrCreateRoom?: (NetMessage.IMsgCcrCreateRoom|null);

        /** MessageContainer MsgCcrExitRoom */
        MsgCcrExitRoom?: (NetMessage.IMsgCcrExitRoom|null);

        /** MessageContainer MsgCcrJoinRoom */
        MsgCcrJoinRoom?: (NetMessage.IMsgCcrJoinRoom|null);

        /** MessageContainer MsgCcrDeleteRoom */
        MsgCcrDeleteRoom?: (NetMessage.IMsgCcrDeleteRoom|null);

        /** MessageContainer MsgCcrSetReady */
        MsgCcrSetReady?: (NetMessage.IMsgCcrSetReady|null);

        /** MessageContainer MsgCcrDeletePlayer */
        MsgCcrDeletePlayer?: (NetMessage.IMsgCcrDeletePlayer|null);

        /** MessageContainer MsgCcrSetSelfSettings */
        MsgCcrSetSelfSettings?: (NetMessage.IMsgCcrSetSelfSettings|null);

        /** MessageContainer MsgCcrStartWar */
        MsgCcrStartWar?: (NetMessage.IMsgCcrStartWar|null);

        /** MessageContainer MsgCcrGetJoinedRoomIdArray */
        MsgCcrGetJoinedRoomIdArray?: (NetMessage.IMsgCcrGetJoinedRoomIdArray|null);

        /** MessageContainer MsgCcrGetJoinableRoomIdArray */
        MsgCcrGetJoinableRoomIdArray?: (NetMessage.IMsgCcrGetJoinableRoomIdArray|null);

        /** MessageContainer MsgCcrGetRoomStaticInfo */
        MsgCcrGetRoomStaticInfo?: (NetMessage.IMsgCcrGetRoomStaticInfo|null);

        /** MessageContainer MsgCcrGetRoomPlayerInfo */
        MsgCcrGetRoomPlayerInfo?: (NetMessage.IMsgCcrGetRoomPlayerInfo|null);

        /** MessageContainer MsgLbSpmOverallGetTopDataArray */
        MsgLbSpmOverallGetTopDataArray?: (NetMessage.IMsgLbSpmOverallGetTopDataArray|null);

        /** MessageContainer MsgLbSpmOverallGetRankIndex */
        MsgLbSpmOverallGetRankIndex?: (NetMessage.IMsgLbSpmOverallGetRankIndex|null);
    }

    /** Represents a MessageContainer. */
    class MessageContainer implements IMessageContainer {

        /**
         * Constructs a new MessageContainer.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMessageContainer);

        /** MessageContainer MsgCommonHeartbeat. */
        public MsgCommonHeartbeat?: (NetMessage.IMsgCommonHeartbeat|null);

        /** MessageContainer MsgCommonError. */
        public MsgCommonError?: (NetMessage.IMsgCommonError|null);

        /** MessageContainer MsgCommonServerDisconnect. */
        public MsgCommonServerDisconnect?: (NetMessage.IMsgCommonServerDisconnect|null);

        /** MessageContainer MsgCommonLatestConfigVersion. */
        public MsgCommonLatestConfigVersion?: (NetMessage.IMsgCommonLatestConfigVersion|null);

        /** MessageContainer MsgCommonGetServerStatus. */
        public MsgCommonGetServerStatus?: (NetMessage.IMsgCommonGetServerStatus|null);

        /** MessageContainer MsgCommonGetRankList. */
        public MsgCommonGetRankList?: (NetMessage.IMsgCommonGetRankList|null);

        /** MessageContainer MsgUserRegister. */
        public MsgUserRegister?: (NetMessage.IMsgUserRegister|null);

        /** MessageContainer MsgUserLogin. */
        public MsgUserLogin?: (NetMessage.IMsgUserLogin|null);

        /** MessageContainer MsgUserLogout. */
        public MsgUserLogout?: (NetMessage.IMsgUserLogout|null);

        /** MessageContainer MsgUserGetPublicInfo. */
        public MsgUserGetPublicInfo?: (NetMessage.IMsgUserGetPublicInfo|null);

        /** MessageContainer MsgUserGetBriefInfo. */
        public MsgUserGetBriefInfo?: (NetMessage.IMsgUserGetBriefInfo|null);

        /** MessageContainer MsgUserGetOnlineState. */
        public MsgUserGetOnlineState?: (NetMessage.IMsgUserGetOnlineState|null);

        /** MessageContainer MsgUserGetOnlineUserIdArray. */
        public MsgUserGetOnlineUserIdArray?: (NetMessage.IMsgUserGetOnlineUserIdArray|null);

        /** MessageContainer MsgUserSetNickname. */
        public MsgUserSetNickname?: (NetMessage.IMsgUserSetNickname|null);

        /** MessageContainer MsgUserSetDiscordId. */
        public MsgUserSetDiscordId?: (NetMessage.IMsgUserSetDiscordId|null);

        /** MessageContainer MsgUserSetPrivilege. */
        public MsgUserSetPrivilege?: (NetMessage.IMsgUserSetPrivilege|null);

        /** MessageContainer MsgUserSetPassword. */
        public MsgUserSetPassword?: (NetMessage.IMsgUserSetPassword|null);

        /** MessageContainer MsgUserSetSettings. */
        public MsgUserSetSettings?: (NetMessage.IMsgUserSetSettings|null);

        /** MessageContainer MsgUserSetMapRating. */
        public MsgUserSetMapRating?: (NetMessage.IMsgUserSetMapRating|null);

        /** MessageContainer MsgUserSetAvatarId. */
        public MsgUserSetAvatarId?: (NetMessage.IMsgUserSetAvatarId|null);

        /** MessageContainer MsgUserSetMapEditorAutoSaveTime. */
        public MsgUserSetMapEditorAutoSaveTime?: (NetMessage.IMsgUserSetMapEditorAutoSaveTime|null);

        /** MessageContainer MsgMapGetEnabledMapIdArray. */
        public MsgMapGetEnabledMapIdArray?: (NetMessage.IMsgMapGetEnabledMapIdArray|null);

        /** MessageContainer MsgMapGetBriefData. */
        public MsgMapGetBriefData?: (NetMessage.IMsgMapGetBriefData|null);

        /** MessageContainer MsgMapGetRawData. */
        public MsgMapGetRawData?: (NetMessage.IMsgMapGetRawData|null);

        /** MessageContainer MsgMeGetMapDataList. */
        public MsgMeGetMapDataList?: (NetMessage.IMsgMeGetMapDataList|null);

        /** MessageContainer MsgMeGetMapData. */
        public MsgMeGetMapData?: (NetMessage.IMsgMeGetMapData|null);

        /** MessageContainer MsgMeSubmitMap. */
        public MsgMeSubmitMap?: (NetMessage.IMsgMeSubmitMap|null);

        /** MessageContainer MsgChatAddMessage. */
        public MsgChatAddMessage?: (NetMessage.IMsgChatAddMessage|null);

        /** MessageContainer MsgChatGetAllMessages. */
        public MsgChatGetAllMessages?: (NetMessage.IMsgChatGetAllMessages|null);

        /** MessageContainer MsgChatUpdateReadProgress. */
        public MsgChatUpdateReadProgress?: (NetMessage.IMsgChatUpdateReadProgress|null);

        /** MessageContainer MsgChatGetAllReadProgressList. */
        public MsgChatGetAllReadProgressList?: (NetMessage.IMsgChatGetAllReadProgressList|null);

        /** MessageContainer MsgChatDeleteMessage. */
        public MsgChatDeleteMessage?: (NetMessage.IMsgChatDeleteMessage|null);

        /** MessageContainer MsgMmSetWarRuleAvailability. */
        public MsgMmSetWarRuleAvailability?: (NetMessage.IMsgMmSetWarRuleAvailability|null);

        /** MessageContainer MsgMmSetMapEnabled. */
        public MsgMmSetMapEnabled?: (NetMessage.IMsgMmSetMapEnabled|null);

        /** MessageContainer MsgMmGetReviewingMaps. */
        public MsgMmGetReviewingMaps?: (NetMessage.IMsgMmGetReviewingMaps|null);

        /** MessageContainer MsgMmReviewMap. */
        public MsgMmReviewMap?: (NetMessage.IMsgMmReviewMap|null);

        /** MessageContainer MsgMmSetMapTag. */
        public MsgMmSetMapTag?: (NetMessage.IMsgMmSetMapTag|null);

        /** MessageContainer MsgMmSetMapName. */
        public MsgMmSetMapName?: (NetMessage.IMsgMmSetMapName|null);

        /** MessageContainer MsgMmAddWarRule. */
        public MsgMmAddWarRule?: (NetMessage.IMsgMmAddWarRule|null);

        /** MessageContainer MsgMmDeleteWarRule. */
        public MsgMmDeleteWarRule?: (NetMessage.IMsgMmDeleteWarRule|null);

        /** MessageContainer MsgReplaySetSelfRating. */
        public MsgReplaySetSelfRating?: (NetMessage.IMsgReplaySetSelfRating|null);

        /** MessageContainer MsgReplayGetSelfRating. */
        public MsgReplayGetSelfRating?: (NetMessage.IMsgReplayGetSelfRating|null);

        /** MessageContainer MsgReplayGetReplayIdArray. */
        public MsgReplayGetReplayIdArray?: (NetMessage.IMsgReplayGetReplayIdArray|null);

        /** MessageContainer MsgReplayGetData. */
        public MsgReplayGetData?: (NetMessage.IMsgReplayGetData|null);

        /** MessageContainer MsgReplayGetReplayInfo. */
        public MsgReplayGetReplayInfo?: (NetMessage.IMsgReplayGetReplayInfo|null);

        /** MessageContainer MsgMcrCreateRoom. */
        public MsgMcrCreateRoom?: (NetMessage.IMsgMcrCreateRoom|null);

        /** MessageContainer MsgMcrExitRoom. */
        public MsgMcrExitRoom?: (NetMessage.IMsgMcrExitRoom|null);

        /** MessageContainer MsgMcrJoinRoom. */
        public MsgMcrJoinRoom?: (NetMessage.IMsgMcrJoinRoom|null);

        /** MessageContainer MsgMcrDeleteRoom. */
        public MsgMcrDeleteRoom?: (NetMessage.IMsgMcrDeleteRoom|null);

        /** MessageContainer MsgMcrSetReady. */
        public MsgMcrSetReady?: (NetMessage.IMsgMcrSetReady|null);

        /** MessageContainer MsgMcrDeletePlayer. */
        public MsgMcrDeletePlayer?: (NetMessage.IMsgMcrDeletePlayer|null);

        /** MessageContainer MsgMcrSetSelfSettings. */
        public MsgMcrSetSelfSettings?: (NetMessage.IMsgMcrSetSelfSettings|null);

        /** MessageContainer MsgMcrStartWar. */
        public MsgMcrStartWar?: (NetMessage.IMsgMcrStartWar|null);

        /** MessageContainer MsgMcrGetJoinedRoomIdArray. */
        public MsgMcrGetJoinedRoomIdArray?: (NetMessage.IMsgMcrGetJoinedRoomIdArray|null);

        /** MessageContainer MsgMcrGetJoinableRoomIdArray. */
        public MsgMcrGetJoinableRoomIdArray?: (NetMessage.IMsgMcrGetJoinableRoomIdArray|null);

        /** MessageContainer MsgMcrGetRoomStaticInfo. */
        public MsgMcrGetRoomStaticInfo?: (NetMessage.IMsgMcrGetRoomStaticInfo|null);

        /** MessageContainer MsgMcrGetRoomPlayerInfo. */
        public MsgMcrGetRoomPlayerInfo?: (NetMessage.IMsgMcrGetRoomPlayerInfo|null);

        /** MessageContainer MsgMpwCommonGetMyWarIdArray. */
        public MsgMpwCommonGetMyWarIdArray?: (NetMessage.IMsgMpwCommonGetMyWarIdArray|null);

        /** MessageContainer MsgMpwCommonContinueWar. */
        public MsgMpwCommonContinueWar?: (NetMessage.IMsgMpwCommonContinueWar|null);

        /** MessageContainer MsgMpwCommonSyncWar. */
        public MsgMpwCommonSyncWar?: (NetMessage.IMsgMpwCommonSyncWar|null);

        /** MessageContainer MsgMpwCommonHandleBoot. */
        public MsgMpwCommonHandleBoot?: (NetMessage.IMsgMpwCommonHandleBoot|null);

        /** MessageContainer MsgMpwCommonBroadcastGameStart. */
        public MsgMpwCommonBroadcastGameStart?: (NetMessage.IMsgMpwCommonBroadcastGameStart|null);

        /** MessageContainer MsgMpwCommonGetWarSettings. */
        public MsgMpwCommonGetWarSettings?: (NetMessage.IMsgMpwCommonGetWarSettings|null);

        /** MessageContainer MsgMpwCommonGetWarProgressInfo. */
        public MsgMpwCommonGetWarProgressInfo?: (NetMessage.IMsgMpwCommonGetWarProgressInfo|null);

        /** MessageContainer MsgMpwWatchMakeRequest. */
        public MsgMpwWatchMakeRequest?: (NetMessage.IMsgMpwWatchMakeRequest|null);

        /** MessageContainer MsgMpwWatchHandleRequest. */
        public MsgMpwWatchHandleRequest?: (NetMessage.IMsgMpwWatchHandleRequest|null);

        /** MessageContainer MsgMpwWatchDeleteWatcher. */
        public MsgMpwWatchDeleteWatcher?: (NetMessage.IMsgMpwWatchDeleteWatcher|null);

        /** MessageContainer MsgMpwWatchGetRequestableWarIdArray. */
        public MsgMpwWatchGetRequestableWarIdArray?: (NetMessage.IMsgMpwWatchGetRequestableWarIdArray|null);

        /** MessageContainer MsgMpwWatchGetOngoingWarIdArray. */
        public MsgMpwWatchGetOngoingWarIdArray?: (NetMessage.IMsgMpwWatchGetOngoingWarIdArray|null);

        /** MessageContainer MsgMpwWatchGetRequestedWarIdArray. */
        public MsgMpwWatchGetRequestedWarIdArray?: (NetMessage.IMsgMpwWatchGetRequestedWarIdArray|null);

        /** MessageContainer MsgMpwWatchGetWatchedWarIdArray. */
        public MsgMpwWatchGetWatchedWarIdArray?: (NetMessage.IMsgMpwWatchGetWatchedWarIdArray|null);

        /** MessageContainer MsgMpwWatchContinueWar. */
        public MsgMpwWatchContinueWar?: (NetMessage.IMsgMpwWatchContinueWar|null);

        /** MessageContainer MsgMpwWatchGetIncomingInfo. */
        public MsgMpwWatchGetIncomingInfo?: (NetMessage.IMsgMpwWatchGetIncomingInfo|null);

        /** MessageContainer MsgMpwWatchGetOutgoingInfo. */
        public MsgMpwWatchGetOutgoingInfo?: (NetMessage.IMsgMpwWatchGetOutgoingInfo|null);

        /** MessageContainer MsgMpwExecuteWarAction. */
        public MsgMpwExecuteWarAction?: (NetMessage.IMsgMpwExecuteWarAction|null);

        /** MessageContainer MsgMpwGetHalfwayReplayData. */
        public MsgMpwGetHalfwayReplayData?: (NetMessage.IMsgMpwGetHalfwayReplayData|null);

        /** MessageContainer MsgSpmCreateScw. */
        public MsgSpmCreateScw?: (NetMessage.IMsgSpmCreateScw|null);

        /** MessageContainer MsgSpmCreateSfw. */
        public MsgSpmCreateSfw?: (NetMessage.IMsgSpmCreateSfw|null);

        /** MessageContainer MsgSpmCreateSrw. */
        public MsgSpmCreateSrw?: (NetMessage.IMsgSpmCreateSrw|null);

        /** MessageContainer MsgSpmGetWarSaveSlotFullDataArray. */
        public MsgSpmGetWarSaveSlotFullDataArray?: (NetMessage.IMsgSpmGetWarSaveSlotFullDataArray|null);

        /** MessageContainer MsgSpmDeleteWarSaveSlot. */
        public MsgSpmDeleteWarSaveSlot?: (NetMessage.IMsgSpmDeleteWarSaveSlot|null);

        /** MessageContainer MsgSpmSaveScw. */
        public MsgSpmSaveScw?: (NetMessage.IMsgSpmSaveScw|null);

        /** MessageContainer MsgSpmSaveSfw. */
        public MsgSpmSaveSfw?: (NetMessage.IMsgSpmSaveSfw|null);

        /** MessageContainer MsgSpmSaveSrw. */
        public MsgSpmSaveSrw?: (NetMessage.IMsgSpmSaveSrw|null);

        /** MessageContainer MsgSpmValidateSrw. */
        public MsgSpmValidateSrw?: (NetMessage.IMsgSpmValidateSrw|null);

        /** MessageContainer MsgSpmGetRankList. */
        public MsgSpmGetRankList?: (NetMessage.IMsgSpmGetRankList|null);

        /** MessageContainer MsgSpmGetReplayData. */
        public MsgSpmGetReplayData?: (NetMessage.IMsgSpmGetReplayData|null);

        /** MessageContainer MsgSpmDeleteAllScoreAndReplay. */
        public MsgSpmDeleteAllScoreAndReplay?: (NetMessage.IMsgSpmDeleteAllScoreAndReplay|null);

        /** MessageContainer MsgMrrSetMaxConcurrentCount. */
        public MsgMrrSetMaxConcurrentCount?: (NetMessage.IMsgMrrSetMaxConcurrentCount|null);

        /** MessageContainer MsgMrrGetMaxConcurrentCount. */
        public MsgMrrGetMaxConcurrentCount?: (NetMessage.IMsgMrrGetMaxConcurrentCount|null);

        /** MessageContainer MsgMrrGetJoinedRoomIdArray. */
        public MsgMrrGetJoinedRoomIdArray?: (NetMessage.IMsgMrrGetJoinedRoomIdArray|null);

        /** MessageContainer MsgMrrGetRoomPublicInfo. */
        public MsgMrrGetRoomPublicInfo?: (NetMessage.IMsgMrrGetRoomPublicInfo|null);

        /** MessageContainer MsgMrrDeleteRoomByServer. */
        public MsgMrrDeleteRoomByServer?: (NetMessage.IMsgMrrDeleteRoomByServer|null);

        /** MessageContainer MsgMrrSetBannedCoIdList. */
        public MsgMrrSetBannedCoIdList?: (NetMessage.IMsgMrrSetBannedCoIdList|null);

        /** MessageContainer MsgMrrSetSelfSettings. */
        public MsgMrrSetSelfSettings?: (NetMessage.IMsgMrrSetSelfSettings|null);

        /** MessageContainer MsgBroadcastGetAllMessageIdArray. */
        public MsgBroadcastGetAllMessageIdArray?: (NetMessage.IMsgBroadcastGetAllMessageIdArray|null);

        /** MessageContainer MsgBroadcastAddMessage. */
        public MsgBroadcastAddMessage?: (NetMessage.IMsgBroadcastAddMessage|null);

        /** MessageContainer MsgBroadcastDeleteMessage. */
        public MsgBroadcastDeleteMessage?: (NetMessage.IMsgBroadcastDeleteMessage|null);

        /** MessageContainer MsgBroadcastDoBroadcast. */
        public MsgBroadcastDoBroadcast?: (NetMessage.IMsgBroadcastDoBroadcast|null);

        /** MessageContainer MsgBroadcastGetMessageData. */
        public MsgBroadcastGetMessageData?: (NetMessage.IMsgBroadcastGetMessageData|null);

        /** MessageContainer MsgChangeLogGetMessageList. */
        public MsgChangeLogGetMessageList?: (NetMessage.IMsgChangeLogGetMessageList|null);

        /** MessageContainer MsgChangeLogAddMessage. */
        public MsgChangeLogAddMessage?: (NetMessage.IMsgChangeLogAddMessage|null);

        /** MessageContainer MsgChangeLogModifyMessage. */
        public MsgChangeLogModifyMessage?: (NetMessage.IMsgChangeLogModifyMessage|null);

        /** MessageContainer MsgMfrCreateRoom. */
        public MsgMfrCreateRoom?: (NetMessage.IMsgMfrCreateRoom|null);

        /** MessageContainer MsgMfrExitRoom. */
        public MsgMfrExitRoom?: (NetMessage.IMsgMfrExitRoom|null);

        /** MessageContainer MsgMfrJoinRoom. */
        public MsgMfrJoinRoom?: (NetMessage.IMsgMfrJoinRoom|null);

        /** MessageContainer MsgMfrDeleteRoom. */
        public MsgMfrDeleteRoom?: (NetMessage.IMsgMfrDeleteRoom|null);

        /** MessageContainer MsgMfrSetReady. */
        public MsgMfrSetReady?: (NetMessage.IMsgMfrSetReady|null);

        /** MessageContainer MsgMfrDeletePlayer. */
        public MsgMfrDeletePlayer?: (NetMessage.IMsgMfrDeletePlayer|null);

        /** MessageContainer MsgMfrSetSelfSettings. */
        public MsgMfrSetSelfSettings?: (NetMessage.IMsgMfrSetSelfSettings|null);

        /** MessageContainer MsgMfrStartWar. */
        public MsgMfrStartWar?: (NetMessage.IMsgMfrStartWar|null);

        /** MessageContainer MsgMfrGetJoinedRoomIdArray. */
        public MsgMfrGetJoinedRoomIdArray?: (NetMessage.IMsgMfrGetJoinedRoomIdArray|null);

        /** MessageContainer MsgMfrGetJoinableRoomIdArray. */
        public MsgMfrGetJoinableRoomIdArray?: (NetMessage.IMsgMfrGetJoinableRoomIdArray|null);

        /** MessageContainer MsgMfrGetRoomStaticInfo. */
        public MsgMfrGetRoomStaticInfo?: (NetMessage.IMsgMfrGetRoomStaticInfo|null);

        /** MessageContainer MsgMfrGetRoomPlayerInfo. */
        public MsgMfrGetRoomPlayerInfo?: (NetMessage.IMsgMfrGetRoomPlayerInfo|null);

        /** MessageContainer MsgCcrCreateRoom. */
        public MsgCcrCreateRoom?: (NetMessage.IMsgCcrCreateRoom|null);

        /** MessageContainer MsgCcrExitRoom. */
        public MsgCcrExitRoom?: (NetMessage.IMsgCcrExitRoom|null);

        /** MessageContainer MsgCcrJoinRoom. */
        public MsgCcrJoinRoom?: (NetMessage.IMsgCcrJoinRoom|null);

        /** MessageContainer MsgCcrDeleteRoom. */
        public MsgCcrDeleteRoom?: (NetMessage.IMsgCcrDeleteRoom|null);

        /** MessageContainer MsgCcrSetReady. */
        public MsgCcrSetReady?: (NetMessage.IMsgCcrSetReady|null);

        /** MessageContainer MsgCcrDeletePlayer. */
        public MsgCcrDeletePlayer?: (NetMessage.IMsgCcrDeletePlayer|null);

        /** MessageContainer MsgCcrSetSelfSettings. */
        public MsgCcrSetSelfSettings?: (NetMessage.IMsgCcrSetSelfSettings|null);

        /** MessageContainer MsgCcrStartWar. */
        public MsgCcrStartWar?: (NetMessage.IMsgCcrStartWar|null);

        /** MessageContainer MsgCcrGetJoinedRoomIdArray. */
        public MsgCcrGetJoinedRoomIdArray?: (NetMessage.IMsgCcrGetJoinedRoomIdArray|null);

        /** MessageContainer MsgCcrGetJoinableRoomIdArray. */
        public MsgCcrGetJoinableRoomIdArray?: (NetMessage.IMsgCcrGetJoinableRoomIdArray|null);

        /** MessageContainer MsgCcrGetRoomStaticInfo. */
        public MsgCcrGetRoomStaticInfo?: (NetMessage.IMsgCcrGetRoomStaticInfo|null);

        /** MessageContainer MsgCcrGetRoomPlayerInfo. */
        public MsgCcrGetRoomPlayerInfo?: (NetMessage.IMsgCcrGetRoomPlayerInfo|null);

        /** MessageContainer MsgLbSpmOverallGetTopDataArray. */
        public MsgLbSpmOverallGetTopDataArray?: (NetMessage.IMsgLbSpmOverallGetTopDataArray|null);

        /** MessageContainer MsgLbSpmOverallGetRankIndex. */
        public MsgLbSpmOverallGetRankIndex?: (NetMessage.IMsgLbSpmOverallGetRankIndex|null);

        /**
         * Creates a new MessageContainer instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MessageContainer instance
         */
        public static create(properties?: NetMessage.IMessageContainer): NetMessage.MessageContainer;

        /**
         * Encodes the specified MessageContainer message. Does not implicitly {@link NetMessage.MessageContainer.verify|verify} messages.
         * @param message MessageContainer message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMessageContainer, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MessageContainer message, length delimited. Does not implicitly {@link NetMessage.MessageContainer.verify|verify} messages.
         * @param message MessageContainer message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMessageContainer, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MessageContainer message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MessageContainer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MessageContainer;

        /**
         * Decodes a MessageContainer message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MessageContainer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MessageContainer;

        /**
         * Verifies a MessageContainer message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MessageContainer message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MessageContainer
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MessageContainer;

        /**
         * Creates a plain object from a MessageContainer message. Also converts values to other types if specified.
         * @param message MessageContainer
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MessageContainer, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MessageContainer to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MsgCommonHeartbeat. */
    interface IMsgCommonHeartbeat {

        /** MsgCommonHeartbeat c */
        c?: (NetMessage.MsgCommonHeartbeat.IC|null);

        /** MsgCommonHeartbeat s */
        s?: (NetMessage.MsgCommonHeartbeat.IS|null);
    }

    /** Represents a MsgCommonHeartbeat. */
    class MsgCommonHeartbeat implements IMsgCommonHeartbeat {

        /**
         * Constructs a new MsgCommonHeartbeat.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgCommonHeartbeat);

        /** MsgCommonHeartbeat c. */
        public c?: (NetMessage.MsgCommonHeartbeat.IC|null);

        /** MsgCommonHeartbeat s. */
        public s?: (NetMessage.MsgCommonHeartbeat.IS|null);

        /**
         * Creates a new MsgCommonHeartbeat instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgCommonHeartbeat instance
         */
        public static create(properties?: NetMessage.IMsgCommonHeartbeat): NetMessage.MsgCommonHeartbeat;

        /**
         * Encodes the specified MsgCommonHeartbeat message. Does not implicitly {@link NetMessage.MsgCommonHeartbeat.verify|verify} messages.
         * @param message MsgCommonHeartbeat message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgCommonHeartbeat, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgCommonHeartbeat message, length delimited. Does not implicitly {@link NetMessage.MsgCommonHeartbeat.verify|verify} messages.
         * @param message MsgCommonHeartbeat message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgCommonHeartbeat, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgCommonHeartbeat message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgCommonHeartbeat
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgCommonHeartbeat;

        /**
         * Decodes a MsgCommonHeartbeat message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgCommonHeartbeat
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgCommonHeartbeat;

        /**
         * Verifies a MsgCommonHeartbeat message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgCommonHeartbeat message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgCommonHeartbeat
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgCommonHeartbeat;

        /**
         * Creates a plain object from a MsgCommonHeartbeat message. Also converts values to other types if specified.
         * @param message MsgCommonHeartbeat
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgCommonHeartbeat, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgCommonHeartbeat to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgCommonHeartbeat {

        /** Properties of a C. */
        interface IC {

            /** C counter */
            counter?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgCommonHeartbeat.IC);

            /** C counter. */
            public counter: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgCommonHeartbeat.IC): NetMessage.MsgCommonHeartbeat.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgCommonHeartbeat.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgCommonHeartbeat.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgCommonHeartbeat.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgCommonHeartbeat.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgCommonHeartbeat.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgCommonHeartbeat.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgCommonHeartbeat.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgCommonHeartbeat.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S counter */
            counter?: (number|null);

            /** S timestamp */
            timestamp?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgCommonHeartbeat.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S counter. */
            public counter: number;

            /** S timestamp. */
            public timestamp: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgCommonHeartbeat.IS): NetMessage.MsgCommonHeartbeat.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgCommonHeartbeat.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgCommonHeartbeat.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgCommonHeartbeat.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgCommonHeartbeat.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgCommonHeartbeat.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgCommonHeartbeat.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgCommonHeartbeat.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgCommonHeartbeat.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgCommonError. */
    interface IMsgCommonError {

        /** MsgCommonError s */
        s?: (NetMessage.MsgCommonError.IS|null);
    }

    /** Represents a MsgCommonError. */
    class MsgCommonError implements IMsgCommonError {

        /**
         * Constructs a new MsgCommonError.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgCommonError);

        /** MsgCommonError s. */
        public s?: (NetMessage.MsgCommonError.IS|null);

        /**
         * Creates a new MsgCommonError instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgCommonError instance
         */
        public static create(properties?: NetMessage.IMsgCommonError): NetMessage.MsgCommonError;

        /**
         * Encodes the specified MsgCommonError message. Does not implicitly {@link NetMessage.MsgCommonError.verify|verify} messages.
         * @param message MsgCommonError message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgCommonError, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgCommonError message, length delimited. Does not implicitly {@link NetMessage.MsgCommonError.verify|verify} messages.
         * @param message MsgCommonError message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgCommonError, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgCommonError message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgCommonError
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgCommonError;

        /**
         * Decodes a MsgCommonError message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgCommonError
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgCommonError;

        /**
         * Verifies a MsgCommonError message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgCommonError message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgCommonError
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgCommonError;

        /**
         * Creates a plain object from a MsgCommonError message. Also converts values to other types if specified.
         * @param message MsgCommonError
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgCommonError, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgCommonError to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgCommonError {

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgCommonError.IS);

            /** S errorCode. */
            public errorCode: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgCommonError.IS): NetMessage.MsgCommonError.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgCommonError.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgCommonError.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgCommonError.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgCommonError.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgCommonError.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgCommonError.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgCommonError.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgCommonError.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgCommonServerDisconnect. */
    interface IMsgCommonServerDisconnect {

        /** MsgCommonServerDisconnect s */
        s?: (NetMessage.MsgCommonServerDisconnect.IS|null);
    }

    /** Represents a MsgCommonServerDisconnect. */
    class MsgCommonServerDisconnect implements IMsgCommonServerDisconnect {

        /**
         * Constructs a new MsgCommonServerDisconnect.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgCommonServerDisconnect);

        /** MsgCommonServerDisconnect s. */
        public s?: (NetMessage.MsgCommonServerDisconnect.IS|null);

        /**
         * Creates a new MsgCommonServerDisconnect instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgCommonServerDisconnect instance
         */
        public static create(properties?: NetMessage.IMsgCommonServerDisconnect): NetMessage.MsgCommonServerDisconnect;

        /**
         * Encodes the specified MsgCommonServerDisconnect message. Does not implicitly {@link NetMessage.MsgCommonServerDisconnect.verify|verify} messages.
         * @param message MsgCommonServerDisconnect message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgCommonServerDisconnect, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgCommonServerDisconnect message, length delimited. Does not implicitly {@link NetMessage.MsgCommonServerDisconnect.verify|verify} messages.
         * @param message MsgCommonServerDisconnect message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgCommonServerDisconnect, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgCommonServerDisconnect message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgCommonServerDisconnect
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgCommonServerDisconnect;

        /**
         * Decodes a MsgCommonServerDisconnect message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgCommonServerDisconnect
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgCommonServerDisconnect;

        /**
         * Verifies a MsgCommonServerDisconnect message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgCommonServerDisconnect message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgCommonServerDisconnect
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgCommonServerDisconnect;

        /**
         * Creates a plain object from a MsgCommonServerDisconnect message. Also converts values to other types if specified.
         * @param message MsgCommonServerDisconnect
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgCommonServerDisconnect, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgCommonServerDisconnect to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgCommonServerDisconnect {

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgCommonServerDisconnect.IS);

            /** S errorCode. */
            public errorCode: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgCommonServerDisconnect.IS): NetMessage.MsgCommonServerDisconnect.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgCommonServerDisconnect.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgCommonServerDisconnect.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgCommonServerDisconnect.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgCommonServerDisconnect.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgCommonServerDisconnect.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgCommonServerDisconnect.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgCommonServerDisconnect.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgCommonServerDisconnect.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgCommonLatestConfigVersion. */
    interface IMsgCommonLatestConfigVersion {

        /** MsgCommonLatestConfigVersion s */
        s?: (NetMessage.MsgCommonLatestConfigVersion.IS|null);
    }

    /** Represents a MsgCommonLatestConfigVersion. */
    class MsgCommonLatestConfigVersion implements IMsgCommonLatestConfigVersion {

        /**
         * Constructs a new MsgCommonLatestConfigVersion.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgCommonLatestConfigVersion);

        /** MsgCommonLatestConfigVersion s. */
        public s?: (NetMessage.MsgCommonLatestConfigVersion.IS|null);

        /**
         * Creates a new MsgCommonLatestConfigVersion instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgCommonLatestConfigVersion instance
         */
        public static create(properties?: NetMessage.IMsgCommonLatestConfigVersion): NetMessage.MsgCommonLatestConfigVersion;

        /**
         * Encodes the specified MsgCommonLatestConfigVersion message. Does not implicitly {@link NetMessage.MsgCommonLatestConfigVersion.verify|verify} messages.
         * @param message MsgCommonLatestConfigVersion message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgCommonLatestConfigVersion, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgCommonLatestConfigVersion message, length delimited. Does not implicitly {@link NetMessage.MsgCommonLatestConfigVersion.verify|verify} messages.
         * @param message MsgCommonLatestConfigVersion message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgCommonLatestConfigVersion, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgCommonLatestConfigVersion message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgCommonLatestConfigVersion
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgCommonLatestConfigVersion;

        /**
         * Decodes a MsgCommonLatestConfigVersion message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgCommonLatestConfigVersion
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgCommonLatestConfigVersion;

        /**
         * Verifies a MsgCommonLatestConfigVersion message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgCommonLatestConfigVersion message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgCommonLatestConfigVersion
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgCommonLatestConfigVersion;

        /**
         * Creates a plain object from a MsgCommonLatestConfigVersion message. Also converts values to other types if specified.
         * @param message MsgCommonLatestConfigVersion
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgCommonLatestConfigVersion, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgCommonLatestConfigVersion to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgCommonLatestConfigVersion {

        /** Properties of a S. */
        interface IS {

            /** S version */
            version?: (string|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgCommonLatestConfigVersion.IS);

            /** S version. */
            public version: string;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgCommonLatestConfigVersion.IS): NetMessage.MsgCommonLatestConfigVersion.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgCommonLatestConfigVersion.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgCommonLatestConfigVersion.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgCommonLatestConfigVersion.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgCommonLatestConfigVersion.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgCommonLatestConfigVersion.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgCommonLatestConfigVersion.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgCommonLatestConfigVersion.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgCommonLatestConfigVersion.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgCommonGetServerStatus. */
    interface IMsgCommonGetServerStatus {

        /** MsgCommonGetServerStatus c */
        c?: (NetMessage.MsgCommonGetServerStatus.IC|null);

        /** MsgCommonGetServerStatus s */
        s?: (NetMessage.MsgCommonGetServerStatus.IS|null);
    }

    /** Represents a MsgCommonGetServerStatus. */
    class MsgCommonGetServerStatus implements IMsgCommonGetServerStatus {

        /**
         * Constructs a new MsgCommonGetServerStatus.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgCommonGetServerStatus);

        /** MsgCommonGetServerStatus c. */
        public c?: (NetMessage.MsgCommonGetServerStatus.IC|null);

        /** MsgCommonGetServerStatus s. */
        public s?: (NetMessage.MsgCommonGetServerStatus.IS|null);

        /**
         * Creates a new MsgCommonGetServerStatus instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgCommonGetServerStatus instance
         */
        public static create(properties?: NetMessage.IMsgCommonGetServerStatus): NetMessage.MsgCommonGetServerStatus;

        /**
         * Encodes the specified MsgCommonGetServerStatus message. Does not implicitly {@link NetMessage.MsgCommonGetServerStatus.verify|verify} messages.
         * @param message MsgCommonGetServerStatus message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgCommonGetServerStatus, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgCommonGetServerStatus message, length delimited. Does not implicitly {@link NetMessage.MsgCommonGetServerStatus.verify|verify} messages.
         * @param message MsgCommonGetServerStatus message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgCommonGetServerStatus, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgCommonGetServerStatus message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgCommonGetServerStatus
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgCommonGetServerStatus;

        /**
         * Decodes a MsgCommonGetServerStatus message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgCommonGetServerStatus
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgCommonGetServerStatus;

        /**
         * Verifies a MsgCommonGetServerStatus message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgCommonGetServerStatus message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgCommonGetServerStatus
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgCommonGetServerStatus;

        /**
         * Creates a plain object from a MsgCommonGetServerStatus message. Also converts values to other types if specified.
         * @param message MsgCommonGetServerStatus
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgCommonGetServerStatus, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgCommonGetServerStatus to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgCommonGetServerStatus {

        /** Properties of a C. */
        interface IC {
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgCommonGetServerStatus.IC);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgCommonGetServerStatus.IC): NetMessage.MsgCommonGetServerStatus.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgCommonGetServerStatus.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgCommonGetServerStatus.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgCommonGetServerStatus.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgCommonGetServerStatus.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgCommonGetServerStatus.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgCommonGetServerStatus.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgCommonGetServerStatus.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgCommonGetServerStatus.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S totalAccounts */
            totalAccounts?: (number|null);

            /** S totalOnlineTime */
            totalOnlineTime?: (number|null);

            /** S activeAccounts */
            activeAccounts?: (number[]|null);

            /** S newAccounts */
            newAccounts?: (number[]|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgCommonGetServerStatus.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S totalAccounts. */
            public totalAccounts: number;

            /** S totalOnlineTime. */
            public totalOnlineTime: number;

            /** S activeAccounts. */
            public activeAccounts: number[];

            /** S newAccounts. */
            public newAccounts: number[];

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgCommonGetServerStatus.IS): NetMessage.MsgCommonGetServerStatus.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgCommonGetServerStatus.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgCommonGetServerStatus.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgCommonGetServerStatus.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgCommonGetServerStatus.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgCommonGetServerStatus.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgCommonGetServerStatus.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgCommonGetServerStatus.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgCommonGetServerStatus.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgCommonGetRankList. */
    interface IMsgCommonGetRankList {

        /** MsgCommonGetRankList c */
        c?: (NetMessage.MsgCommonGetRankList.IC|null);

        /** MsgCommonGetRankList s */
        s?: (NetMessage.MsgCommonGetRankList.IS|null);
    }

    /** Represents a MsgCommonGetRankList. */
    class MsgCommonGetRankList implements IMsgCommonGetRankList {

        /**
         * Constructs a new MsgCommonGetRankList.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgCommonGetRankList);

        /** MsgCommonGetRankList c. */
        public c?: (NetMessage.MsgCommonGetRankList.IC|null);

        /** MsgCommonGetRankList s. */
        public s?: (NetMessage.MsgCommonGetRankList.IS|null);

        /**
         * Creates a new MsgCommonGetRankList instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgCommonGetRankList instance
         */
        public static create(properties?: NetMessage.IMsgCommonGetRankList): NetMessage.MsgCommonGetRankList;

        /**
         * Encodes the specified MsgCommonGetRankList message. Does not implicitly {@link NetMessage.MsgCommonGetRankList.verify|verify} messages.
         * @param message MsgCommonGetRankList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgCommonGetRankList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgCommonGetRankList message, length delimited. Does not implicitly {@link NetMessage.MsgCommonGetRankList.verify|verify} messages.
         * @param message MsgCommonGetRankList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgCommonGetRankList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgCommonGetRankList message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgCommonGetRankList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgCommonGetRankList;

        /**
         * Decodes a MsgCommonGetRankList message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgCommonGetRankList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgCommonGetRankList;

        /**
         * Verifies a MsgCommonGetRankList message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgCommonGetRankList message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgCommonGetRankList
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgCommonGetRankList;

        /**
         * Creates a plain object from a MsgCommonGetRankList message. Also converts values to other types if specified.
         * @param message MsgCommonGetRankList
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgCommonGetRankList, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgCommonGetRankList to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgCommonGetRankList {

        /** Properties of a C. */
        interface IC {
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgCommonGetRankList.IC);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgCommonGetRankList.IC): NetMessage.MsgCommonGetRankList.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgCommonGetRankList.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgCommonGetRankList.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgCommonGetRankList.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgCommonGetRankList.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgCommonGetRankList.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgCommonGetRankList.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgCommonGetRankList.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgCommonGetRankList.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S mrwRankDataArray */
            mrwRankDataArray?: (Structure.IDataForMrwPlayerRank[]|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgCommonGetRankList.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S mrwRankDataArray. */
            public mrwRankDataArray: Structure.IDataForMrwPlayerRank[];

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgCommonGetRankList.IS): NetMessage.MsgCommonGetRankList.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgCommonGetRankList.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgCommonGetRankList.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgCommonGetRankList.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgCommonGetRankList.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgCommonGetRankList.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgCommonGetRankList.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgCommonGetRankList.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgCommonGetRankList.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgBroadcastGetAllMessageIdArray. */
    interface IMsgBroadcastGetAllMessageIdArray {

        /** MsgBroadcastGetAllMessageIdArray c */
        c?: (NetMessage.MsgBroadcastGetAllMessageIdArray.IC|null);

        /** MsgBroadcastGetAllMessageIdArray s */
        s?: (NetMessage.MsgBroadcastGetAllMessageIdArray.IS|null);
    }

    /** Represents a MsgBroadcastGetAllMessageIdArray. */
    class MsgBroadcastGetAllMessageIdArray implements IMsgBroadcastGetAllMessageIdArray {

        /**
         * Constructs a new MsgBroadcastGetAllMessageIdArray.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgBroadcastGetAllMessageIdArray);

        /** MsgBroadcastGetAllMessageIdArray c. */
        public c?: (NetMessage.MsgBroadcastGetAllMessageIdArray.IC|null);

        /** MsgBroadcastGetAllMessageIdArray s. */
        public s?: (NetMessage.MsgBroadcastGetAllMessageIdArray.IS|null);

        /**
         * Creates a new MsgBroadcastGetAllMessageIdArray instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgBroadcastGetAllMessageIdArray instance
         */
        public static create(properties?: NetMessage.IMsgBroadcastGetAllMessageIdArray): NetMessage.MsgBroadcastGetAllMessageIdArray;

        /**
         * Encodes the specified MsgBroadcastGetAllMessageIdArray message. Does not implicitly {@link NetMessage.MsgBroadcastGetAllMessageIdArray.verify|verify} messages.
         * @param message MsgBroadcastGetAllMessageIdArray message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgBroadcastGetAllMessageIdArray, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgBroadcastGetAllMessageIdArray message, length delimited. Does not implicitly {@link NetMessage.MsgBroadcastGetAllMessageIdArray.verify|verify} messages.
         * @param message MsgBroadcastGetAllMessageIdArray message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgBroadcastGetAllMessageIdArray, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgBroadcastGetAllMessageIdArray message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgBroadcastGetAllMessageIdArray
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgBroadcastGetAllMessageIdArray;

        /**
         * Decodes a MsgBroadcastGetAllMessageIdArray message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgBroadcastGetAllMessageIdArray
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgBroadcastGetAllMessageIdArray;

        /**
         * Verifies a MsgBroadcastGetAllMessageIdArray message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgBroadcastGetAllMessageIdArray message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgBroadcastGetAllMessageIdArray
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgBroadcastGetAllMessageIdArray;

        /**
         * Creates a plain object from a MsgBroadcastGetAllMessageIdArray message. Also converts values to other types if specified.
         * @param message MsgBroadcastGetAllMessageIdArray
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgBroadcastGetAllMessageIdArray, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgBroadcastGetAllMessageIdArray to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgBroadcastGetAllMessageIdArray {

        /** Properties of a C. */
        interface IC {
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgBroadcastGetAllMessageIdArray.IC);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgBroadcastGetAllMessageIdArray.IC): NetMessage.MsgBroadcastGetAllMessageIdArray.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgBroadcastGetAllMessageIdArray.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgBroadcastGetAllMessageIdArray.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgBroadcastGetAllMessageIdArray.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgBroadcastGetAllMessageIdArray.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgBroadcastGetAllMessageIdArray.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgBroadcastGetAllMessageIdArray.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgBroadcastGetAllMessageIdArray.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgBroadcastGetAllMessageIdArray.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S messageIdArray */
            messageIdArray?: (number[]|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgBroadcastGetAllMessageIdArray.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S messageIdArray. */
            public messageIdArray: number[];

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgBroadcastGetAllMessageIdArray.IS): NetMessage.MsgBroadcastGetAllMessageIdArray.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgBroadcastGetAllMessageIdArray.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgBroadcastGetAllMessageIdArray.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgBroadcastGetAllMessageIdArray.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgBroadcastGetAllMessageIdArray.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgBroadcastGetAllMessageIdArray.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgBroadcastGetAllMessageIdArray.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgBroadcastGetAllMessageIdArray.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgBroadcastGetAllMessageIdArray.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgBroadcastAddMessage. */
    interface IMsgBroadcastAddMessage {

        /** MsgBroadcastAddMessage c */
        c?: (NetMessage.MsgBroadcastAddMessage.IC|null);

        /** MsgBroadcastAddMessage s */
        s?: (NetMessage.MsgBroadcastAddMessage.IS|null);
    }

    /** Represents a MsgBroadcastAddMessage. */
    class MsgBroadcastAddMessage implements IMsgBroadcastAddMessage {

        /**
         * Constructs a new MsgBroadcastAddMessage.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgBroadcastAddMessage);

        /** MsgBroadcastAddMessage c. */
        public c?: (NetMessage.MsgBroadcastAddMessage.IC|null);

        /** MsgBroadcastAddMessage s. */
        public s?: (NetMessage.MsgBroadcastAddMessage.IS|null);

        /**
         * Creates a new MsgBroadcastAddMessage instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgBroadcastAddMessage instance
         */
        public static create(properties?: NetMessage.IMsgBroadcastAddMessage): NetMessage.MsgBroadcastAddMessage;

        /**
         * Encodes the specified MsgBroadcastAddMessage message. Does not implicitly {@link NetMessage.MsgBroadcastAddMessage.verify|verify} messages.
         * @param message MsgBroadcastAddMessage message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgBroadcastAddMessage, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgBroadcastAddMessage message, length delimited. Does not implicitly {@link NetMessage.MsgBroadcastAddMessage.verify|verify} messages.
         * @param message MsgBroadcastAddMessage message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgBroadcastAddMessage, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgBroadcastAddMessage message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgBroadcastAddMessage
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgBroadcastAddMessage;

        /**
         * Decodes a MsgBroadcastAddMessage message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgBroadcastAddMessage
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgBroadcastAddMessage;

        /**
         * Verifies a MsgBroadcastAddMessage message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgBroadcastAddMessage message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgBroadcastAddMessage
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgBroadcastAddMessage;

        /**
         * Creates a plain object from a MsgBroadcastAddMessage message. Also converts values to other types if specified.
         * @param message MsgBroadcastAddMessage
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgBroadcastAddMessage, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgBroadcastAddMessage to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgBroadcastAddMessage {

        /** Properties of a C. */
        interface IC {

            /** C textList */
            textList?: (Structure.ILanguageText[]|null);

            /** C startTime */
            startTime?: (number|null);

            /** C endTime */
            endTime?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgBroadcastAddMessage.IC);

            /** C textList. */
            public textList: Structure.ILanguageText[];

            /** C startTime. */
            public startTime: number;

            /** C endTime. */
            public endTime: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgBroadcastAddMessage.IC): NetMessage.MsgBroadcastAddMessage.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgBroadcastAddMessage.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgBroadcastAddMessage.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgBroadcastAddMessage.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgBroadcastAddMessage.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgBroadcastAddMessage.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgBroadcastAddMessage.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgBroadcastAddMessage.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgBroadcastAddMessage.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S messageId */
            messageId?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgBroadcastAddMessage.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S messageId. */
            public messageId: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgBroadcastAddMessage.IS): NetMessage.MsgBroadcastAddMessage.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgBroadcastAddMessage.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgBroadcastAddMessage.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgBroadcastAddMessage.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgBroadcastAddMessage.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgBroadcastAddMessage.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgBroadcastAddMessage.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgBroadcastAddMessage.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgBroadcastAddMessage.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgBroadcastDeleteMessage. */
    interface IMsgBroadcastDeleteMessage {

        /** MsgBroadcastDeleteMessage c */
        c?: (NetMessage.MsgBroadcastDeleteMessage.IC|null);

        /** MsgBroadcastDeleteMessage s */
        s?: (NetMessage.MsgBroadcastDeleteMessage.IS|null);
    }

    /** Represents a MsgBroadcastDeleteMessage. */
    class MsgBroadcastDeleteMessage implements IMsgBroadcastDeleteMessage {

        /**
         * Constructs a new MsgBroadcastDeleteMessage.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgBroadcastDeleteMessage);

        /** MsgBroadcastDeleteMessage c. */
        public c?: (NetMessage.MsgBroadcastDeleteMessage.IC|null);

        /** MsgBroadcastDeleteMessage s. */
        public s?: (NetMessage.MsgBroadcastDeleteMessage.IS|null);

        /**
         * Creates a new MsgBroadcastDeleteMessage instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgBroadcastDeleteMessage instance
         */
        public static create(properties?: NetMessage.IMsgBroadcastDeleteMessage): NetMessage.MsgBroadcastDeleteMessage;

        /**
         * Encodes the specified MsgBroadcastDeleteMessage message. Does not implicitly {@link NetMessage.MsgBroadcastDeleteMessage.verify|verify} messages.
         * @param message MsgBroadcastDeleteMessage message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgBroadcastDeleteMessage, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgBroadcastDeleteMessage message, length delimited. Does not implicitly {@link NetMessage.MsgBroadcastDeleteMessage.verify|verify} messages.
         * @param message MsgBroadcastDeleteMessage message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgBroadcastDeleteMessage, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgBroadcastDeleteMessage message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgBroadcastDeleteMessage
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgBroadcastDeleteMessage;

        /**
         * Decodes a MsgBroadcastDeleteMessage message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgBroadcastDeleteMessage
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgBroadcastDeleteMessage;

        /**
         * Verifies a MsgBroadcastDeleteMessage message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgBroadcastDeleteMessage message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgBroadcastDeleteMessage
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgBroadcastDeleteMessage;

        /**
         * Creates a plain object from a MsgBroadcastDeleteMessage message. Also converts values to other types if specified.
         * @param message MsgBroadcastDeleteMessage
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgBroadcastDeleteMessage, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgBroadcastDeleteMessage to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgBroadcastDeleteMessage {

        /** Properties of a C. */
        interface IC {

            /** C messageId */
            messageId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgBroadcastDeleteMessage.IC);

            /** C messageId. */
            public messageId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgBroadcastDeleteMessage.IC): NetMessage.MsgBroadcastDeleteMessage.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgBroadcastDeleteMessage.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgBroadcastDeleteMessage.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgBroadcastDeleteMessage.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgBroadcastDeleteMessage.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgBroadcastDeleteMessage.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgBroadcastDeleteMessage.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgBroadcastDeleteMessage.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgBroadcastDeleteMessage.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S messageId */
            messageId?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgBroadcastDeleteMessage.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S messageId. */
            public messageId: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgBroadcastDeleteMessage.IS): NetMessage.MsgBroadcastDeleteMessage.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgBroadcastDeleteMessage.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgBroadcastDeleteMessage.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgBroadcastDeleteMessage.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgBroadcastDeleteMessage.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgBroadcastDeleteMessage.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgBroadcastDeleteMessage.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgBroadcastDeleteMessage.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgBroadcastDeleteMessage.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgBroadcastDoBroadcast. */
    interface IMsgBroadcastDoBroadcast {

        /** MsgBroadcastDoBroadcast c */
        c?: (NetMessage.MsgBroadcastDoBroadcast.IC|null);

        /** MsgBroadcastDoBroadcast s */
        s?: (NetMessage.MsgBroadcastDoBroadcast.IS|null);
    }

    /** Represents a MsgBroadcastDoBroadcast. */
    class MsgBroadcastDoBroadcast implements IMsgBroadcastDoBroadcast {

        /**
         * Constructs a new MsgBroadcastDoBroadcast.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgBroadcastDoBroadcast);

        /** MsgBroadcastDoBroadcast c. */
        public c?: (NetMessage.MsgBroadcastDoBroadcast.IC|null);

        /** MsgBroadcastDoBroadcast s. */
        public s?: (NetMessage.MsgBroadcastDoBroadcast.IS|null);

        /**
         * Creates a new MsgBroadcastDoBroadcast instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgBroadcastDoBroadcast instance
         */
        public static create(properties?: NetMessage.IMsgBroadcastDoBroadcast): NetMessage.MsgBroadcastDoBroadcast;

        /**
         * Encodes the specified MsgBroadcastDoBroadcast message. Does not implicitly {@link NetMessage.MsgBroadcastDoBroadcast.verify|verify} messages.
         * @param message MsgBroadcastDoBroadcast message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgBroadcastDoBroadcast, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgBroadcastDoBroadcast message, length delimited. Does not implicitly {@link NetMessage.MsgBroadcastDoBroadcast.verify|verify} messages.
         * @param message MsgBroadcastDoBroadcast message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgBroadcastDoBroadcast, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgBroadcastDoBroadcast message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgBroadcastDoBroadcast
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgBroadcastDoBroadcast;

        /**
         * Decodes a MsgBroadcastDoBroadcast message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgBroadcastDoBroadcast
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgBroadcastDoBroadcast;

        /**
         * Verifies a MsgBroadcastDoBroadcast message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgBroadcastDoBroadcast message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgBroadcastDoBroadcast
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgBroadcastDoBroadcast;

        /**
         * Creates a plain object from a MsgBroadcastDoBroadcast message. Also converts values to other types if specified.
         * @param message MsgBroadcastDoBroadcast
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgBroadcastDoBroadcast, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgBroadcastDoBroadcast to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgBroadcastDoBroadcast {

        /** Properties of a C. */
        interface IC {
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgBroadcastDoBroadcast.IC);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgBroadcastDoBroadcast.IC): NetMessage.MsgBroadcastDoBroadcast.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgBroadcastDoBroadcast.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgBroadcastDoBroadcast.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgBroadcastDoBroadcast.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgBroadcastDoBroadcast.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgBroadcastDoBroadcast.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgBroadcastDoBroadcast.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgBroadcastDoBroadcast.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgBroadcastDoBroadcast.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgBroadcastDoBroadcast.IS);

            /** S errorCode. */
            public errorCode: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgBroadcastDoBroadcast.IS): NetMessage.MsgBroadcastDoBroadcast.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgBroadcastDoBroadcast.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgBroadcastDoBroadcast.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgBroadcastDoBroadcast.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgBroadcastDoBroadcast.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgBroadcastDoBroadcast.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgBroadcastDoBroadcast.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgBroadcastDoBroadcast.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgBroadcastDoBroadcast.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgBroadcastGetMessageData. */
    interface IMsgBroadcastGetMessageData {

        /** MsgBroadcastGetMessageData c */
        c?: (NetMessage.MsgBroadcastGetMessageData.IC|null);

        /** MsgBroadcastGetMessageData s */
        s?: (NetMessage.MsgBroadcastGetMessageData.IS|null);
    }

    /** Represents a MsgBroadcastGetMessageData. */
    class MsgBroadcastGetMessageData implements IMsgBroadcastGetMessageData {

        /**
         * Constructs a new MsgBroadcastGetMessageData.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgBroadcastGetMessageData);

        /** MsgBroadcastGetMessageData c. */
        public c?: (NetMessage.MsgBroadcastGetMessageData.IC|null);

        /** MsgBroadcastGetMessageData s. */
        public s?: (NetMessage.MsgBroadcastGetMessageData.IS|null);

        /**
         * Creates a new MsgBroadcastGetMessageData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgBroadcastGetMessageData instance
         */
        public static create(properties?: NetMessage.IMsgBroadcastGetMessageData): NetMessage.MsgBroadcastGetMessageData;

        /**
         * Encodes the specified MsgBroadcastGetMessageData message. Does not implicitly {@link NetMessage.MsgBroadcastGetMessageData.verify|verify} messages.
         * @param message MsgBroadcastGetMessageData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgBroadcastGetMessageData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgBroadcastGetMessageData message, length delimited. Does not implicitly {@link NetMessage.MsgBroadcastGetMessageData.verify|verify} messages.
         * @param message MsgBroadcastGetMessageData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgBroadcastGetMessageData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgBroadcastGetMessageData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgBroadcastGetMessageData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgBroadcastGetMessageData;

        /**
         * Decodes a MsgBroadcastGetMessageData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgBroadcastGetMessageData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgBroadcastGetMessageData;

        /**
         * Verifies a MsgBroadcastGetMessageData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgBroadcastGetMessageData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgBroadcastGetMessageData
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgBroadcastGetMessageData;

        /**
         * Creates a plain object from a MsgBroadcastGetMessageData message. Also converts values to other types if specified.
         * @param message MsgBroadcastGetMessageData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgBroadcastGetMessageData, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgBroadcastGetMessageData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgBroadcastGetMessageData {

        /** Properties of a C. */
        interface IC {

            /** C messageId */
            messageId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgBroadcastGetMessageData.IC);

            /** C messageId. */
            public messageId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgBroadcastGetMessageData.IC): NetMessage.MsgBroadcastGetMessageData.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgBroadcastGetMessageData.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgBroadcastGetMessageData.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgBroadcastGetMessageData.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgBroadcastGetMessageData.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgBroadcastGetMessageData.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgBroadcastGetMessageData.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgBroadcastGetMessageData.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgBroadcastGetMessageData.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S messageId */
            messageId?: (number|null);

            /** S messageData */
            messageData?: (Broadcast.IBroadcastMessage|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgBroadcastGetMessageData.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S messageId. */
            public messageId: number;

            /** S messageData. */
            public messageData?: (Broadcast.IBroadcastMessage|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgBroadcastGetMessageData.IS): NetMessage.MsgBroadcastGetMessageData.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgBroadcastGetMessageData.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgBroadcastGetMessageData.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgBroadcastGetMessageData.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgBroadcastGetMessageData.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgBroadcastGetMessageData.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgBroadcastGetMessageData.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgBroadcastGetMessageData.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgBroadcastGetMessageData.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgChangeLogGetMessageList. */
    interface IMsgChangeLogGetMessageList {

        /** MsgChangeLogGetMessageList c */
        c?: (NetMessage.MsgChangeLogGetMessageList.IC|null);

        /** MsgChangeLogGetMessageList s */
        s?: (NetMessage.MsgChangeLogGetMessageList.IS|null);
    }

    /** Represents a MsgChangeLogGetMessageList. */
    class MsgChangeLogGetMessageList implements IMsgChangeLogGetMessageList {

        /**
         * Constructs a new MsgChangeLogGetMessageList.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgChangeLogGetMessageList);

        /** MsgChangeLogGetMessageList c. */
        public c?: (NetMessage.MsgChangeLogGetMessageList.IC|null);

        /** MsgChangeLogGetMessageList s. */
        public s?: (NetMessage.MsgChangeLogGetMessageList.IS|null);

        /**
         * Creates a new MsgChangeLogGetMessageList instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgChangeLogGetMessageList instance
         */
        public static create(properties?: NetMessage.IMsgChangeLogGetMessageList): NetMessage.MsgChangeLogGetMessageList;

        /**
         * Encodes the specified MsgChangeLogGetMessageList message. Does not implicitly {@link NetMessage.MsgChangeLogGetMessageList.verify|verify} messages.
         * @param message MsgChangeLogGetMessageList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgChangeLogGetMessageList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgChangeLogGetMessageList message, length delimited. Does not implicitly {@link NetMessage.MsgChangeLogGetMessageList.verify|verify} messages.
         * @param message MsgChangeLogGetMessageList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgChangeLogGetMessageList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgChangeLogGetMessageList message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgChangeLogGetMessageList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgChangeLogGetMessageList;

        /**
         * Decodes a MsgChangeLogGetMessageList message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgChangeLogGetMessageList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgChangeLogGetMessageList;

        /**
         * Verifies a MsgChangeLogGetMessageList message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgChangeLogGetMessageList message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgChangeLogGetMessageList
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgChangeLogGetMessageList;

        /**
         * Creates a plain object from a MsgChangeLogGetMessageList message. Also converts values to other types if specified.
         * @param message MsgChangeLogGetMessageList
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgChangeLogGetMessageList, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgChangeLogGetMessageList to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgChangeLogGetMessageList {

        /** Properties of a C. */
        interface IC {
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgChangeLogGetMessageList.IC);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgChangeLogGetMessageList.IC): NetMessage.MsgChangeLogGetMessageList.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgChangeLogGetMessageList.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgChangeLogGetMessageList.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgChangeLogGetMessageList.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgChangeLogGetMessageList.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgChangeLogGetMessageList.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgChangeLogGetMessageList.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgChangeLogGetMessageList.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgChangeLogGetMessageList.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S messageList */
            messageList?: (ChangeLog.IChangeLogMessage[]|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgChangeLogGetMessageList.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S messageList. */
            public messageList: ChangeLog.IChangeLogMessage[];

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgChangeLogGetMessageList.IS): NetMessage.MsgChangeLogGetMessageList.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgChangeLogGetMessageList.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgChangeLogGetMessageList.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgChangeLogGetMessageList.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgChangeLogGetMessageList.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgChangeLogGetMessageList.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgChangeLogGetMessageList.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgChangeLogGetMessageList.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgChangeLogGetMessageList.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgChangeLogAddMessage. */
    interface IMsgChangeLogAddMessage {

        /** MsgChangeLogAddMessage c */
        c?: (NetMessage.MsgChangeLogAddMessage.IC|null);

        /** MsgChangeLogAddMessage s */
        s?: (NetMessage.MsgChangeLogAddMessage.IS|null);
    }

    /** Represents a MsgChangeLogAddMessage. */
    class MsgChangeLogAddMessage implements IMsgChangeLogAddMessage {

        /**
         * Constructs a new MsgChangeLogAddMessage.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgChangeLogAddMessage);

        /** MsgChangeLogAddMessage c. */
        public c?: (NetMessage.MsgChangeLogAddMessage.IC|null);

        /** MsgChangeLogAddMessage s. */
        public s?: (NetMessage.MsgChangeLogAddMessage.IS|null);

        /**
         * Creates a new MsgChangeLogAddMessage instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgChangeLogAddMessage instance
         */
        public static create(properties?: NetMessage.IMsgChangeLogAddMessage): NetMessage.MsgChangeLogAddMessage;

        /**
         * Encodes the specified MsgChangeLogAddMessage message. Does not implicitly {@link NetMessage.MsgChangeLogAddMessage.verify|verify} messages.
         * @param message MsgChangeLogAddMessage message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgChangeLogAddMessage, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgChangeLogAddMessage message, length delimited. Does not implicitly {@link NetMessage.MsgChangeLogAddMessage.verify|verify} messages.
         * @param message MsgChangeLogAddMessage message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgChangeLogAddMessage, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgChangeLogAddMessage message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgChangeLogAddMessage
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgChangeLogAddMessage;

        /**
         * Decodes a MsgChangeLogAddMessage message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgChangeLogAddMessage
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgChangeLogAddMessage;

        /**
         * Verifies a MsgChangeLogAddMessage message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgChangeLogAddMessage message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgChangeLogAddMessage
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgChangeLogAddMessage;

        /**
         * Creates a plain object from a MsgChangeLogAddMessage message. Also converts values to other types if specified.
         * @param message MsgChangeLogAddMessage
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgChangeLogAddMessage, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgChangeLogAddMessage to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgChangeLogAddMessage {

        /** Properties of a C. */
        interface IC {

            /** C textList */
            textList?: (Structure.ILanguageText[]|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgChangeLogAddMessage.IC);

            /** C textList. */
            public textList: Structure.ILanguageText[];

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgChangeLogAddMessage.IC): NetMessage.MsgChangeLogAddMessage.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgChangeLogAddMessage.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgChangeLogAddMessage.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgChangeLogAddMessage.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgChangeLogAddMessage.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgChangeLogAddMessage.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgChangeLogAddMessage.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgChangeLogAddMessage.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgChangeLogAddMessage.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S messageId */
            messageId?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgChangeLogAddMessage.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S messageId. */
            public messageId: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgChangeLogAddMessage.IS): NetMessage.MsgChangeLogAddMessage.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgChangeLogAddMessage.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgChangeLogAddMessage.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgChangeLogAddMessage.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgChangeLogAddMessage.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgChangeLogAddMessage.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgChangeLogAddMessage.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgChangeLogAddMessage.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgChangeLogAddMessage.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgChangeLogModifyMessage. */
    interface IMsgChangeLogModifyMessage {

        /** MsgChangeLogModifyMessage c */
        c?: (NetMessage.MsgChangeLogModifyMessage.IC|null);

        /** MsgChangeLogModifyMessage s */
        s?: (NetMessage.MsgChangeLogModifyMessage.IS|null);
    }

    /** Represents a MsgChangeLogModifyMessage. */
    class MsgChangeLogModifyMessage implements IMsgChangeLogModifyMessage {

        /**
         * Constructs a new MsgChangeLogModifyMessage.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgChangeLogModifyMessage);

        /** MsgChangeLogModifyMessage c. */
        public c?: (NetMessage.MsgChangeLogModifyMessage.IC|null);

        /** MsgChangeLogModifyMessage s. */
        public s?: (NetMessage.MsgChangeLogModifyMessage.IS|null);

        /**
         * Creates a new MsgChangeLogModifyMessage instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgChangeLogModifyMessage instance
         */
        public static create(properties?: NetMessage.IMsgChangeLogModifyMessage): NetMessage.MsgChangeLogModifyMessage;

        /**
         * Encodes the specified MsgChangeLogModifyMessage message. Does not implicitly {@link NetMessage.MsgChangeLogModifyMessage.verify|verify} messages.
         * @param message MsgChangeLogModifyMessage message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgChangeLogModifyMessage, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgChangeLogModifyMessage message, length delimited. Does not implicitly {@link NetMessage.MsgChangeLogModifyMessage.verify|verify} messages.
         * @param message MsgChangeLogModifyMessage message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgChangeLogModifyMessage, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgChangeLogModifyMessage message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgChangeLogModifyMessage
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgChangeLogModifyMessage;

        /**
         * Decodes a MsgChangeLogModifyMessage message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgChangeLogModifyMessage
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgChangeLogModifyMessage;

        /**
         * Verifies a MsgChangeLogModifyMessage message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgChangeLogModifyMessage message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgChangeLogModifyMessage
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgChangeLogModifyMessage;

        /**
         * Creates a plain object from a MsgChangeLogModifyMessage message. Also converts values to other types if specified.
         * @param message MsgChangeLogModifyMessage
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgChangeLogModifyMessage, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgChangeLogModifyMessage to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgChangeLogModifyMessage {

        /** Properties of a C. */
        interface IC {

            /** C messageId */
            messageId?: (number|null);

            /** C textList */
            textList?: (Structure.ILanguageText[]|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgChangeLogModifyMessage.IC);

            /** C messageId. */
            public messageId: number;

            /** C textList. */
            public textList: Structure.ILanguageText[];

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgChangeLogModifyMessage.IC): NetMessage.MsgChangeLogModifyMessage.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgChangeLogModifyMessage.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgChangeLogModifyMessage.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgChangeLogModifyMessage.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgChangeLogModifyMessage.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgChangeLogModifyMessage.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgChangeLogModifyMessage.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgChangeLogModifyMessage.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgChangeLogModifyMessage.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S messageId */
            messageId?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgChangeLogModifyMessage.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S messageId. */
            public messageId: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgChangeLogModifyMessage.IS): NetMessage.MsgChangeLogModifyMessage.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgChangeLogModifyMessage.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgChangeLogModifyMessage.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgChangeLogModifyMessage.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgChangeLogModifyMessage.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgChangeLogModifyMessage.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgChangeLogModifyMessage.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgChangeLogModifyMessage.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgChangeLogModifyMessage.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgUserRegister. */
    interface IMsgUserRegister {

        /** MsgUserRegister c */
        c?: (NetMessage.MsgUserRegister.IC|null);

        /** MsgUserRegister s */
        s?: (NetMessage.MsgUserRegister.IS|null);
    }

    /** Represents a MsgUserRegister. */
    class MsgUserRegister implements IMsgUserRegister {

        /**
         * Constructs a new MsgUserRegister.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgUserRegister);

        /** MsgUserRegister c. */
        public c?: (NetMessage.MsgUserRegister.IC|null);

        /** MsgUserRegister s. */
        public s?: (NetMessage.MsgUserRegister.IS|null);

        /**
         * Creates a new MsgUserRegister instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgUserRegister instance
         */
        public static create(properties?: NetMessage.IMsgUserRegister): NetMessage.MsgUserRegister;

        /**
         * Encodes the specified MsgUserRegister message. Does not implicitly {@link NetMessage.MsgUserRegister.verify|verify} messages.
         * @param message MsgUserRegister message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgUserRegister, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgUserRegister message, length delimited. Does not implicitly {@link NetMessage.MsgUserRegister.verify|verify} messages.
         * @param message MsgUserRegister message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgUserRegister, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgUserRegister message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgUserRegister
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserRegister;

        /**
         * Decodes a MsgUserRegister message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgUserRegister
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserRegister;

        /**
         * Verifies a MsgUserRegister message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgUserRegister message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgUserRegister
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserRegister;

        /**
         * Creates a plain object from a MsgUserRegister message. Also converts values to other types if specified.
         * @param message MsgUserRegister
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgUserRegister, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgUserRegister to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgUserRegister {

        /** Properties of a C. */
        interface IC {

            /** C account */
            account?: (string|null);

            /** C password */
            password?: (string|null);

            /** C nickname */
            nickname?: (string|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgUserRegister.IC);

            /** C account. */
            public account: string;

            /** C password. */
            public password: string;

            /** C nickname. */
            public nickname: string;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgUserRegister.IC): NetMessage.MsgUserRegister.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgUserRegister.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgUserRegister.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgUserRegister.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgUserRegister.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserRegister.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserRegister.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserRegister.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgUserRegister.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S account */
            account?: (string|null);

            /** S password */
            password?: (string|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgUserRegister.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S account. */
            public account: string;

            /** S password. */
            public password: string;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgUserRegister.IS): NetMessage.MsgUserRegister.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgUserRegister.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgUserRegister.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgUserRegister.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgUserRegister.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserRegister.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserRegister.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserRegister.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgUserRegister.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgUserLogin. */
    interface IMsgUserLogin {

        /** MsgUserLogin c */
        c?: (NetMessage.MsgUserLogin.IC|null);

        /** MsgUserLogin s */
        s?: (NetMessage.MsgUserLogin.IS|null);
    }

    /** Represents a MsgUserLogin. */
    class MsgUserLogin implements IMsgUserLogin {

        /**
         * Constructs a new MsgUserLogin.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgUserLogin);

        /** MsgUserLogin c. */
        public c?: (NetMessage.MsgUserLogin.IC|null);

        /** MsgUserLogin s. */
        public s?: (NetMessage.MsgUserLogin.IS|null);

        /**
         * Creates a new MsgUserLogin instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgUserLogin instance
         */
        public static create(properties?: NetMessage.IMsgUserLogin): NetMessage.MsgUserLogin;

        /**
         * Encodes the specified MsgUserLogin message. Does not implicitly {@link NetMessage.MsgUserLogin.verify|verify} messages.
         * @param message MsgUserLogin message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgUserLogin, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgUserLogin message, length delimited. Does not implicitly {@link NetMessage.MsgUserLogin.verify|verify} messages.
         * @param message MsgUserLogin message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgUserLogin, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgUserLogin message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgUserLogin
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserLogin;

        /**
         * Decodes a MsgUserLogin message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgUserLogin
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserLogin;

        /**
         * Verifies a MsgUserLogin message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgUserLogin message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgUserLogin
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserLogin;

        /**
         * Creates a plain object from a MsgUserLogin message. Also converts values to other types if specified.
         * @param message MsgUserLogin
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgUserLogin, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgUserLogin to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgUserLogin {

        /** Properties of a C. */
        interface IC {

            /** C account */
            account?: (string|null);

            /** C password */
            password?: (string|null);

            /** C isAutoRelogin */
            isAutoRelogin?: (boolean|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgUserLogin.IC);

            /** C account. */
            public account: string;

            /** C password. */
            public password: string;

            /** C isAutoRelogin. */
            public isAutoRelogin: boolean;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgUserLogin.IC): NetMessage.MsgUserLogin.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgUserLogin.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgUserLogin.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgUserLogin.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgUserLogin.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserLogin.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserLogin.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserLogin.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgUserLogin.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S userSelfInfo */
            userSelfInfo?: (User.IUserSelfInfo|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgUserLogin.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S userSelfInfo. */
            public userSelfInfo?: (User.IUserSelfInfo|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgUserLogin.IS): NetMessage.MsgUserLogin.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgUserLogin.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgUserLogin.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgUserLogin.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgUserLogin.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserLogin.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserLogin.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserLogin.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgUserLogin.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgUserLogout. */
    interface IMsgUserLogout {

        /** MsgUserLogout c */
        c?: (NetMessage.MsgUserLogout.IC|null);

        /** MsgUserLogout s */
        s?: (NetMessage.MsgUserLogout.IS|null);
    }

    /** Represents a MsgUserLogout. */
    class MsgUserLogout implements IMsgUserLogout {

        /**
         * Constructs a new MsgUserLogout.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgUserLogout);

        /** MsgUserLogout c. */
        public c?: (NetMessage.MsgUserLogout.IC|null);

        /** MsgUserLogout s. */
        public s?: (NetMessage.MsgUserLogout.IS|null);

        /**
         * Creates a new MsgUserLogout instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgUserLogout instance
         */
        public static create(properties?: NetMessage.IMsgUserLogout): NetMessage.MsgUserLogout;

        /**
         * Encodes the specified MsgUserLogout message. Does not implicitly {@link NetMessage.MsgUserLogout.verify|verify} messages.
         * @param message MsgUserLogout message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgUserLogout, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgUserLogout message, length delimited. Does not implicitly {@link NetMessage.MsgUserLogout.verify|verify} messages.
         * @param message MsgUserLogout message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgUserLogout, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgUserLogout message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgUserLogout
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserLogout;

        /**
         * Decodes a MsgUserLogout message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgUserLogout
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserLogout;

        /**
         * Verifies a MsgUserLogout message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgUserLogout message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgUserLogout
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserLogout;

        /**
         * Creates a plain object from a MsgUserLogout message. Also converts values to other types if specified.
         * @param message MsgUserLogout
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgUserLogout, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgUserLogout to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgUserLogout {

        /** Properties of a C. */
        interface IC {
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgUserLogout.IC);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgUserLogout.IC): NetMessage.MsgUserLogout.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgUserLogout.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgUserLogout.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgUserLogout.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgUserLogout.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserLogout.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserLogout.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserLogout.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgUserLogout.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S reason */
            reason?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgUserLogout.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S reason. */
            public reason: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgUserLogout.IS): NetMessage.MsgUserLogout.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgUserLogout.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgUserLogout.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgUserLogout.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgUserLogout.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserLogout.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserLogout.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserLogout.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgUserLogout.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgUserGetPublicInfo. */
    interface IMsgUserGetPublicInfo {

        /** MsgUserGetPublicInfo c */
        c?: (NetMessage.MsgUserGetPublicInfo.IC|null);

        /** MsgUserGetPublicInfo s */
        s?: (NetMessage.MsgUserGetPublicInfo.IS|null);
    }

    /** Represents a MsgUserGetPublicInfo. */
    class MsgUserGetPublicInfo implements IMsgUserGetPublicInfo {

        /**
         * Constructs a new MsgUserGetPublicInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgUserGetPublicInfo);

        /** MsgUserGetPublicInfo c. */
        public c?: (NetMessage.MsgUserGetPublicInfo.IC|null);

        /** MsgUserGetPublicInfo s. */
        public s?: (NetMessage.MsgUserGetPublicInfo.IS|null);

        /**
         * Creates a new MsgUserGetPublicInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgUserGetPublicInfo instance
         */
        public static create(properties?: NetMessage.IMsgUserGetPublicInfo): NetMessage.MsgUserGetPublicInfo;

        /**
         * Encodes the specified MsgUserGetPublicInfo message. Does not implicitly {@link NetMessage.MsgUserGetPublicInfo.verify|verify} messages.
         * @param message MsgUserGetPublicInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgUserGetPublicInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgUserGetPublicInfo message, length delimited. Does not implicitly {@link NetMessage.MsgUserGetPublicInfo.verify|verify} messages.
         * @param message MsgUserGetPublicInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgUserGetPublicInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgUserGetPublicInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgUserGetPublicInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserGetPublicInfo;

        /**
         * Decodes a MsgUserGetPublicInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgUserGetPublicInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserGetPublicInfo;

        /**
         * Verifies a MsgUserGetPublicInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgUserGetPublicInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgUserGetPublicInfo
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserGetPublicInfo;

        /**
         * Creates a plain object from a MsgUserGetPublicInfo message. Also converts values to other types if specified.
         * @param message MsgUserGetPublicInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgUserGetPublicInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgUserGetPublicInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgUserGetPublicInfo {

        /** Properties of a C. */
        interface IC {

            /** C userId */
            userId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgUserGetPublicInfo.IC);

            /** C userId. */
            public userId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgUserGetPublicInfo.IC): NetMessage.MsgUserGetPublicInfo.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgUserGetPublicInfo.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgUserGetPublicInfo.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgUserGetPublicInfo.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgUserGetPublicInfo.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserGetPublicInfo.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserGetPublicInfo.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserGetPublicInfo.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgUserGetPublicInfo.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S userId */
            userId?: (number|null);

            /** S userPublicInfo */
            userPublicInfo?: (User.IUserPublicInfo|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgUserGetPublicInfo.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S userId. */
            public userId: number;

            /** S userPublicInfo. */
            public userPublicInfo?: (User.IUserPublicInfo|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgUserGetPublicInfo.IS): NetMessage.MsgUserGetPublicInfo.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgUserGetPublicInfo.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgUserGetPublicInfo.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgUserGetPublicInfo.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgUserGetPublicInfo.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserGetPublicInfo.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserGetPublicInfo.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserGetPublicInfo.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgUserGetPublicInfo.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgUserGetBriefInfo. */
    interface IMsgUserGetBriefInfo {

        /** MsgUserGetBriefInfo c */
        c?: (NetMessage.MsgUserGetBriefInfo.IC|null);

        /** MsgUserGetBriefInfo s */
        s?: (NetMessage.MsgUserGetBriefInfo.IS|null);
    }

    /** Represents a MsgUserGetBriefInfo. */
    class MsgUserGetBriefInfo implements IMsgUserGetBriefInfo {

        /**
         * Constructs a new MsgUserGetBriefInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgUserGetBriefInfo);

        /** MsgUserGetBriefInfo c. */
        public c?: (NetMessage.MsgUserGetBriefInfo.IC|null);

        /** MsgUserGetBriefInfo s. */
        public s?: (NetMessage.MsgUserGetBriefInfo.IS|null);

        /**
         * Creates a new MsgUserGetBriefInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgUserGetBriefInfo instance
         */
        public static create(properties?: NetMessage.IMsgUserGetBriefInfo): NetMessage.MsgUserGetBriefInfo;

        /**
         * Encodes the specified MsgUserGetBriefInfo message. Does not implicitly {@link NetMessage.MsgUserGetBriefInfo.verify|verify} messages.
         * @param message MsgUserGetBriefInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgUserGetBriefInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgUserGetBriefInfo message, length delimited. Does not implicitly {@link NetMessage.MsgUserGetBriefInfo.verify|verify} messages.
         * @param message MsgUserGetBriefInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgUserGetBriefInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgUserGetBriefInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgUserGetBriefInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserGetBriefInfo;

        /**
         * Decodes a MsgUserGetBriefInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgUserGetBriefInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserGetBriefInfo;

        /**
         * Verifies a MsgUserGetBriefInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgUserGetBriefInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgUserGetBriefInfo
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserGetBriefInfo;

        /**
         * Creates a plain object from a MsgUserGetBriefInfo message. Also converts values to other types if specified.
         * @param message MsgUserGetBriefInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgUserGetBriefInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgUserGetBriefInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgUserGetBriefInfo {

        /** Properties of a C. */
        interface IC {

            /** C userId */
            userId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgUserGetBriefInfo.IC);

            /** C userId. */
            public userId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgUserGetBriefInfo.IC): NetMessage.MsgUserGetBriefInfo.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgUserGetBriefInfo.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgUserGetBriefInfo.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgUserGetBriefInfo.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgUserGetBriefInfo.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserGetBriefInfo.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserGetBriefInfo.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserGetBriefInfo.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgUserGetBriefInfo.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S userId */
            userId?: (number|null);

            /** S userBriefInfo */
            userBriefInfo?: (User.IUserBriefInfo|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgUserGetBriefInfo.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S userId. */
            public userId: number;

            /** S userBriefInfo. */
            public userBriefInfo?: (User.IUserBriefInfo|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgUserGetBriefInfo.IS): NetMessage.MsgUserGetBriefInfo.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgUserGetBriefInfo.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgUserGetBriefInfo.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgUserGetBriefInfo.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgUserGetBriefInfo.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserGetBriefInfo.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserGetBriefInfo.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserGetBriefInfo.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgUserGetBriefInfo.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgUserGetOnlineState. */
    interface IMsgUserGetOnlineState {

        /** MsgUserGetOnlineState c */
        c?: (NetMessage.MsgUserGetOnlineState.IC|null);

        /** MsgUserGetOnlineState s */
        s?: (NetMessage.MsgUserGetOnlineState.IS|null);
    }

    /** Represents a MsgUserGetOnlineState. */
    class MsgUserGetOnlineState implements IMsgUserGetOnlineState {

        /**
         * Constructs a new MsgUserGetOnlineState.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgUserGetOnlineState);

        /** MsgUserGetOnlineState c. */
        public c?: (NetMessage.MsgUserGetOnlineState.IC|null);

        /** MsgUserGetOnlineState s. */
        public s?: (NetMessage.MsgUserGetOnlineState.IS|null);

        /**
         * Creates a new MsgUserGetOnlineState instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgUserGetOnlineState instance
         */
        public static create(properties?: NetMessage.IMsgUserGetOnlineState): NetMessage.MsgUserGetOnlineState;

        /**
         * Encodes the specified MsgUserGetOnlineState message. Does not implicitly {@link NetMessage.MsgUserGetOnlineState.verify|verify} messages.
         * @param message MsgUserGetOnlineState message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgUserGetOnlineState, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgUserGetOnlineState message, length delimited. Does not implicitly {@link NetMessage.MsgUserGetOnlineState.verify|verify} messages.
         * @param message MsgUserGetOnlineState message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgUserGetOnlineState, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgUserGetOnlineState message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgUserGetOnlineState
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserGetOnlineState;

        /**
         * Decodes a MsgUserGetOnlineState message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgUserGetOnlineState
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserGetOnlineState;

        /**
         * Verifies a MsgUserGetOnlineState message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgUserGetOnlineState message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgUserGetOnlineState
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserGetOnlineState;

        /**
         * Creates a plain object from a MsgUserGetOnlineState message. Also converts values to other types if specified.
         * @param message MsgUserGetOnlineState
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgUserGetOnlineState, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgUserGetOnlineState to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgUserGetOnlineState {

        /** Properties of a C. */
        interface IC {

            /** C userId */
            userId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgUserGetOnlineState.IC);

            /** C userId. */
            public userId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgUserGetOnlineState.IC): NetMessage.MsgUserGetOnlineState.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgUserGetOnlineState.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgUserGetOnlineState.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgUserGetOnlineState.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgUserGetOnlineState.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserGetOnlineState.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserGetOnlineState.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserGetOnlineState.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgUserGetOnlineState.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S userId */
            userId?: (number|null);

            /** S isOnline */
            isOnline?: (boolean|null);

            /** S lastActivityTime */
            lastActivityTime?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgUserGetOnlineState.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S userId. */
            public userId: number;

            /** S isOnline. */
            public isOnline: boolean;

            /** S lastActivityTime. */
            public lastActivityTime: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgUserGetOnlineState.IS): NetMessage.MsgUserGetOnlineState.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgUserGetOnlineState.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgUserGetOnlineState.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgUserGetOnlineState.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgUserGetOnlineState.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserGetOnlineState.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserGetOnlineState.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserGetOnlineState.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgUserGetOnlineState.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgUserSetNickname. */
    interface IMsgUserSetNickname {

        /** MsgUserSetNickname c */
        c?: (NetMessage.MsgUserSetNickname.IC|null);

        /** MsgUserSetNickname s */
        s?: (NetMessage.MsgUserSetNickname.IS|null);
    }

    /** Represents a MsgUserSetNickname. */
    class MsgUserSetNickname implements IMsgUserSetNickname {

        /**
         * Constructs a new MsgUserSetNickname.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgUserSetNickname);

        /** MsgUserSetNickname c. */
        public c?: (NetMessage.MsgUserSetNickname.IC|null);

        /** MsgUserSetNickname s. */
        public s?: (NetMessage.MsgUserSetNickname.IS|null);

        /**
         * Creates a new MsgUserSetNickname instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgUserSetNickname instance
         */
        public static create(properties?: NetMessage.IMsgUserSetNickname): NetMessage.MsgUserSetNickname;

        /**
         * Encodes the specified MsgUserSetNickname message. Does not implicitly {@link NetMessage.MsgUserSetNickname.verify|verify} messages.
         * @param message MsgUserSetNickname message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgUserSetNickname, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgUserSetNickname message, length delimited. Does not implicitly {@link NetMessage.MsgUserSetNickname.verify|verify} messages.
         * @param message MsgUserSetNickname message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgUserSetNickname, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgUserSetNickname message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgUserSetNickname
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserSetNickname;

        /**
         * Decodes a MsgUserSetNickname message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgUserSetNickname
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserSetNickname;

        /**
         * Verifies a MsgUserSetNickname message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgUserSetNickname message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgUserSetNickname
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserSetNickname;

        /**
         * Creates a plain object from a MsgUserSetNickname message. Also converts values to other types if specified.
         * @param message MsgUserSetNickname
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgUserSetNickname, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgUserSetNickname to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgUserSetNickname {

        /** Properties of a C. */
        interface IC {

            /** C nickname */
            nickname?: (string|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgUserSetNickname.IC);

            /** C nickname. */
            public nickname: string;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgUserSetNickname.IC): NetMessage.MsgUserSetNickname.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgUserSetNickname.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgUserSetNickname.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgUserSetNickname.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgUserSetNickname.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserSetNickname.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserSetNickname.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserSetNickname.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgUserSetNickname.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S nickname */
            nickname?: (string|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgUserSetNickname.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S nickname. */
            public nickname: string;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgUserSetNickname.IS): NetMessage.MsgUserSetNickname.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgUserSetNickname.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgUserSetNickname.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgUserSetNickname.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgUserSetNickname.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserSetNickname.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserSetNickname.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserSetNickname.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgUserSetNickname.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgUserSetDiscordId. */
    interface IMsgUserSetDiscordId {

        /** MsgUserSetDiscordId c */
        c?: (NetMessage.MsgUserSetDiscordId.IC|null);

        /** MsgUserSetDiscordId s */
        s?: (NetMessage.MsgUserSetDiscordId.IS|null);
    }

    /** Represents a MsgUserSetDiscordId. */
    class MsgUserSetDiscordId implements IMsgUserSetDiscordId {

        /**
         * Constructs a new MsgUserSetDiscordId.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgUserSetDiscordId);

        /** MsgUserSetDiscordId c. */
        public c?: (NetMessage.MsgUserSetDiscordId.IC|null);

        /** MsgUserSetDiscordId s. */
        public s?: (NetMessage.MsgUserSetDiscordId.IS|null);

        /**
         * Creates a new MsgUserSetDiscordId instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgUserSetDiscordId instance
         */
        public static create(properties?: NetMessage.IMsgUserSetDiscordId): NetMessage.MsgUserSetDiscordId;

        /**
         * Encodes the specified MsgUserSetDiscordId message. Does not implicitly {@link NetMessage.MsgUserSetDiscordId.verify|verify} messages.
         * @param message MsgUserSetDiscordId message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgUserSetDiscordId, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgUserSetDiscordId message, length delimited. Does not implicitly {@link NetMessage.MsgUserSetDiscordId.verify|verify} messages.
         * @param message MsgUserSetDiscordId message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgUserSetDiscordId, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgUserSetDiscordId message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgUserSetDiscordId
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserSetDiscordId;

        /**
         * Decodes a MsgUserSetDiscordId message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgUserSetDiscordId
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserSetDiscordId;

        /**
         * Verifies a MsgUserSetDiscordId message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgUserSetDiscordId message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgUserSetDiscordId
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserSetDiscordId;

        /**
         * Creates a plain object from a MsgUserSetDiscordId message. Also converts values to other types if specified.
         * @param message MsgUserSetDiscordId
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgUserSetDiscordId, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgUserSetDiscordId to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgUserSetDiscordId {

        /** Properties of a C. */
        interface IC {

            /** C discordId */
            discordId?: (string|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgUserSetDiscordId.IC);

            /** C discordId. */
            public discordId: string;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgUserSetDiscordId.IC): NetMessage.MsgUserSetDiscordId.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgUserSetDiscordId.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgUserSetDiscordId.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgUserSetDiscordId.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgUserSetDiscordId.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserSetDiscordId.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserSetDiscordId.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserSetDiscordId.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgUserSetDiscordId.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S discordId */
            discordId?: (string|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgUserSetDiscordId.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S discordId. */
            public discordId: string;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgUserSetDiscordId.IS): NetMessage.MsgUserSetDiscordId.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgUserSetDiscordId.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgUserSetDiscordId.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgUserSetDiscordId.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgUserSetDiscordId.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserSetDiscordId.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserSetDiscordId.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserSetDiscordId.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgUserSetDiscordId.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgUserGetOnlineUserIdArray. */
    interface IMsgUserGetOnlineUserIdArray {

        /** MsgUserGetOnlineUserIdArray c */
        c?: (NetMessage.MsgUserGetOnlineUserIdArray.IC|null);

        /** MsgUserGetOnlineUserIdArray s */
        s?: (NetMessage.MsgUserGetOnlineUserIdArray.IS|null);
    }

    /** Represents a MsgUserGetOnlineUserIdArray. */
    class MsgUserGetOnlineUserIdArray implements IMsgUserGetOnlineUserIdArray {

        /**
         * Constructs a new MsgUserGetOnlineUserIdArray.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgUserGetOnlineUserIdArray);

        /** MsgUserGetOnlineUserIdArray c. */
        public c?: (NetMessage.MsgUserGetOnlineUserIdArray.IC|null);

        /** MsgUserGetOnlineUserIdArray s. */
        public s?: (NetMessage.MsgUserGetOnlineUserIdArray.IS|null);

        /**
         * Creates a new MsgUserGetOnlineUserIdArray instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgUserGetOnlineUserIdArray instance
         */
        public static create(properties?: NetMessage.IMsgUserGetOnlineUserIdArray): NetMessage.MsgUserGetOnlineUserIdArray;

        /**
         * Encodes the specified MsgUserGetOnlineUserIdArray message. Does not implicitly {@link NetMessage.MsgUserGetOnlineUserIdArray.verify|verify} messages.
         * @param message MsgUserGetOnlineUserIdArray message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgUserGetOnlineUserIdArray, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgUserGetOnlineUserIdArray message, length delimited. Does not implicitly {@link NetMessage.MsgUserGetOnlineUserIdArray.verify|verify} messages.
         * @param message MsgUserGetOnlineUserIdArray message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgUserGetOnlineUserIdArray, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgUserGetOnlineUserIdArray message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgUserGetOnlineUserIdArray
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserGetOnlineUserIdArray;

        /**
         * Decodes a MsgUserGetOnlineUserIdArray message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgUserGetOnlineUserIdArray
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserGetOnlineUserIdArray;

        /**
         * Verifies a MsgUserGetOnlineUserIdArray message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgUserGetOnlineUserIdArray message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgUserGetOnlineUserIdArray
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserGetOnlineUserIdArray;

        /**
         * Creates a plain object from a MsgUserGetOnlineUserIdArray message. Also converts values to other types if specified.
         * @param message MsgUserGetOnlineUserIdArray
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgUserGetOnlineUserIdArray, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgUserGetOnlineUserIdArray to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgUserGetOnlineUserIdArray {

        /** Properties of a C. */
        interface IC {
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgUserGetOnlineUserIdArray.IC);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgUserGetOnlineUserIdArray.IC): NetMessage.MsgUserGetOnlineUserIdArray.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgUserGetOnlineUserIdArray.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgUserGetOnlineUserIdArray.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgUserGetOnlineUserIdArray.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgUserGetOnlineUserIdArray.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserGetOnlineUserIdArray.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserGetOnlineUserIdArray.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserGetOnlineUserIdArray.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgUserGetOnlineUserIdArray.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S totalCount */
            totalCount?: (number|null);

            /** S userIdArray */
            userIdArray?: (number[]|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgUserGetOnlineUserIdArray.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S totalCount. */
            public totalCount: number;

            /** S userIdArray. */
            public userIdArray: number[];

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgUserGetOnlineUserIdArray.IS): NetMessage.MsgUserGetOnlineUserIdArray.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgUserGetOnlineUserIdArray.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgUserGetOnlineUserIdArray.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgUserGetOnlineUserIdArray.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgUserGetOnlineUserIdArray.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserGetOnlineUserIdArray.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserGetOnlineUserIdArray.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserGetOnlineUserIdArray.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgUserGetOnlineUserIdArray.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgUserSetPrivilege. */
    interface IMsgUserSetPrivilege {

        /** MsgUserSetPrivilege c */
        c?: (NetMessage.MsgUserSetPrivilege.IC|null);

        /** MsgUserSetPrivilege s */
        s?: (NetMessage.MsgUserSetPrivilege.IS|null);
    }

    /** Represents a MsgUserSetPrivilege. */
    class MsgUserSetPrivilege implements IMsgUserSetPrivilege {

        /**
         * Constructs a new MsgUserSetPrivilege.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgUserSetPrivilege);

        /** MsgUserSetPrivilege c. */
        public c?: (NetMessage.MsgUserSetPrivilege.IC|null);

        /** MsgUserSetPrivilege s. */
        public s?: (NetMessage.MsgUserSetPrivilege.IS|null);

        /**
         * Creates a new MsgUserSetPrivilege instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgUserSetPrivilege instance
         */
        public static create(properties?: NetMessage.IMsgUserSetPrivilege): NetMessage.MsgUserSetPrivilege;

        /**
         * Encodes the specified MsgUserSetPrivilege message. Does not implicitly {@link NetMessage.MsgUserSetPrivilege.verify|verify} messages.
         * @param message MsgUserSetPrivilege message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgUserSetPrivilege, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgUserSetPrivilege message, length delimited. Does not implicitly {@link NetMessage.MsgUserSetPrivilege.verify|verify} messages.
         * @param message MsgUserSetPrivilege message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgUserSetPrivilege, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgUserSetPrivilege message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgUserSetPrivilege
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserSetPrivilege;

        /**
         * Decodes a MsgUserSetPrivilege message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgUserSetPrivilege
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserSetPrivilege;

        /**
         * Verifies a MsgUserSetPrivilege message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgUserSetPrivilege message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgUserSetPrivilege
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserSetPrivilege;

        /**
         * Creates a plain object from a MsgUserSetPrivilege message. Also converts values to other types if specified.
         * @param message MsgUserSetPrivilege
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgUserSetPrivilege, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgUserSetPrivilege to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgUserSetPrivilege {

        /** Properties of a C. */
        interface IC {

            /** C userId */
            userId?: (number|null);

            /** C userPrivilege */
            userPrivilege?: (User.IUserPrivilege|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgUserSetPrivilege.IC);

            /** C userId. */
            public userId: number;

            /** C userPrivilege. */
            public userPrivilege?: (User.IUserPrivilege|null);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgUserSetPrivilege.IC): NetMessage.MsgUserSetPrivilege.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgUserSetPrivilege.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgUserSetPrivilege.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgUserSetPrivilege.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgUserSetPrivilege.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserSetPrivilege.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserSetPrivilege.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserSetPrivilege.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgUserSetPrivilege.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S userId */
            userId?: (number|null);

            /** S userPrivilege */
            userPrivilege?: (User.IUserPrivilege|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgUserSetPrivilege.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S userId. */
            public userId: number;

            /** S userPrivilege. */
            public userPrivilege?: (User.IUserPrivilege|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgUserSetPrivilege.IS): NetMessage.MsgUserSetPrivilege.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgUserSetPrivilege.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgUserSetPrivilege.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgUserSetPrivilege.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgUserSetPrivilege.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserSetPrivilege.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserSetPrivilege.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserSetPrivilege.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgUserSetPrivilege.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgUserSetPassword. */
    interface IMsgUserSetPassword {

        /** MsgUserSetPassword c */
        c?: (NetMessage.MsgUserSetPassword.IC|null);

        /** MsgUserSetPassword s */
        s?: (NetMessage.MsgUserSetPassword.IS|null);
    }

    /** Represents a MsgUserSetPassword. */
    class MsgUserSetPassword implements IMsgUserSetPassword {

        /**
         * Constructs a new MsgUserSetPassword.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgUserSetPassword);

        /** MsgUserSetPassword c. */
        public c?: (NetMessage.MsgUserSetPassword.IC|null);

        /** MsgUserSetPassword s. */
        public s?: (NetMessage.MsgUserSetPassword.IS|null);

        /**
         * Creates a new MsgUserSetPassword instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgUserSetPassword instance
         */
        public static create(properties?: NetMessage.IMsgUserSetPassword): NetMessage.MsgUserSetPassword;

        /**
         * Encodes the specified MsgUserSetPassword message. Does not implicitly {@link NetMessage.MsgUserSetPassword.verify|verify} messages.
         * @param message MsgUserSetPassword message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgUserSetPassword, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgUserSetPassword message, length delimited. Does not implicitly {@link NetMessage.MsgUserSetPassword.verify|verify} messages.
         * @param message MsgUserSetPassword message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgUserSetPassword, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgUserSetPassword message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgUserSetPassword
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserSetPassword;

        /**
         * Decodes a MsgUserSetPassword message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgUserSetPassword
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserSetPassword;

        /**
         * Verifies a MsgUserSetPassword message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgUserSetPassword message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgUserSetPassword
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserSetPassword;

        /**
         * Creates a plain object from a MsgUserSetPassword message. Also converts values to other types if specified.
         * @param message MsgUserSetPassword
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgUserSetPassword, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgUserSetPassword to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgUserSetPassword {

        /** Properties of a C. */
        interface IC {

            /** C oldPassword */
            oldPassword?: (string|null);

            /** C newPassword */
            newPassword?: (string|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgUserSetPassword.IC);

            /** C oldPassword. */
            public oldPassword: string;

            /** C newPassword. */
            public newPassword: string;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgUserSetPassword.IC): NetMessage.MsgUserSetPassword.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgUserSetPassword.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgUserSetPassword.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgUserSetPassword.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgUserSetPassword.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserSetPassword.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserSetPassword.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserSetPassword.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgUserSetPassword.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgUserSetPassword.IS);

            /** S errorCode. */
            public errorCode: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgUserSetPassword.IS): NetMessage.MsgUserSetPassword.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgUserSetPassword.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgUserSetPassword.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgUserSetPassword.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgUserSetPassword.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserSetPassword.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserSetPassword.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserSetPassword.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgUserSetPassword.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgUserSetSettings. */
    interface IMsgUserSetSettings {

        /** MsgUserSetSettings c */
        c?: (NetMessage.MsgUserSetSettings.IC|null);

        /** MsgUserSetSettings s */
        s?: (NetMessage.MsgUserSetSettings.IS|null);
    }

    /** Represents a MsgUserSetSettings. */
    class MsgUserSetSettings implements IMsgUserSetSettings {

        /**
         * Constructs a new MsgUserSetSettings.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgUserSetSettings);

        /** MsgUserSetSettings c. */
        public c?: (NetMessage.MsgUserSetSettings.IC|null);

        /** MsgUserSetSettings s. */
        public s?: (NetMessage.MsgUserSetSettings.IS|null);

        /**
         * Creates a new MsgUserSetSettings instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgUserSetSettings instance
         */
        public static create(properties?: NetMessage.IMsgUserSetSettings): NetMessage.MsgUserSetSettings;

        /**
         * Encodes the specified MsgUserSetSettings message. Does not implicitly {@link NetMessage.MsgUserSetSettings.verify|verify} messages.
         * @param message MsgUserSetSettings message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgUserSetSettings, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgUserSetSettings message, length delimited. Does not implicitly {@link NetMessage.MsgUserSetSettings.verify|verify} messages.
         * @param message MsgUserSetSettings message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgUserSetSettings, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgUserSetSettings message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgUserSetSettings
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserSetSettings;

        /**
         * Decodes a MsgUserSetSettings message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgUserSetSettings
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserSetSettings;

        /**
         * Verifies a MsgUserSetSettings message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgUserSetSettings message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgUserSetSettings
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserSetSettings;

        /**
         * Creates a plain object from a MsgUserSetSettings message. Also converts values to other types if specified.
         * @param message MsgUserSetSettings
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgUserSetSettings, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgUserSetSettings to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgUserSetSettings {

        /** Properties of a C. */
        interface IC {

            /** C userSettings */
            userSettings?: (User.IUserSettings|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgUserSetSettings.IC);

            /** C userSettings. */
            public userSettings?: (User.IUserSettings|null);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgUserSetSettings.IC): NetMessage.MsgUserSetSettings.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgUserSetSettings.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgUserSetSettings.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgUserSetSettings.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgUserSetSettings.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserSetSettings.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserSetSettings.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserSetSettings.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgUserSetSettings.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S userSettings */
            userSettings?: (User.IUserSettings|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgUserSetSettings.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S userSettings. */
            public userSettings?: (User.IUserSettings|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgUserSetSettings.IS): NetMessage.MsgUserSetSettings.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgUserSetSettings.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgUserSetSettings.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgUserSetSettings.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgUserSetSettings.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserSetSettings.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserSetSettings.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserSetSettings.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgUserSetSettings.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgUserSetMapRating. */
    interface IMsgUserSetMapRating {

        /** MsgUserSetMapRating c */
        c?: (NetMessage.MsgUserSetMapRating.IC|null);

        /** MsgUserSetMapRating s */
        s?: (NetMessage.MsgUserSetMapRating.IS|null);
    }

    /** Represents a MsgUserSetMapRating. */
    class MsgUserSetMapRating implements IMsgUserSetMapRating {

        /**
         * Constructs a new MsgUserSetMapRating.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgUserSetMapRating);

        /** MsgUserSetMapRating c. */
        public c?: (NetMessage.MsgUserSetMapRating.IC|null);

        /** MsgUserSetMapRating s. */
        public s?: (NetMessage.MsgUserSetMapRating.IS|null);

        /**
         * Creates a new MsgUserSetMapRating instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgUserSetMapRating instance
         */
        public static create(properties?: NetMessage.IMsgUserSetMapRating): NetMessage.MsgUserSetMapRating;

        /**
         * Encodes the specified MsgUserSetMapRating message. Does not implicitly {@link NetMessage.MsgUserSetMapRating.verify|verify} messages.
         * @param message MsgUserSetMapRating message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgUserSetMapRating, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgUserSetMapRating message, length delimited. Does not implicitly {@link NetMessage.MsgUserSetMapRating.verify|verify} messages.
         * @param message MsgUserSetMapRating message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgUserSetMapRating, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgUserSetMapRating message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgUserSetMapRating
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserSetMapRating;

        /**
         * Decodes a MsgUserSetMapRating message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgUserSetMapRating
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserSetMapRating;

        /**
         * Verifies a MsgUserSetMapRating message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgUserSetMapRating message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgUserSetMapRating
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserSetMapRating;

        /**
         * Creates a plain object from a MsgUserSetMapRating message. Also converts values to other types if specified.
         * @param message MsgUserSetMapRating
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgUserSetMapRating, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgUserSetMapRating to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgUserSetMapRating {

        /** Properties of a C. */
        interface IC {

            /** C mapId */
            mapId?: (number|null);

            /** C rating */
            rating?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgUserSetMapRating.IC);

            /** C mapId. */
            public mapId: number;

            /** C rating. */
            public rating: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgUserSetMapRating.IC): NetMessage.MsgUserSetMapRating.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgUserSetMapRating.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgUserSetMapRating.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgUserSetMapRating.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgUserSetMapRating.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserSetMapRating.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserSetMapRating.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserSetMapRating.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgUserSetMapRating.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S mapId */
            mapId?: (number|null);

            /** S rating */
            rating?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgUserSetMapRating.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S mapId. */
            public mapId: number;

            /** S rating. */
            public rating: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgUserSetMapRating.IS): NetMessage.MsgUserSetMapRating.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgUserSetMapRating.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgUserSetMapRating.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgUserSetMapRating.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgUserSetMapRating.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserSetMapRating.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserSetMapRating.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserSetMapRating.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgUserSetMapRating.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgUserSetAvatarId. */
    interface IMsgUserSetAvatarId {

        /** MsgUserSetAvatarId c */
        c?: (NetMessage.MsgUserSetAvatarId.IC|null);

        /** MsgUserSetAvatarId s */
        s?: (NetMessage.MsgUserSetAvatarId.IS|null);
    }

    /** Represents a MsgUserSetAvatarId. */
    class MsgUserSetAvatarId implements IMsgUserSetAvatarId {

        /**
         * Constructs a new MsgUserSetAvatarId.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgUserSetAvatarId);

        /** MsgUserSetAvatarId c. */
        public c?: (NetMessage.MsgUserSetAvatarId.IC|null);

        /** MsgUserSetAvatarId s. */
        public s?: (NetMessage.MsgUserSetAvatarId.IS|null);

        /**
         * Creates a new MsgUserSetAvatarId instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgUserSetAvatarId instance
         */
        public static create(properties?: NetMessage.IMsgUserSetAvatarId): NetMessage.MsgUserSetAvatarId;

        /**
         * Encodes the specified MsgUserSetAvatarId message. Does not implicitly {@link NetMessage.MsgUserSetAvatarId.verify|verify} messages.
         * @param message MsgUserSetAvatarId message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgUserSetAvatarId, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgUserSetAvatarId message, length delimited. Does not implicitly {@link NetMessage.MsgUserSetAvatarId.verify|verify} messages.
         * @param message MsgUserSetAvatarId message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgUserSetAvatarId, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgUserSetAvatarId message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgUserSetAvatarId
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserSetAvatarId;

        /**
         * Decodes a MsgUserSetAvatarId message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgUserSetAvatarId
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserSetAvatarId;

        /**
         * Verifies a MsgUserSetAvatarId message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgUserSetAvatarId message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgUserSetAvatarId
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserSetAvatarId;

        /**
         * Creates a plain object from a MsgUserSetAvatarId message. Also converts values to other types if specified.
         * @param message MsgUserSetAvatarId
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgUserSetAvatarId, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgUserSetAvatarId to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgUserSetAvatarId {

        /** Properties of a C. */
        interface IC {

            /** C avatarId */
            avatarId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgUserSetAvatarId.IC);

            /** C avatarId. */
            public avatarId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgUserSetAvatarId.IC): NetMessage.MsgUserSetAvatarId.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgUserSetAvatarId.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgUserSetAvatarId.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgUserSetAvatarId.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgUserSetAvatarId.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserSetAvatarId.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserSetAvatarId.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserSetAvatarId.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgUserSetAvatarId.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S avatarId */
            avatarId?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgUserSetAvatarId.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S avatarId. */
            public avatarId: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgUserSetAvatarId.IS): NetMessage.MsgUserSetAvatarId.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgUserSetAvatarId.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgUserSetAvatarId.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgUserSetAvatarId.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgUserSetAvatarId.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserSetAvatarId.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserSetAvatarId.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserSetAvatarId.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgUserSetAvatarId.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgUserSetMapEditorAutoSaveTime. */
    interface IMsgUserSetMapEditorAutoSaveTime {

        /** MsgUserSetMapEditorAutoSaveTime c */
        c?: (NetMessage.MsgUserSetMapEditorAutoSaveTime.IC|null);

        /** MsgUserSetMapEditorAutoSaveTime s */
        s?: (NetMessage.MsgUserSetMapEditorAutoSaveTime.IS|null);
    }

    /** Represents a MsgUserSetMapEditorAutoSaveTime. */
    class MsgUserSetMapEditorAutoSaveTime implements IMsgUserSetMapEditorAutoSaveTime {

        /**
         * Constructs a new MsgUserSetMapEditorAutoSaveTime.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgUserSetMapEditorAutoSaveTime);

        /** MsgUserSetMapEditorAutoSaveTime c. */
        public c?: (NetMessage.MsgUserSetMapEditorAutoSaveTime.IC|null);

        /** MsgUserSetMapEditorAutoSaveTime s. */
        public s?: (NetMessage.MsgUserSetMapEditorAutoSaveTime.IS|null);

        /**
         * Creates a new MsgUserSetMapEditorAutoSaveTime instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgUserSetMapEditorAutoSaveTime instance
         */
        public static create(properties?: NetMessage.IMsgUserSetMapEditorAutoSaveTime): NetMessage.MsgUserSetMapEditorAutoSaveTime;

        /**
         * Encodes the specified MsgUserSetMapEditorAutoSaveTime message. Does not implicitly {@link NetMessage.MsgUserSetMapEditorAutoSaveTime.verify|verify} messages.
         * @param message MsgUserSetMapEditorAutoSaveTime message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgUserSetMapEditorAutoSaveTime, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgUserSetMapEditorAutoSaveTime message, length delimited. Does not implicitly {@link NetMessage.MsgUserSetMapEditorAutoSaveTime.verify|verify} messages.
         * @param message MsgUserSetMapEditorAutoSaveTime message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgUserSetMapEditorAutoSaveTime, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgUserSetMapEditorAutoSaveTime message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgUserSetMapEditorAutoSaveTime
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserSetMapEditorAutoSaveTime;

        /**
         * Decodes a MsgUserSetMapEditorAutoSaveTime message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgUserSetMapEditorAutoSaveTime
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserSetMapEditorAutoSaveTime;

        /**
         * Verifies a MsgUserSetMapEditorAutoSaveTime message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgUserSetMapEditorAutoSaveTime message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgUserSetMapEditorAutoSaveTime
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserSetMapEditorAutoSaveTime;

        /**
         * Creates a plain object from a MsgUserSetMapEditorAutoSaveTime message. Also converts values to other types if specified.
         * @param message MsgUserSetMapEditorAutoSaveTime
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgUserSetMapEditorAutoSaveTime, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgUserSetMapEditorAutoSaveTime to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgUserSetMapEditorAutoSaveTime {

        /** Properties of a C. */
        interface IC {

            /** C time */
            time?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgUserSetMapEditorAutoSaveTime.IC);

            /** C time. */
            public time: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgUserSetMapEditorAutoSaveTime.IC): NetMessage.MsgUserSetMapEditorAutoSaveTime.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgUserSetMapEditorAutoSaveTime.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgUserSetMapEditorAutoSaveTime.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgUserSetMapEditorAutoSaveTime.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgUserSetMapEditorAutoSaveTime.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserSetMapEditorAutoSaveTime.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserSetMapEditorAutoSaveTime.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserSetMapEditorAutoSaveTime.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgUserSetMapEditorAutoSaveTime.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S time */
            time?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgUserSetMapEditorAutoSaveTime.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S time. */
            public time: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgUserSetMapEditorAutoSaveTime.IS): NetMessage.MsgUserSetMapEditorAutoSaveTime.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgUserSetMapEditorAutoSaveTime.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgUserSetMapEditorAutoSaveTime.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgUserSetMapEditorAutoSaveTime.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgUserSetMapEditorAutoSaveTime.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserSetMapEditorAutoSaveTime.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserSetMapEditorAutoSaveTime.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserSetMapEditorAutoSaveTime.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgUserSetMapEditorAutoSaveTime.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMapGetEnabledMapIdArray. */
    interface IMsgMapGetEnabledMapIdArray {

        /** MsgMapGetEnabledMapIdArray s */
        s?: (NetMessage.MsgMapGetEnabledMapIdArray.IS|null);
    }

    /** Represents a MsgMapGetEnabledMapIdArray. */
    class MsgMapGetEnabledMapIdArray implements IMsgMapGetEnabledMapIdArray {

        /**
         * Constructs a new MsgMapGetEnabledMapIdArray.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMapGetEnabledMapIdArray);

        /** MsgMapGetEnabledMapIdArray s. */
        public s?: (NetMessage.MsgMapGetEnabledMapIdArray.IS|null);

        /**
         * Creates a new MsgMapGetEnabledMapIdArray instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMapGetEnabledMapIdArray instance
         */
        public static create(properties?: NetMessage.IMsgMapGetEnabledMapIdArray): NetMessage.MsgMapGetEnabledMapIdArray;

        /**
         * Encodes the specified MsgMapGetEnabledMapIdArray message. Does not implicitly {@link NetMessage.MsgMapGetEnabledMapIdArray.verify|verify} messages.
         * @param message MsgMapGetEnabledMapIdArray message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMapGetEnabledMapIdArray, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMapGetEnabledMapIdArray message, length delimited. Does not implicitly {@link NetMessage.MsgMapGetEnabledMapIdArray.verify|verify} messages.
         * @param message MsgMapGetEnabledMapIdArray message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMapGetEnabledMapIdArray, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMapGetEnabledMapIdArray message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMapGetEnabledMapIdArray
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMapGetEnabledMapIdArray;

        /**
         * Decodes a MsgMapGetEnabledMapIdArray message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMapGetEnabledMapIdArray
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMapGetEnabledMapIdArray;

        /**
         * Verifies a MsgMapGetEnabledMapIdArray message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMapGetEnabledMapIdArray message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMapGetEnabledMapIdArray
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMapGetEnabledMapIdArray;

        /**
         * Creates a plain object from a MsgMapGetEnabledMapIdArray message. Also converts values to other types if specified.
         * @param message MsgMapGetEnabledMapIdArray
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMapGetEnabledMapIdArray, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMapGetEnabledMapIdArray to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMapGetEnabledMapIdArray {

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S mapIdArray */
            mapIdArray?: (number[]|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMapGetEnabledMapIdArray.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S mapIdArray. */
            public mapIdArray: number[];

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMapGetEnabledMapIdArray.IS): NetMessage.MsgMapGetEnabledMapIdArray.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMapGetEnabledMapIdArray.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMapGetEnabledMapIdArray.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMapGetEnabledMapIdArray.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMapGetEnabledMapIdArray.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMapGetEnabledMapIdArray.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMapGetEnabledMapIdArray.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMapGetEnabledMapIdArray.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMapGetEnabledMapIdArray.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMapGetBriefData. */
    interface IMsgMapGetBriefData {

        /** MsgMapGetBriefData c */
        c?: (NetMessage.MsgMapGetBriefData.IC|null);

        /** MsgMapGetBriefData s */
        s?: (NetMessage.MsgMapGetBriefData.IS|null);
    }

    /** Represents a MsgMapGetBriefData. */
    class MsgMapGetBriefData implements IMsgMapGetBriefData {

        /**
         * Constructs a new MsgMapGetBriefData.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMapGetBriefData);

        /** MsgMapGetBriefData c. */
        public c?: (NetMessage.MsgMapGetBriefData.IC|null);

        /** MsgMapGetBriefData s. */
        public s?: (NetMessage.MsgMapGetBriefData.IS|null);

        /**
         * Creates a new MsgMapGetBriefData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMapGetBriefData instance
         */
        public static create(properties?: NetMessage.IMsgMapGetBriefData): NetMessage.MsgMapGetBriefData;

        /**
         * Encodes the specified MsgMapGetBriefData message. Does not implicitly {@link NetMessage.MsgMapGetBriefData.verify|verify} messages.
         * @param message MsgMapGetBriefData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMapGetBriefData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMapGetBriefData message, length delimited. Does not implicitly {@link NetMessage.MsgMapGetBriefData.verify|verify} messages.
         * @param message MsgMapGetBriefData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMapGetBriefData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMapGetBriefData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMapGetBriefData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMapGetBriefData;

        /**
         * Decodes a MsgMapGetBriefData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMapGetBriefData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMapGetBriefData;

        /**
         * Verifies a MsgMapGetBriefData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMapGetBriefData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMapGetBriefData
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMapGetBriefData;

        /**
         * Creates a plain object from a MsgMapGetBriefData message. Also converts values to other types if specified.
         * @param message MsgMapGetBriefData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMapGetBriefData, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMapGetBriefData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMapGetBriefData {

        /** Properties of a C. */
        interface IC {

            /** C mapId */
            mapId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMapGetBriefData.IC);

            /** C mapId. */
            public mapId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMapGetBriefData.IC): NetMessage.MsgMapGetBriefData.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMapGetBriefData.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMapGetBriefData.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMapGetBriefData.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMapGetBriefData.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMapGetBriefData.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMapGetBriefData.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMapGetBriefData.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMapGetBriefData.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S mapId */
            mapId?: (number|null);

            /** S mapBriefData */
            mapBriefData?: (Map.IMapBriefData|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMapGetBriefData.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S mapId. */
            public mapId: number;

            /** S mapBriefData. */
            public mapBriefData?: (Map.IMapBriefData|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMapGetBriefData.IS): NetMessage.MsgMapGetBriefData.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMapGetBriefData.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMapGetBriefData.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMapGetBriefData.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMapGetBriefData.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMapGetBriefData.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMapGetBriefData.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMapGetBriefData.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMapGetBriefData.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMapGetRawData. */
    interface IMsgMapGetRawData {

        /** MsgMapGetRawData c */
        c?: (NetMessage.MsgMapGetRawData.IC|null);

        /** MsgMapGetRawData s */
        s?: (NetMessage.MsgMapGetRawData.IS|null);
    }

    /** Represents a MsgMapGetRawData. */
    class MsgMapGetRawData implements IMsgMapGetRawData {

        /**
         * Constructs a new MsgMapGetRawData.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMapGetRawData);

        /** MsgMapGetRawData c. */
        public c?: (NetMessage.MsgMapGetRawData.IC|null);

        /** MsgMapGetRawData s. */
        public s?: (NetMessage.MsgMapGetRawData.IS|null);

        /**
         * Creates a new MsgMapGetRawData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMapGetRawData instance
         */
        public static create(properties?: NetMessage.IMsgMapGetRawData): NetMessage.MsgMapGetRawData;

        /**
         * Encodes the specified MsgMapGetRawData message. Does not implicitly {@link NetMessage.MsgMapGetRawData.verify|verify} messages.
         * @param message MsgMapGetRawData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMapGetRawData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMapGetRawData message, length delimited. Does not implicitly {@link NetMessage.MsgMapGetRawData.verify|verify} messages.
         * @param message MsgMapGetRawData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMapGetRawData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMapGetRawData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMapGetRawData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMapGetRawData;

        /**
         * Decodes a MsgMapGetRawData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMapGetRawData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMapGetRawData;

        /**
         * Verifies a MsgMapGetRawData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMapGetRawData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMapGetRawData
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMapGetRawData;

        /**
         * Creates a plain object from a MsgMapGetRawData message. Also converts values to other types if specified.
         * @param message MsgMapGetRawData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMapGetRawData, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMapGetRawData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMapGetRawData {

        /** Properties of a C. */
        interface IC {

            /** C mapId */
            mapId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMapGetRawData.IC);

            /** C mapId. */
            public mapId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMapGetRawData.IC): NetMessage.MsgMapGetRawData.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMapGetRawData.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMapGetRawData.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMapGetRawData.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMapGetRawData.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMapGetRawData.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMapGetRawData.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMapGetRawData.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMapGetRawData.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S mapId */
            mapId?: (number|null);

            /** S mapRawData */
            mapRawData?: (Map.IMapRawData|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMapGetRawData.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S mapId. */
            public mapId: number;

            /** S mapRawData. */
            public mapRawData?: (Map.IMapRawData|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMapGetRawData.IS): NetMessage.MsgMapGetRawData.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMapGetRawData.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMapGetRawData.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMapGetRawData.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMapGetRawData.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMapGetRawData.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMapGetRawData.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMapGetRawData.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMapGetRawData.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMeGetMapDataList. */
    interface IMsgMeGetMapDataList {

        /** MsgMeGetMapDataList c */
        c?: (NetMessage.MsgMeGetMapDataList.IC|null);

        /** MsgMeGetMapDataList s */
        s?: (NetMessage.MsgMeGetMapDataList.IS|null);
    }

    /** Represents a MsgMeGetMapDataList. */
    class MsgMeGetMapDataList implements IMsgMeGetMapDataList {

        /**
         * Constructs a new MsgMeGetMapDataList.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMeGetMapDataList);

        /** MsgMeGetMapDataList c. */
        public c?: (NetMessage.MsgMeGetMapDataList.IC|null);

        /** MsgMeGetMapDataList s. */
        public s?: (NetMessage.MsgMeGetMapDataList.IS|null);

        /**
         * Creates a new MsgMeGetMapDataList instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMeGetMapDataList instance
         */
        public static create(properties?: NetMessage.IMsgMeGetMapDataList): NetMessage.MsgMeGetMapDataList;

        /**
         * Encodes the specified MsgMeGetMapDataList message. Does not implicitly {@link NetMessage.MsgMeGetMapDataList.verify|verify} messages.
         * @param message MsgMeGetMapDataList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMeGetMapDataList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMeGetMapDataList message, length delimited. Does not implicitly {@link NetMessage.MsgMeGetMapDataList.verify|verify} messages.
         * @param message MsgMeGetMapDataList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMeGetMapDataList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMeGetMapDataList message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMeGetMapDataList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMeGetMapDataList;

        /**
         * Decodes a MsgMeGetMapDataList message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMeGetMapDataList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMeGetMapDataList;

        /**
         * Verifies a MsgMeGetMapDataList message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMeGetMapDataList message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMeGetMapDataList
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMeGetMapDataList;

        /**
         * Creates a plain object from a MsgMeGetMapDataList message. Also converts values to other types if specified.
         * @param message MsgMeGetMapDataList
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMeGetMapDataList, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMeGetMapDataList to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMeGetMapDataList {

        /** Properties of a C. */
        interface IC {
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMeGetMapDataList.IC);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMeGetMapDataList.IC): NetMessage.MsgMeGetMapDataList.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMeGetMapDataList.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMeGetMapDataList.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMeGetMapDataList.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMeGetMapDataList.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMeGetMapDataList.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMeGetMapDataList.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMeGetMapDataList.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMeGetMapDataList.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S dataList */
            dataList?: (Map.IMapEditorData[]|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMeGetMapDataList.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S dataList. */
            public dataList: Map.IMapEditorData[];

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMeGetMapDataList.IS): NetMessage.MsgMeGetMapDataList.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMeGetMapDataList.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMeGetMapDataList.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMeGetMapDataList.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMeGetMapDataList.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMeGetMapDataList.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMeGetMapDataList.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMeGetMapDataList.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMeGetMapDataList.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMeGetMapData. */
    interface IMsgMeGetMapData {

        /** MsgMeGetMapData c */
        c?: (NetMessage.MsgMeGetMapData.IC|null);

        /** MsgMeGetMapData s */
        s?: (NetMessage.MsgMeGetMapData.IS|null);
    }

    /** Represents a MsgMeGetMapData. */
    class MsgMeGetMapData implements IMsgMeGetMapData {

        /**
         * Constructs a new MsgMeGetMapData.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMeGetMapData);

        /** MsgMeGetMapData c. */
        public c?: (NetMessage.MsgMeGetMapData.IC|null);

        /** MsgMeGetMapData s. */
        public s?: (NetMessage.MsgMeGetMapData.IS|null);

        /**
         * Creates a new MsgMeGetMapData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMeGetMapData instance
         */
        public static create(properties?: NetMessage.IMsgMeGetMapData): NetMessage.MsgMeGetMapData;

        /**
         * Encodes the specified MsgMeGetMapData message. Does not implicitly {@link NetMessage.MsgMeGetMapData.verify|verify} messages.
         * @param message MsgMeGetMapData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMeGetMapData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMeGetMapData message, length delimited. Does not implicitly {@link NetMessage.MsgMeGetMapData.verify|verify} messages.
         * @param message MsgMeGetMapData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMeGetMapData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMeGetMapData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMeGetMapData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMeGetMapData;

        /**
         * Decodes a MsgMeGetMapData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMeGetMapData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMeGetMapData;

        /**
         * Verifies a MsgMeGetMapData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMeGetMapData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMeGetMapData
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMeGetMapData;

        /**
         * Creates a plain object from a MsgMeGetMapData message. Also converts values to other types if specified.
         * @param message MsgMeGetMapData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMeGetMapData, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMeGetMapData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMeGetMapData {

        /** Properties of a C. */
        interface IC {

            /** C slotIndex */
            slotIndex?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMeGetMapData.IC);

            /** C slotIndex. */
            public slotIndex: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMeGetMapData.IC): NetMessage.MsgMeGetMapData.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMeGetMapData.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMeGetMapData.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMeGetMapData.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMeGetMapData.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMeGetMapData.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMeGetMapData.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMeGetMapData.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMeGetMapData.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S slotIndex */
            slotIndex?: (number|null);

            /** S data */
            data?: (Map.IMapEditorData|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMeGetMapData.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S slotIndex. */
            public slotIndex: number;

            /** S data. */
            public data?: (Map.IMapEditorData|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMeGetMapData.IS): NetMessage.MsgMeGetMapData.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMeGetMapData.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMeGetMapData.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMeGetMapData.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMeGetMapData.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMeGetMapData.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMeGetMapData.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMeGetMapData.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMeGetMapData.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMeSubmitMap. */
    interface IMsgMeSubmitMap {

        /** MsgMeSubmitMap c */
        c?: (NetMessage.MsgMeSubmitMap.IC|null);

        /** MsgMeSubmitMap s */
        s?: (NetMessage.MsgMeSubmitMap.IS|null);
    }

    /** Represents a MsgMeSubmitMap. */
    class MsgMeSubmitMap implements IMsgMeSubmitMap {

        /**
         * Constructs a new MsgMeSubmitMap.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMeSubmitMap);

        /** MsgMeSubmitMap c. */
        public c?: (NetMessage.MsgMeSubmitMap.IC|null);

        /** MsgMeSubmitMap s. */
        public s?: (NetMessage.MsgMeSubmitMap.IS|null);

        /**
         * Creates a new MsgMeSubmitMap instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMeSubmitMap instance
         */
        public static create(properties?: NetMessage.IMsgMeSubmitMap): NetMessage.MsgMeSubmitMap;

        /**
         * Encodes the specified MsgMeSubmitMap message. Does not implicitly {@link NetMessage.MsgMeSubmitMap.verify|verify} messages.
         * @param message MsgMeSubmitMap message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMeSubmitMap, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMeSubmitMap message, length delimited. Does not implicitly {@link NetMessage.MsgMeSubmitMap.verify|verify} messages.
         * @param message MsgMeSubmitMap message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMeSubmitMap, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMeSubmitMap message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMeSubmitMap
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMeSubmitMap;

        /**
         * Decodes a MsgMeSubmitMap message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMeSubmitMap
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMeSubmitMap;

        /**
         * Verifies a MsgMeSubmitMap message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMeSubmitMap message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMeSubmitMap
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMeSubmitMap;

        /**
         * Creates a plain object from a MsgMeSubmitMap message. Also converts values to other types if specified.
         * @param message MsgMeSubmitMap
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMeSubmitMap, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMeSubmitMap to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMeSubmitMap {

        /** Properties of a C. */
        interface IC {

            /** C slotIndex */
            slotIndex?: (number|null);

            /** C mapRawData */
            mapRawData?: (Map.IMapRawData|null);

            /** C needReview */
            needReview?: (boolean|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMeSubmitMap.IC);

            /** C slotIndex. */
            public slotIndex: number;

            /** C mapRawData. */
            public mapRawData?: (Map.IMapRawData|null);

            /** C needReview. */
            public needReview: boolean;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMeSubmitMap.IC): NetMessage.MsgMeSubmitMap.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMeSubmitMap.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMeSubmitMap.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMeSubmitMap.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMeSubmitMap.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMeSubmitMap.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMeSubmitMap.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMeSubmitMap.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMeSubmitMap.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S mapRawDataErrorCode */
            mapRawDataErrorCode?: (number|null);

            /** S needReview */
            needReview?: (boolean|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMeSubmitMap.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S mapRawDataErrorCode. */
            public mapRawDataErrorCode: number;

            /** S needReview. */
            public needReview: boolean;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMeSubmitMap.IS): NetMessage.MsgMeSubmitMap.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMeSubmitMap.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMeSubmitMap.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMeSubmitMap.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMeSubmitMap.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMeSubmitMap.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMeSubmitMap.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMeSubmitMap.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMeSubmitMap.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgChatAddMessage. */
    interface IMsgChatAddMessage {

        /** MsgChatAddMessage c */
        c?: (NetMessage.MsgChatAddMessage.IC|null);

        /** MsgChatAddMessage s */
        s?: (NetMessage.MsgChatAddMessage.IS|null);
    }

    /** Represents a MsgChatAddMessage. */
    class MsgChatAddMessage implements IMsgChatAddMessage {

        /**
         * Constructs a new MsgChatAddMessage.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgChatAddMessage);

        /** MsgChatAddMessage c. */
        public c?: (NetMessage.MsgChatAddMessage.IC|null);

        /** MsgChatAddMessage s. */
        public s?: (NetMessage.MsgChatAddMessage.IS|null);

        /**
         * Creates a new MsgChatAddMessage instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgChatAddMessage instance
         */
        public static create(properties?: NetMessage.IMsgChatAddMessage): NetMessage.MsgChatAddMessage;

        /**
         * Encodes the specified MsgChatAddMessage message. Does not implicitly {@link NetMessage.MsgChatAddMessage.verify|verify} messages.
         * @param message MsgChatAddMessage message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgChatAddMessage, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgChatAddMessage message, length delimited. Does not implicitly {@link NetMessage.MsgChatAddMessage.verify|verify} messages.
         * @param message MsgChatAddMessage message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgChatAddMessage, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgChatAddMessage message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgChatAddMessage
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgChatAddMessage;

        /**
         * Decodes a MsgChatAddMessage message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgChatAddMessage
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgChatAddMessage;

        /**
         * Verifies a MsgChatAddMessage message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgChatAddMessage message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgChatAddMessage
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgChatAddMessage;

        /**
         * Creates a plain object from a MsgChatAddMessage message. Also converts values to other types if specified.
         * @param message MsgChatAddMessage
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgChatAddMessage, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgChatAddMessage to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgChatAddMessage {

        /** Properties of a C. */
        interface IC {

            /** C toCategory */
            toCategory?: (number|null);

            /** C toTarget */
            toTarget?: (number|null);

            /** C content */
            content?: (string|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgChatAddMessage.IC);

            /** C toCategory. */
            public toCategory: number;

            /** C toTarget. */
            public toTarget: number;

            /** C content. */
            public content: string;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgChatAddMessage.IC): NetMessage.MsgChatAddMessage.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgChatAddMessage.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgChatAddMessage.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgChatAddMessage.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgChatAddMessage.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgChatAddMessage.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgChatAddMessage.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgChatAddMessage.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgChatAddMessage.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S message */
            message?: (Chat.IChatMessage|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgChatAddMessage.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S message. */
            public message?: (Chat.IChatMessage|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgChatAddMessage.IS): NetMessage.MsgChatAddMessage.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgChatAddMessage.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgChatAddMessage.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgChatAddMessage.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgChatAddMessage.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgChatAddMessage.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgChatAddMessage.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgChatAddMessage.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgChatAddMessage.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgChatGetAllMessages. */
    interface IMsgChatGetAllMessages {

        /** MsgChatGetAllMessages c */
        c?: (NetMessage.MsgChatGetAllMessages.IC|null);

        /** MsgChatGetAllMessages s */
        s?: (NetMessage.MsgChatGetAllMessages.IS|null);
    }

    /** Represents a MsgChatGetAllMessages. */
    class MsgChatGetAllMessages implements IMsgChatGetAllMessages {

        /**
         * Constructs a new MsgChatGetAllMessages.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgChatGetAllMessages);

        /** MsgChatGetAllMessages c. */
        public c?: (NetMessage.MsgChatGetAllMessages.IC|null);

        /** MsgChatGetAllMessages s. */
        public s?: (NetMessage.MsgChatGetAllMessages.IS|null);

        /**
         * Creates a new MsgChatGetAllMessages instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgChatGetAllMessages instance
         */
        public static create(properties?: NetMessage.IMsgChatGetAllMessages): NetMessage.MsgChatGetAllMessages;

        /**
         * Encodes the specified MsgChatGetAllMessages message. Does not implicitly {@link NetMessage.MsgChatGetAllMessages.verify|verify} messages.
         * @param message MsgChatGetAllMessages message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgChatGetAllMessages, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgChatGetAllMessages message, length delimited. Does not implicitly {@link NetMessage.MsgChatGetAllMessages.verify|verify} messages.
         * @param message MsgChatGetAllMessages message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgChatGetAllMessages, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgChatGetAllMessages message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgChatGetAllMessages
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgChatGetAllMessages;

        /**
         * Decodes a MsgChatGetAllMessages message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgChatGetAllMessages
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgChatGetAllMessages;

        /**
         * Verifies a MsgChatGetAllMessages message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgChatGetAllMessages message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgChatGetAllMessages
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgChatGetAllMessages;

        /**
         * Creates a plain object from a MsgChatGetAllMessages message. Also converts values to other types if specified.
         * @param message MsgChatGetAllMessages
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgChatGetAllMessages, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgChatGetAllMessages to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgChatGetAllMessages {

        /** Properties of a C. */
        interface IC {
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgChatGetAllMessages.IC);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgChatGetAllMessages.IC): NetMessage.MsgChatGetAllMessages.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgChatGetAllMessages.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgChatGetAllMessages.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgChatGetAllMessages.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgChatGetAllMessages.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgChatGetAllMessages.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgChatGetAllMessages.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgChatGetAllMessages.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgChatGetAllMessages.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S messageList */
            messageList?: (Chat.IChatMessage[]|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgChatGetAllMessages.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S messageList. */
            public messageList: Chat.IChatMessage[];

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgChatGetAllMessages.IS): NetMessage.MsgChatGetAllMessages.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgChatGetAllMessages.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgChatGetAllMessages.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgChatGetAllMessages.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgChatGetAllMessages.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgChatGetAllMessages.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgChatGetAllMessages.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgChatGetAllMessages.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgChatGetAllMessages.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgChatUpdateReadProgress. */
    interface IMsgChatUpdateReadProgress {

        /** MsgChatUpdateReadProgress c */
        c?: (NetMessage.MsgChatUpdateReadProgress.IC|null);

        /** MsgChatUpdateReadProgress s */
        s?: (NetMessage.MsgChatUpdateReadProgress.IS|null);
    }

    /** Represents a MsgChatUpdateReadProgress. */
    class MsgChatUpdateReadProgress implements IMsgChatUpdateReadProgress {

        /**
         * Constructs a new MsgChatUpdateReadProgress.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgChatUpdateReadProgress);

        /** MsgChatUpdateReadProgress c. */
        public c?: (NetMessage.MsgChatUpdateReadProgress.IC|null);

        /** MsgChatUpdateReadProgress s. */
        public s?: (NetMessage.MsgChatUpdateReadProgress.IS|null);

        /**
         * Creates a new MsgChatUpdateReadProgress instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgChatUpdateReadProgress instance
         */
        public static create(properties?: NetMessage.IMsgChatUpdateReadProgress): NetMessage.MsgChatUpdateReadProgress;

        /**
         * Encodes the specified MsgChatUpdateReadProgress message. Does not implicitly {@link NetMessage.MsgChatUpdateReadProgress.verify|verify} messages.
         * @param message MsgChatUpdateReadProgress message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgChatUpdateReadProgress, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgChatUpdateReadProgress message, length delimited. Does not implicitly {@link NetMessage.MsgChatUpdateReadProgress.verify|verify} messages.
         * @param message MsgChatUpdateReadProgress message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgChatUpdateReadProgress, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgChatUpdateReadProgress message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgChatUpdateReadProgress
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgChatUpdateReadProgress;

        /**
         * Decodes a MsgChatUpdateReadProgress message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgChatUpdateReadProgress
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgChatUpdateReadProgress;

        /**
         * Verifies a MsgChatUpdateReadProgress message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgChatUpdateReadProgress message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgChatUpdateReadProgress
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgChatUpdateReadProgress;

        /**
         * Creates a plain object from a MsgChatUpdateReadProgress message. Also converts values to other types if specified.
         * @param message MsgChatUpdateReadProgress
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgChatUpdateReadProgress, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgChatUpdateReadProgress to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgChatUpdateReadProgress {

        /** Properties of a C. */
        interface IC {

            /** C progress */
            progress?: (Chat.IChatReadProgress|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgChatUpdateReadProgress.IC);

            /** C progress. */
            public progress?: (Chat.IChatReadProgress|null);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgChatUpdateReadProgress.IC): NetMessage.MsgChatUpdateReadProgress.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgChatUpdateReadProgress.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgChatUpdateReadProgress.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgChatUpdateReadProgress.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgChatUpdateReadProgress.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgChatUpdateReadProgress.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgChatUpdateReadProgress.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgChatUpdateReadProgress.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgChatUpdateReadProgress.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S progress */
            progress?: (Chat.IChatReadProgress|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgChatUpdateReadProgress.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S progress. */
            public progress?: (Chat.IChatReadProgress|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgChatUpdateReadProgress.IS): NetMessage.MsgChatUpdateReadProgress.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgChatUpdateReadProgress.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgChatUpdateReadProgress.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgChatUpdateReadProgress.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgChatUpdateReadProgress.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgChatUpdateReadProgress.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgChatUpdateReadProgress.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgChatUpdateReadProgress.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgChatUpdateReadProgress.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgChatGetAllReadProgressList. */
    interface IMsgChatGetAllReadProgressList {

        /** MsgChatGetAllReadProgressList c */
        c?: (NetMessage.MsgChatGetAllReadProgressList.IC|null);

        /** MsgChatGetAllReadProgressList s */
        s?: (NetMessage.MsgChatGetAllReadProgressList.IS|null);
    }

    /** Represents a MsgChatGetAllReadProgressList. */
    class MsgChatGetAllReadProgressList implements IMsgChatGetAllReadProgressList {

        /**
         * Constructs a new MsgChatGetAllReadProgressList.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgChatGetAllReadProgressList);

        /** MsgChatGetAllReadProgressList c. */
        public c?: (NetMessage.MsgChatGetAllReadProgressList.IC|null);

        /** MsgChatGetAllReadProgressList s. */
        public s?: (NetMessage.MsgChatGetAllReadProgressList.IS|null);

        /**
         * Creates a new MsgChatGetAllReadProgressList instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgChatGetAllReadProgressList instance
         */
        public static create(properties?: NetMessage.IMsgChatGetAllReadProgressList): NetMessage.MsgChatGetAllReadProgressList;

        /**
         * Encodes the specified MsgChatGetAllReadProgressList message. Does not implicitly {@link NetMessage.MsgChatGetAllReadProgressList.verify|verify} messages.
         * @param message MsgChatGetAllReadProgressList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgChatGetAllReadProgressList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgChatGetAllReadProgressList message, length delimited. Does not implicitly {@link NetMessage.MsgChatGetAllReadProgressList.verify|verify} messages.
         * @param message MsgChatGetAllReadProgressList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgChatGetAllReadProgressList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgChatGetAllReadProgressList message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgChatGetAllReadProgressList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgChatGetAllReadProgressList;

        /**
         * Decodes a MsgChatGetAllReadProgressList message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgChatGetAllReadProgressList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgChatGetAllReadProgressList;

        /**
         * Verifies a MsgChatGetAllReadProgressList message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgChatGetAllReadProgressList message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgChatGetAllReadProgressList
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgChatGetAllReadProgressList;

        /**
         * Creates a plain object from a MsgChatGetAllReadProgressList message. Also converts values to other types if specified.
         * @param message MsgChatGetAllReadProgressList
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgChatGetAllReadProgressList, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgChatGetAllReadProgressList to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgChatGetAllReadProgressList {

        /** Properties of a C. */
        interface IC {
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgChatGetAllReadProgressList.IC);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgChatGetAllReadProgressList.IC): NetMessage.MsgChatGetAllReadProgressList.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgChatGetAllReadProgressList.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgChatGetAllReadProgressList.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgChatGetAllReadProgressList.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgChatGetAllReadProgressList.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgChatGetAllReadProgressList.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgChatGetAllReadProgressList.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgChatGetAllReadProgressList.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgChatGetAllReadProgressList.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S list */
            list?: (Chat.IChatReadProgress[]|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgChatGetAllReadProgressList.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S list. */
            public list: Chat.IChatReadProgress[];

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgChatGetAllReadProgressList.IS): NetMessage.MsgChatGetAllReadProgressList.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgChatGetAllReadProgressList.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgChatGetAllReadProgressList.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgChatGetAllReadProgressList.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgChatGetAllReadProgressList.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgChatGetAllReadProgressList.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgChatGetAllReadProgressList.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgChatGetAllReadProgressList.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgChatGetAllReadProgressList.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgChatDeleteMessage. */
    interface IMsgChatDeleteMessage {

        /** MsgChatDeleteMessage c */
        c?: (NetMessage.MsgChatDeleteMessage.IC|null);

        /** MsgChatDeleteMessage s */
        s?: (NetMessage.MsgChatDeleteMessage.IS|null);
    }

    /** Represents a MsgChatDeleteMessage. */
    class MsgChatDeleteMessage implements IMsgChatDeleteMessage {

        /**
         * Constructs a new MsgChatDeleteMessage.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgChatDeleteMessage);

        /** MsgChatDeleteMessage c. */
        public c?: (NetMessage.MsgChatDeleteMessage.IC|null);

        /** MsgChatDeleteMessage s. */
        public s?: (NetMessage.MsgChatDeleteMessage.IS|null);

        /**
         * Creates a new MsgChatDeleteMessage instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgChatDeleteMessage instance
         */
        public static create(properties?: NetMessage.IMsgChatDeleteMessage): NetMessage.MsgChatDeleteMessage;

        /**
         * Encodes the specified MsgChatDeleteMessage message. Does not implicitly {@link NetMessage.MsgChatDeleteMessage.verify|verify} messages.
         * @param message MsgChatDeleteMessage message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgChatDeleteMessage, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgChatDeleteMessage message, length delimited. Does not implicitly {@link NetMessage.MsgChatDeleteMessage.verify|verify} messages.
         * @param message MsgChatDeleteMessage message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgChatDeleteMessage, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgChatDeleteMessage message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgChatDeleteMessage
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgChatDeleteMessage;

        /**
         * Decodes a MsgChatDeleteMessage message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgChatDeleteMessage
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgChatDeleteMessage;

        /**
         * Verifies a MsgChatDeleteMessage message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgChatDeleteMessage message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgChatDeleteMessage
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgChatDeleteMessage;

        /**
         * Creates a plain object from a MsgChatDeleteMessage message. Also converts values to other types if specified.
         * @param message MsgChatDeleteMessage
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgChatDeleteMessage, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgChatDeleteMessage to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgChatDeleteMessage {

        /** Properties of a C. */
        interface IC {

            /** C messageId */
            messageId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgChatDeleteMessage.IC);

            /** C messageId. */
            public messageId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgChatDeleteMessage.IC): NetMessage.MsgChatDeleteMessage.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgChatDeleteMessage.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgChatDeleteMessage.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgChatDeleteMessage.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgChatDeleteMessage.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgChatDeleteMessage.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgChatDeleteMessage.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgChatDeleteMessage.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgChatDeleteMessage.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S messageId */
            messageId?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgChatDeleteMessage.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S messageId. */
            public messageId: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgChatDeleteMessage.IS): NetMessage.MsgChatDeleteMessage.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgChatDeleteMessage.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgChatDeleteMessage.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgChatDeleteMessage.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgChatDeleteMessage.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgChatDeleteMessage.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgChatDeleteMessage.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgChatDeleteMessage.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgChatDeleteMessage.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMmSetWarRuleAvailability. */
    interface IMsgMmSetWarRuleAvailability {

        /** MsgMmSetWarRuleAvailability c */
        c?: (NetMessage.MsgMmSetWarRuleAvailability.IC|null);

        /** MsgMmSetWarRuleAvailability s */
        s?: (NetMessage.MsgMmSetWarRuleAvailability.IS|null);
    }

    /** Represents a MsgMmSetWarRuleAvailability. */
    class MsgMmSetWarRuleAvailability implements IMsgMmSetWarRuleAvailability {

        /**
         * Constructs a new MsgMmSetWarRuleAvailability.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMmSetWarRuleAvailability);

        /** MsgMmSetWarRuleAvailability c. */
        public c?: (NetMessage.MsgMmSetWarRuleAvailability.IC|null);

        /** MsgMmSetWarRuleAvailability s. */
        public s?: (NetMessage.MsgMmSetWarRuleAvailability.IS|null);

        /**
         * Creates a new MsgMmSetWarRuleAvailability instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMmSetWarRuleAvailability instance
         */
        public static create(properties?: NetMessage.IMsgMmSetWarRuleAvailability): NetMessage.MsgMmSetWarRuleAvailability;

        /**
         * Encodes the specified MsgMmSetWarRuleAvailability message. Does not implicitly {@link NetMessage.MsgMmSetWarRuleAvailability.verify|verify} messages.
         * @param message MsgMmSetWarRuleAvailability message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMmSetWarRuleAvailability, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMmSetWarRuleAvailability message, length delimited. Does not implicitly {@link NetMessage.MsgMmSetWarRuleAvailability.verify|verify} messages.
         * @param message MsgMmSetWarRuleAvailability message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMmSetWarRuleAvailability, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMmSetWarRuleAvailability message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMmSetWarRuleAvailability
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMmSetWarRuleAvailability;

        /**
         * Decodes a MsgMmSetWarRuleAvailability message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMmSetWarRuleAvailability
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMmSetWarRuleAvailability;

        /**
         * Verifies a MsgMmSetWarRuleAvailability message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMmSetWarRuleAvailability message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMmSetWarRuleAvailability
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMmSetWarRuleAvailability;

        /**
         * Creates a plain object from a MsgMmSetWarRuleAvailability message. Also converts values to other types if specified.
         * @param message MsgMmSetWarRuleAvailability
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMmSetWarRuleAvailability, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMmSetWarRuleAvailability to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMmSetWarRuleAvailability {

        /** Properties of a C. */
        interface IC {

            /** C mapId */
            mapId?: (number|null);

            /** C ruleId */
            ruleId?: (number|null);

            /** C availability */
            availability?: (WarRule.IRuleAvailability|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMmSetWarRuleAvailability.IC);

            /** C mapId. */
            public mapId: number;

            /** C ruleId. */
            public ruleId: number;

            /** C availability. */
            public availability?: (WarRule.IRuleAvailability|null);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMmSetWarRuleAvailability.IC): NetMessage.MsgMmSetWarRuleAvailability.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMmSetWarRuleAvailability.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMmSetWarRuleAvailability.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMmSetWarRuleAvailability.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMmSetWarRuleAvailability.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMmSetWarRuleAvailability.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMmSetWarRuleAvailability.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMmSetWarRuleAvailability.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMmSetWarRuleAvailability.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S mapId */
            mapId?: (number|null);

            /** S ruleId */
            ruleId?: (number|null);

            /** S availability */
            availability?: (WarRule.IRuleAvailability|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMmSetWarRuleAvailability.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S mapId. */
            public mapId: number;

            /** S ruleId. */
            public ruleId: number;

            /** S availability. */
            public availability?: (WarRule.IRuleAvailability|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMmSetWarRuleAvailability.IS): NetMessage.MsgMmSetWarRuleAvailability.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMmSetWarRuleAvailability.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMmSetWarRuleAvailability.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMmSetWarRuleAvailability.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMmSetWarRuleAvailability.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMmSetWarRuleAvailability.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMmSetWarRuleAvailability.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMmSetWarRuleAvailability.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMmSetWarRuleAvailability.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMmReloadAllMaps. */
    interface IMsgMmReloadAllMaps {

        /** MsgMmReloadAllMaps c */
        c?: (NetMessage.MsgMmReloadAllMaps.IC|null);

        /** MsgMmReloadAllMaps s */
        s?: (NetMessage.MsgMmReloadAllMaps.IS|null);
    }

    /** Represents a MsgMmReloadAllMaps. */
    class MsgMmReloadAllMaps implements IMsgMmReloadAllMaps {

        /**
         * Constructs a new MsgMmReloadAllMaps.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMmReloadAllMaps);

        /** MsgMmReloadAllMaps c. */
        public c?: (NetMessage.MsgMmReloadAllMaps.IC|null);

        /** MsgMmReloadAllMaps s. */
        public s?: (NetMessage.MsgMmReloadAllMaps.IS|null);

        /**
         * Creates a new MsgMmReloadAllMaps instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMmReloadAllMaps instance
         */
        public static create(properties?: NetMessage.IMsgMmReloadAllMaps): NetMessage.MsgMmReloadAllMaps;

        /**
         * Encodes the specified MsgMmReloadAllMaps message. Does not implicitly {@link NetMessage.MsgMmReloadAllMaps.verify|verify} messages.
         * @param message MsgMmReloadAllMaps message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMmReloadAllMaps, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMmReloadAllMaps message, length delimited. Does not implicitly {@link NetMessage.MsgMmReloadAllMaps.verify|verify} messages.
         * @param message MsgMmReloadAllMaps message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMmReloadAllMaps, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMmReloadAllMaps message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMmReloadAllMaps
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMmReloadAllMaps;

        /**
         * Decodes a MsgMmReloadAllMaps message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMmReloadAllMaps
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMmReloadAllMaps;

        /**
         * Verifies a MsgMmReloadAllMaps message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMmReloadAllMaps message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMmReloadAllMaps
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMmReloadAllMaps;

        /**
         * Creates a plain object from a MsgMmReloadAllMaps message. Also converts values to other types if specified.
         * @param message MsgMmReloadAllMaps
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMmReloadAllMaps, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMmReloadAllMaps to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMmReloadAllMaps {

        /** Properties of a C. */
        interface IC {
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMmReloadAllMaps.IC);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMmReloadAllMaps.IC): NetMessage.MsgMmReloadAllMaps.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMmReloadAllMaps.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMmReloadAllMaps.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMmReloadAllMaps.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMmReloadAllMaps.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMmReloadAllMaps.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMmReloadAllMaps.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMmReloadAllMaps.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMmReloadAllMaps.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMmReloadAllMaps.IS);

            /** S errorCode. */
            public errorCode: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMmReloadAllMaps.IS): NetMessage.MsgMmReloadAllMaps.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMmReloadAllMaps.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMmReloadAllMaps.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMmReloadAllMaps.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMmReloadAllMaps.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMmReloadAllMaps.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMmReloadAllMaps.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMmReloadAllMaps.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMmReloadAllMaps.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMmSetMapEnabled. */
    interface IMsgMmSetMapEnabled {

        /** MsgMmSetMapEnabled c */
        c?: (NetMessage.MsgMmSetMapEnabled.IC|null);

        /** MsgMmSetMapEnabled s */
        s?: (NetMessage.MsgMmSetMapEnabled.IS|null);
    }

    /** Represents a MsgMmSetMapEnabled. */
    class MsgMmSetMapEnabled implements IMsgMmSetMapEnabled {

        /**
         * Constructs a new MsgMmSetMapEnabled.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMmSetMapEnabled);

        /** MsgMmSetMapEnabled c. */
        public c?: (NetMessage.MsgMmSetMapEnabled.IC|null);

        /** MsgMmSetMapEnabled s. */
        public s?: (NetMessage.MsgMmSetMapEnabled.IS|null);

        /**
         * Creates a new MsgMmSetMapEnabled instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMmSetMapEnabled instance
         */
        public static create(properties?: NetMessage.IMsgMmSetMapEnabled): NetMessage.MsgMmSetMapEnabled;

        /**
         * Encodes the specified MsgMmSetMapEnabled message. Does not implicitly {@link NetMessage.MsgMmSetMapEnabled.verify|verify} messages.
         * @param message MsgMmSetMapEnabled message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMmSetMapEnabled, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMmSetMapEnabled message, length delimited. Does not implicitly {@link NetMessage.MsgMmSetMapEnabled.verify|verify} messages.
         * @param message MsgMmSetMapEnabled message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMmSetMapEnabled, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMmSetMapEnabled message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMmSetMapEnabled
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMmSetMapEnabled;

        /**
         * Decodes a MsgMmSetMapEnabled message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMmSetMapEnabled
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMmSetMapEnabled;

        /**
         * Verifies a MsgMmSetMapEnabled message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMmSetMapEnabled message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMmSetMapEnabled
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMmSetMapEnabled;

        /**
         * Creates a plain object from a MsgMmSetMapEnabled message. Also converts values to other types if specified.
         * @param message MsgMmSetMapEnabled
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMmSetMapEnabled, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMmSetMapEnabled to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMmSetMapEnabled {

        /** Properties of a C. */
        interface IC {

            /** C mapId */
            mapId?: (number|null);

            /** C isEnabled */
            isEnabled?: (boolean|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMmSetMapEnabled.IC);

            /** C mapId. */
            public mapId: number;

            /** C isEnabled. */
            public isEnabled: boolean;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMmSetMapEnabled.IC): NetMessage.MsgMmSetMapEnabled.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMmSetMapEnabled.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMmSetMapEnabled.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMmSetMapEnabled.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMmSetMapEnabled.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMmSetMapEnabled.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMmSetMapEnabled.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMmSetMapEnabled.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMmSetMapEnabled.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S mapId */
            mapId?: (number|null);

            /** S isEnabled */
            isEnabled?: (boolean|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMmSetMapEnabled.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S mapId. */
            public mapId: number;

            /** S isEnabled. */
            public isEnabled: boolean;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMmSetMapEnabled.IS): NetMessage.MsgMmSetMapEnabled.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMmSetMapEnabled.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMmSetMapEnabled.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMmSetMapEnabled.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMmSetMapEnabled.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMmSetMapEnabled.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMmSetMapEnabled.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMmSetMapEnabled.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMmSetMapEnabled.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMmGetReviewingMaps. */
    interface IMsgMmGetReviewingMaps {

        /** MsgMmGetReviewingMaps c */
        c?: (NetMessage.MsgMmGetReviewingMaps.IC|null);

        /** MsgMmGetReviewingMaps s */
        s?: (NetMessage.MsgMmGetReviewingMaps.IS|null);
    }

    /** Represents a MsgMmGetReviewingMaps. */
    class MsgMmGetReviewingMaps implements IMsgMmGetReviewingMaps {

        /**
         * Constructs a new MsgMmGetReviewingMaps.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMmGetReviewingMaps);

        /** MsgMmGetReviewingMaps c. */
        public c?: (NetMessage.MsgMmGetReviewingMaps.IC|null);

        /** MsgMmGetReviewingMaps s. */
        public s?: (NetMessage.MsgMmGetReviewingMaps.IS|null);

        /**
         * Creates a new MsgMmGetReviewingMaps instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMmGetReviewingMaps instance
         */
        public static create(properties?: NetMessage.IMsgMmGetReviewingMaps): NetMessage.MsgMmGetReviewingMaps;

        /**
         * Encodes the specified MsgMmGetReviewingMaps message. Does not implicitly {@link NetMessage.MsgMmGetReviewingMaps.verify|verify} messages.
         * @param message MsgMmGetReviewingMaps message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMmGetReviewingMaps, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMmGetReviewingMaps message, length delimited. Does not implicitly {@link NetMessage.MsgMmGetReviewingMaps.verify|verify} messages.
         * @param message MsgMmGetReviewingMaps message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMmGetReviewingMaps, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMmGetReviewingMaps message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMmGetReviewingMaps
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMmGetReviewingMaps;

        /**
         * Decodes a MsgMmGetReviewingMaps message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMmGetReviewingMaps
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMmGetReviewingMaps;

        /**
         * Verifies a MsgMmGetReviewingMaps message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMmGetReviewingMaps message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMmGetReviewingMaps
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMmGetReviewingMaps;

        /**
         * Creates a plain object from a MsgMmGetReviewingMaps message. Also converts values to other types if specified.
         * @param message MsgMmGetReviewingMaps
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMmGetReviewingMaps, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMmGetReviewingMaps to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMmGetReviewingMaps {

        /** Properties of a C. */
        interface IC {
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMmGetReviewingMaps.IC);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMmGetReviewingMaps.IC): NetMessage.MsgMmGetReviewingMaps.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMmGetReviewingMaps.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMmGetReviewingMaps.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMmGetReviewingMaps.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMmGetReviewingMaps.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMmGetReviewingMaps.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMmGetReviewingMaps.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMmGetReviewingMaps.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMmGetReviewingMaps.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S maps */
            maps?: (Map.IMapEditorData[]|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMmGetReviewingMaps.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S maps. */
            public maps: Map.IMapEditorData[];

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMmGetReviewingMaps.IS): NetMessage.MsgMmGetReviewingMaps.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMmGetReviewingMaps.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMmGetReviewingMaps.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMmGetReviewingMaps.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMmGetReviewingMaps.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMmGetReviewingMaps.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMmGetReviewingMaps.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMmGetReviewingMaps.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMmGetReviewingMaps.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMmReviewMap. */
    interface IMsgMmReviewMap {

        /** MsgMmReviewMap c */
        c?: (NetMessage.MsgMmReviewMap.IC|null);

        /** MsgMmReviewMap s */
        s?: (NetMessage.MsgMmReviewMap.IS|null);
    }

    /** Represents a MsgMmReviewMap. */
    class MsgMmReviewMap implements IMsgMmReviewMap {

        /**
         * Constructs a new MsgMmReviewMap.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMmReviewMap);

        /** MsgMmReviewMap c. */
        public c?: (NetMessage.MsgMmReviewMap.IC|null);

        /** MsgMmReviewMap s. */
        public s?: (NetMessage.MsgMmReviewMap.IS|null);

        /**
         * Creates a new MsgMmReviewMap instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMmReviewMap instance
         */
        public static create(properties?: NetMessage.IMsgMmReviewMap): NetMessage.MsgMmReviewMap;

        /**
         * Encodes the specified MsgMmReviewMap message. Does not implicitly {@link NetMessage.MsgMmReviewMap.verify|verify} messages.
         * @param message MsgMmReviewMap message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMmReviewMap, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMmReviewMap message, length delimited. Does not implicitly {@link NetMessage.MsgMmReviewMap.verify|verify} messages.
         * @param message MsgMmReviewMap message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMmReviewMap, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMmReviewMap message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMmReviewMap
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMmReviewMap;

        /**
         * Decodes a MsgMmReviewMap message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMmReviewMap
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMmReviewMap;

        /**
         * Verifies a MsgMmReviewMap message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMmReviewMap message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMmReviewMap
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMmReviewMap;

        /**
         * Creates a plain object from a MsgMmReviewMap message. Also converts values to other types if specified.
         * @param message MsgMmReviewMap
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMmReviewMap, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMmReviewMap to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMmReviewMap {

        /** Properties of a C. */
        interface IC {

            /** C designerUserId */
            designerUserId?: (number|null);

            /** C slotIndex */
            slotIndex?: (number|null);

            /** C modifiedTime */
            modifiedTime?: (number|null);

            /** C isAccept */
            isAccept?: (boolean|null);

            /** C reviewComment */
            reviewComment?: (string|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMmReviewMap.IC);

            /** C designerUserId. */
            public designerUserId: number;

            /** C slotIndex. */
            public slotIndex: number;

            /** C modifiedTime. */
            public modifiedTime: number;

            /** C isAccept. */
            public isAccept: boolean;

            /** C reviewComment. */
            public reviewComment: string;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMmReviewMap.IC): NetMessage.MsgMmReviewMap.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMmReviewMap.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMmReviewMap.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMmReviewMap.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMmReviewMap.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMmReviewMap.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMmReviewMap.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMmReviewMap.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMmReviewMap.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S isAccept */
            isAccept?: (boolean|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMmReviewMap.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S isAccept. */
            public isAccept: boolean;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMmReviewMap.IS): NetMessage.MsgMmReviewMap.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMmReviewMap.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMmReviewMap.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMmReviewMap.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMmReviewMap.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMmReviewMap.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMmReviewMap.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMmReviewMap.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMmReviewMap.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMmSetMapTag. */
    interface IMsgMmSetMapTag {

        /** MsgMmSetMapTag c */
        c?: (NetMessage.MsgMmSetMapTag.IC|null);

        /** MsgMmSetMapTag s */
        s?: (NetMessage.MsgMmSetMapTag.IS|null);
    }

    /** Represents a MsgMmSetMapTag. */
    class MsgMmSetMapTag implements IMsgMmSetMapTag {

        /**
         * Constructs a new MsgMmSetMapTag.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMmSetMapTag);

        /** MsgMmSetMapTag c. */
        public c?: (NetMessage.MsgMmSetMapTag.IC|null);

        /** MsgMmSetMapTag s. */
        public s?: (NetMessage.MsgMmSetMapTag.IS|null);

        /**
         * Creates a new MsgMmSetMapTag instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMmSetMapTag instance
         */
        public static create(properties?: NetMessage.IMsgMmSetMapTag): NetMessage.MsgMmSetMapTag;

        /**
         * Encodes the specified MsgMmSetMapTag message. Does not implicitly {@link NetMessage.MsgMmSetMapTag.verify|verify} messages.
         * @param message MsgMmSetMapTag message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMmSetMapTag, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMmSetMapTag message, length delimited. Does not implicitly {@link NetMessage.MsgMmSetMapTag.verify|verify} messages.
         * @param message MsgMmSetMapTag message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMmSetMapTag, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMmSetMapTag message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMmSetMapTag
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMmSetMapTag;

        /**
         * Decodes a MsgMmSetMapTag message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMmSetMapTag
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMmSetMapTag;

        /**
         * Verifies a MsgMmSetMapTag message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMmSetMapTag message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMmSetMapTag
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMmSetMapTag;

        /**
         * Creates a plain object from a MsgMmSetMapTag message. Also converts values to other types if specified.
         * @param message MsgMmSetMapTag
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMmSetMapTag, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMmSetMapTag to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMmSetMapTag {

        /** Properties of a C. */
        interface IC {

            /** C mapId */
            mapId?: (number|null);

            /** C mapTag */
            mapTag?: (Map.IDataForMapTag|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMmSetMapTag.IC);

            /** C mapId. */
            public mapId: number;

            /** C mapTag. */
            public mapTag?: (Map.IDataForMapTag|null);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMmSetMapTag.IC): NetMessage.MsgMmSetMapTag.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMmSetMapTag.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMmSetMapTag.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMmSetMapTag.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMmSetMapTag.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMmSetMapTag.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMmSetMapTag.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMmSetMapTag.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMmSetMapTag.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMmSetMapTag.IS);

            /** S errorCode. */
            public errorCode: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMmSetMapTag.IS): NetMessage.MsgMmSetMapTag.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMmSetMapTag.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMmSetMapTag.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMmSetMapTag.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMmSetMapTag.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMmSetMapTag.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMmSetMapTag.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMmSetMapTag.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMmSetMapTag.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMmSetMapName. */
    interface IMsgMmSetMapName {

        /** MsgMmSetMapName c */
        c?: (NetMessage.MsgMmSetMapName.IC|null);

        /** MsgMmSetMapName s */
        s?: (NetMessage.MsgMmSetMapName.IS|null);
    }

    /** Represents a MsgMmSetMapName. */
    class MsgMmSetMapName implements IMsgMmSetMapName {

        /**
         * Constructs a new MsgMmSetMapName.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMmSetMapName);

        /** MsgMmSetMapName c. */
        public c?: (NetMessage.MsgMmSetMapName.IC|null);

        /** MsgMmSetMapName s. */
        public s?: (NetMessage.MsgMmSetMapName.IS|null);

        /**
         * Creates a new MsgMmSetMapName instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMmSetMapName instance
         */
        public static create(properties?: NetMessage.IMsgMmSetMapName): NetMessage.MsgMmSetMapName;

        /**
         * Encodes the specified MsgMmSetMapName message. Does not implicitly {@link NetMessage.MsgMmSetMapName.verify|verify} messages.
         * @param message MsgMmSetMapName message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMmSetMapName, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMmSetMapName message, length delimited. Does not implicitly {@link NetMessage.MsgMmSetMapName.verify|verify} messages.
         * @param message MsgMmSetMapName message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMmSetMapName, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMmSetMapName message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMmSetMapName
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMmSetMapName;

        /**
         * Decodes a MsgMmSetMapName message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMmSetMapName
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMmSetMapName;

        /**
         * Verifies a MsgMmSetMapName message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMmSetMapName message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMmSetMapName
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMmSetMapName;

        /**
         * Creates a plain object from a MsgMmSetMapName message. Also converts values to other types if specified.
         * @param message MsgMmSetMapName
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMmSetMapName, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMmSetMapName to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMmSetMapName {

        /** Properties of a C. */
        interface IC {

            /** C mapId */
            mapId?: (number|null);

            /** C mapNameArray */
            mapNameArray?: (Structure.ILanguageText[]|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMmSetMapName.IC);

            /** C mapId. */
            public mapId: number;

            /** C mapNameArray. */
            public mapNameArray: Structure.ILanguageText[];

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMmSetMapName.IC): NetMessage.MsgMmSetMapName.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMmSetMapName.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMmSetMapName.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMmSetMapName.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMmSetMapName.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMmSetMapName.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMmSetMapName.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMmSetMapName.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMmSetMapName.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S mapId */
            mapId?: (number|null);

            /** S mapNameArray */
            mapNameArray?: (Structure.ILanguageText[]|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMmSetMapName.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S mapId. */
            public mapId: number;

            /** S mapNameArray. */
            public mapNameArray: Structure.ILanguageText[];

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMmSetMapName.IS): NetMessage.MsgMmSetMapName.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMmSetMapName.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMmSetMapName.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMmSetMapName.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMmSetMapName.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMmSetMapName.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMmSetMapName.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMmSetMapName.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMmSetMapName.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMmAddWarRule. */
    interface IMsgMmAddWarRule {

        /** MsgMmAddWarRule c */
        c?: (NetMessage.MsgMmAddWarRule.IC|null);

        /** MsgMmAddWarRule s */
        s?: (NetMessage.MsgMmAddWarRule.IS|null);
    }

    /** Represents a MsgMmAddWarRule. */
    class MsgMmAddWarRule implements IMsgMmAddWarRule {

        /**
         * Constructs a new MsgMmAddWarRule.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMmAddWarRule);

        /** MsgMmAddWarRule c. */
        public c?: (NetMessage.MsgMmAddWarRule.IC|null);

        /** MsgMmAddWarRule s. */
        public s?: (NetMessage.MsgMmAddWarRule.IS|null);

        /**
         * Creates a new MsgMmAddWarRule instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMmAddWarRule instance
         */
        public static create(properties?: NetMessage.IMsgMmAddWarRule): NetMessage.MsgMmAddWarRule;

        /**
         * Encodes the specified MsgMmAddWarRule message. Does not implicitly {@link NetMessage.MsgMmAddWarRule.verify|verify} messages.
         * @param message MsgMmAddWarRule message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMmAddWarRule, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMmAddWarRule message, length delimited. Does not implicitly {@link NetMessage.MsgMmAddWarRule.verify|verify} messages.
         * @param message MsgMmAddWarRule message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMmAddWarRule, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMmAddWarRule message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMmAddWarRule
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMmAddWarRule;

        /**
         * Decodes a MsgMmAddWarRule message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMmAddWarRule
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMmAddWarRule;

        /**
         * Verifies a MsgMmAddWarRule message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMmAddWarRule message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMmAddWarRule
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMmAddWarRule;

        /**
         * Creates a plain object from a MsgMmAddWarRule message. Also converts values to other types if specified.
         * @param message MsgMmAddWarRule
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMmAddWarRule, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMmAddWarRule to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMmAddWarRule {

        /** Properties of a C. */
        interface IC {

            /** C mapId */
            mapId?: (number|null);

            /** C warRule */
            warRule?: (WarRule.IWarRule|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMmAddWarRule.IC);

            /** C mapId. */
            public mapId: number;

            /** C warRule. */
            public warRule?: (WarRule.IWarRule|null);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMmAddWarRule.IC): NetMessage.MsgMmAddWarRule.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMmAddWarRule.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMmAddWarRule.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMmAddWarRule.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMmAddWarRule.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMmAddWarRule.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMmAddWarRule.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMmAddWarRule.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMmAddWarRule.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S mapId */
            mapId?: (number|null);

            /** S warRule */
            warRule?: (WarRule.IWarRule|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMmAddWarRule.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S mapId. */
            public mapId: number;

            /** S warRule. */
            public warRule?: (WarRule.IWarRule|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMmAddWarRule.IS): NetMessage.MsgMmAddWarRule.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMmAddWarRule.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMmAddWarRule.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMmAddWarRule.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMmAddWarRule.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMmAddWarRule.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMmAddWarRule.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMmAddWarRule.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMmAddWarRule.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMmDeleteWarRule. */
    interface IMsgMmDeleteWarRule {

        /** MsgMmDeleteWarRule c */
        c?: (NetMessage.MsgMmDeleteWarRule.IC|null);

        /** MsgMmDeleteWarRule s */
        s?: (NetMessage.MsgMmDeleteWarRule.IS|null);
    }

    /** Represents a MsgMmDeleteWarRule. */
    class MsgMmDeleteWarRule implements IMsgMmDeleteWarRule {

        /**
         * Constructs a new MsgMmDeleteWarRule.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMmDeleteWarRule);

        /** MsgMmDeleteWarRule c. */
        public c?: (NetMessage.MsgMmDeleteWarRule.IC|null);

        /** MsgMmDeleteWarRule s. */
        public s?: (NetMessage.MsgMmDeleteWarRule.IS|null);

        /**
         * Creates a new MsgMmDeleteWarRule instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMmDeleteWarRule instance
         */
        public static create(properties?: NetMessage.IMsgMmDeleteWarRule): NetMessage.MsgMmDeleteWarRule;

        /**
         * Encodes the specified MsgMmDeleteWarRule message. Does not implicitly {@link NetMessage.MsgMmDeleteWarRule.verify|verify} messages.
         * @param message MsgMmDeleteWarRule message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMmDeleteWarRule, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMmDeleteWarRule message, length delimited. Does not implicitly {@link NetMessage.MsgMmDeleteWarRule.verify|verify} messages.
         * @param message MsgMmDeleteWarRule message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMmDeleteWarRule, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMmDeleteWarRule message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMmDeleteWarRule
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMmDeleteWarRule;

        /**
         * Decodes a MsgMmDeleteWarRule message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMmDeleteWarRule
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMmDeleteWarRule;

        /**
         * Verifies a MsgMmDeleteWarRule message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMmDeleteWarRule message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMmDeleteWarRule
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMmDeleteWarRule;

        /**
         * Creates a plain object from a MsgMmDeleteWarRule message. Also converts values to other types if specified.
         * @param message MsgMmDeleteWarRule
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMmDeleteWarRule, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMmDeleteWarRule to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMmDeleteWarRule {

        /** Properties of a C. */
        interface IC {

            /** C mapId */
            mapId?: (number|null);

            /** C ruleId */
            ruleId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMmDeleteWarRule.IC);

            /** C mapId. */
            public mapId: number;

            /** C ruleId. */
            public ruleId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMmDeleteWarRule.IC): NetMessage.MsgMmDeleteWarRule.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMmDeleteWarRule.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMmDeleteWarRule.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMmDeleteWarRule.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMmDeleteWarRule.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMmDeleteWarRule.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMmDeleteWarRule.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMmDeleteWarRule.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMmDeleteWarRule.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S mapId */
            mapId?: (number|null);

            /** S ruleId */
            ruleId?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMmDeleteWarRule.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S mapId. */
            public mapId: number;

            /** S ruleId. */
            public ruleId: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMmDeleteWarRule.IS): NetMessage.MsgMmDeleteWarRule.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMmDeleteWarRule.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMmDeleteWarRule.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMmDeleteWarRule.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMmDeleteWarRule.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMmDeleteWarRule.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMmDeleteWarRule.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMmDeleteWarRule.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMmDeleteWarRule.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgReplaySetSelfRating. */
    interface IMsgReplaySetSelfRating {

        /** MsgReplaySetSelfRating c */
        c?: (NetMessage.MsgReplaySetSelfRating.IC|null);

        /** MsgReplaySetSelfRating s */
        s?: (NetMessage.MsgReplaySetSelfRating.IS|null);
    }

    /** Represents a MsgReplaySetSelfRating. */
    class MsgReplaySetSelfRating implements IMsgReplaySetSelfRating {

        /**
         * Constructs a new MsgReplaySetSelfRating.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgReplaySetSelfRating);

        /** MsgReplaySetSelfRating c. */
        public c?: (NetMessage.MsgReplaySetSelfRating.IC|null);

        /** MsgReplaySetSelfRating s. */
        public s?: (NetMessage.MsgReplaySetSelfRating.IS|null);

        /**
         * Creates a new MsgReplaySetSelfRating instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgReplaySetSelfRating instance
         */
        public static create(properties?: NetMessage.IMsgReplaySetSelfRating): NetMessage.MsgReplaySetSelfRating;

        /**
         * Encodes the specified MsgReplaySetSelfRating message. Does not implicitly {@link NetMessage.MsgReplaySetSelfRating.verify|verify} messages.
         * @param message MsgReplaySetSelfRating message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgReplaySetSelfRating, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgReplaySetSelfRating message, length delimited. Does not implicitly {@link NetMessage.MsgReplaySetSelfRating.verify|verify} messages.
         * @param message MsgReplaySetSelfRating message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgReplaySetSelfRating, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgReplaySetSelfRating message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgReplaySetSelfRating
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgReplaySetSelfRating;

        /**
         * Decodes a MsgReplaySetSelfRating message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgReplaySetSelfRating
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgReplaySetSelfRating;

        /**
         * Verifies a MsgReplaySetSelfRating message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgReplaySetSelfRating message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgReplaySetSelfRating
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgReplaySetSelfRating;

        /**
         * Creates a plain object from a MsgReplaySetSelfRating message. Also converts values to other types if specified.
         * @param message MsgReplaySetSelfRating
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgReplaySetSelfRating, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgReplaySetSelfRating to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgReplaySetSelfRating {

        /** Properties of a C. */
        interface IC {

            /** C replayId */
            replayId?: (number|null);

            /** C rating */
            rating?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgReplaySetSelfRating.IC);

            /** C replayId. */
            public replayId: number;

            /** C rating. */
            public rating: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgReplaySetSelfRating.IC): NetMessage.MsgReplaySetSelfRating.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgReplaySetSelfRating.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgReplaySetSelfRating.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgReplaySetSelfRating.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgReplaySetSelfRating.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgReplaySetSelfRating.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgReplaySetSelfRating.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgReplaySetSelfRating.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgReplaySetSelfRating.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S replayId */
            replayId?: (number|null);

            /** S rating */
            rating?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgReplaySetSelfRating.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S replayId. */
            public replayId: number;

            /** S rating. */
            public rating: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgReplaySetSelfRating.IS): NetMessage.MsgReplaySetSelfRating.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgReplaySetSelfRating.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgReplaySetSelfRating.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgReplaySetSelfRating.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgReplaySetSelfRating.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgReplaySetSelfRating.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgReplaySetSelfRating.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgReplaySetSelfRating.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgReplaySetSelfRating.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgReplayGetSelfRating. */
    interface IMsgReplayGetSelfRating {

        /** MsgReplayGetSelfRating c */
        c?: (NetMessage.MsgReplayGetSelfRating.IC|null);

        /** MsgReplayGetSelfRating s */
        s?: (NetMessage.MsgReplayGetSelfRating.IS|null);
    }

    /** Represents a MsgReplayGetSelfRating. */
    class MsgReplayGetSelfRating implements IMsgReplayGetSelfRating {

        /**
         * Constructs a new MsgReplayGetSelfRating.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgReplayGetSelfRating);

        /** MsgReplayGetSelfRating c. */
        public c?: (NetMessage.MsgReplayGetSelfRating.IC|null);

        /** MsgReplayGetSelfRating s. */
        public s?: (NetMessage.MsgReplayGetSelfRating.IS|null);

        /**
         * Creates a new MsgReplayGetSelfRating instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgReplayGetSelfRating instance
         */
        public static create(properties?: NetMessage.IMsgReplayGetSelfRating): NetMessage.MsgReplayGetSelfRating;

        /**
         * Encodes the specified MsgReplayGetSelfRating message. Does not implicitly {@link NetMessage.MsgReplayGetSelfRating.verify|verify} messages.
         * @param message MsgReplayGetSelfRating message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgReplayGetSelfRating, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgReplayGetSelfRating message, length delimited. Does not implicitly {@link NetMessage.MsgReplayGetSelfRating.verify|verify} messages.
         * @param message MsgReplayGetSelfRating message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgReplayGetSelfRating, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgReplayGetSelfRating message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgReplayGetSelfRating
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgReplayGetSelfRating;

        /**
         * Decodes a MsgReplayGetSelfRating message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgReplayGetSelfRating
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgReplayGetSelfRating;

        /**
         * Verifies a MsgReplayGetSelfRating message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgReplayGetSelfRating message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgReplayGetSelfRating
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgReplayGetSelfRating;

        /**
         * Creates a plain object from a MsgReplayGetSelfRating message. Also converts values to other types if specified.
         * @param message MsgReplayGetSelfRating
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgReplayGetSelfRating, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgReplayGetSelfRating to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgReplayGetSelfRating {

        /** Properties of a C. */
        interface IC {

            /** C replayId */
            replayId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgReplayGetSelfRating.IC);

            /** C replayId. */
            public replayId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgReplayGetSelfRating.IC): NetMessage.MsgReplayGetSelfRating.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgReplayGetSelfRating.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgReplayGetSelfRating.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgReplayGetSelfRating.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgReplayGetSelfRating.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgReplayGetSelfRating.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgReplayGetSelfRating.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgReplayGetSelfRating.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgReplayGetSelfRating.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S replayId */
            replayId?: (number|null);

            /** S rating */
            rating?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgReplayGetSelfRating.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S replayId. */
            public replayId: number;

            /** S rating. */
            public rating: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgReplayGetSelfRating.IS): NetMessage.MsgReplayGetSelfRating.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgReplayGetSelfRating.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgReplayGetSelfRating.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgReplayGetSelfRating.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgReplayGetSelfRating.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgReplayGetSelfRating.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgReplayGetSelfRating.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgReplayGetSelfRating.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgReplayGetSelfRating.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgReplayGetReplayIdArray. */
    interface IMsgReplayGetReplayIdArray {

        /** MsgReplayGetReplayIdArray c */
        c?: (NetMessage.MsgReplayGetReplayIdArray.IC|null);

        /** MsgReplayGetReplayIdArray s */
        s?: (NetMessage.MsgReplayGetReplayIdArray.IS|null);
    }

    /** Represents a MsgReplayGetReplayIdArray. */
    class MsgReplayGetReplayIdArray implements IMsgReplayGetReplayIdArray {

        /**
         * Constructs a new MsgReplayGetReplayIdArray.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgReplayGetReplayIdArray);

        /** MsgReplayGetReplayIdArray c. */
        public c?: (NetMessage.MsgReplayGetReplayIdArray.IC|null);

        /** MsgReplayGetReplayIdArray s. */
        public s?: (NetMessage.MsgReplayGetReplayIdArray.IS|null);

        /**
         * Creates a new MsgReplayGetReplayIdArray instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgReplayGetReplayIdArray instance
         */
        public static create(properties?: NetMessage.IMsgReplayGetReplayIdArray): NetMessage.MsgReplayGetReplayIdArray;

        /**
         * Encodes the specified MsgReplayGetReplayIdArray message. Does not implicitly {@link NetMessage.MsgReplayGetReplayIdArray.verify|verify} messages.
         * @param message MsgReplayGetReplayIdArray message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgReplayGetReplayIdArray, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgReplayGetReplayIdArray message, length delimited. Does not implicitly {@link NetMessage.MsgReplayGetReplayIdArray.verify|verify} messages.
         * @param message MsgReplayGetReplayIdArray message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgReplayGetReplayIdArray, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgReplayGetReplayIdArray message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgReplayGetReplayIdArray
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgReplayGetReplayIdArray;

        /**
         * Decodes a MsgReplayGetReplayIdArray message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgReplayGetReplayIdArray
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgReplayGetReplayIdArray;

        /**
         * Verifies a MsgReplayGetReplayIdArray message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgReplayGetReplayIdArray message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgReplayGetReplayIdArray
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgReplayGetReplayIdArray;

        /**
         * Creates a plain object from a MsgReplayGetReplayIdArray message. Also converts values to other types if specified.
         * @param message MsgReplayGetReplayIdArray
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgReplayGetReplayIdArray, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgReplayGetReplayIdArray to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgReplayGetReplayIdArray {

        /** Properties of a C. */
        interface IC {

            /** C replayFilter */
            replayFilter?: (Replay.IReplayFilter|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgReplayGetReplayIdArray.IC);

            /** C replayFilter. */
            public replayFilter?: (Replay.IReplayFilter|null);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgReplayGetReplayIdArray.IC): NetMessage.MsgReplayGetReplayIdArray.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgReplayGetReplayIdArray.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgReplayGetReplayIdArray.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgReplayGetReplayIdArray.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgReplayGetReplayIdArray.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgReplayGetReplayIdArray.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgReplayGetReplayIdArray.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgReplayGetReplayIdArray.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgReplayGetReplayIdArray.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S replayIdArray */
            replayIdArray?: (number[]|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgReplayGetReplayIdArray.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S replayIdArray. */
            public replayIdArray: number[];

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgReplayGetReplayIdArray.IS): NetMessage.MsgReplayGetReplayIdArray.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgReplayGetReplayIdArray.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgReplayGetReplayIdArray.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgReplayGetReplayIdArray.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgReplayGetReplayIdArray.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgReplayGetReplayIdArray.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgReplayGetReplayIdArray.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgReplayGetReplayIdArray.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgReplayGetReplayIdArray.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgReplayGetData. */
    interface IMsgReplayGetData {

        /** MsgReplayGetData c */
        c?: (NetMessage.MsgReplayGetData.IC|null);

        /** MsgReplayGetData s */
        s?: (NetMessage.MsgReplayGetData.IS|null);
    }

    /** Represents a MsgReplayGetData. */
    class MsgReplayGetData implements IMsgReplayGetData {

        /**
         * Constructs a new MsgReplayGetData.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgReplayGetData);

        /** MsgReplayGetData c. */
        public c?: (NetMessage.MsgReplayGetData.IC|null);

        /** MsgReplayGetData s. */
        public s?: (NetMessage.MsgReplayGetData.IS|null);

        /**
         * Creates a new MsgReplayGetData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgReplayGetData instance
         */
        public static create(properties?: NetMessage.IMsgReplayGetData): NetMessage.MsgReplayGetData;

        /**
         * Encodes the specified MsgReplayGetData message. Does not implicitly {@link NetMessage.MsgReplayGetData.verify|verify} messages.
         * @param message MsgReplayGetData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgReplayGetData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgReplayGetData message, length delimited. Does not implicitly {@link NetMessage.MsgReplayGetData.verify|verify} messages.
         * @param message MsgReplayGetData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgReplayGetData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgReplayGetData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgReplayGetData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgReplayGetData;

        /**
         * Decodes a MsgReplayGetData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgReplayGetData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgReplayGetData;

        /**
         * Verifies a MsgReplayGetData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgReplayGetData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgReplayGetData
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgReplayGetData;

        /**
         * Creates a plain object from a MsgReplayGetData message. Also converts values to other types if specified.
         * @param message MsgReplayGetData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgReplayGetData, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgReplayGetData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgReplayGetData {

        /** Properties of a C. */
        interface IC {

            /** C replayId */
            replayId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgReplayGetData.IC);

            /** C replayId. */
            public replayId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgReplayGetData.IC): NetMessage.MsgReplayGetData.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgReplayGetData.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgReplayGetData.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgReplayGetData.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgReplayGetData.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgReplayGetData.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgReplayGetData.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgReplayGetData.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgReplayGetData.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S replayId */
            replayId?: (number|null);

            /** S encodedWar */
            encodedWar?: (Uint8Array|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgReplayGetData.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S replayId. */
            public replayId: number;

            /** S encodedWar. */
            public encodedWar: Uint8Array;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgReplayGetData.IS): NetMessage.MsgReplayGetData.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgReplayGetData.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgReplayGetData.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgReplayGetData.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgReplayGetData.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgReplayGetData.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgReplayGetData.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgReplayGetData.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgReplayGetData.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgReplayGetReplayInfo. */
    interface IMsgReplayGetReplayInfo {

        /** MsgReplayGetReplayInfo c */
        c?: (NetMessage.MsgReplayGetReplayInfo.IC|null);

        /** MsgReplayGetReplayInfo s */
        s?: (NetMessage.MsgReplayGetReplayInfo.IS|null);
    }

    /** Represents a MsgReplayGetReplayInfo. */
    class MsgReplayGetReplayInfo implements IMsgReplayGetReplayInfo {

        /**
         * Constructs a new MsgReplayGetReplayInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgReplayGetReplayInfo);

        /** MsgReplayGetReplayInfo c. */
        public c?: (NetMessage.MsgReplayGetReplayInfo.IC|null);

        /** MsgReplayGetReplayInfo s. */
        public s?: (NetMessage.MsgReplayGetReplayInfo.IS|null);

        /**
         * Creates a new MsgReplayGetReplayInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgReplayGetReplayInfo instance
         */
        public static create(properties?: NetMessage.IMsgReplayGetReplayInfo): NetMessage.MsgReplayGetReplayInfo;

        /**
         * Encodes the specified MsgReplayGetReplayInfo message. Does not implicitly {@link NetMessage.MsgReplayGetReplayInfo.verify|verify} messages.
         * @param message MsgReplayGetReplayInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgReplayGetReplayInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgReplayGetReplayInfo message, length delimited. Does not implicitly {@link NetMessage.MsgReplayGetReplayInfo.verify|verify} messages.
         * @param message MsgReplayGetReplayInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgReplayGetReplayInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgReplayGetReplayInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgReplayGetReplayInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgReplayGetReplayInfo;

        /**
         * Decodes a MsgReplayGetReplayInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgReplayGetReplayInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgReplayGetReplayInfo;

        /**
         * Verifies a MsgReplayGetReplayInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgReplayGetReplayInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgReplayGetReplayInfo
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgReplayGetReplayInfo;

        /**
         * Creates a plain object from a MsgReplayGetReplayInfo message. Also converts values to other types if specified.
         * @param message MsgReplayGetReplayInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgReplayGetReplayInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgReplayGetReplayInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgReplayGetReplayInfo {

        /** Properties of a C. */
        interface IC {

            /** C replayId */
            replayId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgReplayGetReplayInfo.IC);

            /** C replayId. */
            public replayId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgReplayGetReplayInfo.IC): NetMessage.MsgReplayGetReplayInfo.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgReplayGetReplayInfo.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgReplayGetReplayInfo.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgReplayGetReplayInfo.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgReplayGetReplayInfo.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgReplayGetReplayInfo.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgReplayGetReplayInfo.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgReplayGetReplayInfo.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgReplayGetReplayInfo.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S replayId */
            replayId?: (number|null);

            /** S replayInfo */
            replayInfo?: (Replay.IReplayInfo|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgReplayGetReplayInfo.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S replayId. */
            public replayId: number;

            /** S replayInfo. */
            public replayInfo?: (Replay.IReplayInfo|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgReplayGetReplayInfo.IS): NetMessage.MsgReplayGetReplayInfo.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgReplayGetReplayInfo.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgReplayGetReplayInfo.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgReplayGetReplayInfo.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgReplayGetReplayInfo.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgReplayGetReplayInfo.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgReplayGetReplayInfo.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgReplayGetReplayInfo.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgReplayGetReplayInfo.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMcrCreateRoom. */
    interface IMsgMcrCreateRoom {

        /** MsgMcrCreateRoom c */
        c?: (NetMessage.MsgMcrCreateRoom.IC|null);

        /** MsgMcrCreateRoom s */
        s?: (NetMessage.MsgMcrCreateRoom.IS|null);
    }

    /** Represents a MsgMcrCreateRoom. */
    class MsgMcrCreateRoom implements IMsgMcrCreateRoom {

        /**
         * Constructs a new MsgMcrCreateRoom.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMcrCreateRoom);

        /** MsgMcrCreateRoom c. */
        public c?: (NetMessage.MsgMcrCreateRoom.IC|null);

        /** MsgMcrCreateRoom s. */
        public s?: (NetMessage.MsgMcrCreateRoom.IS|null);

        /**
         * Creates a new MsgMcrCreateRoom instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMcrCreateRoom instance
         */
        public static create(properties?: NetMessage.IMsgMcrCreateRoom): NetMessage.MsgMcrCreateRoom;

        /**
         * Encodes the specified MsgMcrCreateRoom message. Does not implicitly {@link NetMessage.MsgMcrCreateRoom.verify|verify} messages.
         * @param message MsgMcrCreateRoom message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMcrCreateRoom, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMcrCreateRoom message, length delimited. Does not implicitly {@link NetMessage.MsgMcrCreateRoom.verify|verify} messages.
         * @param message MsgMcrCreateRoom message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMcrCreateRoom, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMcrCreateRoom message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMcrCreateRoom
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrCreateRoom;

        /**
         * Decodes a MsgMcrCreateRoom message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMcrCreateRoom
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrCreateRoom;

        /**
         * Verifies a MsgMcrCreateRoom message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMcrCreateRoom message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMcrCreateRoom
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrCreateRoom;

        /**
         * Creates a plain object from a MsgMcrCreateRoom message. Also converts values to other types if specified.
         * @param message MsgMcrCreateRoom
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMcrCreateRoom, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMcrCreateRoom to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMcrCreateRoom {

        /** Properties of a C. */
        interface IC {

            /** C settingsForCommon */
            settingsForCommon?: (WarSettings.ISettingsForCommon|null);

            /** C settingsForMcw */
            settingsForMcw?: (WarSettings.ISettingsForMcw|null);

            /** C selfPlayerIndex */
            selfPlayerIndex?: (number|null);

            /** C selfCoId */
            selfCoId?: (number|null);

            /** C selfUnitAndTileSkinId */
            selfUnitAndTileSkinId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcrCreateRoom.IC);

            /** C settingsForCommon. */
            public settingsForCommon?: (WarSettings.ISettingsForCommon|null);

            /** C settingsForMcw. */
            public settingsForMcw?: (WarSettings.ISettingsForMcw|null);

            /** C selfPlayerIndex. */
            public selfPlayerIndex: number;

            /** C selfCoId. */
            public selfCoId: number;

            /** C selfUnitAndTileSkinId. */
            public selfUnitAndTileSkinId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMcrCreateRoom.IC): NetMessage.MsgMcrCreateRoom.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMcrCreateRoom.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcrCreateRoom.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMcrCreateRoom.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcrCreateRoom.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrCreateRoom.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrCreateRoom.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrCreateRoom.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcrCreateRoom.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcrCreateRoom.IS);

            /** S errorCode. */
            public errorCode: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMcrCreateRoom.IS): NetMessage.MsgMcrCreateRoom.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMcrCreateRoom.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcrCreateRoom.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMcrCreateRoom.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcrCreateRoom.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrCreateRoom.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrCreateRoom.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrCreateRoom.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcrCreateRoom.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMcrExitRoom. */
    interface IMsgMcrExitRoom {

        /** MsgMcrExitRoom c */
        c?: (NetMessage.MsgMcrExitRoom.IC|null);

        /** MsgMcrExitRoom s */
        s?: (NetMessage.MsgMcrExitRoom.IS|null);
    }

    /** Represents a MsgMcrExitRoom. */
    class MsgMcrExitRoom implements IMsgMcrExitRoom {

        /**
         * Constructs a new MsgMcrExitRoom.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMcrExitRoom);

        /** MsgMcrExitRoom c. */
        public c?: (NetMessage.MsgMcrExitRoom.IC|null);

        /** MsgMcrExitRoom s. */
        public s?: (NetMessage.MsgMcrExitRoom.IS|null);

        /**
         * Creates a new MsgMcrExitRoom instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMcrExitRoom instance
         */
        public static create(properties?: NetMessage.IMsgMcrExitRoom): NetMessage.MsgMcrExitRoom;

        /**
         * Encodes the specified MsgMcrExitRoom message. Does not implicitly {@link NetMessage.MsgMcrExitRoom.verify|verify} messages.
         * @param message MsgMcrExitRoom message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMcrExitRoom, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMcrExitRoom message, length delimited. Does not implicitly {@link NetMessage.MsgMcrExitRoom.verify|verify} messages.
         * @param message MsgMcrExitRoom message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMcrExitRoom, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMcrExitRoom message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMcrExitRoom
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrExitRoom;

        /**
         * Decodes a MsgMcrExitRoom message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMcrExitRoom
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrExitRoom;

        /**
         * Verifies a MsgMcrExitRoom message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMcrExitRoom message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMcrExitRoom
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrExitRoom;

        /**
         * Creates a plain object from a MsgMcrExitRoom message. Also converts values to other types if specified.
         * @param message MsgMcrExitRoom
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMcrExitRoom, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMcrExitRoom to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMcrExitRoom {

        /** Properties of a C. */
        interface IC {

            /** C roomId */
            roomId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcrExitRoom.IC);

            /** C roomId. */
            public roomId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMcrExitRoom.IC): NetMessage.MsgMcrExitRoom.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMcrExitRoom.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcrExitRoom.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMcrExitRoom.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcrExitRoom.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrExitRoom.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrExitRoom.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrExitRoom.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcrExitRoom.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S roomId */
            roomId?: (number|null);

            /** S exitType */
            exitType?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcrExitRoom.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S roomId. */
            public roomId: number;

            /** S exitType. */
            public exitType: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMcrExitRoom.IS): NetMessage.MsgMcrExitRoom.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMcrExitRoom.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcrExitRoom.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMcrExitRoom.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcrExitRoom.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrExitRoom.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrExitRoom.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrExitRoom.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcrExitRoom.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMcrGetJoinedRoomIdArray. */
    interface IMsgMcrGetJoinedRoomIdArray {

        /** MsgMcrGetJoinedRoomIdArray c */
        c?: (NetMessage.MsgMcrGetJoinedRoomIdArray.IC|null);

        /** MsgMcrGetJoinedRoomIdArray s */
        s?: (NetMessage.MsgMcrGetJoinedRoomIdArray.IS|null);
    }

    /** Represents a MsgMcrGetJoinedRoomIdArray. */
    class MsgMcrGetJoinedRoomIdArray implements IMsgMcrGetJoinedRoomIdArray {

        /**
         * Constructs a new MsgMcrGetJoinedRoomIdArray.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMcrGetJoinedRoomIdArray);

        /** MsgMcrGetJoinedRoomIdArray c. */
        public c?: (NetMessage.MsgMcrGetJoinedRoomIdArray.IC|null);

        /** MsgMcrGetJoinedRoomIdArray s. */
        public s?: (NetMessage.MsgMcrGetJoinedRoomIdArray.IS|null);

        /**
         * Creates a new MsgMcrGetJoinedRoomIdArray instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMcrGetJoinedRoomIdArray instance
         */
        public static create(properties?: NetMessage.IMsgMcrGetJoinedRoomIdArray): NetMessage.MsgMcrGetJoinedRoomIdArray;

        /**
         * Encodes the specified MsgMcrGetJoinedRoomIdArray message. Does not implicitly {@link NetMessage.MsgMcrGetJoinedRoomIdArray.verify|verify} messages.
         * @param message MsgMcrGetJoinedRoomIdArray message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMcrGetJoinedRoomIdArray, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMcrGetJoinedRoomIdArray message, length delimited. Does not implicitly {@link NetMessage.MsgMcrGetJoinedRoomIdArray.verify|verify} messages.
         * @param message MsgMcrGetJoinedRoomIdArray message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMcrGetJoinedRoomIdArray, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMcrGetJoinedRoomIdArray message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMcrGetJoinedRoomIdArray
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrGetJoinedRoomIdArray;

        /**
         * Decodes a MsgMcrGetJoinedRoomIdArray message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMcrGetJoinedRoomIdArray
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrGetJoinedRoomIdArray;

        /**
         * Verifies a MsgMcrGetJoinedRoomIdArray message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMcrGetJoinedRoomIdArray message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMcrGetJoinedRoomIdArray
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrGetJoinedRoomIdArray;

        /**
         * Creates a plain object from a MsgMcrGetJoinedRoomIdArray message. Also converts values to other types if specified.
         * @param message MsgMcrGetJoinedRoomIdArray
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMcrGetJoinedRoomIdArray, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMcrGetJoinedRoomIdArray to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMcrGetJoinedRoomIdArray {

        /** Properties of a C. */
        interface IC {
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcrGetJoinedRoomIdArray.IC);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMcrGetJoinedRoomIdArray.IC): NetMessage.MsgMcrGetJoinedRoomIdArray.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMcrGetJoinedRoomIdArray.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcrGetJoinedRoomIdArray.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMcrGetJoinedRoomIdArray.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcrGetJoinedRoomIdArray.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrGetJoinedRoomIdArray.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrGetJoinedRoomIdArray.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrGetJoinedRoomIdArray.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcrGetJoinedRoomIdArray.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S roomIdArray */
            roomIdArray?: (number[]|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcrGetJoinedRoomIdArray.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S roomIdArray. */
            public roomIdArray: number[];

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMcrGetJoinedRoomIdArray.IS): NetMessage.MsgMcrGetJoinedRoomIdArray.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMcrGetJoinedRoomIdArray.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcrGetJoinedRoomIdArray.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMcrGetJoinedRoomIdArray.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcrGetJoinedRoomIdArray.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrGetJoinedRoomIdArray.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrGetJoinedRoomIdArray.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrGetJoinedRoomIdArray.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcrGetJoinedRoomIdArray.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMcrGetRoomStaticInfo. */
    interface IMsgMcrGetRoomStaticInfo {

        /** MsgMcrGetRoomStaticInfo c */
        c?: (NetMessage.MsgMcrGetRoomStaticInfo.IC|null);

        /** MsgMcrGetRoomStaticInfo s */
        s?: (NetMessage.MsgMcrGetRoomStaticInfo.IS|null);
    }

    /** Represents a MsgMcrGetRoomStaticInfo. */
    class MsgMcrGetRoomStaticInfo implements IMsgMcrGetRoomStaticInfo {

        /**
         * Constructs a new MsgMcrGetRoomStaticInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMcrGetRoomStaticInfo);

        /** MsgMcrGetRoomStaticInfo c. */
        public c?: (NetMessage.MsgMcrGetRoomStaticInfo.IC|null);

        /** MsgMcrGetRoomStaticInfo s. */
        public s?: (NetMessage.MsgMcrGetRoomStaticInfo.IS|null);

        /**
         * Creates a new MsgMcrGetRoomStaticInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMcrGetRoomStaticInfo instance
         */
        public static create(properties?: NetMessage.IMsgMcrGetRoomStaticInfo): NetMessage.MsgMcrGetRoomStaticInfo;

        /**
         * Encodes the specified MsgMcrGetRoomStaticInfo message. Does not implicitly {@link NetMessage.MsgMcrGetRoomStaticInfo.verify|verify} messages.
         * @param message MsgMcrGetRoomStaticInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMcrGetRoomStaticInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMcrGetRoomStaticInfo message, length delimited. Does not implicitly {@link NetMessage.MsgMcrGetRoomStaticInfo.verify|verify} messages.
         * @param message MsgMcrGetRoomStaticInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMcrGetRoomStaticInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMcrGetRoomStaticInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMcrGetRoomStaticInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrGetRoomStaticInfo;

        /**
         * Decodes a MsgMcrGetRoomStaticInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMcrGetRoomStaticInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrGetRoomStaticInfo;

        /**
         * Verifies a MsgMcrGetRoomStaticInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMcrGetRoomStaticInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMcrGetRoomStaticInfo
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrGetRoomStaticInfo;

        /**
         * Creates a plain object from a MsgMcrGetRoomStaticInfo message. Also converts values to other types if specified.
         * @param message MsgMcrGetRoomStaticInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMcrGetRoomStaticInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMcrGetRoomStaticInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMcrGetRoomStaticInfo {

        /** Properties of a C. */
        interface IC {

            /** C roomId */
            roomId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcrGetRoomStaticInfo.IC);

            /** C roomId. */
            public roomId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMcrGetRoomStaticInfo.IC): NetMessage.MsgMcrGetRoomStaticInfo.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMcrGetRoomStaticInfo.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcrGetRoomStaticInfo.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMcrGetRoomStaticInfo.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcrGetRoomStaticInfo.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrGetRoomStaticInfo.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrGetRoomStaticInfo.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrGetRoomStaticInfo.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcrGetRoomStaticInfo.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S roomId */
            roomId?: (number|null);

            /** S roomStaticInfo */
            roomStaticInfo?: (MultiCustomRoom.IMcrRoomStaticInfo|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcrGetRoomStaticInfo.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S roomId. */
            public roomId: number;

            /** S roomStaticInfo. */
            public roomStaticInfo?: (MultiCustomRoom.IMcrRoomStaticInfo|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMcrGetRoomStaticInfo.IS): NetMessage.MsgMcrGetRoomStaticInfo.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMcrGetRoomStaticInfo.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcrGetRoomStaticInfo.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMcrGetRoomStaticInfo.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcrGetRoomStaticInfo.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrGetRoomStaticInfo.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrGetRoomStaticInfo.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrGetRoomStaticInfo.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcrGetRoomStaticInfo.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMcrGetRoomPlayerInfo. */
    interface IMsgMcrGetRoomPlayerInfo {

        /** MsgMcrGetRoomPlayerInfo c */
        c?: (NetMessage.MsgMcrGetRoomPlayerInfo.IC|null);

        /** MsgMcrGetRoomPlayerInfo s */
        s?: (NetMessage.MsgMcrGetRoomPlayerInfo.IS|null);
    }

    /** Represents a MsgMcrGetRoomPlayerInfo. */
    class MsgMcrGetRoomPlayerInfo implements IMsgMcrGetRoomPlayerInfo {

        /**
         * Constructs a new MsgMcrGetRoomPlayerInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMcrGetRoomPlayerInfo);

        /** MsgMcrGetRoomPlayerInfo c. */
        public c?: (NetMessage.MsgMcrGetRoomPlayerInfo.IC|null);

        /** MsgMcrGetRoomPlayerInfo s. */
        public s?: (NetMessage.MsgMcrGetRoomPlayerInfo.IS|null);

        /**
         * Creates a new MsgMcrGetRoomPlayerInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMcrGetRoomPlayerInfo instance
         */
        public static create(properties?: NetMessage.IMsgMcrGetRoomPlayerInfo): NetMessage.MsgMcrGetRoomPlayerInfo;

        /**
         * Encodes the specified MsgMcrGetRoomPlayerInfo message. Does not implicitly {@link NetMessage.MsgMcrGetRoomPlayerInfo.verify|verify} messages.
         * @param message MsgMcrGetRoomPlayerInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMcrGetRoomPlayerInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMcrGetRoomPlayerInfo message, length delimited. Does not implicitly {@link NetMessage.MsgMcrGetRoomPlayerInfo.verify|verify} messages.
         * @param message MsgMcrGetRoomPlayerInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMcrGetRoomPlayerInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMcrGetRoomPlayerInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMcrGetRoomPlayerInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrGetRoomPlayerInfo;

        /**
         * Decodes a MsgMcrGetRoomPlayerInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMcrGetRoomPlayerInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrGetRoomPlayerInfo;

        /**
         * Verifies a MsgMcrGetRoomPlayerInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMcrGetRoomPlayerInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMcrGetRoomPlayerInfo
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrGetRoomPlayerInfo;

        /**
         * Creates a plain object from a MsgMcrGetRoomPlayerInfo message. Also converts values to other types if specified.
         * @param message MsgMcrGetRoomPlayerInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMcrGetRoomPlayerInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMcrGetRoomPlayerInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMcrGetRoomPlayerInfo {

        /** Properties of a C. */
        interface IC {

            /** C roomId */
            roomId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcrGetRoomPlayerInfo.IC);

            /** C roomId. */
            public roomId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMcrGetRoomPlayerInfo.IC): NetMessage.MsgMcrGetRoomPlayerInfo.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMcrGetRoomPlayerInfo.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcrGetRoomPlayerInfo.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMcrGetRoomPlayerInfo.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcrGetRoomPlayerInfo.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrGetRoomPlayerInfo.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrGetRoomPlayerInfo.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrGetRoomPlayerInfo.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcrGetRoomPlayerInfo.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S roomId */
            roomId?: (number|null);

            /** S roomPlayerInfo */
            roomPlayerInfo?: (MultiCustomRoom.IMcrRoomPlayerInfo|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcrGetRoomPlayerInfo.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S roomId. */
            public roomId: number;

            /** S roomPlayerInfo. */
            public roomPlayerInfo?: (MultiCustomRoom.IMcrRoomPlayerInfo|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMcrGetRoomPlayerInfo.IS): NetMessage.MsgMcrGetRoomPlayerInfo.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMcrGetRoomPlayerInfo.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcrGetRoomPlayerInfo.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMcrGetRoomPlayerInfo.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcrGetRoomPlayerInfo.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrGetRoomPlayerInfo.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrGetRoomPlayerInfo.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrGetRoomPlayerInfo.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcrGetRoomPlayerInfo.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMcrGetJoinableRoomIdArray. */
    interface IMsgMcrGetJoinableRoomIdArray {

        /** MsgMcrGetJoinableRoomIdArray c */
        c?: (NetMessage.MsgMcrGetJoinableRoomIdArray.IC|null);

        /** MsgMcrGetJoinableRoomIdArray s */
        s?: (NetMessage.MsgMcrGetJoinableRoomIdArray.IS|null);
    }

    /** Represents a MsgMcrGetJoinableRoomIdArray. */
    class MsgMcrGetJoinableRoomIdArray implements IMsgMcrGetJoinableRoomIdArray {

        /**
         * Constructs a new MsgMcrGetJoinableRoomIdArray.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMcrGetJoinableRoomIdArray);

        /** MsgMcrGetJoinableRoomIdArray c. */
        public c?: (NetMessage.MsgMcrGetJoinableRoomIdArray.IC|null);

        /** MsgMcrGetJoinableRoomIdArray s. */
        public s?: (NetMessage.MsgMcrGetJoinableRoomIdArray.IS|null);

        /**
         * Creates a new MsgMcrGetJoinableRoomIdArray instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMcrGetJoinableRoomIdArray instance
         */
        public static create(properties?: NetMessage.IMsgMcrGetJoinableRoomIdArray): NetMessage.MsgMcrGetJoinableRoomIdArray;

        /**
         * Encodes the specified MsgMcrGetJoinableRoomIdArray message. Does not implicitly {@link NetMessage.MsgMcrGetJoinableRoomIdArray.verify|verify} messages.
         * @param message MsgMcrGetJoinableRoomIdArray message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMcrGetJoinableRoomIdArray, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMcrGetJoinableRoomIdArray message, length delimited. Does not implicitly {@link NetMessage.MsgMcrGetJoinableRoomIdArray.verify|verify} messages.
         * @param message MsgMcrGetJoinableRoomIdArray message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMcrGetJoinableRoomIdArray, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMcrGetJoinableRoomIdArray message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMcrGetJoinableRoomIdArray
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrGetJoinableRoomIdArray;

        /**
         * Decodes a MsgMcrGetJoinableRoomIdArray message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMcrGetJoinableRoomIdArray
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrGetJoinableRoomIdArray;

        /**
         * Verifies a MsgMcrGetJoinableRoomIdArray message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMcrGetJoinableRoomIdArray message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMcrGetJoinableRoomIdArray
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrGetJoinableRoomIdArray;

        /**
         * Creates a plain object from a MsgMcrGetJoinableRoomIdArray message. Also converts values to other types if specified.
         * @param message MsgMcrGetJoinableRoomIdArray
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMcrGetJoinableRoomIdArray, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMcrGetJoinableRoomIdArray to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMcrGetJoinableRoomIdArray {

        /** Properties of a C. */
        interface IC {

            /** C roomFilter */
            roomFilter?: (MultiCustomRoom.IMcrRoomFilter|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcrGetJoinableRoomIdArray.IC);

            /** C roomFilter. */
            public roomFilter?: (MultiCustomRoom.IMcrRoomFilter|null);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMcrGetJoinableRoomIdArray.IC): NetMessage.MsgMcrGetJoinableRoomIdArray.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMcrGetJoinableRoomIdArray.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcrGetJoinableRoomIdArray.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMcrGetJoinableRoomIdArray.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcrGetJoinableRoomIdArray.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrGetJoinableRoomIdArray.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrGetJoinableRoomIdArray.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrGetJoinableRoomIdArray.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcrGetJoinableRoomIdArray.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S roomIdArray */
            roomIdArray?: (number[]|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcrGetJoinableRoomIdArray.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S roomIdArray. */
            public roomIdArray: number[];

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMcrGetJoinableRoomIdArray.IS): NetMessage.MsgMcrGetJoinableRoomIdArray.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMcrGetJoinableRoomIdArray.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcrGetJoinableRoomIdArray.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMcrGetJoinableRoomIdArray.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcrGetJoinableRoomIdArray.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrGetJoinableRoomIdArray.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrGetJoinableRoomIdArray.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrGetJoinableRoomIdArray.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcrGetJoinableRoomIdArray.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMcrJoinRoom. */
    interface IMsgMcrJoinRoom {

        /** MsgMcrJoinRoom c */
        c?: (NetMessage.MsgMcrJoinRoom.IC|null);

        /** MsgMcrJoinRoom s */
        s?: (NetMessage.MsgMcrJoinRoom.IS|null);
    }

    /** Represents a MsgMcrJoinRoom. */
    class MsgMcrJoinRoom implements IMsgMcrJoinRoom {

        /**
         * Constructs a new MsgMcrJoinRoom.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMcrJoinRoom);

        /** MsgMcrJoinRoom c. */
        public c?: (NetMessage.MsgMcrJoinRoom.IC|null);

        /** MsgMcrJoinRoom s. */
        public s?: (NetMessage.MsgMcrJoinRoom.IS|null);

        /**
         * Creates a new MsgMcrJoinRoom instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMcrJoinRoom instance
         */
        public static create(properties?: NetMessage.IMsgMcrJoinRoom): NetMessage.MsgMcrJoinRoom;

        /**
         * Encodes the specified MsgMcrJoinRoom message. Does not implicitly {@link NetMessage.MsgMcrJoinRoom.verify|verify} messages.
         * @param message MsgMcrJoinRoom message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMcrJoinRoom, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMcrJoinRoom message, length delimited. Does not implicitly {@link NetMessage.MsgMcrJoinRoom.verify|verify} messages.
         * @param message MsgMcrJoinRoom message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMcrJoinRoom, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMcrJoinRoom message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMcrJoinRoom
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrJoinRoom;

        /**
         * Decodes a MsgMcrJoinRoom message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMcrJoinRoom
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrJoinRoom;

        /**
         * Verifies a MsgMcrJoinRoom message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMcrJoinRoom message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMcrJoinRoom
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrJoinRoom;

        /**
         * Creates a plain object from a MsgMcrJoinRoom message. Also converts values to other types if specified.
         * @param message MsgMcrJoinRoom
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMcrJoinRoom, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMcrJoinRoom to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMcrJoinRoom {

        /** Properties of a C. */
        interface IC {

            /** C roomId */
            roomId?: (number|null);

            /** C playerIndex */
            playerIndex?: (number|null);

            /** C coId */
            coId?: (number|null);

            /** C isReady */
            isReady?: (boolean|null);

            /** C unitAndTileSkinId */
            unitAndTileSkinId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcrJoinRoom.IC);

            /** C roomId. */
            public roomId: number;

            /** C playerIndex. */
            public playerIndex: number;

            /** C coId. */
            public coId: number;

            /** C isReady. */
            public isReady: boolean;

            /** C unitAndTileSkinId. */
            public unitAndTileSkinId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMcrJoinRoom.IC): NetMessage.MsgMcrJoinRoom.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMcrJoinRoom.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcrJoinRoom.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMcrJoinRoom.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcrJoinRoom.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrJoinRoom.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrJoinRoom.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrJoinRoom.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcrJoinRoom.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S roomId */
            roomId?: (number|null);

            /** S playerIndex */
            playerIndex?: (number|null);

            /** S coId */
            coId?: (number|null);

            /** S isReady */
            isReady?: (boolean|null);

            /** S unitAndTileSkinId */
            unitAndTileSkinId?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcrJoinRoom.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S roomId. */
            public roomId: number;

            /** S playerIndex. */
            public playerIndex: number;

            /** S coId. */
            public coId: number;

            /** S isReady. */
            public isReady: boolean;

            /** S unitAndTileSkinId. */
            public unitAndTileSkinId: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMcrJoinRoom.IS): NetMessage.MsgMcrJoinRoom.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMcrJoinRoom.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcrJoinRoom.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMcrJoinRoom.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcrJoinRoom.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrJoinRoom.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrJoinRoom.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrJoinRoom.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcrJoinRoom.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMcrDeleteRoom. */
    interface IMsgMcrDeleteRoom {

        /** MsgMcrDeleteRoom c */
        c?: (NetMessage.MsgMcrDeleteRoom.IC|null);

        /** MsgMcrDeleteRoom s */
        s?: (NetMessage.MsgMcrDeleteRoom.IS|null);
    }

    /** Represents a MsgMcrDeleteRoom. */
    class MsgMcrDeleteRoom implements IMsgMcrDeleteRoom {

        /**
         * Constructs a new MsgMcrDeleteRoom.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMcrDeleteRoom);

        /** MsgMcrDeleteRoom c. */
        public c?: (NetMessage.MsgMcrDeleteRoom.IC|null);

        /** MsgMcrDeleteRoom s. */
        public s?: (NetMessage.MsgMcrDeleteRoom.IS|null);

        /**
         * Creates a new MsgMcrDeleteRoom instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMcrDeleteRoom instance
         */
        public static create(properties?: NetMessage.IMsgMcrDeleteRoom): NetMessage.MsgMcrDeleteRoom;

        /**
         * Encodes the specified MsgMcrDeleteRoom message. Does not implicitly {@link NetMessage.MsgMcrDeleteRoom.verify|verify} messages.
         * @param message MsgMcrDeleteRoom message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMcrDeleteRoom, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMcrDeleteRoom message, length delimited. Does not implicitly {@link NetMessage.MsgMcrDeleteRoom.verify|verify} messages.
         * @param message MsgMcrDeleteRoom message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMcrDeleteRoom, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMcrDeleteRoom message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMcrDeleteRoom
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrDeleteRoom;

        /**
         * Decodes a MsgMcrDeleteRoom message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMcrDeleteRoom
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrDeleteRoom;

        /**
         * Verifies a MsgMcrDeleteRoom message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMcrDeleteRoom message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMcrDeleteRoom
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrDeleteRoom;

        /**
         * Creates a plain object from a MsgMcrDeleteRoom message. Also converts values to other types if specified.
         * @param message MsgMcrDeleteRoom
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMcrDeleteRoom, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMcrDeleteRoom to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMcrDeleteRoom {

        /** Properties of a C. */
        interface IC {

            /** C roomId */
            roomId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcrDeleteRoom.IC);

            /** C roomId. */
            public roomId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMcrDeleteRoom.IC): NetMessage.MsgMcrDeleteRoom.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMcrDeleteRoom.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcrDeleteRoom.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMcrDeleteRoom.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcrDeleteRoom.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrDeleteRoom.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrDeleteRoom.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrDeleteRoom.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcrDeleteRoom.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S roomId */
            roomId?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcrDeleteRoom.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S roomId. */
            public roomId: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMcrDeleteRoom.IS): NetMessage.MsgMcrDeleteRoom.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMcrDeleteRoom.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcrDeleteRoom.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMcrDeleteRoom.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcrDeleteRoom.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrDeleteRoom.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrDeleteRoom.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrDeleteRoom.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcrDeleteRoom.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMcrSetReady. */
    interface IMsgMcrSetReady {

        /** MsgMcrSetReady c */
        c?: (NetMessage.MsgMcrSetReady.IC|null);

        /** MsgMcrSetReady s */
        s?: (NetMessage.MsgMcrSetReady.IS|null);
    }

    /** Represents a MsgMcrSetReady. */
    class MsgMcrSetReady implements IMsgMcrSetReady {

        /**
         * Constructs a new MsgMcrSetReady.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMcrSetReady);

        /** MsgMcrSetReady c. */
        public c?: (NetMessage.MsgMcrSetReady.IC|null);

        /** MsgMcrSetReady s. */
        public s?: (NetMessage.MsgMcrSetReady.IS|null);

        /**
         * Creates a new MsgMcrSetReady instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMcrSetReady instance
         */
        public static create(properties?: NetMessage.IMsgMcrSetReady): NetMessage.MsgMcrSetReady;

        /**
         * Encodes the specified MsgMcrSetReady message. Does not implicitly {@link NetMessage.MsgMcrSetReady.verify|verify} messages.
         * @param message MsgMcrSetReady message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMcrSetReady, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMcrSetReady message, length delimited. Does not implicitly {@link NetMessage.MsgMcrSetReady.verify|verify} messages.
         * @param message MsgMcrSetReady message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMcrSetReady, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMcrSetReady message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMcrSetReady
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrSetReady;

        /**
         * Decodes a MsgMcrSetReady message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMcrSetReady
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrSetReady;

        /**
         * Verifies a MsgMcrSetReady message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMcrSetReady message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMcrSetReady
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrSetReady;

        /**
         * Creates a plain object from a MsgMcrSetReady message. Also converts values to other types if specified.
         * @param message MsgMcrSetReady
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMcrSetReady, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMcrSetReady to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMcrSetReady {

        /** Properties of a C. */
        interface IC {

            /** C roomId */
            roomId?: (number|null);

            /** C isReady */
            isReady?: (boolean|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcrSetReady.IC);

            /** C roomId. */
            public roomId: number;

            /** C isReady. */
            public isReady: boolean;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMcrSetReady.IC): NetMessage.MsgMcrSetReady.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMcrSetReady.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcrSetReady.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMcrSetReady.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcrSetReady.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrSetReady.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrSetReady.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrSetReady.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcrSetReady.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S roomId */
            roomId?: (number|null);

            /** S isReady */
            isReady?: (boolean|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcrSetReady.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S roomId. */
            public roomId: number;

            /** S isReady. */
            public isReady: boolean;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMcrSetReady.IS): NetMessage.MsgMcrSetReady.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMcrSetReady.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcrSetReady.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMcrSetReady.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcrSetReady.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrSetReady.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrSetReady.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrSetReady.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcrSetReady.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMcrDeletePlayer. */
    interface IMsgMcrDeletePlayer {

        /** MsgMcrDeletePlayer c */
        c?: (NetMessage.MsgMcrDeletePlayer.IC|null);

        /** MsgMcrDeletePlayer s */
        s?: (NetMessage.MsgMcrDeletePlayer.IS|null);
    }

    /** Represents a MsgMcrDeletePlayer. */
    class MsgMcrDeletePlayer implements IMsgMcrDeletePlayer {

        /**
         * Constructs a new MsgMcrDeletePlayer.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMcrDeletePlayer);

        /** MsgMcrDeletePlayer c. */
        public c?: (NetMessage.MsgMcrDeletePlayer.IC|null);

        /** MsgMcrDeletePlayer s. */
        public s?: (NetMessage.MsgMcrDeletePlayer.IS|null);

        /**
         * Creates a new MsgMcrDeletePlayer instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMcrDeletePlayer instance
         */
        public static create(properties?: NetMessage.IMsgMcrDeletePlayer): NetMessage.MsgMcrDeletePlayer;

        /**
         * Encodes the specified MsgMcrDeletePlayer message. Does not implicitly {@link NetMessage.MsgMcrDeletePlayer.verify|verify} messages.
         * @param message MsgMcrDeletePlayer message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMcrDeletePlayer, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMcrDeletePlayer message, length delimited. Does not implicitly {@link NetMessage.MsgMcrDeletePlayer.verify|verify} messages.
         * @param message MsgMcrDeletePlayer message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMcrDeletePlayer, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMcrDeletePlayer message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMcrDeletePlayer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrDeletePlayer;

        /**
         * Decodes a MsgMcrDeletePlayer message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMcrDeletePlayer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrDeletePlayer;

        /**
         * Verifies a MsgMcrDeletePlayer message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMcrDeletePlayer message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMcrDeletePlayer
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrDeletePlayer;

        /**
         * Creates a plain object from a MsgMcrDeletePlayer message. Also converts values to other types if specified.
         * @param message MsgMcrDeletePlayer
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMcrDeletePlayer, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMcrDeletePlayer to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMcrDeletePlayer {

        /** Properties of a C. */
        interface IC {

            /** C roomId */
            roomId?: (number|null);

            /** C playerIndex */
            playerIndex?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcrDeletePlayer.IC);

            /** C roomId. */
            public roomId: number;

            /** C playerIndex. */
            public playerIndex: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMcrDeletePlayer.IC): NetMessage.MsgMcrDeletePlayer.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMcrDeletePlayer.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcrDeletePlayer.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMcrDeletePlayer.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcrDeletePlayer.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrDeletePlayer.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrDeletePlayer.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrDeletePlayer.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcrDeletePlayer.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S roomId */
            roomId?: (number|null);

            /** S playerIndex */
            playerIndex?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcrDeletePlayer.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S roomId. */
            public roomId: number;

            /** S playerIndex. */
            public playerIndex: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMcrDeletePlayer.IS): NetMessage.MsgMcrDeletePlayer.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMcrDeletePlayer.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcrDeletePlayer.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMcrDeletePlayer.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcrDeletePlayer.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrDeletePlayer.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrDeletePlayer.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrDeletePlayer.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcrDeletePlayer.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMcrSetSelfSettings. */
    interface IMsgMcrSetSelfSettings {

        /** MsgMcrSetSelfSettings c */
        c?: (NetMessage.MsgMcrSetSelfSettings.IC|null);

        /** MsgMcrSetSelfSettings s */
        s?: (NetMessage.MsgMcrSetSelfSettings.IS|null);
    }

    /** Represents a MsgMcrSetSelfSettings. */
    class MsgMcrSetSelfSettings implements IMsgMcrSetSelfSettings {

        /**
         * Constructs a new MsgMcrSetSelfSettings.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMcrSetSelfSettings);

        /** MsgMcrSetSelfSettings c. */
        public c?: (NetMessage.MsgMcrSetSelfSettings.IC|null);

        /** MsgMcrSetSelfSettings s. */
        public s?: (NetMessage.MsgMcrSetSelfSettings.IS|null);

        /**
         * Creates a new MsgMcrSetSelfSettings instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMcrSetSelfSettings instance
         */
        public static create(properties?: NetMessage.IMsgMcrSetSelfSettings): NetMessage.MsgMcrSetSelfSettings;

        /**
         * Encodes the specified MsgMcrSetSelfSettings message. Does not implicitly {@link NetMessage.MsgMcrSetSelfSettings.verify|verify} messages.
         * @param message MsgMcrSetSelfSettings message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMcrSetSelfSettings, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMcrSetSelfSettings message, length delimited. Does not implicitly {@link NetMessage.MsgMcrSetSelfSettings.verify|verify} messages.
         * @param message MsgMcrSetSelfSettings message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMcrSetSelfSettings, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMcrSetSelfSettings message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMcrSetSelfSettings
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrSetSelfSettings;

        /**
         * Decodes a MsgMcrSetSelfSettings message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMcrSetSelfSettings
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrSetSelfSettings;

        /**
         * Verifies a MsgMcrSetSelfSettings message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMcrSetSelfSettings message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMcrSetSelfSettings
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrSetSelfSettings;

        /**
         * Creates a plain object from a MsgMcrSetSelfSettings message. Also converts values to other types if specified.
         * @param message MsgMcrSetSelfSettings
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMcrSetSelfSettings, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMcrSetSelfSettings to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMcrSetSelfSettings {

        /** Properties of a C. */
        interface IC {

            /** C roomId */
            roomId?: (number|null);

            /** C playerIndex */
            playerIndex?: (number|null);

            /** C coId */
            coId?: (number|null);

            /** C unitAndTileSkinId */
            unitAndTileSkinId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcrSetSelfSettings.IC);

            /** C roomId. */
            public roomId: number;

            /** C playerIndex. */
            public playerIndex: number;

            /** C coId. */
            public coId: number;

            /** C unitAndTileSkinId. */
            public unitAndTileSkinId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMcrSetSelfSettings.IC): NetMessage.MsgMcrSetSelfSettings.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMcrSetSelfSettings.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcrSetSelfSettings.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMcrSetSelfSettings.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcrSetSelfSettings.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrSetSelfSettings.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrSetSelfSettings.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrSetSelfSettings.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcrSetSelfSettings.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S roomId */
            roomId?: (number|null);

            /** S oldPlayerIndex */
            oldPlayerIndex?: (number|null);

            /** S newPlayerIndex */
            newPlayerIndex?: (number|null);

            /** S coId */
            coId?: (number|null);

            /** S unitAndTileSkinId */
            unitAndTileSkinId?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcrSetSelfSettings.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S roomId. */
            public roomId: number;

            /** S oldPlayerIndex. */
            public oldPlayerIndex: number;

            /** S newPlayerIndex. */
            public newPlayerIndex: number;

            /** S coId. */
            public coId: number;

            /** S unitAndTileSkinId. */
            public unitAndTileSkinId: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMcrSetSelfSettings.IS): NetMessage.MsgMcrSetSelfSettings.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMcrSetSelfSettings.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcrSetSelfSettings.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMcrSetSelfSettings.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcrSetSelfSettings.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrSetSelfSettings.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrSetSelfSettings.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrSetSelfSettings.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcrSetSelfSettings.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMcrStartWar. */
    interface IMsgMcrStartWar {

        /** MsgMcrStartWar c */
        c?: (NetMessage.MsgMcrStartWar.IC|null);

        /** MsgMcrStartWar s */
        s?: (NetMessage.MsgMcrStartWar.IS|null);
    }

    /** Represents a MsgMcrStartWar. */
    class MsgMcrStartWar implements IMsgMcrStartWar {

        /**
         * Constructs a new MsgMcrStartWar.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMcrStartWar);

        /** MsgMcrStartWar c. */
        public c?: (NetMessage.MsgMcrStartWar.IC|null);

        /** MsgMcrStartWar s. */
        public s?: (NetMessage.MsgMcrStartWar.IS|null);

        /**
         * Creates a new MsgMcrStartWar instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMcrStartWar instance
         */
        public static create(properties?: NetMessage.IMsgMcrStartWar): NetMessage.MsgMcrStartWar;

        /**
         * Encodes the specified MsgMcrStartWar message. Does not implicitly {@link NetMessage.MsgMcrStartWar.verify|verify} messages.
         * @param message MsgMcrStartWar message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMcrStartWar, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMcrStartWar message, length delimited. Does not implicitly {@link NetMessage.MsgMcrStartWar.verify|verify} messages.
         * @param message MsgMcrStartWar message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMcrStartWar, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMcrStartWar message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMcrStartWar
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrStartWar;

        /**
         * Decodes a MsgMcrStartWar message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMcrStartWar
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrStartWar;

        /**
         * Verifies a MsgMcrStartWar message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMcrStartWar message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMcrStartWar
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrStartWar;

        /**
         * Creates a plain object from a MsgMcrStartWar message. Also converts values to other types if specified.
         * @param message MsgMcrStartWar
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMcrStartWar, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMcrStartWar to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMcrStartWar {

        /** Properties of a C. */
        interface IC {

            /** C roomId */
            roomId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcrStartWar.IC);

            /** C roomId. */
            public roomId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMcrStartWar.IC): NetMessage.MsgMcrStartWar.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMcrStartWar.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcrStartWar.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMcrStartWar.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcrStartWar.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrStartWar.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrStartWar.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrStartWar.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcrStartWar.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S roomId */
            roomId?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcrStartWar.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S roomId. */
            public roomId: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMcrStartWar.IS): NetMessage.MsgMcrStartWar.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMcrStartWar.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcrStartWar.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMcrStartWar.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcrStartWar.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrStartWar.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrStartWar.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrStartWar.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcrStartWar.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMpwCommonGetMyWarIdArray. */
    interface IMsgMpwCommonGetMyWarIdArray {

        /** MsgMpwCommonGetMyWarIdArray c */
        c?: (NetMessage.MsgMpwCommonGetMyWarIdArray.IC|null);

        /** MsgMpwCommonGetMyWarIdArray s */
        s?: (NetMessage.MsgMpwCommonGetMyWarIdArray.IS|null);
    }

    /** Represents a MsgMpwCommonGetMyWarIdArray. */
    class MsgMpwCommonGetMyWarIdArray implements IMsgMpwCommonGetMyWarIdArray {

        /**
         * Constructs a new MsgMpwCommonGetMyWarIdArray.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMpwCommonGetMyWarIdArray);

        /** MsgMpwCommonGetMyWarIdArray c. */
        public c?: (NetMessage.MsgMpwCommonGetMyWarIdArray.IC|null);

        /** MsgMpwCommonGetMyWarIdArray s. */
        public s?: (NetMessage.MsgMpwCommonGetMyWarIdArray.IS|null);

        /**
         * Creates a new MsgMpwCommonGetMyWarIdArray instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMpwCommonGetMyWarIdArray instance
         */
        public static create(properties?: NetMessage.IMsgMpwCommonGetMyWarIdArray): NetMessage.MsgMpwCommonGetMyWarIdArray;

        /**
         * Encodes the specified MsgMpwCommonGetMyWarIdArray message. Does not implicitly {@link NetMessage.MsgMpwCommonGetMyWarIdArray.verify|verify} messages.
         * @param message MsgMpwCommonGetMyWarIdArray message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMpwCommonGetMyWarIdArray, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMpwCommonGetMyWarIdArray message, length delimited. Does not implicitly {@link NetMessage.MsgMpwCommonGetMyWarIdArray.verify|verify} messages.
         * @param message MsgMpwCommonGetMyWarIdArray message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMpwCommonGetMyWarIdArray, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMpwCommonGetMyWarIdArray message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMpwCommonGetMyWarIdArray
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwCommonGetMyWarIdArray;

        /**
         * Decodes a MsgMpwCommonGetMyWarIdArray message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMpwCommonGetMyWarIdArray
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwCommonGetMyWarIdArray;

        /**
         * Verifies a MsgMpwCommonGetMyWarIdArray message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMpwCommonGetMyWarIdArray message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMpwCommonGetMyWarIdArray
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwCommonGetMyWarIdArray;

        /**
         * Creates a plain object from a MsgMpwCommonGetMyWarIdArray message. Also converts values to other types if specified.
         * @param message MsgMpwCommonGetMyWarIdArray
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMpwCommonGetMyWarIdArray, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMpwCommonGetMyWarIdArray to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMpwCommonGetMyWarIdArray {

        /** Properties of a C. */
        interface IC {
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwCommonGetMyWarIdArray.IC);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMpwCommonGetMyWarIdArray.IC): NetMessage.MsgMpwCommonGetMyWarIdArray.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMpwCommonGetMyWarIdArray.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwCommonGetMyWarIdArray.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMpwCommonGetMyWarIdArray.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwCommonGetMyWarIdArray.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwCommonGetMyWarIdArray.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwCommonGetMyWarIdArray.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwCommonGetMyWarIdArray.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwCommonGetMyWarIdArray.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S warIdArray */
            warIdArray?: (number[]|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwCommonGetMyWarIdArray.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S warIdArray. */
            public warIdArray: number[];

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMpwCommonGetMyWarIdArray.IS): NetMessage.MsgMpwCommonGetMyWarIdArray.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMpwCommonGetMyWarIdArray.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwCommonGetMyWarIdArray.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMpwCommonGetMyWarIdArray.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwCommonGetMyWarIdArray.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwCommonGetMyWarIdArray.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwCommonGetMyWarIdArray.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwCommonGetMyWarIdArray.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwCommonGetMyWarIdArray.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMpwCommonContinueWar. */
    interface IMsgMpwCommonContinueWar {

        /** MsgMpwCommonContinueWar c */
        c?: (NetMessage.MsgMpwCommonContinueWar.IC|null);

        /** MsgMpwCommonContinueWar s */
        s?: (NetMessage.MsgMpwCommonContinueWar.IS|null);
    }

    /** Represents a MsgMpwCommonContinueWar. */
    class MsgMpwCommonContinueWar implements IMsgMpwCommonContinueWar {

        /**
         * Constructs a new MsgMpwCommonContinueWar.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMpwCommonContinueWar);

        /** MsgMpwCommonContinueWar c. */
        public c?: (NetMessage.MsgMpwCommonContinueWar.IC|null);

        /** MsgMpwCommonContinueWar s. */
        public s?: (NetMessage.MsgMpwCommonContinueWar.IS|null);

        /**
         * Creates a new MsgMpwCommonContinueWar instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMpwCommonContinueWar instance
         */
        public static create(properties?: NetMessage.IMsgMpwCommonContinueWar): NetMessage.MsgMpwCommonContinueWar;

        /**
         * Encodes the specified MsgMpwCommonContinueWar message. Does not implicitly {@link NetMessage.MsgMpwCommonContinueWar.verify|verify} messages.
         * @param message MsgMpwCommonContinueWar message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMpwCommonContinueWar, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMpwCommonContinueWar message, length delimited. Does not implicitly {@link NetMessage.MsgMpwCommonContinueWar.verify|verify} messages.
         * @param message MsgMpwCommonContinueWar message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMpwCommonContinueWar, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMpwCommonContinueWar message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMpwCommonContinueWar
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwCommonContinueWar;

        /**
         * Decodes a MsgMpwCommonContinueWar message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMpwCommonContinueWar
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwCommonContinueWar;

        /**
         * Verifies a MsgMpwCommonContinueWar message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMpwCommonContinueWar message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMpwCommonContinueWar
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwCommonContinueWar;

        /**
         * Creates a plain object from a MsgMpwCommonContinueWar message. Also converts values to other types if specified.
         * @param message MsgMpwCommonContinueWar
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMpwCommonContinueWar, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMpwCommonContinueWar to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMpwCommonContinueWar {

        /** Properties of a C. */
        interface IC {

            /** C warId */
            warId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwCommonContinueWar.IC);

            /** C warId. */
            public warId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMpwCommonContinueWar.IC): NetMessage.MsgMpwCommonContinueWar.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMpwCommonContinueWar.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwCommonContinueWar.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMpwCommonContinueWar.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwCommonContinueWar.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwCommonContinueWar.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwCommonContinueWar.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwCommonContinueWar.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwCommonContinueWar.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S warId */
            warId?: (number|null);

            /** S war */
            war?: (WarSerialization.ISerialWar|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwCommonContinueWar.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S warId. */
            public warId: number;

            /** S war. */
            public war?: (WarSerialization.ISerialWar|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMpwCommonContinueWar.IS): NetMessage.MsgMpwCommonContinueWar.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMpwCommonContinueWar.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwCommonContinueWar.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMpwCommonContinueWar.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwCommonContinueWar.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwCommonContinueWar.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwCommonContinueWar.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwCommonContinueWar.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwCommonContinueWar.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMpwCommonHandleBoot. */
    interface IMsgMpwCommonHandleBoot {

        /** MsgMpwCommonHandleBoot c */
        c?: (NetMessage.MsgMpwCommonHandleBoot.IC|null);

        /** MsgMpwCommonHandleBoot s */
        s?: (NetMessage.MsgMpwCommonHandleBoot.IS|null);
    }

    /** Represents a MsgMpwCommonHandleBoot. */
    class MsgMpwCommonHandleBoot implements IMsgMpwCommonHandleBoot {

        /**
         * Constructs a new MsgMpwCommonHandleBoot.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMpwCommonHandleBoot);

        /** MsgMpwCommonHandleBoot c. */
        public c?: (NetMessage.MsgMpwCommonHandleBoot.IC|null);

        /** MsgMpwCommonHandleBoot s. */
        public s?: (NetMessage.MsgMpwCommonHandleBoot.IS|null);

        /**
         * Creates a new MsgMpwCommonHandleBoot instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMpwCommonHandleBoot instance
         */
        public static create(properties?: NetMessage.IMsgMpwCommonHandleBoot): NetMessage.MsgMpwCommonHandleBoot;

        /**
         * Encodes the specified MsgMpwCommonHandleBoot message. Does not implicitly {@link NetMessage.MsgMpwCommonHandleBoot.verify|verify} messages.
         * @param message MsgMpwCommonHandleBoot message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMpwCommonHandleBoot, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMpwCommonHandleBoot message, length delimited. Does not implicitly {@link NetMessage.MsgMpwCommonHandleBoot.verify|verify} messages.
         * @param message MsgMpwCommonHandleBoot message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMpwCommonHandleBoot, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMpwCommonHandleBoot message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMpwCommonHandleBoot
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwCommonHandleBoot;

        /**
         * Decodes a MsgMpwCommonHandleBoot message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMpwCommonHandleBoot
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwCommonHandleBoot;

        /**
         * Verifies a MsgMpwCommonHandleBoot message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMpwCommonHandleBoot message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMpwCommonHandleBoot
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwCommonHandleBoot;

        /**
         * Creates a plain object from a MsgMpwCommonHandleBoot message. Also converts values to other types if specified.
         * @param message MsgMpwCommonHandleBoot
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMpwCommonHandleBoot, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMpwCommonHandleBoot to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMpwCommonHandleBoot {

        /** Properties of a C. */
        interface IC {

            /** C warId */
            warId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwCommonHandleBoot.IC);

            /** C warId. */
            public warId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMpwCommonHandleBoot.IC): NetMessage.MsgMpwCommonHandleBoot.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMpwCommonHandleBoot.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwCommonHandleBoot.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMpwCommonHandleBoot.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwCommonHandleBoot.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwCommonHandleBoot.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwCommonHandleBoot.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwCommonHandleBoot.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwCommonHandleBoot.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S warId */
            warId?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwCommonHandleBoot.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S warId. */
            public warId: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMpwCommonHandleBoot.IS): NetMessage.MsgMpwCommonHandleBoot.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMpwCommonHandleBoot.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwCommonHandleBoot.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMpwCommonHandleBoot.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwCommonHandleBoot.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwCommonHandleBoot.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwCommonHandleBoot.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwCommonHandleBoot.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwCommonHandleBoot.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMpwCommonBroadcastGameStart. */
    interface IMsgMpwCommonBroadcastGameStart {

        /** MsgMpwCommonBroadcastGameStart s */
        s?: (NetMessage.MsgMpwCommonBroadcastGameStart.IS|null);
    }

    /** Represents a MsgMpwCommonBroadcastGameStart. */
    class MsgMpwCommonBroadcastGameStart implements IMsgMpwCommonBroadcastGameStart {

        /**
         * Constructs a new MsgMpwCommonBroadcastGameStart.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMpwCommonBroadcastGameStart);

        /** MsgMpwCommonBroadcastGameStart s. */
        public s?: (NetMessage.MsgMpwCommonBroadcastGameStart.IS|null);

        /**
         * Creates a new MsgMpwCommonBroadcastGameStart instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMpwCommonBroadcastGameStart instance
         */
        public static create(properties?: NetMessage.IMsgMpwCommonBroadcastGameStart): NetMessage.MsgMpwCommonBroadcastGameStart;

        /**
         * Encodes the specified MsgMpwCommonBroadcastGameStart message. Does not implicitly {@link NetMessage.MsgMpwCommonBroadcastGameStart.verify|verify} messages.
         * @param message MsgMpwCommonBroadcastGameStart message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMpwCommonBroadcastGameStart, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMpwCommonBroadcastGameStart message, length delimited. Does not implicitly {@link NetMessage.MsgMpwCommonBroadcastGameStart.verify|verify} messages.
         * @param message MsgMpwCommonBroadcastGameStart message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMpwCommonBroadcastGameStart, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMpwCommonBroadcastGameStart message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMpwCommonBroadcastGameStart
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwCommonBroadcastGameStart;

        /**
         * Decodes a MsgMpwCommonBroadcastGameStart message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMpwCommonBroadcastGameStart
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwCommonBroadcastGameStart;

        /**
         * Verifies a MsgMpwCommonBroadcastGameStart message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMpwCommonBroadcastGameStart message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMpwCommonBroadcastGameStart
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwCommonBroadcastGameStart;

        /**
         * Creates a plain object from a MsgMpwCommonBroadcastGameStart message. Also converts values to other types if specified.
         * @param message MsgMpwCommonBroadcastGameStart
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMpwCommonBroadcastGameStart, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMpwCommonBroadcastGameStart to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMpwCommonBroadcastGameStart {

        /** Properties of a S. */
        interface IS {

            /** S warId */
            warId?: (number|null);

            /** S mapId */
            mapId?: (number|null);

            /** S mcrRoomId */
            mcrRoomId?: (number|null);

            /** S mrrRoomId */
            mrrRoomId?: (number|null);

            /** S mfrRoomId */
            mfrRoomId?: (number|null);

            /** S ccrRoomId */
            ccrRoomId?: (number|null);

            /** S playerInfoList */
            playerInfoList?: (Structure.IWarPlayerInfo[]|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwCommonBroadcastGameStart.IS);

            /** S warId. */
            public warId: number;

            /** S mapId. */
            public mapId: number;

            /** S mcrRoomId. */
            public mcrRoomId: number;

            /** S mrrRoomId. */
            public mrrRoomId: number;

            /** S mfrRoomId. */
            public mfrRoomId: number;

            /** S ccrRoomId. */
            public ccrRoomId: number;

            /** S playerInfoList. */
            public playerInfoList: Structure.IWarPlayerInfo[];

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMpwCommonBroadcastGameStart.IS): NetMessage.MsgMpwCommonBroadcastGameStart.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMpwCommonBroadcastGameStart.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwCommonBroadcastGameStart.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMpwCommonBroadcastGameStart.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwCommonBroadcastGameStart.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwCommonBroadcastGameStart.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwCommonBroadcastGameStart.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwCommonBroadcastGameStart.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwCommonBroadcastGameStart.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMpwCommonGetWarSettings. */
    interface IMsgMpwCommonGetWarSettings {

        /** MsgMpwCommonGetWarSettings c */
        c?: (NetMessage.MsgMpwCommonGetWarSettings.IC|null);

        /** MsgMpwCommonGetWarSettings s */
        s?: (NetMessage.MsgMpwCommonGetWarSettings.IS|null);
    }

    /** Represents a MsgMpwCommonGetWarSettings. */
    class MsgMpwCommonGetWarSettings implements IMsgMpwCommonGetWarSettings {

        /**
         * Constructs a new MsgMpwCommonGetWarSettings.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMpwCommonGetWarSettings);

        /** MsgMpwCommonGetWarSettings c. */
        public c?: (NetMessage.MsgMpwCommonGetWarSettings.IC|null);

        /** MsgMpwCommonGetWarSettings s. */
        public s?: (NetMessage.MsgMpwCommonGetWarSettings.IS|null);

        /**
         * Creates a new MsgMpwCommonGetWarSettings instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMpwCommonGetWarSettings instance
         */
        public static create(properties?: NetMessage.IMsgMpwCommonGetWarSettings): NetMessage.MsgMpwCommonGetWarSettings;

        /**
         * Encodes the specified MsgMpwCommonGetWarSettings message. Does not implicitly {@link NetMessage.MsgMpwCommonGetWarSettings.verify|verify} messages.
         * @param message MsgMpwCommonGetWarSettings message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMpwCommonGetWarSettings, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMpwCommonGetWarSettings message, length delimited. Does not implicitly {@link NetMessage.MsgMpwCommonGetWarSettings.verify|verify} messages.
         * @param message MsgMpwCommonGetWarSettings message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMpwCommonGetWarSettings, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMpwCommonGetWarSettings message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMpwCommonGetWarSettings
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwCommonGetWarSettings;

        /**
         * Decodes a MsgMpwCommonGetWarSettings message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMpwCommonGetWarSettings
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwCommonGetWarSettings;

        /**
         * Verifies a MsgMpwCommonGetWarSettings message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMpwCommonGetWarSettings message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMpwCommonGetWarSettings
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwCommonGetWarSettings;

        /**
         * Creates a plain object from a MsgMpwCommonGetWarSettings message. Also converts values to other types if specified.
         * @param message MsgMpwCommonGetWarSettings
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMpwCommonGetWarSettings, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMpwCommonGetWarSettings to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMpwCommonGetWarSettings {

        /** Properties of a C. */
        interface IC {

            /** C warId */
            warId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwCommonGetWarSettings.IC);

            /** C warId. */
            public warId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMpwCommonGetWarSettings.IC): NetMessage.MsgMpwCommonGetWarSettings.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMpwCommonGetWarSettings.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwCommonGetWarSettings.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMpwCommonGetWarSettings.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwCommonGetWarSettings.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwCommonGetWarSettings.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwCommonGetWarSettings.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwCommonGetWarSettings.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwCommonGetWarSettings.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S warId */
            warId?: (number|null);

            /** S warSettings */
            warSettings?: (MultiPlayerWar.IMpwWarSettings|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwCommonGetWarSettings.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S warId. */
            public warId: number;

            /** S warSettings. */
            public warSettings?: (MultiPlayerWar.IMpwWarSettings|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMpwCommonGetWarSettings.IS): NetMessage.MsgMpwCommonGetWarSettings.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMpwCommonGetWarSettings.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwCommonGetWarSettings.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMpwCommonGetWarSettings.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwCommonGetWarSettings.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwCommonGetWarSettings.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwCommonGetWarSettings.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwCommonGetWarSettings.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwCommonGetWarSettings.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMpwCommonGetWarProgressInfo. */
    interface IMsgMpwCommonGetWarProgressInfo {

        /** MsgMpwCommonGetWarProgressInfo c */
        c?: (NetMessage.MsgMpwCommonGetWarProgressInfo.IC|null);

        /** MsgMpwCommonGetWarProgressInfo s */
        s?: (NetMessage.MsgMpwCommonGetWarProgressInfo.IS|null);
    }

    /** Represents a MsgMpwCommonGetWarProgressInfo. */
    class MsgMpwCommonGetWarProgressInfo implements IMsgMpwCommonGetWarProgressInfo {

        /**
         * Constructs a new MsgMpwCommonGetWarProgressInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMpwCommonGetWarProgressInfo);

        /** MsgMpwCommonGetWarProgressInfo c. */
        public c?: (NetMessage.MsgMpwCommonGetWarProgressInfo.IC|null);

        /** MsgMpwCommonGetWarProgressInfo s. */
        public s?: (NetMessage.MsgMpwCommonGetWarProgressInfo.IS|null);

        /**
         * Creates a new MsgMpwCommonGetWarProgressInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMpwCommonGetWarProgressInfo instance
         */
        public static create(properties?: NetMessage.IMsgMpwCommonGetWarProgressInfo): NetMessage.MsgMpwCommonGetWarProgressInfo;

        /**
         * Encodes the specified MsgMpwCommonGetWarProgressInfo message. Does not implicitly {@link NetMessage.MsgMpwCommonGetWarProgressInfo.verify|verify} messages.
         * @param message MsgMpwCommonGetWarProgressInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMpwCommonGetWarProgressInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMpwCommonGetWarProgressInfo message, length delimited. Does not implicitly {@link NetMessage.MsgMpwCommonGetWarProgressInfo.verify|verify} messages.
         * @param message MsgMpwCommonGetWarProgressInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMpwCommonGetWarProgressInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMpwCommonGetWarProgressInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMpwCommonGetWarProgressInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwCommonGetWarProgressInfo;

        /**
         * Decodes a MsgMpwCommonGetWarProgressInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMpwCommonGetWarProgressInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwCommonGetWarProgressInfo;

        /**
         * Verifies a MsgMpwCommonGetWarProgressInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMpwCommonGetWarProgressInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMpwCommonGetWarProgressInfo
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwCommonGetWarProgressInfo;

        /**
         * Creates a plain object from a MsgMpwCommonGetWarProgressInfo message. Also converts values to other types if specified.
         * @param message MsgMpwCommonGetWarProgressInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMpwCommonGetWarProgressInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMpwCommonGetWarProgressInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMpwCommonGetWarProgressInfo {

        /** Properties of a C. */
        interface IC {

            /** C warId */
            warId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwCommonGetWarProgressInfo.IC);

            /** C warId. */
            public warId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMpwCommonGetWarProgressInfo.IC): NetMessage.MsgMpwCommonGetWarProgressInfo.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMpwCommonGetWarProgressInfo.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwCommonGetWarProgressInfo.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMpwCommonGetWarProgressInfo.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwCommonGetWarProgressInfo.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwCommonGetWarProgressInfo.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwCommonGetWarProgressInfo.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwCommonGetWarProgressInfo.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwCommonGetWarProgressInfo.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S warId */
            warId?: (number|null);

            /** S warProgressInfo */
            warProgressInfo?: (MultiPlayerWar.IMpwWarProgressInfo|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwCommonGetWarProgressInfo.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S warId. */
            public warId: number;

            /** S warProgressInfo. */
            public warProgressInfo?: (MultiPlayerWar.IMpwWarProgressInfo|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMpwCommonGetWarProgressInfo.IS): NetMessage.MsgMpwCommonGetWarProgressInfo.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMpwCommonGetWarProgressInfo.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwCommonGetWarProgressInfo.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMpwCommonGetWarProgressInfo.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwCommonGetWarProgressInfo.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwCommonGetWarProgressInfo.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwCommonGetWarProgressInfo.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwCommonGetWarProgressInfo.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwCommonGetWarProgressInfo.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMpwCommonSyncWar. */
    interface IMsgMpwCommonSyncWar {

        /** MsgMpwCommonSyncWar c */
        c?: (NetMessage.MsgMpwCommonSyncWar.IC|null);

        /** MsgMpwCommonSyncWar s */
        s?: (NetMessage.MsgMpwCommonSyncWar.IS|null);
    }

    /** Represents a MsgMpwCommonSyncWar. */
    class MsgMpwCommonSyncWar implements IMsgMpwCommonSyncWar {

        /**
         * Constructs a new MsgMpwCommonSyncWar.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMpwCommonSyncWar);

        /** MsgMpwCommonSyncWar c. */
        public c?: (NetMessage.MsgMpwCommonSyncWar.IC|null);

        /** MsgMpwCommonSyncWar s. */
        public s?: (NetMessage.MsgMpwCommonSyncWar.IS|null);

        /**
         * Creates a new MsgMpwCommonSyncWar instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMpwCommonSyncWar instance
         */
        public static create(properties?: NetMessage.IMsgMpwCommonSyncWar): NetMessage.MsgMpwCommonSyncWar;

        /**
         * Encodes the specified MsgMpwCommonSyncWar message. Does not implicitly {@link NetMessage.MsgMpwCommonSyncWar.verify|verify} messages.
         * @param message MsgMpwCommonSyncWar message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMpwCommonSyncWar, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMpwCommonSyncWar message, length delimited. Does not implicitly {@link NetMessage.MsgMpwCommonSyncWar.verify|verify} messages.
         * @param message MsgMpwCommonSyncWar message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMpwCommonSyncWar, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMpwCommonSyncWar message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMpwCommonSyncWar
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwCommonSyncWar;

        /**
         * Decodes a MsgMpwCommonSyncWar message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMpwCommonSyncWar
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwCommonSyncWar;

        /**
         * Verifies a MsgMpwCommonSyncWar message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMpwCommonSyncWar message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMpwCommonSyncWar
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwCommonSyncWar;

        /**
         * Creates a plain object from a MsgMpwCommonSyncWar message. Also converts values to other types if specified.
         * @param message MsgMpwCommonSyncWar
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMpwCommonSyncWar, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMpwCommonSyncWar to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMpwCommonSyncWar {

        /** Properties of a C. */
        interface IC {

            /** C warId */
            warId?: (number|null);

            /** C executedActionsCount */
            executedActionsCount?: (number|null);

            /** C requestType */
            requestType?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwCommonSyncWar.IC);

            /** C warId. */
            public warId: number;

            /** C executedActionsCount. */
            public executedActionsCount: number;

            /** C requestType. */
            public requestType: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMpwCommonSyncWar.IC): NetMessage.MsgMpwCommonSyncWar.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMpwCommonSyncWar.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwCommonSyncWar.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMpwCommonSyncWar.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwCommonSyncWar.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwCommonSyncWar.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwCommonSyncWar.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwCommonSyncWar.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwCommonSyncWar.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S warId */
            warId?: (number|null);

            /** S executedActionsCount */
            executedActionsCount?: (number|null);

            /** S war */
            war?: (WarSerialization.ISerialWar|null);

            /** S status */
            status?: (number|null);

            /** S requestType */
            requestType?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwCommonSyncWar.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S warId. */
            public warId: number;

            /** S executedActionsCount. */
            public executedActionsCount: number;

            /** S war. */
            public war?: (WarSerialization.ISerialWar|null);

            /** S status. */
            public status: number;

            /** S requestType. */
            public requestType: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMpwCommonSyncWar.IS): NetMessage.MsgMpwCommonSyncWar.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMpwCommonSyncWar.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwCommonSyncWar.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMpwCommonSyncWar.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwCommonSyncWar.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwCommonSyncWar.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwCommonSyncWar.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwCommonSyncWar.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwCommonSyncWar.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMpwWatchMakeRequest. */
    interface IMsgMpwWatchMakeRequest {

        /** MsgMpwWatchMakeRequest c */
        c?: (NetMessage.MsgMpwWatchMakeRequest.IC|null);

        /** MsgMpwWatchMakeRequest s */
        s?: (NetMessage.MsgMpwWatchMakeRequest.IS|null);
    }

    /** Represents a MsgMpwWatchMakeRequest. */
    class MsgMpwWatchMakeRequest implements IMsgMpwWatchMakeRequest {

        /**
         * Constructs a new MsgMpwWatchMakeRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMpwWatchMakeRequest);

        /** MsgMpwWatchMakeRequest c. */
        public c?: (NetMessage.MsgMpwWatchMakeRequest.IC|null);

        /** MsgMpwWatchMakeRequest s. */
        public s?: (NetMessage.MsgMpwWatchMakeRequest.IS|null);

        /**
         * Creates a new MsgMpwWatchMakeRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMpwWatchMakeRequest instance
         */
        public static create(properties?: NetMessage.IMsgMpwWatchMakeRequest): NetMessage.MsgMpwWatchMakeRequest;

        /**
         * Encodes the specified MsgMpwWatchMakeRequest message. Does not implicitly {@link NetMessage.MsgMpwWatchMakeRequest.verify|verify} messages.
         * @param message MsgMpwWatchMakeRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMpwWatchMakeRequest, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMpwWatchMakeRequest message, length delimited. Does not implicitly {@link NetMessage.MsgMpwWatchMakeRequest.verify|verify} messages.
         * @param message MsgMpwWatchMakeRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMpwWatchMakeRequest, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMpwWatchMakeRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMpwWatchMakeRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwWatchMakeRequest;

        /**
         * Decodes a MsgMpwWatchMakeRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMpwWatchMakeRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwWatchMakeRequest;

        /**
         * Verifies a MsgMpwWatchMakeRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMpwWatchMakeRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMpwWatchMakeRequest
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwWatchMakeRequest;

        /**
         * Creates a plain object from a MsgMpwWatchMakeRequest message. Also converts values to other types if specified.
         * @param message MsgMpwWatchMakeRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMpwWatchMakeRequest, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMpwWatchMakeRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMpwWatchMakeRequest {

        /** Properties of a C. */
        interface IC {

            /** C warId */
            warId?: (number|null);

            /** C dstUserIds */
            dstUserIds?: (number[]|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwWatchMakeRequest.IC);

            /** C warId. */
            public warId: number;

            /** C dstUserIds. */
            public dstUserIds: number[];

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMpwWatchMakeRequest.IC): NetMessage.MsgMpwWatchMakeRequest.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMpwWatchMakeRequest.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwWatchMakeRequest.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMpwWatchMakeRequest.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwWatchMakeRequest.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwWatchMakeRequest.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwWatchMakeRequest.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwWatchMakeRequest.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwWatchMakeRequest.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S warId */
            warId?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwWatchMakeRequest.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S warId. */
            public warId: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMpwWatchMakeRequest.IS): NetMessage.MsgMpwWatchMakeRequest.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMpwWatchMakeRequest.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwWatchMakeRequest.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMpwWatchMakeRequest.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwWatchMakeRequest.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwWatchMakeRequest.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwWatchMakeRequest.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwWatchMakeRequest.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwWatchMakeRequest.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMpwWatchHandleRequest. */
    interface IMsgMpwWatchHandleRequest {

        /** MsgMpwWatchHandleRequest c */
        c?: (NetMessage.MsgMpwWatchHandleRequest.IC|null);

        /** MsgMpwWatchHandleRequest s */
        s?: (NetMessage.MsgMpwWatchHandleRequest.IS|null);
    }

    /** Represents a MsgMpwWatchHandleRequest. */
    class MsgMpwWatchHandleRequest implements IMsgMpwWatchHandleRequest {

        /**
         * Constructs a new MsgMpwWatchHandleRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMpwWatchHandleRequest);

        /** MsgMpwWatchHandleRequest c. */
        public c?: (NetMessage.MsgMpwWatchHandleRequest.IC|null);

        /** MsgMpwWatchHandleRequest s. */
        public s?: (NetMessage.MsgMpwWatchHandleRequest.IS|null);

        /**
         * Creates a new MsgMpwWatchHandleRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMpwWatchHandleRequest instance
         */
        public static create(properties?: NetMessage.IMsgMpwWatchHandleRequest): NetMessage.MsgMpwWatchHandleRequest;

        /**
         * Encodes the specified MsgMpwWatchHandleRequest message. Does not implicitly {@link NetMessage.MsgMpwWatchHandleRequest.verify|verify} messages.
         * @param message MsgMpwWatchHandleRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMpwWatchHandleRequest, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMpwWatchHandleRequest message, length delimited. Does not implicitly {@link NetMessage.MsgMpwWatchHandleRequest.verify|verify} messages.
         * @param message MsgMpwWatchHandleRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMpwWatchHandleRequest, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMpwWatchHandleRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMpwWatchHandleRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwWatchHandleRequest;

        /**
         * Decodes a MsgMpwWatchHandleRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMpwWatchHandleRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwWatchHandleRequest;

        /**
         * Verifies a MsgMpwWatchHandleRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMpwWatchHandleRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMpwWatchHandleRequest
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwWatchHandleRequest;

        /**
         * Creates a plain object from a MsgMpwWatchHandleRequest message. Also converts values to other types if specified.
         * @param message MsgMpwWatchHandleRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMpwWatchHandleRequest, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMpwWatchHandleRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMpwWatchHandleRequest {

        /** Properties of a C. */
        interface IC {

            /** C warId */
            warId?: (number|null);

            /** C acceptSrcUserIds */
            acceptSrcUserIds?: (number[]|null);

            /** C declineSrcUserIds */
            declineSrcUserIds?: (number[]|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwWatchHandleRequest.IC);

            /** C warId. */
            public warId: number;

            /** C acceptSrcUserIds. */
            public acceptSrcUserIds: number[];

            /** C declineSrcUserIds. */
            public declineSrcUserIds: number[];

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMpwWatchHandleRequest.IC): NetMessage.MsgMpwWatchHandleRequest.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMpwWatchHandleRequest.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwWatchHandleRequest.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMpwWatchHandleRequest.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwWatchHandleRequest.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwWatchHandleRequest.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwWatchHandleRequest.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwWatchHandleRequest.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwWatchHandleRequest.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S warId */
            warId?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwWatchHandleRequest.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S warId. */
            public warId: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMpwWatchHandleRequest.IS): NetMessage.MsgMpwWatchHandleRequest.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMpwWatchHandleRequest.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwWatchHandleRequest.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMpwWatchHandleRequest.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwWatchHandleRequest.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwWatchHandleRequest.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwWatchHandleRequest.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwWatchHandleRequest.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwWatchHandleRequest.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMpwWatchDeleteWatcher. */
    interface IMsgMpwWatchDeleteWatcher {

        /** MsgMpwWatchDeleteWatcher c */
        c?: (NetMessage.MsgMpwWatchDeleteWatcher.IC|null);

        /** MsgMpwWatchDeleteWatcher s */
        s?: (NetMessage.MsgMpwWatchDeleteWatcher.IS|null);
    }

    /** Represents a MsgMpwWatchDeleteWatcher. */
    class MsgMpwWatchDeleteWatcher implements IMsgMpwWatchDeleteWatcher {

        /**
         * Constructs a new MsgMpwWatchDeleteWatcher.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMpwWatchDeleteWatcher);

        /** MsgMpwWatchDeleteWatcher c. */
        public c?: (NetMessage.MsgMpwWatchDeleteWatcher.IC|null);

        /** MsgMpwWatchDeleteWatcher s. */
        public s?: (NetMessage.MsgMpwWatchDeleteWatcher.IS|null);

        /**
         * Creates a new MsgMpwWatchDeleteWatcher instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMpwWatchDeleteWatcher instance
         */
        public static create(properties?: NetMessage.IMsgMpwWatchDeleteWatcher): NetMessage.MsgMpwWatchDeleteWatcher;

        /**
         * Encodes the specified MsgMpwWatchDeleteWatcher message. Does not implicitly {@link NetMessage.MsgMpwWatchDeleteWatcher.verify|verify} messages.
         * @param message MsgMpwWatchDeleteWatcher message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMpwWatchDeleteWatcher, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMpwWatchDeleteWatcher message, length delimited. Does not implicitly {@link NetMessage.MsgMpwWatchDeleteWatcher.verify|verify} messages.
         * @param message MsgMpwWatchDeleteWatcher message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMpwWatchDeleteWatcher, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMpwWatchDeleteWatcher message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMpwWatchDeleteWatcher
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwWatchDeleteWatcher;

        /**
         * Decodes a MsgMpwWatchDeleteWatcher message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMpwWatchDeleteWatcher
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwWatchDeleteWatcher;

        /**
         * Verifies a MsgMpwWatchDeleteWatcher message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMpwWatchDeleteWatcher message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMpwWatchDeleteWatcher
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwWatchDeleteWatcher;

        /**
         * Creates a plain object from a MsgMpwWatchDeleteWatcher message. Also converts values to other types if specified.
         * @param message MsgMpwWatchDeleteWatcher
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMpwWatchDeleteWatcher, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMpwWatchDeleteWatcher to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMpwWatchDeleteWatcher {

        /** Properties of a C. */
        interface IC {

            /** C warId */
            warId?: (number|null);

            /** C watcherUserIds */
            watcherUserIds?: (number[]|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwWatchDeleteWatcher.IC);

            /** C warId. */
            public warId: number;

            /** C watcherUserIds. */
            public watcherUserIds: number[];

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMpwWatchDeleteWatcher.IC): NetMessage.MsgMpwWatchDeleteWatcher.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMpwWatchDeleteWatcher.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwWatchDeleteWatcher.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMpwWatchDeleteWatcher.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwWatchDeleteWatcher.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwWatchDeleteWatcher.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwWatchDeleteWatcher.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwWatchDeleteWatcher.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwWatchDeleteWatcher.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S warId */
            warId?: (number|null);

            /** S watcherUserIds */
            watcherUserIds?: (number[]|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwWatchDeleteWatcher.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S warId. */
            public warId: number;

            /** S watcherUserIds. */
            public watcherUserIds: number[];

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMpwWatchDeleteWatcher.IS): NetMessage.MsgMpwWatchDeleteWatcher.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMpwWatchDeleteWatcher.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwWatchDeleteWatcher.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMpwWatchDeleteWatcher.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwWatchDeleteWatcher.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwWatchDeleteWatcher.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwWatchDeleteWatcher.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwWatchDeleteWatcher.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwWatchDeleteWatcher.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMpwWatchGetRequestableWarIdArray. */
    interface IMsgMpwWatchGetRequestableWarIdArray {

        /** MsgMpwWatchGetRequestableWarIdArray c */
        c?: (NetMessage.MsgMpwWatchGetRequestableWarIdArray.IC|null);

        /** MsgMpwWatchGetRequestableWarIdArray s */
        s?: (NetMessage.MsgMpwWatchGetRequestableWarIdArray.IS|null);
    }

    /** Represents a MsgMpwWatchGetRequestableWarIdArray. */
    class MsgMpwWatchGetRequestableWarIdArray implements IMsgMpwWatchGetRequestableWarIdArray {

        /**
         * Constructs a new MsgMpwWatchGetRequestableWarIdArray.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMpwWatchGetRequestableWarIdArray);

        /** MsgMpwWatchGetRequestableWarIdArray c. */
        public c?: (NetMessage.MsgMpwWatchGetRequestableWarIdArray.IC|null);

        /** MsgMpwWatchGetRequestableWarIdArray s. */
        public s?: (NetMessage.MsgMpwWatchGetRequestableWarIdArray.IS|null);

        /**
         * Creates a new MsgMpwWatchGetRequestableWarIdArray instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMpwWatchGetRequestableWarIdArray instance
         */
        public static create(properties?: NetMessage.IMsgMpwWatchGetRequestableWarIdArray): NetMessage.MsgMpwWatchGetRequestableWarIdArray;

        /**
         * Encodes the specified MsgMpwWatchGetRequestableWarIdArray message. Does not implicitly {@link NetMessage.MsgMpwWatchGetRequestableWarIdArray.verify|verify} messages.
         * @param message MsgMpwWatchGetRequestableWarIdArray message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMpwWatchGetRequestableWarIdArray, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMpwWatchGetRequestableWarIdArray message, length delimited. Does not implicitly {@link NetMessage.MsgMpwWatchGetRequestableWarIdArray.verify|verify} messages.
         * @param message MsgMpwWatchGetRequestableWarIdArray message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMpwWatchGetRequestableWarIdArray, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMpwWatchGetRequestableWarIdArray message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMpwWatchGetRequestableWarIdArray
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwWatchGetRequestableWarIdArray;

        /**
         * Decodes a MsgMpwWatchGetRequestableWarIdArray message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMpwWatchGetRequestableWarIdArray
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwWatchGetRequestableWarIdArray;

        /**
         * Verifies a MsgMpwWatchGetRequestableWarIdArray message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMpwWatchGetRequestableWarIdArray message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMpwWatchGetRequestableWarIdArray
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwWatchGetRequestableWarIdArray;

        /**
         * Creates a plain object from a MsgMpwWatchGetRequestableWarIdArray message. Also converts values to other types if specified.
         * @param message MsgMpwWatchGetRequestableWarIdArray
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMpwWatchGetRequestableWarIdArray, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMpwWatchGetRequestableWarIdArray to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMpwWatchGetRequestableWarIdArray {

        /** Properties of a C. */
        interface IC {

            /** C warId */
            warId?: (number|null);

            /** C mapName */
            mapName?: (string|null);

            /** C playersCountUnneutral */
            playersCountUnneutral?: (number|null);

            /** C userNickname */
            userNickname?: (string|null);

            /** C coName */
            coName?: (string|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwWatchGetRequestableWarIdArray.IC);

            /** C warId. */
            public warId: number;

            /** C mapName. */
            public mapName: string;

            /** C playersCountUnneutral. */
            public playersCountUnneutral: number;

            /** C userNickname. */
            public userNickname: string;

            /** C coName. */
            public coName: string;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMpwWatchGetRequestableWarIdArray.IC): NetMessage.MsgMpwWatchGetRequestableWarIdArray.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMpwWatchGetRequestableWarIdArray.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwWatchGetRequestableWarIdArray.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMpwWatchGetRequestableWarIdArray.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwWatchGetRequestableWarIdArray.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwWatchGetRequestableWarIdArray.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwWatchGetRequestableWarIdArray.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwWatchGetRequestableWarIdArray.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwWatchGetRequestableWarIdArray.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S warIdArray */
            warIdArray?: (number[]|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwWatchGetRequestableWarIdArray.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S warIdArray. */
            public warIdArray: number[];

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMpwWatchGetRequestableWarIdArray.IS): NetMessage.MsgMpwWatchGetRequestableWarIdArray.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMpwWatchGetRequestableWarIdArray.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwWatchGetRequestableWarIdArray.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMpwWatchGetRequestableWarIdArray.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwWatchGetRequestableWarIdArray.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwWatchGetRequestableWarIdArray.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwWatchGetRequestableWarIdArray.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwWatchGetRequestableWarIdArray.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwWatchGetRequestableWarIdArray.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMpwWatchGetRequestedWarIdArray. */
    interface IMsgMpwWatchGetRequestedWarIdArray {

        /** MsgMpwWatchGetRequestedWarIdArray c */
        c?: (NetMessage.MsgMpwWatchGetRequestedWarIdArray.IC|null);

        /** MsgMpwWatchGetRequestedWarIdArray s */
        s?: (NetMessage.MsgMpwWatchGetRequestedWarIdArray.IS|null);
    }

    /** Represents a MsgMpwWatchGetRequestedWarIdArray. */
    class MsgMpwWatchGetRequestedWarIdArray implements IMsgMpwWatchGetRequestedWarIdArray {

        /**
         * Constructs a new MsgMpwWatchGetRequestedWarIdArray.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMpwWatchGetRequestedWarIdArray);

        /** MsgMpwWatchGetRequestedWarIdArray c. */
        public c?: (NetMessage.MsgMpwWatchGetRequestedWarIdArray.IC|null);

        /** MsgMpwWatchGetRequestedWarIdArray s. */
        public s?: (NetMessage.MsgMpwWatchGetRequestedWarIdArray.IS|null);

        /**
         * Creates a new MsgMpwWatchGetRequestedWarIdArray instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMpwWatchGetRequestedWarIdArray instance
         */
        public static create(properties?: NetMessage.IMsgMpwWatchGetRequestedWarIdArray): NetMessage.MsgMpwWatchGetRequestedWarIdArray;

        /**
         * Encodes the specified MsgMpwWatchGetRequestedWarIdArray message. Does not implicitly {@link NetMessage.MsgMpwWatchGetRequestedWarIdArray.verify|verify} messages.
         * @param message MsgMpwWatchGetRequestedWarIdArray message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMpwWatchGetRequestedWarIdArray, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMpwWatchGetRequestedWarIdArray message, length delimited. Does not implicitly {@link NetMessage.MsgMpwWatchGetRequestedWarIdArray.verify|verify} messages.
         * @param message MsgMpwWatchGetRequestedWarIdArray message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMpwWatchGetRequestedWarIdArray, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMpwWatchGetRequestedWarIdArray message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMpwWatchGetRequestedWarIdArray
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwWatchGetRequestedWarIdArray;

        /**
         * Decodes a MsgMpwWatchGetRequestedWarIdArray message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMpwWatchGetRequestedWarIdArray
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwWatchGetRequestedWarIdArray;

        /**
         * Verifies a MsgMpwWatchGetRequestedWarIdArray message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMpwWatchGetRequestedWarIdArray message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMpwWatchGetRequestedWarIdArray
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwWatchGetRequestedWarIdArray;

        /**
         * Creates a plain object from a MsgMpwWatchGetRequestedWarIdArray message. Also converts values to other types if specified.
         * @param message MsgMpwWatchGetRequestedWarIdArray
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMpwWatchGetRequestedWarIdArray, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMpwWatchGetRequestedWarIdArray to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMpwWatchGetRequestedWarIdArray {

        /** Properties of a C. */
        interface IC {
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwWatchGetRequestedWarIdArray.IC);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMpwWatchGetRequestedWarIdArray.IC): NetMessage.MsgMpwWatchGetRequestedWarIdArray.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMpwWatchGetRequestedWarIdArray.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwWatchGetRequestedWarIdArray.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMpwWatchGetRequestedWarIdArray.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwWatchGetRequestedWarIdArray.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwWatchGetRequestedWarIdArray.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwWatchGetRequestedWarIdArray.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwWatchGetRequestedWarIdArray.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwWatchGetRequestedWarIdArray.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S warIdArray */
            warIdArray?: (number[]|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwWatchGetRequestedWarIdArray.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S warIdArray. */
            public warIdArray: number[];

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMpwWatchGetRequestedWarIdArray.IS): NetMessage.MsgMpwWatchGetRequestedWarIdArray.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMpwWatchGetRequestedWarIdArray.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwWatchGetRequestedWarIdArray.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMpwWatchGetRequestedWarIdArray.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwWatchGetRequestedWarIdArray.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwWatchGetRequestedWarIdArray.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwWatchGetRequestedWarIdArray.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwWatchGetRequestedWarIdArray.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwWatchGetRequestedWarIdArray.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMpwWatchGetWatchedWarIdArray. */
    interface IMsgMpwWatchGetWatchedWarIdArray {

        /** MsgMpwWatchGetWatchedWarIdArray c */
        c?: (NetMessage.MsgMpwWatchGetWatchedWarIdArray.IC|null);

        /** MsgMpwWatchGetWatchedWarIdArray s */
        s?: (NetMessage.MsgMpwWatchGetWatchedWarIdArray.IS|null);
    }

    /** Represents a MsgMpwWatchGetWatchedWarIdArray. */
    class MsgMpwWatchGetWatchedWarIdArray implements IMsgMpwWatchGetWatchedWarIdArray {

        /**
         * Constructs a new MsgMpwWatchGetWatchedWarIdArray.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMpwWatchGetWatchedWarIdArray);

        /** MsgMpwWatchGetWatchedWarIdArray c. */
        public c?: (NetMessage.MsgMpwWatchGetWatchedWarIdArray.IC|null);

        /** MsgMpwWatchGetWatchedWarIdArray s. */
        public s?: (NetMessage.MsgMpwWatchGetWatchedWarIdArray.IS|null);

        /**
         * Creates a new MsgMpwWatchGetWatchedWarIdArray instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMpwWatchGetWatchedWarIdArray instance
         */
        public static create(properties?: NetMessage.IMsgMpwWatchGetWatchedWarIdArray): NetMessage.MsgMpwWatchGetWatchedWarIdArray;

        /**
         * Encodes the specified MsgMpwWatchGetWatchedWarIdArray message. Does not implicitly {@link NetMessage.MsgMpwWatchGetWatchedWarIdArray.verify|verify} messages.
         * @param message MsgMpwWatchGetWatchedWarIdArray message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMpwWatchGetWatchedWarIdArray, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMpwWatchGetWatchedWarIdArray message, length delimited. Does not implicitly {@link NetMessage.MsgMpwWatchGetWatchedWarIdArray.verify|verify} messages.
         * @param message MsgMpwWatchGetWatchedWarIdArray message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMpwWatchGetWatchedWarIdArray, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMpwWatchGetWatchedWarIdArray message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMpwWatchGetWatchedWarIdArray
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwWatchGetWatchedWarIdArray;

        /**
         * Decodes a MsgMpwWatchGetWatchedWarIdArray message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMpwWatchGetWatchedWarIdArray
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwWatchGetWatchedWarIdArray;

        /**
         * Verifies a MsgMpwWatchGetWatchedWarIdArray message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMpwWatchGetWatchedWarIdArray message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMpwWatchGetWatchedWarIdArray
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwWatchGetWatchedWarIdArray;

        /**
         * Creates a plain object from a MsgMpwWatchGetWatchedWarIdArray message. Also converts values to other types if specified.
         * @param message MsgMpwWatchGetWatchedWarIdArray
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMpwWatchGetWatchedWarIdArray, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMpwWatchGetWatchedWarIdArray to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMpwWatchGetWatchedWarIdArray {

        /** Properties of a C. */
        interface IC {
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwWatchGetWatchedWarIdArray.IC);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMpwWatchGetWatchedWarIdArray.IC): NetMessage.MsgMpwWatchGetWatchedWarIdArray.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMpwWatchGetWatchedWarIdArray.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwWatchGetWatchedWarIdArray.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMpwWatchGetWatchedWarIdArray.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwWatchGetWatchedWarIdArray.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwWatchGetWatchedWarIdArray.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwWatchGetWatchedWarIdArray.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwWatchGetWatchedWarIdArray.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwWatchGetWatchedWarIdArray.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S warIdArray */
            warIdArray?: (number[]|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwWatchGetWatchedWarIdArray.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S warIdArray. */
            public warIdArray: number[];

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMpwWatchGetWatchedWarIdArray.IS): NetMessage.MsgMpwWatchGetWatchedWarIdArray.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMpwWatchGetWatchedWarIdArray.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwWatchGetWatchedWarIdArray.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMpwWatchGetWatchedWarIdArray.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwWatchGetWatchedWarIdArray.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwWatchGetWatchedWarIdArray.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwWatchGetWatchedWarIdArray.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwWatchGetWatchedWarIdArray.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwWatchGetWatchedWarIdArray.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMpwWatchGetOngoingWarIdArray. */
    interface IMsgMpwWatchGetOngoingWarIdArray {

        /** MsgMpwWatchGetOngoingWarIdArray c */
        c?: (NetMessage.MsgMpwWatchGetOngoingWarIdArray.IC|null);

        /** MsgMpwWatchGetOngoingWarIdArray s */
        s?: (NetMessage.MsgMpwWatchGetOngoingWarIdArray.IS|null);
    }

    /** Represents a MsgMpwWatchGetOngoingWarIdArray. */
    class MsgMpwWatchGetOngoingWarIdArray implements IMsgMpwWatchGetOngoingWarIdArray {

        /**
         * Constructs a new MsgMpwWatchGetOngoingWarIdArray.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMpwWatchGetOngoingWarIdArray);

        /** MsgMpwWatchGetOngoingWarIdArray c. */
        public c?: (NetMessage.MsgMpwWatchGetOngoingWarIdArray.IC|null);

        /** MsgMpwWatchGetOngoingWarIdArray s. */
        public s?: (NetMessage.MsgMpwWatchGetOngoingWarIdArray.IS|null);

        /**
         * Creates a new MsgMpwWatchGetOngoingWarIdArray instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMpwWatchGetOngoingWarIdArray instance
         */
        public static create(properties?: NetMessage.IMsgMpwWatchGetOngoingWarIdArray): NetMessage.MsgMpwWatchGetOngoingWarIdArray;

        /**
         * Encodes the specified MsgMpwWatchGetOngoingWarIdArray message. Does not implicitly {@link NetMessage.MsgMpwWatchGetOngoingWarIdArray.verify|verify} messages.
         * @param message MsgMpwWatchGetOngoingWarIdArray message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMpwWatchGetOngoingWarIdArray, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMpwWatchGetOngoingWarIdArray message, length delimited. Does not implicitly {@link NetMessage.MsgMpwWatchGetOngoingWarIdArray.verify|verify} messages.
         * @param message MsgMpwWatchGetOngoingWarIdArray message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMpwWatchGetOngoingWarIdArray, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMpwWatchGetOngoingWarIdArray message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMpwWatchGetOngoingWarIdArray
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwWatchGetOngoingWarIdArray;

        /**
         * Decodes a MsgMpwWatchGetOngoingWarIdArray message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMpwWatchGetOngoingWarIdArray
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwWatchGetOngoingWarIdArray;

        /**
         * Verifies a MsgMpwWatchGetOngoingWarIdArray message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMpwWatchGetOngoingWarIdArray message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMpwWatchGetOngoingWarIdArray
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwWatchGetOngoingWarIdArray;

        /**
         * Creates a plain object from a MsgMpwWatchGetOngoingWarIdArray message. Also converts values to other types if specified.
         * @param message MsgMpwWatchGetOngoingWarIdArray
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMpwWatchGetOngoingWarIdArray, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMpwWatchGetOngoingWarIdArray to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMpwWatchGetOngoingWarIdArray {

        /** Properties of a C. */
        interface IC {
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwWatchGetOngoingWarIdArray.IC);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMpwWatchGetOngoingWarIdArray.IC): NetMessage.MsgMpwWatchGetOngoingWarIdArray.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMpwWatchGetOngoingWarIdArray.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwWatchGetOngoingWarIdArray.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMpwWatchGetOngoingWarIdArray.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwWatchGetOngoingWarIdArray.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwWatchGetOngoingWarIdArray.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwWatchGetOngoingWarIdArray.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwWatchGetOngoingWarIdArray.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwWatchGetOngoingWarIdArray.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S warIdArray */
            warIdArray?: (number[]|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwWatchGetOngoingWarIdArray.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S warIdArray. */
            public warIdArray: number[];

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMpwWatchGetOngoingWarIdArray.IS): NetMessage.MsgMpwWatchGetOngoingWarIdArray.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMpwWatchGetOngoingWarIdArray.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwWatchGetOngoingWarIdArray.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMpwWatchGetOngoingWarIdArray.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwWatchGetOngoingWarIdArray.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwWatchGetOngoingWarIdArray.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwWatchGetOngoingWarIdArray.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwWatchGetOngoingWarIdArray.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwWatchGetOngoingWarIdArray.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMpwWatchContinueWar. */
    interface IMsgMpwWatchContinueWar {

        /** MsgMpwWatchContinueWar c */
        c?: (NetMessage.MsgMpwWatchContinueWar.IC|null);

        /** MsgMpwWatchContinueWar s */
        s?: (NetMessage.MsgMpwWatchContinueWar.IS|null);
    }

    /** Represents a MsgMpwWatchContinueWar. */
    class MsgMpwWatchContinueWar implements IMsgMpwWatchContinueWar {

        /**
         * Constructs a new MsgMpwWatchContinueWar.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMpwWatchContinueWar);

        /** MsgMpwWatchContinueWar c. */
        public c?: (NetMessage.MsgMpwWatchContinueWar.IC|null);

        /** MsgMpwWatchContinueWar s. */
        public s?: (NetMessage.MsgMpwWatchContinueWar.IS|null);

        /**
         * Creates a new MsgMpwWatchContinueWar instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMpwWatchContinueWar instance
         */
        public static create(properties?: NetMessage.IMsgMpwWatchContinueWar): NetMessage.MsgMpwWatchContinueWar;

        /**
         * Encodes the specified MsgMpwWatchContinueWar message. Does not implicitly {@link NetMessage.MsgMpwWatchContinueWar.verify|verify} messages.
         * @param message MsgMpwWatchContinueWar message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMpwWatchContinueWar, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMpwWatchContinueWar message, length delimited. Does not implicitly {@link NetMessage.MsgMpwWatchContinueWar.verify|verify} messages.
         * @param message MsgMpwWatchContinueWar message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMpwWatchContinueWar, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMpwWatchContinueWar message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMpwWatchContinueWar
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwWatchContinueWar;

        /**
         * Decodes a MsgMpwWatchContinueWar message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMpwWatchContinueWar
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwWatchContinueWar;

        /**
         * Verifies a MsgMpwWatchContinueWar message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMpwWatchContinueWar message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMpwWatchContinueWar
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwWatchContinueWar;

        /**
         * Creates a plain object from a MsgMpwWatchContinueWar message. Also converts values to other types if specified.
         * @param message MsgMpwWatchContinueWar
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMpwWatchContinueWar, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMpwWatchContinueWar to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMpwWatchContinueWar {

        /** Properties of a C. */
        interface IC {

            /** C warId */
            warId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwWatchContinueWar.IC);

            /** C warId. */
            public warId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMpwWatchContinueWar.IC): NetMessage.MsgMpwWatchContinueWar.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMpwWatchContinueWar.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwWatchContinueWar.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMpwWatchContinueWar.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwWatchContinueWar.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwWatchContinueWar.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwWatchContinueWar.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwWatchContinueWar.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwWatchContinueWar.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S warId */
            warId?: (number|null);

            /** S war */
            war?: (WarSerialization.ISerialWar|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwWatchContinueWar.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S warId. */
            public warId: number;

            /** S war. */
            public war?: (WarSerialization.ISerialWar|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMpwWatchContinueWar.IS): NetMessage.MsgMpwWatchContinueWar.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMpwWatchContinueWar.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwWatchContinueWar.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMpwWatchContinueWar.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwWatchContinueWar.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwWatchContinueWar.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwWatchContinueWar.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwWatchContinueWar.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwWatchContinueWar.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMpwWatchGetIncomingInfo. */
    interface IMsgMpwWatchGetIncomingInfo {

        /** MsgMpwWatchGetIncomingInfo c */
        c?: (NetMessage.MsgMpwWatchGetIncomingInfo.IC|null);

        /** MsgMpwWatchGetIncomingInfo s */
        s?: (NetMessage.MsgMpwWatchGetIncomingInfo.IS|null);
    }

    /** Represents a MsgMpwWatchGetIncomingInfo. */
    class MsgMpwWatchGetIncomingInfo implements IMsgMpwWatchGetIncomingInfo {

        /**
         * Constructs a new MsgMpwWatchGetIncomingInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMpwWatchGetIncomingInfo);

        /** MsgMpwWatchGetIncomingInfo c. */
        public c?: (NetMessage.MsgMpwWatchGetIncomingInfo.IC|null);

        /** MsgMpwWatchGetIncomingInfo s. */
        public s?: (NetMessage.MsgMpwWatchGetIncomingInfo.IS|null);

        /**
         * Creates a new MsgMpwWatchGetIncomingInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMpwWatchGetIncomingInfo instance
         */
        public static create(properties?: NetMessage.IMsgMpwWatchGetIncomingInfo): NetMessage.MsgMpwWatchGetIncomingInfo;

        /**
         * Encodes the specified MsgMpwWatchGetIncomingInfo message. Does not implicitly {@link NetMessage.MsgMpwWatchGetIncomingInfo.verify|verify} messages.
         * @param message MsgMpwWatchGetIncomingInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMpwWatchGetIncomingInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMpwWatchGetIncomingInfo message, length delimited. Does not implicitly {@link NetMessage.MsgMpwWatchGetIncomingInfo.verify|verify} messages.
         * @param message MsgMpwWatchGetIncomingInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMpwWatchGetIncomingInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMpwWatchGetIncomingInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMpwWatchGetIncomingInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwWatchGetIncomingInfo;

        /**
         * Decodes a MsgMpwWatchGetIncomingInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMpwWatchGetIncomingInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwWatchGetIncomingInfo;

        /**
         * Verifies a MsgMpwWatchGetIncomingInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMpwWatchGetIncomingInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMpwWatchGetIncomingInfo
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwWatchGetIncomingInfo;

        /**
         * Creates a plain object from a MsgMpwWatchGetIncomingInfo message. Also converts values to other types if specified.
         * @param message MsgMpwWatchGetIncomingInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMpwWatchGetIncomingInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMpwWatchGetIncomingInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMpwWatchGetIncomingInfo {

        /** Properties of a C. */
        interface IC {

            /** C warId */
            warId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwWatchGetIncomingInfo.IC);

            /** C warId. */
            public warId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMpwWatchGetIncomingInfo.IC): NetMessage.MsgMpwWatchGetIncomingInfo.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMpwWatchGetIncomingInfo.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwWatchGetIncomingInfo.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMpwWatchGetIncomingInfo.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwWatchGetIncomingInfo.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwWatchGetIncomingInfo.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwWatchGetIncomingInfo.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwWatchGetIncomingInfo.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwWatchGetIncomingInfo.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S warId */
            warId?: (number|null);

            /** S incomingInfo */
            incomingInfo?: (MultiPlayerWar.IMpwWatchIncomingInfo|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwWatchGetIncomingInfo.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S warId. */
            public warId: number;

            /** S incomingInfo. */
            public incomingInfo?: (MultiPlayerWar.IMpwWatchIncomingInfo|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMpwWatchGetIncomingInfo.IS): NetMessage.MsgMpwWatchGetIncomingInfo.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMpwWatchGetIncomingInfo.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwWatchGetIncomingInfo.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMpwWatchGetIncomingInfo.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwWatchGetIncomingInfo.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwWatchGetIncomingInfo.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwWatchGetIncomingInfo.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwWatchGetIncomingInfo.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwWatchGetIncomingInfo.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMpwWatchGetOutgoingInfo. */
    interface IMsgMpwWatchGetOutgoingInfo {

        /** MsgMpwWatchGetOutgoingInfo c */
        c?: (NetMessage.MsgMpwWatchGetOutgoingInfo.IC|null);

        /** MsgMpwWatchGetOutgoingInfo s */
        s?: (NetMessage.MsgMpwWatchGetOutgoingInfo.IS|null);
    }

    /** Represents a MsgMpwWatchGetOutgoingInfo. */
    class MsgMpwWatchGetOutgoingInfo implements IMsgMpwWatchGetOutgoingInfo {

        /**
         * Constructs a new MsgMpwWatchGetOutgoingInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMpwWatchGetOutgoingInfo);

        /** MsgMpwWatchGetOutgoingInfo c. */
        public c?: (NetMessage.MsgMpwWatchGetOutgoingInfo.IC|null);

        /** MsgMpwWatchGetOutgoingInfo s. */
        public s?: (NetMessage.MsgMpwWatchGetOutgoingInfo.IS|null);

        /**
         * Creates a new MsgMpwWatchGetOutgoingInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMpwWatchGetOutgoingInfo instance
         */
        public static create(properties?: NetMessage.IMsgMpwWatchGetOutgoingInfo): NetMessage.MsgMpwWatchGetOutgoingInfo;

        /**
         * Encodes the specified MsgMpwWatchGetOutgoingInfo message. Does not implicitly {@link NetMessage.MsgMpwWatchGetOutgoingInfo.verify|verify} messages.
         * @param message MsgMpwWatchGetOutgoingInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMpwWatchGetOutgoingInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMpwWatchGetOutgoingInfo message, length delimited. Does not implicitly {@link NetMessage.MsgMpwWatchGetOutgoingInfo.verify|verify} messages.
         * @param message MsgMpwWatchGetOutgoingInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMpwWatchGetOutgoingInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMpwWatchGetOutgoingInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMpwWatchGetOutgoingInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwWatchGetOutgoingInfo;

        /**
         * Decodes a MsgMpwWatchGetOutgoingInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMpwWatchGetOutgoingInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwWatchGetOutgoingInfo;

        /**
         * Verifies a MsgMpwWatchGetOutgoingInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMpwWatchGetOutgoingInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMpwWatchGetOutgoingInfo
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwWatchGetOutgoingInfo;

        /**
         * Creates a plain object from a MsgMpwWatchGetOutgoingInfo message. Also converts values to other types if specified.
         * @param message MsgMpwWatchGetOutgoingInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMpwWatchGetOutgoingInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMpwWatchGetOutgoingInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMpwWatchGetOutgoingInfo {

        /** Properties of a C. */
        interface IC {

            /** C warId */
            warId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwWatchGetOutgoingInfo.IC);

            /** C warId. */
            public warId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMpwWatchGetOutgoingInfo.IC): NetMessage.MsgMpwWatchGetOutgoingInfo.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMpwWatchGetOutgoingInfo.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwWatchGetOutgoingInfo.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMpwWatchGetOutgoingInfo.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwWatchGetOutgoingInfo.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwWatchGetOutgoingInfo.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwWatchGetOutgoingInfo.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwWatchGetOutgoingInfo.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwWatchGetOutgoingInfo.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S warId */
            warId?: (number|null);

            /** S outgoingInfo */
            outgoingInfo?: (MultiPlayerWar.IMpwWatchOutgoingInfo|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwWatchGetOutgoingInfo.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S warId. */
            public warId: number;

            /** S outgoingInfo. */
            public outgoingInfo?: (MultiPlayerWar.IMpwWatchOutgoingInfo|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMpwWatchGetOutgoingInfo.IS): NetMessage.MsgMpwWatchGetOutgoingInfo.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMpwWatchGetOutgoingInfo.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwWatchGetOutgoingInfo.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMpwWatchGetOutgoingInfo.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwWatchGetOutgoingInfo.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwWatchGetOutgoingInfo.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwWatchGetOutgoingInfo.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwWatchGetOutgoingInfo.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwWatchGetOutgoingInfo.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMpwExecuteWarAction. */
    interface IMsgMpwExecuteWarAction {

        /** MsgMpwExecuteWarAction c */
        c?: (NetMessage.MsgMpwExecuteWarAction.IC|null);

        /** MsgMpwExecuteWarAction s */
        s?: (NetMessage.MsgMpwExecuteWarAction.IS|null);
    }

    /** Represents a MsgMpwExecuteWarAction. */
    class MsgMpwExecuteWarAction implements IMsgMpwExecuteWarAction {

        /**
         * Constructs a new MsgMpwExecuteWarAction.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMpwExecuteWarAction);

        /** MsgMpwExecuteWarAction c. */
        public c?: (NetMessage.MsgMpwExecuteWarAction.IC|null);

        /** MsgMpwExecuteWarAction s. */
        public s?: (NetMessage.MsgMpwExecuteWarAction.IS|null);

        /**
         * Creates a new MsgMpwExecuteWarAction instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMpwExecuteWarAction instance
         */
        public static create(properties?: NetMessage.IMsgMpwExecuteWarAction): NetMessage.MsgMpwExecuteWarAction;

        /**
         * Encodes the specified MsgMpwExecuteWarAction message. Does not implicitly {@link NetMessage.MsgMpwExecuteWarAction.verify|verify} messages.
         * @param message MsgMpwExecuteWarAction message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMpwExecuteWarAction, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMpwExecuteWarAction message, length delimited. Does not implicitly {@link NetMessage.MsgMpwExecuteWarAction.verify|verify} messages.
         * @param message MsgMpwExecuteWarAction message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMpwExecuteWarAction, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMpwExecuteWarAction message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMpwExecuteWarAction
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwExecuteWarAction;

        /**
         * Decodes a MsgMpwExecuteWarAction message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMpwExecuteWarAction
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwExecuteWarAction;

        /**
         * Verifies a MsgMpwExecuteWarAction message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMpwExecuteWarAction message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMpwExecuteWarAction
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwExecuteWarAction;

        /**
         * Creates a plain object from a MsgMpwExecuteWarAction message. Also converts values to other types if specified.
         * @param message MsgMpwExecuteWarAction
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMpwExecuteWarAction, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMpwExecuteWarAction to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMpwExecuteWarAction {

        /** Properties of a C. */
        interface IC {

            /** C warId */
            warId?: (number|null);

            /** C actionContainer */
            actionContainer?: (WarAction.IWarActionContainer|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwExecuteWarAction.IC);

            /** C warId. */
            public warId: number;

            /** C actionContainer. */
            public actionContainer?: (WarAction.IWarActionContainer|null);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMpwExecuteWarAction.IC): NetMessage.MsgMpwExecuteWarAction.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMpwExecuteWarAction.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwExecuteWarAction.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMpwExecuteWarAction.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwExecuteWarAction.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwExecuteWarAction.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwExecuteWarAction.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwExecuteWarAction.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwExecuteWarAction.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S warId */
            warId?: (number|null);

            /** S actionContainer */
            actionContainer?: (WarAction.IWarActionContainer|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwExecuteWarAction.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S warId. */
            public warId: number;

            /** S actionContainer. */
            public actionContainer?: (WarAction.IWarActionContainer|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMpwExecuteWarAction.IS): NetMessage.MsgMpwExecuteWarAction.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMpwExecuteWarAction.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwExecuteWarAction.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMpwExecuteWarAction.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwExecuteWarAction.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwExecuteWarAction.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwExecuteWarAction.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwExecuteWarAction.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwExecuteWarAction.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMpwGetHalfwayReplayData. */
    interface IMsgMpwGetHalfwayReplayData {

        /** MsgMpwGetHalfwayReplayData c */
        c?: (NetMessage.MsgMpwGetHalfwayReplayData.IC|null);

        /** MsgMpwGetHalfwayReplayData s */
        s?: (NetMessage.MsgMpwGetHalfwayReplayData.IS|null);
    }

    /** Represents a MsgMpwGetHalfwayReplayData. */
    class MsgMpwGetHalfwayReplayData implements IMsgMpwGetHalfwayReplayData {

        /**
         * Constructs a new MsgMpwGetHalfwayReplayData.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMpwGetHalfwayReplayData);

        /** MsgMpwGetHalfwayReplayData c. */
        public c?: (NetMessage.MsgMpwGetHalfwayReplayData.IC|null);

        /** MsgMpwGetHalfwayReplayData s. */
        public s?: (NetMessage.MsgMpwGetHalfwayReplayData.IS|null);

        /**
         * Creates a new MsgMpwGetHalfwayReplayData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMpwGetHalfwayReplayData instance
         */
        public static create(properties?: NetMessage.IMsgMpwGetHalfwayReplayData): NetMessage.MsgMpwGetHalfwayReplayData;

        /**
         * Encodes the specified MsgMpwGetHalfwayReplayData message. Does not implicitly {@link NetMessage.MsgMpwGetHalfwayReplayData.verify|verify} messages.
         * @param message MsgMpwGetHalfwayReplayData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMpwGetHalfwayReplayData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMpwGetHalfwayReplayData message, length delimited. Does not implicitly {@link NetMessage.MsgMpwGetHalfwayReplayData.verify|verify} messages.
         * @param message MsgMpwGetHalfwayReplayData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMpwGetHalfwayReplayData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMpwGetHalfwayReplayData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMpwGetHalfwayReplayData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwGetHalfwayReplayData;

        /**
         * Decodes a MsgMpwGetHalfwayReplayData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMpwGetHalfwayReplayData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwGetHalfwayReplayData;

        /**
         * Verifies a MsgMpwGetHalfwayReplayData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMpwGetHalfwayReplayData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMpwGetHalfwayReplayData
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwGetHalfwayReplayData;

        /**
         * Creates a plain object from a MsgMpwGetHalfwayReplayData message. Also converts values to other types if specified.
         * @param message MsgMpwGetHalfwayReplayData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMpwGetHalfwayReplayData, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMpwGetHalfwayReplayData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMpwGetHalfwayReplayData {

        /** Properties of a C. */
        interface IC {

            /** C warId */
            warId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwGetHalfwayReplayData.IC);

            /** C warId. */
            public warId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMpwGetHalfwayReplayData.IC): NetMessage.MsgMpwGetHalfwayReplayData.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMpwGetHalfwayReplayData.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwGetHalfwayReplayData.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMpwGetHalfwayReplayData.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwGetHalfwayReplayData.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwGetHalfwayReplayData.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwGetHalfwayReplayData.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwGetHalfwayReplayData.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwGetHalfwayReplayData.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S warId */
            warId?: (number|null);

            /** S warData */
            warData?: (WarSerialization.ISerialWar|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwGetHalfwayReplayData.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S warId. */
            public warId: number;

            /** S warData. */
            public warData?: (WarSerialization.ISerialWar|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMpwGetHalfwayReplayData.IS): NetMessage.MsgMpwGetHalfwayReplayData.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMpwGetHalfwayReplayData.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwGetHalfwayReplayData.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMpwGetHalfwayReplayData.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwGetHalfwayReplayData.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwGetHalfwayReplayData.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwGetHalfwayReplayData.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwGetHalfwayReplayData.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwGetHalfwayReplayData.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgSpmCreateScw. */
    interface IMsgSpmCreateScw {

        /** MsgSpmCreateScw c */
        c?: (NetMessage.MsgSpmCreateScw.IC|null);

        /** MsgSpmCreateScw s */
        s?: (NetMessage.MsgSpmCreateScw.IS|null);
    }

    /** Represents a MsgSpmCreateScw. */
    class MsgSpmCreateScw implements IMsgSpmCreateScw {

        /**
         * Constructs a new MsgSpmCreateScw.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgSpmCreateScw);

        /** MsgSpmCreateScw c. */
        public c?: (NetMessage.MsgSpmCreateScw.IC|null);

        /** MsgSpmCreateScw s. */
        public s?: (NetMessage.MsgSpmCreateScw.IS|null);

        /**
         * Creates a new MsgSpmCreateScw instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgSpmCreateScw instance
         */
        public static create(properties?: NetMessage.IMsgSpmCreateScw): NetMessage.MsgSpmCreateScw;

        /**
         * Encodes the specified MsgSpmCreateScw message. Does not implicitly {@link NetMessage.MsgSpmCreateScw.verify|verify} messages.
         * @param message MsgSpmCreateScw message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgSpmCreateScw, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgSpmCreateScw message, length delimited. Does not implicitly {@link NetMessage.MsgSpmCreateScw.verify|verify} messages.
         * @param message MsgSpmCreateScw message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgSpmCreateScw, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgSpmCreateScw message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgSpmCreateScw
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgSpmCreateScw;

        /**
         * Decodes a MsgSpmCreateScw message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgSpmCreateScw
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgSpmCreateScw;

        /**
         * Verifies a MsgSpmCreateScw message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgSpmCreateScw message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgSpmCreateScw
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgSpmCreateScw;

        /**
         * Creates a plain object from a MsgSpmCreateScw message. Also converts values to other types if specified.
         * @param message MsgSpmCreateScw
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgSpmCreateScw, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgSpmCreateScw to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgSpmCreateScw {

        /** Properties of a C. */
        interface IC {

            /** C slotIndex */
            slotIndex?: (number|null);

            /** C slotExtraData */
            slotExtraData?: (SinglePlayerMode.ISpmWarSaveSlotExtraData|null);

            /** C settingsForCommon */
            settingsForCommon?: (WarSettings.ISettingsForCommon|null);

            /** C settingsForScw */
            settingsForScw?: (WarSettings.ISettingsForScw|null);

            /** C playerInfoList */
            playerInfoList?: (Structure.IDataForPlayerInRoom[]|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgSpmCreateScw.IC);

            /** C slotIndex. */
            public slotIndex: number;

            /** C slotExtraData. */
            public slotExtraData?: (SinglePlayerMode.ISpmWarSaveSlotExtraData|null);

            /** C settingsForCommon. */
            public settingsForCommon?: (WarSettings.ISettingsForCommon|null);

            /** C settingsForScw. */
            public settingsForScw?: (WarSettings.ISettingsForScw|null);

            /** C playerInfoList. */
            public playerInfoList: Structure.IDataForPlayerInRoom[];

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgSpmCreateScw.IC): NetMessage.MsgSpmCreateScw.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgSpmCreateScw.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgSpmCreateScw.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgSpmCreateScw.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgSpmCreateScw.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgSpmCreateScw.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgSpmCreateScw.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgSpmCreateScw.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgSpmCreateScw.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S slotIndex */
            slotIndex?: (number|null);

            /** S warData */
            warData?: (WarSerialization.ISerialWar|null);

            /** S extraData */
            extraData?: (SinglePlayerMode.ISpmWarSaveSlotExtraData|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgSpmCreateScw.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S slotIndex. */
            public slotIndex: number;

            /** S warData. */
            public warData?: (WarSerialization.ISerialWar|null);

            /** S extraData. */
            public extraData?: (SinglePlayerMode.ISpmWarSaveSlotExtraData|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgSpmCreateScw.IS): NetMessage.MsgSpmCreateScw.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgSpmCreateScw.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgSpmCreateScw.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgSpmCreateScw.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgSpmCreateScw.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgSpmCreateScw.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgSpmCreateScw.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgSpmCreateScw.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgSpmCreateScw.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgSpmCreateSfw. */
    interface IMsgSpmCreateSfw {

        /** MsgSpmCreateSfw c */
        c?: (NetMessage.MsgSpmCreateSfw.IC|null);

        /** MsgSpmCreateSfw s */
        s?: (NetMessage.MsgSpmCreateSfw.IS|null);
    }

    /** Represents a MsgSpmCreateSfw. */
    class MsgSpmCreateSfw implements IMsgSpmCreateSfw {

        /**
         * Constructs a new MsgSpmCreateSfw.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgSpmCreateSfw);

        /** MsgSpmCreateSfw c. */
        public c?: (NetMessage.MsgSpmCreateSfw.IC|null);

        /** MsgSpmCreateSfw s. */
        public s?: (NetMessage.MsgSpmCreateSfw.IS|null);

        /**
         * Creates a new MsgSpmCreateSfw instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgSpmCreateSfw instance
         */
        public static create(properties?: NetMessage.IMsgSpmCreateSfw): NetMessage.MsgSpmCreateSfw;

        /**
         * Encodes the specified MsgSpmCreateSfw message. Does not implicitly {@link NetMessage.MsgSpmCreateSfw.verify|verify} messages.
         * @param message MsgSpmCreateSfw message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgSpmCreateSfw, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgSpmCreateSfw message, length delimited. Does not implicitly {@link NetMessage.MsgSpmCreateSfw.verify|verify} messages.
         * @param message MsgSpmCreateSfw message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgSpmCreateSfw, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgSpmCreateSfw message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgSpmCreateSfw
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgSpmCreateSfw;

        /**
         * Decodes a MsgSpmCreateSfw message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgSpmCreateSfw
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgSpmCreateSfw;

        /**
         * Verifies a MsgSpmCreateSfw message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgSpmCreateSfw message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgSpmCreateSfw
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgSpmCreateSfw;

        /**
         * Creates a plain object from a MsgSpmCreateSfw message. Also converts values to other types if specified.
         * @param message MsgSpmCreateSfw
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgSpmCreateSfw, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgSpmCreateSfw to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgSpmCreateSfw {

        /** Properties of a C. */
        interface IC {

            /** C slotIndex */
            slotIndex?: (number|null);

            /** C slotExtraData */
            slotExtraData?: (SinglePlayerMode.ISpmWarSaveSlotExtraData|null);

            /** C warData */
            warData?: (WarSerialization.ISerialWar|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgSpmCreateSfw.IC);

            /** C slotIndex. */
            public slotIndex: number;

            /** C slotExtraData. */
            public slotExtraData?: (SinglePlayerMode.ISpmWarSaveSlotExtraData|null);

            /** C warData. */
            public warData?: (WarSerialization.ISerialWar|null);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgSpmCreateSfw.IC): NetMessage.MsgSpmCreateSfw.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgSpmCreateSfw.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgSpmCreateSfw.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgSpmCreateSfw.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgSpmCreateSfw.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgSpmCreateSfw.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgSpmCreateSfw.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgSpmCreateSfw.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgSpmCreateSfw.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S slotIndex */
            slotIndex?: (number|null);

            /** S warData */
            warData?: (WarSerialization.ISerialWar|null);

            /** S extraData */
            extraData?: (SinglePlayerMode.ISpmWarSaveSlotExtraData|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgSpmCreateSfw.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S slotIndex. */
            public slotIndex: number;

            /** S warData. */
            public warData?: (WarSerialization.ISerialWar|null);

            /** S extraData. */
            public extraData?: (SinglePlayerMode.ISpmWarSaveSlotExtraData|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgSpmCreateSfw.IS): NetMessage.MsgSpmCreateSfw.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgSpmCreateSfw.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgSpmCreateSfw.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgSpmCreateSfw.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgSpmCreateSfw.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgSpmCreateSfw.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgSpmCreateSfw.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgSpmCreateSfw.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgSpmCreateSfw.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgSpmCreateSrw. */
    interface IMsgSpmCreateSrw {

        /** MsgSpmCreateSrw c */
        c?: (NetMessage.MsgSpmCreateSrw.IC|null);

        /** MsgSpmCreateSrw s */
        s?: (NetMessage.MsgSpmCreateSrw.IS|null);
    }

    /** Represents a MsgSpmCreateSrw. */
    class MsgSpmCreateSrw implements IMsgSpmCreateSrw {

        /**
         * Constructs a new MsgSpmCreateSrw.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgSpmCreateSrw);

        /** MsgSpmCreateSrw c. */
        public c?: (NetMessage.MsgSpmCreateSrw.IC|null);

        /** MsgSpmCreateSrw s. */
        public s?: (NetMessage.MsgSpmCreateSrw.IS|null);

        /**
         * Creates a new MsgSpmCreateSrw instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgSpmCreateSrw instance
         */
        public static create(properties?: NetMessage.IMsgSpmCreateSrw): NetMessage.MsgSpmCreateSrw;

        /**
         * Encodes the specified MsgSpmCreateSrw message. Does not implicitly {@link NetMessage.MsgSpmCreateSrw.verify|verify} messages.
         * @param message MsgSpmCreateSrw message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgSpmCreateSrw, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgSpmCreateSrw message, length delimited. Does not implicitly {@link NetMessage.MsgSpmCreateSrw.verify|verify} messages.
         * @param message MsgSpmCreateSrw message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgSpmCreateSrw, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgSpmCreateSrw message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgSpmCreateSrw
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgSpmCreateSrw;

        /**
         * Decodes a MsgSpmCreateSrw message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgSpmCreateSrw
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgSpmCreateSrw;

        /**
         * Verifies a MsgSpmCreateSrw message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgSpmCreateSrw message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgSpmCreateSrw
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgSpmCreateSrw;

        /**
         * Creates a plain object from a MsgSpmCreateSrw message. Also converts values to other types if specified.
         * @param message MsgSpmCreateSrw
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgSpmCreateSrw, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgSpmCreateSrw to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgSpmCreateSrw {

        /** Properties of a C. */
        interface IC {

            /** C slotIndex */
            slotIndex?: (number|null);

            /** C slotExtraData */
            slotExtraData?: (SinglePlayerMode.ISpmWarSaveSlotExtraData|null);

            /** C settingsForCommon */
            settingsForCommon?: (WarSettings.ISettingsForCommon|null);

            /** C mapId */
            mapId?: (number|null);

            /** C playerInfoList */
            playerInfoList?: (Structure.IDataForPlayerInRoom[]|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgSpmCreateSrw.IC);

            /** C slotIndex. */
            public slotIndex: number;

            /** C slotExtraData. */
            public slotExtraData?: (SinglePlayerMode.ISpmWarSaveSlotExtraData|null);

            /** C settingsForCommon. */
            public settingsForCommon?: (WarSettings.ISettingsForCommon|null);

            /** C mapId. */
            public mapId: number;

            /** C playerInfoList. */
            public playerInfoList: Structure.IDataForPlayerInRoom[];

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgSpmCreateSrw.IC): NetMessage.MsgSpmCreateSrw.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgSpmCreateSrw.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgSpmCreateSrw.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgSpmCreateSrw.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgSpmCreateSrw.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgSpmCreateSrw.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgSpmCreateSrw.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgSpmCreateSrw.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgSpmCreateSrw.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S slotIndex */
            slotIndex?: (number|null);

            /** S warData */
            warData?: (WarSerialization.ISerialWar|null);

            /** S extraData */
            extraData?: (SinglePlayerMode.ISpmWarSaveSlotExtraData|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgSpmCreateSrw.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S slotIndex. */
            public slotIndex: number;

            /** S warData. */
            public warData?: (WarSerialization.ISerialWar|null);

            /** S extraData. */
            public extraData?: (SinglePlayerMode.ISpmWarSaveSlotExtraData|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgSpmCreateSrw.IS): NetMessage.MsgSpmCreateSrw.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgSpmCreateSrw.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgSpmCreateSrw.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgSpmCreateSrw.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgSpmCreateSrw.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgSpmCreateSrw.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgSpmCreateSrw.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgSpmCreateSrw.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgSpmCreateSrw.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgSpmGetWarSaveSlotFullDataArray. */
    interface IMsgSpmGetWarSaveSlotFullDataArray {

        /** MsgSpmGetWarSaveSlotFullDataArray c */
        c?: (NetMessage.MsgSpmGetWarSaveSlotFullDataArray.IC|null);

        /** MsgSpmGetWarSaveSlotFullDataArray s */
        s?: (NetMessage.MsgSpmGetWarSaveSlotFullDataArray.IS|null);
    }

    /** Represents a MsgSpmGetWarSaveSlotFullDataArray. */
    class MsgSpmGetWarSaveSlotFullDataArray implements IMsgSpmGetWarSaveSlotFullDataArray {

        /**
         * Constructs a new MsgSpmGetWarSaveSlotFullDataArray.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgSpmGetWarSaveSlotFullDataArray);

        /** MsgSpmGetWarSaveSlotFullDataArray c. */
        public c?: (NetMessage.MsgSpmGetWarSaveSlotFullDataArray.IC|null);

        /** MsgSpmGetWarSaveSlotFullDataArray s. */
        public s?: (NetMessage.MsgSpmGetWarSaveSlotFullDataArray.IS|null);

        /**
         * Creates a new MsgSpmGetWarSaveSlotFullDataArray instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgSpmGetWarSaveSlotFullDataArray instance
         */
        public static create(properties?: NetMessage.IMsgSpmGetWarSaveSlotFullDataArray): NetMessage.MsgSpmGetWarSaveSlotFullDataArray;

        /**
         * Encodes the specified MsgSpmGetWarSaveSlotFullDataArray message. Does not implicitly {@link NetMessage.MsgSpmGetWarSaveSlotFullDataArray.verify|verify} messages.
         * @param message MsgSpmGetWarSaveSlotFullDataArray message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgSpmGetWarSaveSlotFullDataArray, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgSpmGetWarSaveSlotFullDataArray message, length delimited. Does not implicitly {@link NetMessage.MsgSpmGetWarSaveSlotFullDataArray.verify|verify} messages.
         * @param message MsgSpmGetWarSaveSlotFullDataArray message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgSpmGetWarSaveSlotFullDataArray, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgSpmGetWarSaveSlotFullDataArray message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgSpmGetWarSaveSlotFullDataArray
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgSpmGetWarSaveSlotFullDataArray;

        /**
         * Decodes a MsgSpmGetWarSaveSlotFullDataArray message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgSpmGetWarSaveSlotFullDataArray
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgSpmGetWarSaveSlotFullDataArray;

        /**
         * Verifies a MsgSpmGetWarSaveSlotFullDataArray message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgSpmGetWarSaveSlotFullDataArray message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgSpmGetWarSaveSlotFullDataArray
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgSpmGetWarSaveSlotFullDataArray;

        /**
         * Creates a plain object from a MsgSpmGetWarSaveSlotFullDataArray message. Also converts values to other types if specified.
         * @param message MsgSpmGetWarSaveSlotFullDataArray
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgSpmGetWarSaveSlotFullDataArray, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgSpmGetWarSaveSlotFullDataArray to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgSpmGetWarSaveSlotFullDataArray {

        /** Properties of a C. */
        interface IC {
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgSpmGetWarSaveSlotFullDataArray.IC);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgSpmGetWarSaveSlotFullDataArray.IC): NetMessage.MsgSpmGetWarSaveSlotFullDataArray.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgSpmGetWarSaveSlotFullDataArray.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgSpmGetWarSaveSlotFullDataArray.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgSpmGetWarSaveSlotFullDataArray.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgSpmGetWarSaveSlotFullDataArray.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgSpmGetWarSaveSlotFullDataArray.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgSpmGetWarSaveSlotFullDataArray.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgSpmGetWarSaveSlotFullDataArray.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgSpmGetWarSaveSlotFullDataArray.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S dataArray */
            dataArray?: (SinglePlayerMode.ISpmWarSaveSlotFullData[]|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgSpmGetWarSaveSlotFullDataArray.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S dataArray. */
            public dataArray: SinglePlayerMode.ISpmWarSaveSlotFullData[];

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgSpmGetWarSaveSlotFullDataArray.IS): NetMessage.MsgSpmGetWarSaveSlotFullDataArray.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgSpmGetWarSaveSlotFullDataArray.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgSpmGetWarSaveSlotFullDataArray.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgSpmGetWarSaveSlotFullDataArray.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgSpmGetWarSaveSlotFullDataArray.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgSpmGetWarSaveSlotFullDataArray.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgSpmGetWarSaveSlotFullDataArray.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgSpmGetWarSaveSlotFullDataArray.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgSpmGetWarSaveSlotFullDataArray.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgSpmDeleteWarSaveSlot. */
    interface IMsgSpmDeleteWarSaveSlot {

        /** MsgSpmDeleteWarSaveSlot c */
        c?: (NetMessage.MsgSpmDeleteWarSaveSlot.IC|null);

        /** MsgSpmDeleteWarSaveSlot s */
        s?: (NetMessage.MsgSpmDeleteWarSaveSlot.IS|null);
    }

    /** Represents a MsgSpmDeleteWarSaveSlot. */
    class MsgSpmDeleteWarSaveSlot implements IMsgSpmDeleteWarSaveSlot {

        /**
         * Constructs a new MsgSpmDeleteWarSaveSlot.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgSpmDeleteWarSaveSlot);

        /** MsgSpmDeleteWarSaveSlot c. */
        public c?: (NetMessage.MsgSpmDeleteWarSaveSlot.IC|null);

        /** MsgSpmDeleteWarSaveSlot s. */
        public s?: (NetMessage.MsgSpmDeleteWarSaveSlot.IS|null);

        /**
         * Creates a new MsgSpmDeleteWarSaveSlot instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgSpmDeleteWarSaveSlot instance
         */
        public static create(properties?: NetMessage.IMsgSpmDeleteWarSaveSlot): NetMessage.MsgSpmDeleteWarSaveSlot;

        /**
         * Encodes the specified MsgSpmDeleteWarSaveSlot message. Does not implicitly {@link NetMessage.MsgSpmDeleteWarSaveSlot.verify|verify} messages.
         * @param message MsgSpmDeleteWarSaveSlot message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgSpmDeleteWarSaveSlot, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgSpmDeleteWarSaveSlot message, length delimited. Does not implicitly {@link NetMessage.MsgSpmDeleteWarSaveSlot.verify|verify} messages.
         * @param message MsgSpmDeleteWarSaveSlot message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgSpmDeleteWarSaveSlot, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgSpmDeleteWarSaveSlot message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgSpmDeleteWarSaveSlot
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgSpmDeleteWarSaveSlot;

        /**
         * Decodes a MsgSpmDeleteWarSaveSlot message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgSpmDeleteWarSaveSlot
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgSpmDeleteWarSaveSlot;

        /**
         * Verifies a MsgSpmDeleteWarSaveSlot message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgSpmDeleteWarSaveSlot message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgSpmDeleteWarSaveSlot
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgSpmDeleteWarSaveSlot;

        /**
         * Creates a plain object from a MsgSpmDeleteWarSaveSlot message. Also converts values to other types if specified.
         * @param message MsgSpmDeleteWarSaveSlot
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgSpmDeleteWarSaveSlot, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgSpmDeleteWarSaveSlot to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgSpmDeleteWarSaveSlot {

        /** Properties of a C. */
        interface IC {

            /** C slotIndex */
            slotIndex?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgSpmDeleteWarSaveSlot.IC);

            /** C slotIndex. */
            public slotIndex: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgSpmDeleteWarSaveSlot.IC): NetMessage.MsgSpmDeleteWarSaveSlot.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgSpmDeleteWarSaveSlot.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgSpmDeleteWarSaveSlot.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgSpmDeleteWarSaveSlot.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgSpmDeleteWarSaveSlot.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgSpmDeleteWarSaveSlot.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgSpmDeleteWarSaveSlot.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgSpmDeleteWarSaveSlot.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgSpmDeleteWarSaveSlot.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S slotIndex */
            slotIndex?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgSpmDeleteWarSaveSlot.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S slotIndex. */
            public slotIndex: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgSpmDeleteWarSaveSlot.IS): NetMessage.MsgSpmDeleteWarSaveSlot.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgSpmDeleteWarSaveSlot.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgSpmDeleteWarSaveSlot.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgSpmDeleteWarSaveSlot.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgSpmDeleteWarSaveSlot.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgSpmDeleteWarSaveSlot.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgSpmDeleteWarSaveSlot.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgSpmDeleteWarSaveSlot.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgSpmDeleteWarSaveSlot.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgSpmSaveScw. */
    interface IMsgSpmSaveScw {

        /** MsgSpmSaveScw c */
        c?: (NetMessage.MsgSpmSaveScw.IC|null);

        /** MsgSpmSaveScw s */
        s?: (NetMessage.MsgSpmSaveScw.IS|null);
    }

    /** Represents a MsgSpmSaveScw. */
    class MsgSpmSaveScw implements IMsgSpmSaveScw {

        /**
         * Constructs a new MsgSpmSaveScw.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgSpmSaveScw);

        /** MsgSpmSaveScw c. */
        public c?: (NetMessage.MsgSpmSaveScw.IC|null);

        /** MsgSpmSaveScw s. */
        public s?: (NetMessage.MsgSpmSaveScw.IS|null);

        /**
         * Creates a new MsgSpmSaveScw instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgSpmSaveScw instance
         */
        public static create(properties?: NetMessage.IMsgSpmSaveScw): NetMessage.MsgSpmSaveScw;

        /**
         * Encodes the specified MsgSpmSaveScw message. Does not implicitly {@link NetMessage.MsgSpmSaveScw.verify|verify} messages.
         * @param message MsgSpmSaveScw message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgSpmSaveScw, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgSpmSaveScw message, length delimited. Does not implicitly {@link NetMessage.MsgSpmSaveScw.verify|verify} messages.
         * @param message MsgSpmSaveScw message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgSpmSaveScw, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgSpmSaveScw message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgSpmSaveScw
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgSpmSaveScw;

        /**
         * Decodes a MsgSpmSaveScw message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgSpmSaveScw
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgSpmSaveScw;

        /**
         * Verifies a MsgSpmSaveScw message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgSpmSaveScw message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgSpmSaveScw
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgSpmSaveScw;

        /**
         * Creates a plain object from a MsgSpmSaveScw message. Also converts values to other types if specified.
         * @param message MsgSpmSaveScw
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgSpmSaveScw, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgSpmSaveScw to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgSpmSaveScw {

        /** Properties of a C. */
        interface IC {

            /** C slotIndex */
            slotIndex?: (number|null);

            /** C slotExtraData */
            slotExtraData?: (SinglePlayerMode.ISpmWarSaveSlotExtraData|null);

            /** C warData */
            warData?: (WarSerialization.ISerialWar|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgSpmSaveScw.IC);

            /** C slotIndex. */
            public slotIndex: number;

            /** C slotExtraData. */
            public slotExtraData?: (SinglePlayerMode.ISpmWarSaveSlotExtraData|null);

            /** C warData. */
            public warData?: (WarSerialization.ISerialWar|null);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgSpmSaveScw.IC): NetMessage.MsgSpmSaveScw.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgSpmSaveScw.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgSpmSaveScw.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgSpmSaveScw.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgSpmSaveScw.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgSpmSaveScw.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgSpmSaveScw.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgSpmSaveScw.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgSpmSaveScw.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S slotIndex */
            slotIndex?: (number|null);

            /** S slotExtraData */
            slotExtraData?: (SinglePlayerMode.ISpmWarSaveSlotExtraData|null);

            /** S warData */
            warData?: (WarSerialization.ISerialWar|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgSpmSaveScw.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S slotIndex. */
            public slotIndex: number;

            /** S slotExtraData. */
            public slotExtraData?: (SinglePlayerMode.ISpmWarSaveSlotExtraData|null);

            /** S warData. */
            public warData?: (WarSerialization.ISerialWar|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgSpmSaveScw.IS): NetMessage.MsgSpmSaveScw.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgSpmSaveScw.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgSpmSaveScw.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgSpmSaveScw.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgSpmSaveScw.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgSpmSaveScw.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgSpmSaveScw.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgSpmSaveScw.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgSpmSaveScw.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgSpmSaveSfw. */
    interface IMsgSpmSaveSfw {

        /** MsgSpmSaveSfw c */
        c?: (NetMessage.MsgSpmSaveSfw.IC|null);

        /** MsgSpmSaveSfw s */
        s?: (NetMessage.MsgSpmSaveSfw.IS|null);
    }

    /** Represents a MsgSpmSaveSfw. */
    class MsgSpmSaveSfw implements IMsgSpmSaveSfw {

        /**
         * Constructs a new MsgSpmSaveSfw.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgSpmSaveSfw);

        /** MsgSpmSaveSfw c. */
        public c?: (NetMessage.MsgSpmSaveSfw.IC|null);

        /** MsgSpmSaveSfw s. */
        public s?: (NetMessage.MsgSpmSaveSfw.IS|null);

        /**
         * Creates a new MsgSpmSaveSfw instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgSpmSaveSfw instance
         */
        public static create(properties?: NetMessage.IMsgSpmSaveSfw): NetMessage.MsgSpmSaveSfw;

        /**
         * Encodes the specified MsgSpmSaveSfw message. Does not implicitly {@link NetMessage.MsgSpmSaveSfw.verify|verify} messages.
         * @param message MsgSpmSaveSfw message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgSpmSaveSfw, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgSpmSaveSfw message, length delimited. Does not implicitly {@link NetMessage.MsgSpmSaveSfw.verify|verify} messages.
         * @param message MsgSpmSaveSfw message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgSpmSaveSfw, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgSpmSaveSfw message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgSpmSaveSfw
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgSpmSaveSfw;

        /**
         * Decodes a MsgSpmSaveSfw message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgSpmSaveSfw
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgSpmSaveSfw;

        /**
         * Verifies a MsgSpmSaveSfw message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgSpmSaveSfw message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgSpmSaveSfw
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgSpmSaveSfw;

        /**
         * Creates a plain object from a MsgSpmSaveSfw message. Also converts values to other types if specified.
         * @param message MsgSpmSaveSfw
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgSpmSaveSfw, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgSpmSaveSfw to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgSpmSaveSfw {

        /** Properties of a C. */
        interface IC {

            /** C slotIndex */
            slotIndex?: (number|null);

            /** C slotExtraData */
            slotExtraData?: (SinglePlayerMode.ISpmWarSaveSlotExtraData|null);

            /** C warData */
            warData?: (WarSerialization.ISerialWar|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgSpmSaveSfw.IC);

            /** C slotIndex. */
            public slotIndex: number;

            /** C slotExtraData. */
            public slotExtraData?: (SinglePlayerMode.ISpmWarSaveSlotExtraData|null);

            /** C warData. */
            public warData?: (WarSerialization.ISerialWar|null);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgSpmSaveSfw.IC): NetMessage.MsgSpmSaveSfw.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgSpmSaveSfw.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgSpmSaveSfw.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgSpmSaveSfw.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgSpmSaveSfw.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgSpmSaveSfw.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgSpmSaveSfw.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgSpmSaveSfw.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgSpmSaveSfw.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S slotIndex */
            slotIndex?: (number|null);

            /** S slotExtraData */
            slotExtraData?: (SinglePlayerMode.ISpmWarSaveSlotExtraData|null);

            /** S warData */
            warData?: (WarSerialization.ISerialWar|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgSpmSaveSfw.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S slotIndex. */
            public slotIndex: number;

            /** S slotExtraData. */
            public slotExtraData?: (SinglePlayerMode.ISpmWarSaveSlotExtraData|null);

            /** S warData. */
            public warData?: (WarSerialization.ISerialWar|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgSpmSaveSfw.IS): NetMessage.MsgSpmSaveSfw.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgSpmSaveSfw.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgSpmSaveSfw.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgSpmSaveSfw.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgSpmSaveSfw.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgSpmSaveSfw.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgSpmSaveSfw.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgSpmSaveSfw.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgSpmSaveSfw.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgSpmSaveSrw. */
    interface IMsgSpmSaveSrw {

        /** MsgSpmSaveSrw c */
        c?: (NetMessage.MsgSpmSaveSrw.IC|null);

        /** MsgSpmSaveSrw s */
        s?: (NetMessage.MsgSpmSaveSrw.IS|null);
    }

    /** Represents a MsgSpmSaveSrw. */
    class MsgSpmSaveSrw implements IMsgSpmSaveSrw {

        /**
         * Constructs a new MsgSpmSaveSrw.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgSpmSaveSrw);

        /** MsgSpmSaveSrw c. */
        public c?: (NetMessage.MsgSpmSaveSrw.IC|null);

        /** MsgSpmSaveSrw s. */
        public s?: (NetMessage.MsgSpmSaveSrw.IS|null);

        /**
         * Creates a new MsgSpmSaveSrw instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgSpmSaveSrw instance
         */
        public static create(properties?: NetMessage.IMsgSpmSaveSrw): NetMessage.MsgSpmSaveSrw;

        /**
         * Encodes the specified MsgSpmSaveSrw message. Does not implicitly {@link NetMessage.MsgSpmSaveSrw.verify|verify} messages.
         * @param message MsgSpmSaveSrw message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgSpmSaveSrw, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgSpmSaveSrw message, length delimited. Does not implicitly {@link NetMessage.MsgSpmSaveSrw.verify|verify} messages.
         * @param message MsgSpmSaveSrw message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgSpmSaveSrw, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgSpmSaveSrw message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgSpmSaveSrw
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgSpmSaveSrw;

        /**
         * Decodes a MsgSpmSaveSrw message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgSpmSaveSrw
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgSpmSaveSrw;

        /**
         * Verifies a MsgSpmSaveSrw message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgSpmSaveSrw message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgSpmSaveSrw
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgSpmSaveSrw;

        /**
         * Creates a plain object from a MsgSpmSaveSrw message. Also converts values to other types if specified.
         * @param message MsgSpmSaveSrw
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgSpmSaveSrw, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgSpmSaveSrw to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgSpmSaveSrw {

        /** Properties of a C. */
        interface IC {

            /** C slotIndex */
            slotIndex?: (number|null);

            /** C slotExtraData */
            slotExtraData?: (SinglePlayerMode.ISpmWarSaveSlotExtraData|null);

            /** C warData */
            warData?: (WarSerialization.ISerialWar|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgSpmSaveSrw.IC);

            /** C slotIndex. */
            public slotIndex: number;

            /** C slotExtraData. */
            public slotExtraData?: (SinglePlayerMode.ISpmWarSaveSlotExtraData|null);

            /** C warData. */
            public warData?: (WarSerialization.ISerialWar|null);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgSpmSaveSrw.IC): NetMessage.MsgSpmSaveSrw.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgSpmSaveSrw.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgSpmSaveSrw.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgSpmSaveSrw.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgSpmSaveSrw.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgSpmSaveSrw.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgSpmSaveSrw.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgSpmSaveSrw.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgSpmSaveSrw.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S slotIndex */
            slotIndex?: (number|null);

            /** S slotExtraData */
            slotExtraData?: (SinglePlayerMode.ISpmWarSaveSlotExtraData|null);

            /** S warData */
            warData?: (WarSerialization.ISerialWar|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgSpmSaveSrw.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S slotIndex. */
            public slotIndex: number;

            /** S slotExtraData. */
            public slotExtraData?: (SinglePlayerMode.ISpmWarSaveSlotExtraData|null);

            /** S warData. */
            public warData?: (WarSerialization.ISerialWar|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgSpmSaveSrw.IS): NetMessage.MsgSpmSaveSrw.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgSpmSaveSrw.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgSpmSaveSrw.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgSpmSaveSrw.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgSpmSaveSrw.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgSpmSaveSrw.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgSpmSaveSrw.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgSpmSaveSrw.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgSpmSaveSrw.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgSpmValidateSrw. */
    interface IMsgSpmValidateSrw {

        /** MsgSpmValidateSrw c */
        c?: (NetMessage.MsgSpmValidateSrw.IC|null);

        /** MsgSpmValidateSrw s */
        s?: (NetMessage.MsgSpmValidateSrw.IS|null);
    }

    /** Represents a MsgSpmValidateSrw. */
    class MsgSpmValidateSrw implements IMsgSpmValidateSrw {

        /**
         * Constructs a new MsgSpmValidateSrw.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgSpmValidateSrw);

        /** MsgSpmValidateSrw c. */
        public c?: (NetMessage.MsgSpmValidateSrw.IC|null);

        /** MsgSpmValidateSrw s. */
        public s?: (NetMessage.MsgSpmValidateSrw.IS|null);

        /**
         * Creates a new MsgSpmValidateSrw instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgSpmValidateSrw instance
         */
        public static create(properties?: NetMessage.IMsgSpmValidateSrw): NetMessage.MsgSpmValidateSrw;

        /**
         * Encodes the specified MsgSpmValidateSrw message. Does not implicitly {@link NetMessage.MsgSpmValidateSrw.verify|verify} messages.
         * @param message MsgSpmValidateSrw message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgSpmValidateSrw, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgSpmValidateSrw message, length delimited. Does not implicitly {@link NetMessage.MsgSpmValidateSrw.verify|verify} messages.
         * @param message MsgSpmValidateSrw message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgSpmValidateSrw, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgSpmValidateSrw message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgSpmValidateSrw
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgSpmValidateSrw;

        /**
         * Decodes a MsgSpmValidateSrw message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgSpmValidateSrw
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgSpmValidateSrw;

        /**
         * Verifies a MsgSpmValidateSrw message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgSpmValidateSrw message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgSpmValidateSrw
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgSpmValidateSrw;

        /**
         * Creates a plain object from a MsgSpmValidateSrw message. Also converts values to other types if specified.
         * @param message MsgSpmValidateSrw
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgSpmValidateSrw, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgSpmValidateSrw to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgSpmValidateSrw {

        /** Properties of a C. */
        interface IC {

            /** C warData */
            warData?: (WarSerialization.ISerialWar|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgSpmValidateSrw.IC);

            /** C warData. */
            public warData?: (WarSerialization.ISerialWar|null);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgSpmValidateSrw.IC): NetMessage.MsgSpmValidateSrw.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgSpmValidateSrw.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgSpmValidateSrw.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgSpmValidateSrw.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgSpmValidateSrw.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgSpmValidateSrw.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgSpmValidateSrw.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgSpmValidateSrw.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgSpmValidateSrw.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S status */
            status?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgSpmValidateSrw.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S status. */
            public status: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgSpmValidateSrw.IS): NetMessage.MsgSpmValidateSrw.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgSpmValidateSrw.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgSpmValidateSrw.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgSpmValidateSrw.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgSpmValidateSrw.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgSpmValidateSrw.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgSpmValidateSrw.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgSpmValidateSrw.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgSpmValidateSrw.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgSpmGetRankList. */
    interface IMsgSpmGetRankList {

        /** MsgSpmGetRankList c */
        c?: (NetMessage.MsgSpmGetRankList.IC|null);

        /** MsgSpmGetRankList s */
        s?: (NetMessage.MsgSpmGetRankList.IS|null);
    }

    /** Represents a MsgSpmGetRankList. */
    class MsgSpmGetRankList implements IMsgSpmGetRankList {

        /**
         * Constructs a new MsgSpmGetRankList.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgSpmGetRankList);

        /** MsgSpmGetRankList c. */
        public c?: (NetMessage.MsgSpmGetRankList.IC|null);

        /** MsgSpmGetRankList s. */
        public s?: (NetMessage.MsgSpmGetRankList.IS|null);

        /**
         * Creates a new MsgSpmGetRankList instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgSpmGetRankList instance
         */
        public static create(properties?: NetMessage.IMsgSpmGetRankList): NetMessage.MsgSpmGetRankList;

        /**
         * Encodes the specified MsgSpmGetRankList message. Does not implicitly {@link NetMessage.MsgSpmGetRankList.verify|verify} messages.
         * @param message MsgSpmGetRankList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgSpmGetRankList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgSpmGetRankList message, length delimited. Does not implicitly {@link NetMessage.MsgSpmGetRankList.verify|verify} messages.
         * @param message MsgSpmGetRankList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgSpmGetRankList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgSpmGetRankList message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgSpmGetRankList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgSpmGetRankList;

        /**
         * Decodes a MsgSpmGetRankList message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgSpmGetRankList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgSpmGetRankList;

        /**
         * Verifies a MsgSpmGetRankList message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgSpmGetRankList message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgSpmGetRankList
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgSpmGetRankList;

        /**
         * Creates a plain object from a MsgSpmGetRankList message. Also converts values to other types if specified.
         * @param message MsgSpmGetRankList
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgSpmGetRankList, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgSpmGetRankList to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgSpmGetRankList {

        /** Properties of a SpmRankSingleInfo. */
        interface ISpmRankSingleInfo {

            /** SpmRankSingleInfo rankId */
            rankId?: (number|null);

            /** SpmRankSingleInfo userId */
            userId?: (number|null);

            /** SpmRankSingleInfo score */
            score?: (number|null);
        }

        /** Represents a SpmRankSingleInfo. */
        class SpmRankSingleInfo implements ISpmRankSingleInfo {

            /**
             * Constructs a new SpmRankSingleInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgSpmGetRankList.ISpmRankSingleInfo);

            /** SpmRankSingleInfo rankId. */
            public rankId: number;

            /** SpmRankSingleInfo userId. */
            public userId: number;

            /** SpmRankSingleInfo score. */
            public score: number;

            /**
             * Creates a new SpmRankSingleInfo instance using the specified properties.
             * @param [properties] Properties to set
             * @returns SpmRankSingleInfo instance
             */
            public static create(properties?: NetMessage.MsgSpmGetRankList.ISpmRankSingleInfo): NetMessage.MsgSpmGetRankList.SpmRankSingleInfo;

            /**
             * Encodes the specified SpmRankSingleInfo message. Does not implicitly {@link NetMessage.MsgSpmGetRankList.SpmRankSingleInfo.verify|verify} messages.
             * @param message SpmRankSingleInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgSpmGetRankList.ISpmRankSingleInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified SpmRankSingleInfo message, length delimited. Does not implicitly {@link NetMessage.MsgSpmGetRankList.SpmRankSingleInfo.verify|verify} messages.
             * @param message SpmRankSingleInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgSpmGetRankList.ISpmRankSingleInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a SpmRankSingleInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SpmRankSingleInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgSpmGetRankList.SpmRankSingleInfo;

            /**
             * Decodes a SpmRankSingleInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SpmRankSingleInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgSpmGetRankList.SpmRankSingleInfo;

            /**
             * Verifies a SpmRankSingleInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SpmRankSingleInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SpmRankSingleInfo
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgSpmGetRankList.SpmRankSingleInfo;

            /**
             * Creates a plain object from a SpmRankSingleInfo message. Also converts values to other types if specified.
             * @param message SpmRankSingleInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgSpmGetRankList.SpmRankSingleInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SpmRankSingleInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a SpmRankInfoForRule. */
        interface ISpmRankInfoForRule {

            /** SpmRankInfoForRule ruleId */
            ruleId?: (number|null);

            /** SpmRankInfoForRule infoArray */
            infoArray?: (NetMessage.MsgSpmGetRankList.ISpmRankSingleInfo[]|null);
        }

        /** Represents a SpmRankInfoForRule. */
        class SpmRankInfoForRule implements ISpmRankInfoForRule {

            /**
             * Constructs a new SpmRankInfoForRule.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgSpmGetRankList.ISpmRankInfoForRule);

            /** SpmRankInfoForRule ruleId. */
            public ruleId: number;

            /** SpmRankInfoForRule infoArray. */
            public infoArray: NetMessage.MsgSpmGetRankList.ISpmRankSingleInfo[];

            /**
             * Creates a new SpmRankInfoForRule instance using the specified properties.
             * @param [properties] Properties to set
             * @returns SpmRankInfoForRule instance
             */
            public static create(properties?: NetMessage.MsgSpmGetRankList.ISpmRankInfoForRule): NetMessage.MsgSpmGetRankList.SpmRankInfoForRule;

            /**
             * Encodes the specified SpmRankInfoForRule message. Does not implicitly {@link NetMessage.MsgSpmGetRankList.SpmRankInfoForRule.verify|verify} messages.
             * @param message SpmRankInfoForRule message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgSpmGetRankList.ISpmRankInfoForRule, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified SpmRankInfoForRule message, length delimited. Does not implicitly {@link NetMessage.MsgSpmGetRankList.SpmRankInfoForRule.verify|verify} messages.
             * @param message SpmRankInfoForRule message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgSpmGetRankList.ISpmRankInfoForRule, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a SpmRankInfoForRule message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SpmRankInfoForRule
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgSpmGetRankList.SpmRankInfoForRule;

            /**
             * Decodes a SpmRankInfoForRule message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SpmRankInfoForRule
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgSpmGetRankList.SpmRankInfoForRule;

            /**
             * Verifies a SpmRankInfoForRule message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SpmRankInfoForRule message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SpmRankInfoForRule
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgSpmGetRankList.SpmRankInfoForRule;

            /**
             * Creates a plain object from a SpmRankInfoForRule message. Also converts values to other types if specified.
             * @param message SpmRankInfoForRule
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgSpmGetRankList.SpmRankInfoForRule, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SpmRankInfoForRule to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a C. */
        interface IC {

            /** C mapId */
            mapId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgSpmGetRankList.IC);

            /** C mapId. */
            public mapId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgSpmGetRankList.IC): NetMessage.MsgSpmGetRankList.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgSpmGetRankList.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgSpmGetRankList.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgSpmGetRankList.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgSpmGetRankList.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgSpmGetRankList.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgSpmGetRankList.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgSpmGetRankList.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgSpmGetRankList.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S mapId */
            mapId?: (number|null);

            /** S infoArray */
            infoArray?: (NetMessage.MsgSpmGetRankList.ISpmRankInfoForRule[]|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgSpmGetRankList.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S mapId. */
            public mapId: number;

            /** S infoArray. */
            public infoArray: NetMessage.MsgSpmGetRankList.ISpmRankInfoForRule[];

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgSpmGetRankList.IS): NetMessage.MsgSpmGetRankList.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgSpmGetRankList.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgSpmGetRankList.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgSpmGetRankList.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgSpmGetRankList.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgSpmGetRankList.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgSpmGetRankList.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgSpmGetRankList.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgSpmGetRankList.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgSpmGetReplayData. */
    interface IMsgSpmGetReplayData {

        /** MsgSpmGetReplayData c */
        c?: (NetMessage.MsgSpmGetReplayData.IC|null);

        /** MsgSpmGetReplayData s */
        s?: (NetMessage.MsgSpmGetReplayData.IS|null);
    }

    /** Represents a MsgSpmGetReplayData. */
    class MsgSpmGetReplayData implements IMsgSpmGetReplayData {

        /**
         * Constructs a new MsgSpmGetReplayData.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgSpmGetReplayData);

        /** MsgSpmGetReplayData c. */
        public c?: (NetMessage.MsgSpmGetReplayData.IC|null);

        /** MsgSpmGetReplayData s. */
        public s?: (NetMessage.MsgSpmGetReplayData.IS|null);

        /**
         * Creates a new MsgSpmGetReplayData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgSpmGetReplayData instance
         */
        public static create(properties?: NetMessage.IMsgSpmGetReplayData): NetMessage.MsgSpmGetReplayData;

        /**
         * Encodes the specified MsgSpmGetReplayData message. Does not implicitly {@link NetMessage.MsgSpmGetReplayData.verify|verify} messages.
         * @param message MsgSpmGetReplayData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgSpmGetReplayData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgSpmGetReplayData message, length delimited. Does not implicitly {@link NetMessage.MsgSpmGetReplayData.verify|verify} messages.
         * @param message MsgSpmGetReplayData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgSpmGetReplayData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgSpmGetReplayData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgSpmGetReplayData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgSpmGetReplayData;

        /**
         * Decodes a MsgSpmGetReplayData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgSpmGetReplayData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgSpmGetReplayData;

        /**
         * Verifies a MsgSpmGetReplayData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgSpmGetReplayData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgSpmGetReplayData
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgSpmGetReplayData;

        /**
         * Creates a plain object from a MsgSpmGetReplayData message. Also converts values to other types if specified.
         * @param message MsgSpmGetReplayData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgSpmGetReplayData, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgSpmGetReplayData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgSpmGetReplayData {

        /** Properties of a C. */
        interface IC {

            /** C rankId */
            rankId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgSpmGetReplayData.IC);

            /** C rankId. */
            public rankId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgSpmGetReplayData.IC): NetMessage.MsgSpmGetReplayData.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgSpmGetReplayData.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgSpmGetReplayData.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgSpmGetReplayData.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgSpmGetReplayData.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgSpmGetReplayData.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgSpmGetReplayData.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgSpmGetReplayData.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgSpmGetReplayData.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S rankId */
            rankId?: (number|null);

            /** S encodedWar */
            encodedWar?: (Uint8Array|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgSpmGetReplayData.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S rankId. */
            public rankId: number;

            /** S encodedWar. */
            public encodedWar: Uint8Array;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgSpmGetReplayData.IS): NetMessage.MsgSpmGetReplayData.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgSpmGetReplayData.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgSpmGetReplayData.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgSpmGetReplayData.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgSpmGetReplayData.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgSpmGetReplayData.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgSpmGetReplayData.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgSpmGetReplayData.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgSpmGetReplayData.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgSpmDeleteAllScoreAndReplay. */
    interface IMsgSpmDeleteAllScoreAndReplay {

        /** MsgSpmDeleteAllScoreAndReplay c */
        c?: (NetMessage.MsgSpmDeleteAllScoreAndReplay.IC|null);

        /** MsgSpmDeleteAllScoreAndReplay s */
        s?: (NetMessage.MsgSpmDeleteAllScoreAndReplay.IS|null);
    }

    /** Represents a MsgSpmDeleteAllScoreAndReplay. */
    class MsgSpmDeleteAllScoreAndReplay implements IMsgSpmDeleteAllScoreAndReplay {

        /**
         * Constructs a new MsgSpmDeleteAllScoreAndReplay.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgSpmDeleteAllScoreAndReplay);

        /** MsgSpmDeleteAllScoreAndReplay c. */
        public c?: (NetMessage.MsgSpmDeleteAllScoreAndReplay.IC|null);

        /** MsgSpmDeleteAllScoreAndReplay s. */
        public s?: (NetMessage.MsgSpmDeleteAllScoreAndReplay.IS|null);

        /**
         * Creates a new MsgSpmDeleteAllScoreAndReplay instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgSpmDeleteAllScoreAndReplay instance
         */
        public static create(properties?: NetMessage.IMsgSpmDeleteAllScoreAndReplay): NetMessage.MsgSpmDeleteAllScoreAndReplay;

        /**
         * Encodes the specified MsgSpmDeleteAllScoreAndReplay message. Does not implicitly {@link NetMessage.MsgSpmDeleteAllScoreAndReplay.verify|verify} messages.
         * @param message MsgSpmDeleteAllScoreAndReplay message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgSpmDeleteAllScoreAndReplay, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgSpmDeleteAllScoreAndReplay message, length delimited. Does not implicitly {@link NetMessage.MsgSpmDeleteAllScoreAndReplay.verify|verify} messages.
         * @param message MsgSpmDeleteAllScoreAndReplay message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgSpmDeleteAllScoreAndReplay, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgSpmDeleteAllScoreAndReplay message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgSpmDeleteAllScoreAndReplay
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgSpmDeleteAllScoreAndReplay;

        /**
         * Decodes a MsgSpmDeleteAllScoreAndReplay message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgSpmDeleteAllScoreAndReplay
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgSpmDeleteAllScoreAndReplay;

        /**
         * Verifies a MsgSpmDeleteAllScoreAndReplay message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgSpmDeleteAllScoreAndReplay message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgSpmDeleteAllScoreAndReplay
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgSpmDeleteAllScoreAndReplay;

        /**
         * Creates a plain object from a MsgSpmDeleteAllScoreAndReplay message. Also converts values to other types if specified.
         * @param message MsgSpmDeleteAllScoreAndReplay
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgSpmDeleteAllScoreAndReplay, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgSpmDeleteAllScoreAndReplay to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgSpmDeleteAllScoreAndReplay {

        /** Properties of a C. */
        interface IC {
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgSpmDeleteAllScoreAndReplay.IC);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgSpmDeleteAllScoreAndReplay.IC): NetMessage.MsgSpmDeleteAllScoreAndReplay.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgSpmDeleteAllScoreAndReplay.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgSpmDeleteAllScoreAndReplay.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgSpmDeleteAllScoreAndReplay.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgSpmDeleteAllScoreAndReplay.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgSpmDeleteAllScoreAndReplay.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgSpmDeleteAllScoreAndReplay.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgSpmDeleteAllScoreAndReplay.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgSpmDeleteAllScoreAndReplay.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgSpmDeleteAllScoreAndReplay.IS);

            /** S errorCode. */
            public errorCode: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgSpmDeleteAllScoreAndReplay.IS): NetMessage.MsgSpmDeleteAllScoreAndReplay.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgSpmDeleteAllScoreAndReplay.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgSpmDeleteAllScoreAndReplay.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgSpmDeleteAllScoreAndReplay.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgSpmDeleteAllScoreAndReplay.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgSpmDeleteAllScoreAndReplay.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgSpmDeleteAllScoreAndReplay.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgSpmDeleteAllScoreAndReplay.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgSpmDeleteAllScoreAndReplay.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMrrSetMaxConcurrentCount. */
    interface IMsgMrrSetMaxConcurrentCount {

        /** MsgMrrSetMaxConcurrentCount c */
        c?: (NetMessage.MsgMrrSetMaxConcurrentCount.IC|null);

        /** MsgMrrSetMaxConcurrentCount s */
        s?: (NetMessage.MsgMrrSetMaxConcurrentCount.IS|null);
    }

    /** Represents a MsgMrrSetMaxConcurrentCount. */
    class MsgMrrSetMaxConcurrentCount implements IMsgMrrSetMaxConcurrentCount {

        /**
         * Constructs a new MsgMrrSetMaxConcurrentCount.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMrrSetMaxConcurrentCount);

        /** MsgMrrSetMaxConcurrentCount c. */
        public c?: (NetMessage.MsgMrrSetMaxConcurrentCount.IC|null);

        /** MsgMrrSetMaxConcurrentCount s. */
        public s?: (NetMessage.MsgMrrSetMaxConcurrentCount.IS|null);

        /**
         * Creates a new MsgMrrSetMaxConcurrentCount instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMrrSetMaxConcurrentCount instance
         */
        public static create(properties?: NetMessage.IMsgMrrSetMaxConcurrentCount): NetMessage.MsgMrrSetMaxConcurrentCount;

        /**
         * Encodes the specified MsgMrrSetMaxConcurrentCount message. Does not implicitly {@link NetMessage.MsgMrrSetMaxConcurrentCount.verify|verify} messages.
         * @param message MsgMrrSetMaxConcurrentCount message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMrrSetMaxConcurrentCount, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMrrSetMaxConcurrentCount message, length delimited. Does not implicitly {@link NetMessage.MsgMrrSetMaxConcurrentCount.verify|verify} messages.
         * @param message MsgMrrSetMaxConcurrentCount message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMrrSetMaxConcurrentCount, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMrrSetMaxConcurrentCount message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMrrSetMaxConcurrentCount
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMrrSetMaxConcurrentCount;

        /**
         * Decodes a MsgMrrSetMaxConcurrentCount message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMrrSetMaxConcurrentCount
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMrrSetMaxConcurrentCount;

        /**
         * Verifies a MsgMrrSetMaxConcurrentCount message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMrrSetMaxConcurrentCount message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMrrSetMaxConcurrentCount
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMrrSetMaxConcurrentCount;

        /**
         * Creates a plain object from a MsgMrrSetMaxConcurrentCount message. Also converts values to other types if specified.
         * @param message MsgMrrSetMaxConcurrentCount
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMrrSetMaxConcurrentCount, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMrrSetMaxConcurrentCount to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMrrSetMaxConcurrentCount {

        /** Properties of a C. */
        interface IC {

            /** C maxCountForStd */
            maxCountForStd?: (number|null);

            /** C maxCountForFog */
            maxCountForFog?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMrrSetMaxConcurrentCount.IC);

            /** C maxCountForStd. */
            public maxCountForStd: number;

            /** C maxCountForFog. */
            public maxCountForFog: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMrrSetMaxConcurrentCount.IC): NetMessage.MsgMrrSetMaxConcurrentCount.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMrrSetMaxConcurrentCount.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMrrSetMaxConcurrentCount.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMrrSetMaxConcurrentCount.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMrrSetMaxConcurrentCount.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMrrSetMaxConcurrentCount.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMrrSetMaxConcurrentCount.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMrrSetMaxConcurrentCount.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMrrSetMaxConcurrentCount.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S maxCountForStd */
            maxCountForStd?: (number|null);

            /** S maxCountForFog */
            maxCountForFog?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMrrSetMaxConcurrentCount.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S maxCountForStd. */
            public maxCountForStd: number;

            /** S maxCountForFog. */
            public maxCountForFog: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMrrSetMaxConcurrentCount.IS): NetMessage.MsgMrrSetMaxConcurrentCount.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMrrSetMaxConcurrentCount.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMrrSetMaxConcurrentCount.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMrrSetMaxConcurrentCount.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMrrSetMaxConcurrentCount.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMrrSetMaxConcurrentCount.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMrrSetMaxConcurrentCount.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMrrSetMaxConcurrentCount.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMrrSetMaxConcurrentCount.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMrrGetMaxConcurrentCount. */
    interface IMsgMrrGetMaxConcurrentCount {

        /** MsgMrrGetMaxConcurrentCount c */
        c?: (NetMessage.MsgMrrGetMaxConcurrentCount.IC|null);

        /** MsgMrrGetMaxConcurrentCount s */
        s?: (NetMessage.MsgMrrGetMaxConcurrentCount.IS|null);
    }

    /** Represents a MsgMrrGetMaxConcurrentCount. */
    class MsgMrrGetMaxConcurrentCount implements IMsgMrrGetMaxConcurrentCount {

        /**
         * Constructs a new MsgMrrGetMaxConcurrentCount.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMrrGetMaxConcurrentCount);

        /** MsgMrrGetMaxConcurrentCount c. */
        public c?: (NetMessage.MsgMrrGetMaxConcurrentCount.IC|null);

        /** MsgMrrGetMaxConcurrentCount s. */
        public s?: (NetMessage.MsgMrrGetMaxConcurrentCount.IS|null);

        /**
         * Creates a new MsgMrrGetMaxConcurrentCount instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMrrGetMaxConcurrentCount instance
         */
        public static create(properties?: NetMessage.IMsgMrrGetMaxConcurrentCount): NetMessage.MsgMrrGetMaxConcurrentCount;

        /**
         * Encodes the specified MsgMrrGetMaxConcurrentCount message. Does not implicitly {@link NetMessage.MsgMrrGetMaxConcurrentCount.verify|verify} messages.
         * @param message MsgMrrGetMaxConcurrentCount message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMrrGetMaxConcurrentCount, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMrrGetMaxConcurrentCount message, length delimited. Does not implicitly {@link NetMessage.MsgMrrGetMaxConcurrentCount.verify|verify} messages.
         * @param message MsgMrrGetMaxConcurrentCount message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMrrGetMaxConcurrentCount, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMrrGetMaxConcurrentCount message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMrrGetMaxConcurrentCount
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMrrGetMaxConcurrentCount;

        /**
         * Decodes a MsgMrrGetMaxConcurrentCount message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMrrGetMaxConcurrentCount
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMrrGetMaxConcurrentCount;

        /**
         * Verifies a MsgMrrGetMaxConcurrentCount message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMrrGetMaxConcurrentCount message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMrrGetMaxConcurrentCount
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMrrGetMaxConcurrentCount;

        /**
         * Creates a plain object from a MsgMrrGetMaxConcurrentCount message. Also converts values to other types if specified.
         * @param message MsgMrrGetMaxConcurrentCount
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMrrGetMaxConcurrentCount, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMrrGetMaxConcurrentCount to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMrrGetMaxConcurrentCount {

        /** Properties of a C. */
        interface IC {
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMrrGetMaxConcurrentCount.IC);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMrrGetMaxConcurrentCount.IC): NetMessage.MsgMrrGetMaxConcurrentCount.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMrrGetMaxConcurrentCount.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMrrGetMaxConcurrentCount.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMrrGetMaxConcurrentCount.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMrrGetMaxConcurrentCount.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMrrGetMaxConcurrentCount.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMrrGetMaxConcurrentCount.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMrrGetMaxConcurrentCount.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMrrGetMaxConcurrentCount.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S maxCountForStd */
            maxCountForStd?: (number|null);

            /** S maxCountForFog */
            maxCountForFog?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMrrGetMaxConcurrentCount.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S maxCountForStd. */
            public maxCountForStd: number;

            /** S maxCountForFog. */
            public maxCountForFog: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMrrGetMaxConcurrentCount.IS): NetMessage.MsgMrrGetMaxConcurrentCount.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMrrGetMaxConcurrentCount.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMrrGetMaxConcurrentCount.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMrrGetMaxConcurrentCount.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMrrGetMaxConcurrentCount.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMrrGetMaxConcurrentCount.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMrrGetMaxConcurrentCount.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMrrGetMaxConcurrentCount.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMrrGetMaxConcurrentCount.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMrrGetJoinedRoomIdArray. */
    interface IMsgMrrGetJoinedRoomIdArray {

        /** MsgMrrGetJoinedRoomIdArray c */
        c?: (NetMessage.MsgMrrGetJoinedRoomIdArray.IC|null);

        /** MsgMrrGetJoinedRoomIdArray s */
        s?: (NetMessage.MsgMrrGetJoinedRoomIdArray.IS|null);
    }

    /** Represents a MsgMrrGetJoinedRoomIdArray. */
    class MsgMrrGetJoinedRoomIdArray implements IMsgMrrGetJoinedRoomIdArray {

        /**
         * Constructs a new MsgMrrGetJoinedRoomIdArray.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMrrGetJoinedRoomIdArray);

        /** MsgMrrGetJoinedRoomIdArray c. */
        public c?: (NetMessage.MsgMrrGetJoinedRoomIdArray.IC|null);

        /** MsgMrrGetJoinedRoomIdArray s. */
        public s?: (NetMessage.MsgMrrGetJoinedRoomIdArray.IS|null);

        /**
         * Creates a new MsgMrrGetJoinedRoomIdArray instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMrrGetJoinedRoomIdArray instance
         */
        public static create(properties?: NetMessage.IMsgMrrGetJoinedRoomIdArray): NetMessage.MsgMrrGetJoinedRoomIdArray;

        /**
         * Encodes the specified MsgMrrGetJoinedRoomIdArray message. Does not implicitly {@link NetMessage.MsgMrrGetJoinedRoomIdArray.verify|verify} messages.
         * @param message MsgMrrGetJoinedRoomIdArray message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMrrGetJoinedRoomIdArray, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMrrGetJoinedRoomIdArray message, length delimited. Does not implicitly {@link NetMessage.MsgMrrGetJoinedRoomIdArray.verify|verify} messages.
         * @param message MsgMrrGetJoinedRoomIdArray message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMrrGetJoinedRoomIdArray, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMrrGetJoinedRoomIdArray message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMrrGetJoinedRoomIdArray
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMrrGetJoinedRoomIdArray;

        /**
         * Decodes a MsgMrrGetJoinedRoomIdArray message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMrrGetJoinedRoomIdArray
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMrrGetJoinedRoomIdArray;

        /**
         * Verifies a MsgMrrGetJoinedRoomIdArray message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMrrGetJoinedRoomIdArray message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMrrGetJoinedRoomIdArray
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMrrGetJoinedRoomIdArray;

        /**
         * Creates a plain object from a MsgMrrGetJoinedRoomIdArray message. Also converts values to other types if specified.
         * @param message MsgMrrGetJoinedRoomIdArray
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMrrGetJoinedRoomIdArray, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMrrGetJoinedRoomIdArray to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMrrGetJoinedRoomIdArray {

        /** Properties of a C. */
        interface IC {
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMrrGetJoinedRoomIdArray.IC);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMrrGetJoinedRoomIdArray.IC): NetMessage.MsgMrrGetJoinedRoomIdArray.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMrrGetJoinedRoomIdArray.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMrrGetJoinedRoomIdArray.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMrrGetJoinedRoomIdArray.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMrrGetJoinedRoomIdArray.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMrrGetJoinedRoomIdArray.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMrrGetJoinedRoomIdArray.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMrrGetJoinedRoomIdArray.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMrrGetJoinedRoomIdArray.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S roomIdArray */
            roomIdArray?: (number[]|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMrrGetJoinedRoomIdArray.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S roomIdArray. */
            public roomIdArray: number[];

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMrrGetJoinedRoomIdArray.IS): NetMessage.MsgMrrGetJoinedRoomIdArray.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMrrGetJoinedRoomIdArray.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMrrGetJoinedRoomIdArray.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMrrGetJoinedRoomIdArray.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMrrGetJoinedRoomIdArray.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMrrGetJoinedRoomIdArray.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMrrGetJoinedRoomIdArray.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMrrGetJoinedRoomIdArray.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMrrGetJoinedRoomIdArray.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMrrGetRoomPublicInfo. */
    interface IMsgMrrGetRoomPublicInfo {

        /** MsgMrrGetRoomPublicInfo c */
        c?: (NetMessage.MsgMrrGetRoomPublicInfo.IC|null);

        /** MsgMrrGetRoomPublicInfo s */
        s?: (NetMessage.MsgMrrGetRoomPublicInfo.IS|null);
    }

    /** Represents a MsgMrrGetRoomPublicInfo. */
    class MsgMrrGetRoomPublicInfo implements IMsgMrrGetRoomPublicInfo {

        /**
         * Constructs a new MsgMrrGetRoomPublicInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMrrGetRoomPublicInfo);

        /** MsgMrrGetRoomPublicInfo c. */
        public c?: (NetMessage.MsgMrrGetRoomPublicInfo.IC|null);

        /** MsgMrrGetRoomPublicInfo s. */
        public s?: (NetMessage.MsgMrrGetRoomPublicInfo.IS|null);

        /**
         * Creates a new MsgMrrGetRoomPublicInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMrrGetRoomPublicInfo instance
         */
        public static create(properties?: NetMessage.IMsgMrrGetRoomPublicInfo): NetMessage.MsgMrrGetRoomPublicInfo;

        /**
         * Encodes the specified MsgMrrGetRoomPublicInfo message. Does not implicitly {@link NetMessage.MsgMrrGetRoomPublicInfo.verify|verify} messages.
         * @param message MsgMrrGetRoomPublicInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMrrGetRoomPublicInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMrrGetRoomPublicInfo message, length delimited. Does not implicitly {@link NetMessage.MsgMrrGetRoomPublicInfo.verify|verify} messages.
         * @param message MsgMrrGetRoomPublicInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMrrGetRoomPublicInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMrrGetRoomPublicInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMrrGetRoomPublicInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMrrGetRoomPublicInfo;

        /**
         * Decodes a MsgMrrGetRoomPublicInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMrrGetRoomPublicInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMrrGetRoomPublicInfo;

        /**
         * Verifies a MsgMrrGetRoomPublicInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMrrGetRoomPublicInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMrrGetRoomPublicInfo
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMrrGetRoomPublicInfo;

        /**
         * Creates a plain object from a MsgMrrGetRoomPublicInfo message. Also converts values to other types if specified.
         * @param message MsgMrrGetRoomPublicInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMrrGetRoomPublicInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMrrGetRoomPublicInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMrrGetRoomPublicInfo {

        /** Properties of a C. */
        interface IC {

            /** C roomId */
            roomId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMrrGetRoomPublicInfo.IC);

            /** C roomId. */
            public roomId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMrrGetRoomPublicInfo.IC): NetMessage.MsgMrrGetRoomPublicInfo.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMrrGetRoomPublicInfo.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMrrGetRoomPublicInfo.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMrrGetRoomPublicInfo.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMrrGetRoomPublicInfo.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMrrGetRoomPublicInfo.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMrrGetRoomPublicInfo.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMrrGetRoomPublicInfo.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMrrGetRoomPublicInfo.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S roomId */
            roomId?: (number|null);

            /** S roomInfo */
            roomInfo?: (MultiRankRoom.IMrrRoomInfo|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMrrGetRoomPublicInfo.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S roomId. */
            public roomId: number;

            /** S roomInfo. */
            public roomInfo?: (MultiRankRoom.IMrrRoomInfo|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMrrGetRoomPublicInfo.IS): NetMessage.MsgMrrGetRoomPublicInfo.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMrrGetRoomPublicInfo.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMrrGetRoomPublicInfo.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMrrGetRoomPublicInfo.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMrrGetRoomPublicInfo.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMrrGetRoomPublicInfo.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMrrGetRoomPublicInfo.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMrrGetRoomPublicInfo.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMrrGetRoomPublicInfo.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMrrDeleteRoomByServer. */
    interface IMsgMrrDeleteRoomByServer {

        /** MsgMrrDeleteRoomByServer s */
        s?: (NetMessage.MsgMrrDeleteRoomByServer.IS|null);
    }

    /** Represents a MsgMrrDeleteRoomByServer. */
    class MsgMrrDeleteRoomByServer implements IMsgMrrDeleteRoomByServer {

        /**
         * Constructs a new MsgMrrDeleteRoomByServer.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMrrDeleteRoomByServer);

        /** MsgMrrDeleteRoomByServer s. */
        public s?: (NetMessage.MsgMrrDeleteRoomByServer.IS|null);

        /**
         * Creates a new MsgMrrDeleteRoomByServer instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMrrDeleteRoomByServer instance
         */
        public static create(properties?: NetMessage.IMsgMrrDeleteRoomByServer): NetMessage.MsgMrrDeleteRoomByServer;

        /**
         * Encodes the specified MsgMrrDeleteRoomByServer message. Does not implicitly {@link NetMessage.MsgMrrDeleteRoomByServer.verify|verify} messages.
         * @param message MsgMrrDeleteRoomByServer message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMrrDeleteRoomByServer, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMrrDeleteRoomByServer message, length delimited. Does not implicitly {@link NetMessage.MsgMrrDeleteRoomByServer.verify|verify} messages.
         * @param message MsgMrrDeleteRoomByServer message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMrrDeleteRoomByServer, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMrrDeleteRoomByServer message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMrrDeleteRoomByServer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMrrDeleteRoomByServer;

        /**
         * Decodes a MsgMrrDeleteRoomByServer message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMrrDeleteRoomByServer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMrrDeleteRoomByServer;

        /**
         * Verifies a MsgMrrDeleteRoomByServer message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMrrDeleteRoomByServer message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMrrDeleteRoomByServer
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMrrDeleteRoomByServer;

        /**
         * Creates a plain object from a MsgMrrDeleteRoomByServer message. Also converts values to other types if specified.
         * @param message MsgMrrDeleteRoomByServer
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMrrDeleteRoomByServer, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMrrDeleteRoomByServer to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMrrDeleteRoomByServer {

        /** Properties of a S. */
        interface IS {

            /** S roomId */
            roomId?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMrrDeleteRoomByServer.IS);

            /** S roomId. */
            public roomId: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMrrDeleteRoomByServer.IS): NetMessage.MsgMrrDeleteRoomByServer.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMrrDeleteRoomByServer.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMrrDeleteRoomByServer.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMrrDeleteRoomByServer.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMrrDeleteRoomByServer.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMrrDeleteRoomByServer.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMrrDeleteRoomByServer.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMrrDeleteRoomByServer.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMrrDeleteRoomByServer.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMrrSetBannedCoIdList. */
    interface IMsgMrrSetBannedCoIdList {

        /** MsgMrrSetBannedCoIdList c */
        c?: (NetMessage.MsgMrrSetBannedCoIdList.IC|null);

        /** MsgMrrSetBannedCoIdList s */
        s?: (NetMessage.MsgMrrSetBannedCoIdList.IS|null);
    }

    /** Represents a MsgMrrSetBannedCoIdList. */
    class MsgMrrSetBannedCoIdList implements IMsgMrrSetBannedCoIdList {

        /**
         * Constructs a new MsgMrrSetBannedCoIdList.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMrrSetBannedCoIdList);

        /** MsgMrrSetBannedCoIdList c. */
        public c?: (NetMessage.MsgMrrSetBannedCoIdList.IC|null);

        /** MsgMrrSetBannedCoIdList s. */
        public s?: (NetMessage.MsgMrrSetBannedCoIdList.IS|null);

        /**
         * Creates a new MsgMrrSetBannedCoIdList instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMrrSetBannedCoIdList instance
         */
        public static create(properties?: NetMessage.IMsgMrrSetBannedCoIdList): NetMessage.MsgMrrSetBannedCoIdList;

        /**
         * Encodes the specified MsgMrrSetBannedCoIdList message. Does not implicitly {@link NetMessage.MsgMrrSetBannedCoIdList.verify|verify} messages.
         * @param message MsgMrrSetBannedCoIdList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMrrSetBannedCoIdList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMrrSetBannedCoIdList message, length delimited. Does not implicitly {@link NetMessage.MsgMrrSetBannedCoIdList.verify|verify} messages.
         * @param message MsgMrrSetBannedCoIdList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMrrSetBannedCoIdList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMrrSetBannedCoIdList message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMrrSetBannedCoIdList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMrrSetBannedCoIdList;

        /**
         * Decodes a MsgMrrSetBannedCoIdList message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMrrSetBannedCoIdList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMrrSetBannedCoIdList;

        /**
         * Verifies a MsgMrrSetBannedCoIdList message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMrrSetBannedCoIdList message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMrrSetBannedCoIdList
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMrrSetBannedCoIdList;

        /**
         * Creates a plain object from a MsgMrrSetBannedCoIdList message. Also converts values to other types if specified.
         * @param message MsgMrrSetBannedCoIdList
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMrrSetBannedCoIdList, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMrrSetBannedCoIdList to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMrrSetBannedCoIdList {

        /** Properties of a C. */
        interface IC {

            /** C roomId */
            roomId?: (number|null);

            /** C bannedCoIdList */
            bannedCoIdList?: (number[]|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMrrSetBannedCoIdList.IC);

            /** C roomId. */
            public roomId: number;

            /** C bannedCoIdList. */
            public bannedCoIdList: number[];

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMrrSetBannedCoIdList.IC): NetMessage.MsgMrrSetBannedCoIdList.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMrrSetBannedCoIdList.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMrrSetBannedCoIdList.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMrrSetBannedCoIdList.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMrrSetBannedCoIdList.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMrrSetBannedCoIdList.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMrrSetBannedCoIdList.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMrrSetBannedCoIdList.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMrrSetBannedCoIdList.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S roomId */
            roomId?: (number|null);

            /** S playerIndex */
            playerIndex?: (number|null);

            /** S bannedCoIdList */
            bannedCoIdList?: (number[]|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMrrSetBannedCoIdList.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S roomId. */
            public roomId: number;

            /** S playerIndex. */
            public playerIndex: number;

            /** S bannedCoIdList. */
            public bannedCoIdList: number[];

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMrrSetBannedCoIdList.IS): NetMessage.MsgMrrSetBannedCoIdList.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMrrSetBannedCoIdList.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMrrSetBannedCoIdList.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMrrSetBannedCoIdList.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMrrSetBannedCoIdList.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMrrSetBannedCoIdList.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMrrSetBannedCoIdList.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMrrSetBannedCoIdList.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMrrSetBannedCoIdList.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMrrSetSelfSettings. */
    interface IMsgMrrSetSelfSettings {

        /** MsgMrrSetSelfSettings c */
        c?: (NetMessage.MsgMrrSetSelfSettings.IC|null);

        /** MsgMrrSetSelfSettings s */
        s?: (NetMessage.MsgMrrSetSelfSettings.IS|null);
    }

    /** Represents a MsgMrrSetSelfSettings. */
    class MsgMrrSetSelfSettings implements IMsgMrrSetSelfSettings {

        /**
         * Constructs a new MsgMrrSetSelfSettings.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMrrSetSelfSettings);

        /** MsgMrrSetSelfSettings c. */
        public c?: (NetMessage.MsgMrrSetSelfSettings.IC|null);

        /** MsgMrrSetSelfSettings s. */
        public s?: (NetMessage.MsgMrrSetSelfSettings.IS|null);

        /**
         * Creates a new MsgMrrSetSelfSettings instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMrrSetSelfSettings instance
         */
        public static create(properties?: NetMessage.IMsgMrrSetSelfSettings): NetMessage.MsgMrrSetSelfSettings;

        /**
         * Encodes the specified MsgMrrSetSelfSettings message. Does not implicitly {@link NetMessage.MsgMrrSetSelfSettings.verify|verify} messages.
         * @param message MsgMrrSetSelfSettings message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMrrSetSelfSettings, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMrrSetSelfSettings message, length delimited. Does not implicitly {@link NetMessage.MsgMrrSetSelfSettings.verify|verify} messages.
         * @param message MsgMrrSetSelfSettings message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMrrSetSelfSettings, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMrrSetSelfSettings message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMrrSetSelfSettings
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMrrSetSelfSettings;

        /**
         * Decodes a MsgMrrSetSelfSettings message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMrrSetSelfSettings
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMrrSetSelfSettings;

        /**
         * Verifies a MsgMrrSetSelfSettings message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMrrSetSelfSettings message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMrrSetSelfSettings
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMrrSetSelfSettings;

        /**
         * Creates a plain object from a MsgMrrSetSelfSettings message. Also converts values to other types if specified.
         * @param message MsgMrrSetSelfSettings
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMrrSetSelfSettings, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMrrSetSelfSettings to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMrrSetSelfSettings {

        /** Properties of a C. */
        interface IC {

            /** C roomId */
            roomId?: (number|null);

            /** C coId */
            coId?: (number|null);

            /** C unitAndTileSkinId */
            unitAndTileSkinId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMrrSetSelfSettings.IC);

            /** C roomId. */
            public roomId: number;

            /** C coId. */
            public coId: number;

            /** C unitAndTileSkinId. */
            public unitAndTileSkinId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMrrSetSelfSettings.IC): NetMessage.MsgMrrSetSelfSettings.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMrrSetSelfSettings.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMrrSetSelfSettings.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMrrSetSelfSettings.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMrrSetSelfSettings.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMrrSetSelfSettings.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMrrSetSelfSettings.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMrrSetSelfSettings.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMrrSetSelfSettings.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S roomId */
            roomId?: (number|null);

            /** S coId */
            coId?: (number|null);

            /** S unitAndTileSkinId */
            unitAndTileSkinId?: (number|null);

            /** S playerIndex */
            playerIndex?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMrrSetSelfSettings.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S roomId. */
            public roomId: number;

            /** S coId. */
            public coId: number;

            /** S unitAndTileSkinId. */
            public unitAndTileSkinId: number;

            /** S playerIndex. */
            public playerIndex: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMrrSetSelfSettings.IS): NetMessage.MsgMrrSetSelfSettings.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMrrSetSelfSettings.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMrrSetSelfSettings.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMrrSetSelfSettings.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMrrSetSelfSettings.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMrrSetSelfSettings.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMrrSetSelfSettings.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMrrSetSelfSettings.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMrrSetSelfSettings.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMfrCreateRoom. */
    interface IMsgMfrCreateRoom {

        /** MsgMfrCreateRoom c */
        c?: (NetMessage.MsgMfrCreateRoom.IC|null);

        /** MsgMfrCreateRoom s */
        s?: (NetMessage.MsgMfrCreateRoom.IS|null);
    }

    /** Represents a MsgMfrCreateRoom. */
    class MsgMfrCreateRoom implements IMsgMfrCreateRoom {

        /**
         * Constructs a new MsgMfrCreateRoom.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMfrCreateRoom);

        /** MsgMfrCreateRoom c. */
        public c?: (NetMessage.MsgMfrCreateRoom.IC|null);

        /** MsgMfrCreateRoom s. */
        public s?: (NetMessage.MsgMfrCreateRoom.IS|null);

        /**
         * Creates a new MsgMfrCreateRoom instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMfrCreateRoom instance
         */
        public static create(properties?: NetMessage.IMsgMfrCreateRoom): NetMessage.MsgMfrCreateRoom;

        /**
         * Encodes the specified MsgMfrCreateRoom message. Does not implicitly {@link NetMessage.MsgMfrCreateRoom.verify|verify} messages.
         * @param message MsgMfrCreateRoom message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMfrCreateRoom, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMfrCreateRoom message, length delimited. Does not implicitly {@link NetMessage.MsgMfrCreateRoom.verify|verify} messages.
         * @param message MsgMfrCreateRoom message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMfrCreateRoom, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMfrCreateRoom message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMfrCreateRoom
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMfrCreateRoom;

        /**
         * Decodes a MsgMfrCreateRoom message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMfrCreateRoom
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMfrCreateRoom;

        /**
         * Verifies a MsgMfrCreateRoom message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMfrCreateRoom message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMfrCreateRoom
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMfrCreateRoom;

        /**
         * Creates a plain object from a MsgMfrCreateRoom message. Also converts values to other types if specified.
         * @param message MsgMfrCreateRoom
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMfrCreateRoom, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMfrCreateRoom to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMfrCreateRoom {

        /** Properties of a C. */
        interface IC {

            /** C settingsForMfw */
            settingsForMfw?: (WarSettings.ISettingsForMfw|null);

            /** C selfPlayerIndex */
            selfPlayerIndex?: (number|null);

            /** C selfCoId */
            selfCoId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMfrCreateRoom.IC);

            /** C settingsForMfw. */
            public settingsForMfw?: (WarSettings.ISettingsForMfw|null);

            /** C selfPlayerIndex. */
            public selfPlayerIndex: number;

            /** C selfCoId. */
            public selfCoId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMfrCreateRoom.IC): NetMessage.MsgMfrCreateRoom.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMfrCreateRoom.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMfrCreateRoom.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMfrCreateRoom.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMfrCreateRoom.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMfrCreateRoom.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMfrCreateRoom.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMfrCreateRoom.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMfrCreateRoom.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMfrCreateRoom.IS);

            /** S errorCode. */
            public errorCode: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMfrCreateRoom.IS): NetMessage.MsgMfrCreateRoom.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMfrCreateRoom.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMfrCreateRoom.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMfrCreateRoom.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMfrCreateRoom.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMfrCreateRoom.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMfrCreateRoom.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMfrCreateRoom.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMfrCreateRoom.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMfrExitRoom. */
    interface IMsgMfrExitRoom {

        /** MsgMfrExitRoom c */
        c?: (NetMessage.MsgMfrExitRoom.IC|null);

        /** MsgMfrExitRoom s */
        s?: (NetMessage.MsgMfrExitRoom.IS|null);
    }

    /** Represents a MsgMfrExitRoom. */
    class MsgMfrExitRoom implements IMsgMfrExitRoom {

        /**
         * Constructs a new MsgMfrExitRoom.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMfrExitRoom);

        /** MsgMfrExitRoom c. */
        public c?: (NetMessage.MsgMfrExitRoom.IC|null);

        /** MsgMfrExitRoom s. */
        public s?: (NetMessage.MsgMfrExitRoom.IS|null);

        /**
         * Creates a new MsgMfrExitRoom instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMfrExitRoom instance
         */
        public static create(properties?: NetMessage.IMsgMfrExitRoom): NetMessage.MsgMfrExitRoom;

        /**
         * Encodes the specified MsgMfrExitRoom message. Does not implicitly {@link NetMessage.MsgMfrExitRoom.verify|verify} messages.
         * @param message MsgMfrExitRoom message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMfrExitRoom, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMfrExitRoom message, length delimited. Does not implicitly {@link NetMessage.MsgMfrExitRoom.verify|verify} messages.
         * @param message MsgMfrExitRoom message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMfrExitRoom, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMfrExitRoom message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMfrExitRoom
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMfrExitRoom;

        /**
         * Decodes a MsgMfrExitRoom message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMfrExitRoom
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMfrExitRoom;

        /**
         * Verifies a MsgMfrExitRoom message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMfrExitRoom message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMfrExitRoom
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMfrExitRoom;

        /**
         * Creates a plain object from a MsgMfrExitRoom message. Also converts values to other types if specified.
         * @param message MsgMfrExitRoom
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMfrExitRoom, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMfrExitRoom to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMfrExitRoom {

        /** Properties of a C. */
        interface IC {

            /** C roomId */
            roomId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMfrExitRoom.IC);

            /** C roomId. */
            public roomId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMfrExitRoom.IC): NetMessage.MsgMfrExitRoom.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMfrExitRoom.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMfrExitRoom.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMfrExitRoom.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMfrExitRoom.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMfrExitRoom.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMfrExitRoom.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMfrExitRoom.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMfrExitRoom.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S roomId */
            roomId?: (number|null);

            /** S exitType */
            exitType?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMfrExitRoom.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S roomId. */
            public roomId: number;

            /** S exitType. */
            public exitType: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMfrExitRoom.IS): NetMessage.MsgMfrExitRoom.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMfrExitRoom.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMfrExitRoom.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMfrExitRoom.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMfrExitRoom.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMfrExitRoom.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMfrExitRoom.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMfrExitRoom.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMfrExitRoom.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMfrGetJoinedRoomIdArray. */
    interface IMsgMfrGetJoinedRoomIdArray {

        /** MsgMfrGetJoinedRoomIdArray c */
        c?: (NetMessage.MsgMfrGetJoinedRoomIdArray.IC|null);

        /** MsgMfrGetJoinedRoomIdArray s */
        s?: (NetMessage.MsgMfrGetJoinedRoomIdArray.IS|null);
    }

    /** Represents a MsgMfrGetJoinedRoomIdArray. */
    class MsgMfrGetJoinedRoomIdArray implements IMsgMfrGetJoinedRoomIdArray {

        /**
         * Constructs a new MsgMfrGetJoinedRoomIdArray.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMfrGetJoinedRoomIdArray);

        /** MsgMfrGetJoinedRoomIdArray c. */
        public c?: (NetMessage.MsgMfrGetJoinedRoomIdArray.IC|null);

        /** MsgMfrGetJoinedRoomIdArray s. */
        public s?: (NetMessage.MsgMfrGetJoinedRoomIdArray.IS|null);

        /**
         * Creates a new MsgMfrGetJoinedRoomIdArray instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMfrGetJoinedRoomIdArray instance
         */
        public static create(properties?: NetMessage.IMsgMfrGetJoinedRoomIdArray): NetMessage.MsgMfrGetJoinedRoomIdArray;

        /**
         * Encodes the specified MsgMfrGetJoinedRoomIdArray message. Does not implicitly {@link NetMessage.MsgMfrGetJoinedRoomIdArray.verify|verify} messages.
         * @param message MsgMfrGetJoinedRoomIdArray message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMfrGetJoinedRoomIdArray, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMfrGetJoinedRoomIdArray message, length delimited. Does not implicitly {@link NetMessage.MsgMfrGetJoinedRoomIdArray.verify|verify} messages.
         * @param message MsgMfrGetJoinedRoomIdArray message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMfrGetJoinedRoomIdArray, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMfrGetJoinedRoomIdArray message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMfrGetJoinedRoomIdArray
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMfrGetJoinedRoomIdArray;

        /**
         * Decodes a MsgMfrGetJoinedRoomIdArray message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMfrGetJoinedRoomIdArray
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMfrGetJoinedRoomIdArray;

        /**
         * Verifies a MsgMfrGetJoinedRoomIdArray message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMfrGetJoinedRoomIdArray message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMfrGetJoinedRoomIdArray
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMfrGetJoinedRoomIdArray;

        /**
         * Creates a plain object from a MsgMfrGetJoinedRoomIdArray message. Also converts values to other types if specified.
         * @param message MsgMfrGetJoinedRoomIdArray
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMfrGetJoinedRoomIdArray, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMfrGetJoinedRoomIdArray to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMfrGetJoinedRoomIdArray {

        /** Properties of a C. */
        interface IC {
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMfrGetJoinedRoomIdArray.IC);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMfrGetJoinedRoomIdArray.IC): NetMessage.MsgMfrGetJoinedRoomIdArray.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMfrGetJoinedRoomIdArray.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMfrGetJoinedRoomIdArray.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMfrGetJoinedRoomIdArray.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMfrGetJoinedRoomIdArray.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMfrGetJoinedRoomIdArray.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMfrGetJoinedRoomIdArray.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMfrGetJoinedRoomIdArray.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMfrGetJoinedRoomIdArray.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S roomIdArray */
            roomIdArray?: (number[]|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMfrGetJoinedRoomIdArray.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S roomIdArray. */
            public roomIdArray: number[];

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMfrGetJoinedRoomIdArray.IS): NetMessage.MsgMfrGetJoinedRoomIdArray.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMfrGetJoinedRoomIdArray.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMfrGetJoinedRoomIdArray.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMfrGetJoinedRoomIdArray.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMfrGetJoinedRoomIdArray.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMfrGetJoinedRoomIdArray.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMfrGetJoinedRoomIdArray.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMfrGetJoinedRoomIdArray.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMfrGetJoinedRoomIdArray.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMfrGetJoinableRoomIdArray. */
    interface IMsgMfrGetJoinableRoomIdArray {

        /** MsgMfrGetJoinableRoomIdArray c */
        c?: (NetMessage.MsgMfrGetJoinableRoomIdArray.IC|null);

        /** MsgMfrGetJoinableRoomIdArray s */
        s?: (NetMessage.MsgMfrGetJoinableRoomIdArray.IS|null);
    }

    /** Represents a MsgMfrGetJoinableRoomIdArray. */
    class MsgMfrGetJoinableRoomIdArray implements IMsgMfrGetJoinableRoomIdArray {

        /**
         * Constructs a new MsgMfrGetJoinableRoomIdArray.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMfrGetJoinableRoomIdArray);

        /** MsgMfrGetJoinableRoomIdArray c. */
        public c?: (NetMessage.MsgMfrGetJoinableRoomIdArray.IC|null);

        /** MsgMfrGetJoinableRoomIdArray s. */
        public s?: (NetMessage.MsgMfrGetJoinableRoomIdArray.IS|null);

        /**
         * Creates a new MsgMfrGetJoinableRoomIdArray instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMfrGetJoinableRoomIdArray instance
         */
        public static create(properties?: NetMessage.IMsgMfrGetJoinableRoomIdArray): NetMessage.MsgMfrGetJoinableRoomIdArray;

        /**
         * Encodes the specified MsgMfrGetJoinableRoomIdArray message. Does not implicitly {@link NetMessage.MsgMfrGetJoinableRoomIdArray.verify|verify} messages.
         * @param message MsgMfrGetJoinableRoomIdArray message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMfrGetJoinableRoomIdArray, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMfrGetJoinableRoomIdArray message, length delimited. Does not implicitly {@link NetMessage.MsgMfrGetJoinableRoomIdArray.verify|verify} messages.
         * @param message MsgMfrGetJoinableRoomIdArray message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMfrGetJoinableRoomIdArray, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMfrGetJoinableRoomIdArray message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMfrGetJoinableRoomIdArray
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMfrGetJoinableRoomIdArray;

        /**
         * Decodes a MsgMfrGetJoinableRoomIdArray message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMfrGetJoinableRoomIdArray
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMfrGetJoinableRoomIdArray;

        /**
         * Verifies a MsgMfrGetJoinableRoomIdArray message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMfrGetJoinableRoomIdArray message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMfrGetJoinableRoomIdArray
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMfrGetJoinableRoomIdArray;

        /**
         * Creates a plain object from a MsgMfrGetJoinableRoomIdArray message. Also converts values to other types if specified.
         * @param message MsgMfrGetJoinableRoomIdArray
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMfrGetJoinableRoomIdArray, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMfrGetJoinableRoomIdArray to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMfrGetJoinableRoomIdArray {

        /** Properties of a C. */
        interface IC {

            /** C roomFilter */
            roomFilter?: (MultiFreeRoom.IMfrRoomFilter|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMfrGetJoinableRoomIdArray.IC);

            /** C roomFilter. */
            public roomFilter?: (MultiFreeRoom.IMfrRoomFilter|null);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMfrGetJoinableRoomIdArray.IC): NetMessage.MsgMfrGetJoinableRoomIdArray.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMfrGetJoinableRoomIdArray.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMfrGetJoinableRoomIdArray.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMfrGetJoinableRoomIdArray.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMfrGetJoinableRoomIdArray.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMfrGetJoinableRoomIdArray.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMfrGetJoinableRoomIdArray.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMfrGetJoinableRoomIdArray.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMfrGetJoinableRoomIdArray.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S roomIdArray */
            roomIdArray?: (number[]|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMfrGetJoinableRoomIdArray.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S roomIdArray. */
            public roomIdArray: number[];

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMfrGetJoinableRoomIdArray.IS): NetMessage.MsgMfrGetJoinableRoomIdArray.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMfrGetJoinableRoomIdArray.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMfrGetJoinableRoomIdArray.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMfrGetJoinableRoomIdArray.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMfrGetJoinableRoomIdArray.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMfrGetJoinableRoomIdArray.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMfrGetJoinableRoomIdArray.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMfrGetJoinableRoomIdArray.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMfrGetJoinableRoomIdArray.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMfrGetRoomStaticInfo. */
    interface IMsgMfrGetRoomStaticInfo {

        /** MsgMfrGetRoomStaticInfo c */
        c?: (NetMessage.MsgMfrGetRoomStaticInfo.IC|null);

        /** MsgMfrGetRoomStaticInfo s */
        s?: (NetMessage.MsgMfrGetRoomStaticInfo.IS|null);
    }

    /** Represents a MsgMfrGetRoomStaticInfo. */
    class MsgMfrGetRoomStaticInfo implements IMsgMfrGetRoomStaticInfo {

        /**
         * Constructs a new MsgMfrGetRoomStaticInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMfrGetRoomStaticInfo);

        /** MsgMfrGetRoomStaticInfo c. */
        public c?: (NetMessage.MsgMfrGetRoomStaticInfo.IC|null);

        /** MsgMfrGetRoomStaticInfo s. */
        public s?: (NetMessage.MsgMfrGetRoomStaticInfo.IS|null);

        /**
         * Creates a new MsgMfrGetRoomStaticInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMfrGetRoomStaticInfo instance
         */
        public static create(properties?: NetMessage.IMsgMfrGetRoomStaticInfo): NetMessage.MsgMfrGetRoomStaticInfo;

        /**
         * Encodes the specified MsgMfrGetRoomStaticInfo message. Does not implicitly {@link NetMessage.MsgMfrGetRoomStaticInfo.verify|verify} messages.
         * @param message MsgMfrGetRoomStaticInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMfrGetRoomStaticInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMfrGetRoomStaticInfo message, length delimited. Does not implicitly {@link NetMessage.MsgMfrGetRoomStaticInfo.verify|verify} messages.
         * @param message MsgMfrGetRoomStaticInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMfrGetRoomStaticInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMfrGetRoomStaticInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMfrGetRoomStaticInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMfrGetRoomStaticInfo;

        /**
         * Decodes a MsgMfrGetRoomStaticInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMfrGetRoomStaticInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMfrGetRoomStaticInfo;

        /**
         * Verifies a MsgMfrGetRoomStaticInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMfrGetRoomStaticInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMfrGetRoomStaticInfo
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMfrGetRoomStaticInfo;

        /**
         * Creates a plain object from a MsgMfrGetRoomStaticInfo message. Also converts values to other types if specified.
         * @param message MsgMfrGetRoomStaticInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMfrGetRoomStaticInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMfrGetRoomStaticInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMfrGetRoomStaticInfo {

        /** Properties of a C. */
        interface IC {

            /** C roomId */
            roomId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMfrGetRoomStaticInfo.IC);

            /** C roomId. */
            public roomId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMfrGetRoomStaticInfo.IC): NetMessage.MsgMfrGetRoomStaticInfo.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMfrGetRoomStaticInfo.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMfrGetRoomStaticInfo.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMfrGetRoomStaticInfo.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMfrGetRoomStaticInfo.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMfrGetRoomStaticInfo.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMfrGetRoomStaticInfo.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMfrGetRoomStaticInfo.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMfrGetRoomStaticInfo.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S roomId */
            roomId?: (number|null);

            /** S roomStaticInfo */
            roomStaticInfo?: (MultiFreeRoom.IMfrRoomStaticInfo|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMfrGetRoomStaticInfo.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S roomId. */
            public roomId: number;

            /** S roomStaticInfo. */
            public roomStaticInfo?: (MultiFreeRoom.IMfrRoomStaticInfo|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMfrGetRoomStaticInfo.IS): NetMessage.MsgMfrGetRoomStaticInfo.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMfrGetRoomStaticInfo.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMfrGetRoomStaticInfo.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMfrGetRoomStaticInfo.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMfrGetRoomStaticInfo.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMfrGetRoomStaticInfo.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMfrGetRoomStaticInfo.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMfrGetRoomStaticInfo.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMfrGetRoomStaticInfo.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMfrGetRoomPlayerInfo. */
    interface IMsgMfrGetRoomPlayerInfo {

        /** MsgMfrGetRoomPlayerInfo c */
        c?: (NetMessage.MsgMfrGetRoomPlayerInfo.IC|null);

        /** MsgMfrGetRoomPlayerInfo s */
        s?: (NetMessage.MsgMfrGetRoomPlayerInfo.IS|null);
    }

    /** Represents a MsgMfrGetRoomPlayerInfo. */
    class MsgMfrGetRoomPlayerInfo implements IMsgMfrGetRoomPlayerInfo {

        /**
         * Constructs a new MsgMfrGetRoomPlayerInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMfrGetRoomPlayerInfo);

        /** MsgMfrGetRoomPlayerInfo c. */
        public c?: (NetMessage.MsgMfrGetRoomPlayerInfo.IC|null);

        /** MsgMfrGetRoomPlayerInfo s. */
        public s?: (NetMessage.MsgMfrGetRoomPlayerInfo.IS|null);

        /**
         * Creates a new MsgMfrGetRoomPlayerInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMfrGetRoomPlayerInfo instance
         */
        public static create(properties?: NetMessage.IMsgMfrGetRoomPlayerInfo): NetMessage.MsgMfrGetRoomPlayerInfo;

        /**
         * Encodes the specified MsgMfrGetRoomPlayerInfo message. Does not implicitly {@link NetMessage.MsgMfrGetRoomPlayerInfo.verify|verify} messages.
         * @param message MsgMfrGetRoomPlayerInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMfrGetRoomPlayerInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMfrGetRoomPlayerInfo message, length delimited. Does not implicitly {@link NetMessage.MsgMfrGetRoomPlayerInfo.verify|verify} messages.
         * @param message MsgMfrGetRoomPlayerInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMfrGetRoomPlayerInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMfrGetRoomPlayerInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMfrGetRoomPlayerInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMfrGetRoomPlayerInfo;

        /**
         * Decodes a MsgMfrGetRoomPlayerInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMfrGetRoomPlayerInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMfrGetRoomPlayerInfo;

        /**
         * Verifies a MsgMfrGetRoomPlayerInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMfrGetRoomPlayerInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMfrGetRoomPlayerInfo
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMfrGetRoomPlayerInfo;

        /**
         * Creates a plain object from a MsgMfrGetRoomPlayerInfo message. Also converts values to other types if specified.
         * @param message MsgMfrGetRoomPlayerInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMfrGetRoomPlayerInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMfrGetRoomPlayerInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMfrGetRoomPlayerInfo {

        /** Properties of a C. */
        interface IC {

            /** C roomId */
            roomId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMfrGetRoomPlayerInfo.IC);

            /** C roomId. */
            public roomId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMfrGetRoomPlayerInfo.IC): NetMessage.MsgMfrGetRoomPlayerInfo.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMfrGetRoomPlayerInfo.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMfrGetRoomPlayerInfo.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMfrGetRoomPlayerInfo.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMfrGetRoomPlayerInfo.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMfrGetRoomPlayerInfo.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMfrGetRoomPlayerInfo.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMfrGetRoomPlayerInfo.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMfrGetRoomPlayerInfo.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S roomId */
            roomId?: (number|null);

            /** S roomPlayerInfo */
            roomPlayerInfo?: (MultiFreeRoom.IMfrRoomPlayerInfo|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMfrGetRoomPlayerInfo.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S roomId. */
            public roomId: number;

            /** S roomPlayerInfo. */
            public roomPlayerInfo?: (MultiFreeRoom.IMfrRoomPlayerInfo|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMfrGetRoomPlayerInfo.IS): NetMessage.MsgMfrGetRoomPlayerInfo.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMfrGetRoomPlayerInfo.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMfrGetRoomPlayerInfo.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMfrGetRoomPlayerInfo.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMfrGetRoomPlayerInfo.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMfrGetRoomPlayerInfo.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMfrGetRoomPlayerInfo.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMfrGetRoomPlayerInfo.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMfrGetRoomPlayerInfo.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMfrJoinRoom. */
    interface IMsgMfrJoinRoom {

        /** MsgMfrJoinRoom c */
        c?: (NetMessage.MsgMfrJoinRoom.IC|null);

        /** MsgMfrJoinRoom s */
        s?: (NetMessage.MsgMfrJoinRoom.IS|null);
    }

    /** Represents a MsgMfrJoinRoom. */
    class MsgMfrJoinRoom implements IMsgMfrJoinRoom {

        /**
         * Constructs a new MsgMfrJoinRoom.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMfrJoinRoom);

        /** MsgMfrJoinRoom c. */
        public c?: (NetMessage.MsgMfrJoinRoom.IC|null);

        /** MsgMfrJoinRoom s. */
        public s?: (NetMessage.MsgMfrJoinRoom.IS|null);

        /**
         * Creates a new MsgMfrJoinRoom instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMfrJoinRoom instance
         */
        public static create(properties?: NetMessage.IMsgMfrJoinRoom): NetMessage.MsgMfrJoinRoom;

        /**
         * Encodes the specified MsgMfrJoinRoom message. Does not implicitly {@link NetMessage.MsgMfrJoinRoom.verify|verify} messages.
         * @param message MsgMfrJoinRoom message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMfrJoinRoom, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMfrJoinRoom message, length delimited. Does not implicitly {@link NetMessage.MsgMfrJoinRoom.verify|verify} messages.
         * @param message MsgMfrJoinRoom message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMfrJoinRoom, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMfrJoinRoom message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMfrJoinRoom
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMfrJoinRoom;

        /**
         * Decodes a MsgMfrJoinRoom message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMfrJoinRoom
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMfrJoinRoom;

        /**
         * Verifies a MsgMfrJoinRoom message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMfrJoinRoom message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMfrJoinRoom
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMfrJoinRoom;

        /**
         * Creates a plain object from a MsgMfrJoinRoom message. Also converts values to other types if specified.
         * @param message MsgMfrJoinRoom
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMfrJoinRoom, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMfrJoinRoom to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMfrJoinRoom {

        /** Properties of a C. */
        interface IC {

            /** C roomId */
            roomId?: (number|null);

            /** C playerIndex */
            playerIndex?: (number|null);

            /** C isReady */
            isReady?: (boolean|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMfrJoinRoom.IC);

            /** C roomId. */
            public roomId: number;

            /** C playerIndex. */
            public playerIndex: number;

            /** C isReady. */
            public isReady: boolean;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMfrJoinRoom.IC): NetMessage.MsgMfrJoinRoom.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMfrJoinRoom.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMfrJoinRoom.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMfrJoinRoom.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMfrJoinRoom.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMfrJoinRoom.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMfrJoinRoom.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMfrJoinRoom.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMfrJoinRoom.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S roomId */
            roomId?: (number|null);

            /** S playerIndex */
            playerIndex?: (number|null);

            /** S isReady */
            isReady?: (boolean|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMfrJoinRoom.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S roomId. */
            public roomId: number;

            /** S playerIndex. */
            public playerIndex: number;

            /** S isReady. */
            public isReady: boolean;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMfrJoinRoom.IS): NetMessage.MsgMfrJoinRoom.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMfrJoinRoom.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMfrJoinRoom.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMfrJoinRoom.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMfrJoinRoom.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMfrJoinRoom.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMfrJoinRoom.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMfrJoinRoom.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMfrJoinRoom.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMfrDeleteRoom. */
    interface IMsgMfrDeleteRoom {

        /** MsgMfrDeleteRoom c */
        c?: (NetMessage.MsgMfrDeleteRoom.IC|null);

        /** MsgMfrDeleteRoom s */
        s?: (NetMessage.MsgMfrDeleteRoom.IS|null);
    }

    /** Represents a MsgMfrDeleteRoom. */
    class MsgMfrDeleteRoom implements IMsgMfrDeleteRoom {

        /**
         * Constructs a new MsgMfrDeleteRoom.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMfrDeleteRoom);

        /** MsgMfrDeleteRoom c. */
        public c?: (NetMessage.MsgMfrDeleteRoom.IC|null);

        /** MsgMfrDeleteRoom s. */
        public s?: (NetMessage.MsgMfrDeleteRoom.IS|null);

        /**
         * Creates a new MsgMfrDeleteRoom instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMfrDeleteRoom instance
         */
        public static create(properties?: NetMessage.IMsgMfrDeleteRoom): NetMessage.MsgMfrDeleteRoom;

        /**
         * Encodes the specified MsgMfrDeleteRoom message. Does not implicitly {@link NetMessage.MsgMfrDeleteRoom.verify|verify} messages.
         * @param message MsgMfrDeleteRoom message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMfrDeleteRoom, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMfrDeleteRoom message, length delimited. Does not implicitly {@link NetMessage.MsgMfrDeleteRoom.verify|verify} messages.
         * @param message MsgMfrDeleteRoom message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMfrDeleteRoom, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMfrDeleteRoom message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMfrDeleteRoom
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMfrDeleteRoom;

        /**
         * Decodes a MsgMfrDeleteRoom message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMfrDeleteRoom
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMfrDeleteRoom;

        /**
         * Verifies a MsgMfrDeleteRoom message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMfrDeleteRoom message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMfrDeleteRoom
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMfrDeleteRoom;

        /**
         * Creates a plain object from a MsgMfrDeleteRoom message. Also converts values to other types if specified.
         * @param message MsgMfrDeleteRoom
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMfrDeleteRoom, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMfrDeleteRoom to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMfrDeleteRoom {

        /** Properties of a C. */
        interface IC {

            /** C roomId */
            roomId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMfrDeleteRoom.IC);

            /** C roomId. */
            public roomId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMfrDeleteRoom.IC): NetMessage.MsgMfrDeleteRoom.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMfrDeleteRoom.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMfrDeleteRoom.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMfrDeleteRoom.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMfrDeleteRoom.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMfrDeleteRoom.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMfrDeleteRoom.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMfrDeleteRoom.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMfrDeleteRoom.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S roomId */
            roomId?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMfrDeleteRoom.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S roomId. */
            public roomId: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMfrDeleteRoom.IS): NetMessage.MsgMfrDeleteRoom.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMfrDeleteRoom.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMfrDeleteRoom.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMfrDeleteRoom.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMfrDeleteRoom.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMfrDeleteRoom.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMfrDeleteRoom.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMfrDeleteRoom.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMfrDeleteRoom.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMfrSetReady. */
    interface IMsgMfrSetReady {

        /** MsgMfrSetReady c */
        c?: (NetMessage.MsgMfrSetReady.IC|null);

        /** MsgMfrSetReady s */
        s?: (NetMessage.MsgMfrSetReady.IS|null);
    }

    /** Represents a MsgMfrSetReady. */
    class MsgMfrSetReady implements IMsgMfrSetReady {

        /**
         * Constructs a new MsgMfrSetReady.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMfrSetReady);

        /** MsgMfrSetReady c. */
        public c?: (NetMessage.MsgMfrSetReady.IC|null);

        /** MsgMfrSetReady s. */
        public s?: (NetMessage.MsgMfrSetReady.IS|null);

        /**
         * Creates a new MsgMfrSetReady instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMfrSetReady instance
         */
        public static create(properties?: NetMessage.IMsgMfrSetReady): NetMessage.MsgMfrSetReady;

        /**
         * Encodes the specified MsgMfrSetReady message. Does not implicitly {@link NetMessage.MsgMfrSetReady.verify|verify} messages.
         * @param message MsgMfrSetReady message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMfrSetReady, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMfrSetReady message, length delimited. Does not implicitly {@link NetMessage.MsgMfrSetReady.verify|verify} messages.
         * @param message MsgMfrSetReady message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMfrSetReady, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMfrSetReady message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMfrSetReady
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMfrSetReady;

        /**
         * Decodes a MsgMfrSetReady message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMfrSetReady
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMfrSetReady;

        /**
         * Verifies a MsgMfrSetReady message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMfrSetReady message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMfrSetReady
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMfrSetReady;

        /**
         * Creates a plain object from a MsgMfrSetReady message. Also converts values to other types if specified.
         * @param message MsgMfrSetReady
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMfrSetReady, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMfrSetReady to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMfrSetReady {

        /** Properties of a C. */
        interface IC {

            /** C roomId */
            roomId?: (number|null);

            /** C isReady */
            isReady?: (boolean|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMfrSetReady.IC);

            /** C roomId. */
            public roomId: number;

            /** C isReady. */
            public isReady: boolean;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMfrSetReady.IC): NetMessage.MsgMfrSetReady.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMfrSetReady.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMfrSetReady.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMfrSetReady.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMfrSetReady.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMfrSetReady.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMfrSetReady.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMfrSetReady.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMfrSetReady.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S roomId */
            roomId?: (number|null);

            /** S isReady */
            isReady?: (boolean|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMfrSetReady.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S roomId. */
            public roomId: number;

            /** S isReady. */
            public isReady: boolean;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMfrSetReady.IS): NetMessage.MsgMfrSetReady.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMfrSetReady.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMfrSetReady.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMfrSetReady.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMfrSetReady.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMfrSetReady.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMfrSetReady.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMfrSetReady.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMfrSetReady.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMfrDeletePlayer. */
    interface IMsgMfrDeletePlayer {

        /** MsgMfrDeletePlayer c */
        c?: (NetMessage.MsgMfrDeletePlayer.IC|null);

        /** MsgMfrDeletePlayer s */
        s?: (NetMessage.MsgMfrDeletePlayer.IS|null);
    }

    /** Represents a MsgMfrDeletePlayer. */
    class MsgMfrDeletePlayer implements IMsgMfrDeletePlayer {

        /**
         * Constructs a new MsgMfrDeletePlayer.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMfrDeletePlayer);

        /** MsgMfrDeletePlayer c. */
        public c?: (NetMessage.MsgMfrDeletePlayer.IC|null);

        /** MsgMfrDeletePlayer s. */
        public s?: (NetMessage.MsgMfrDeletePlayer.IS|null);

        /**
         * Creates a new MsgMfrDeletePlayer instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMfrDeletePlayer instance
         */
        public static create(properties?: NetMessage.IMsgMfrDeletePlayer): NetMessage.MsgMfrDeletePlayer;

        /**
         * Encodes the specified MsgMfrDeletePlayer message. Does not implicitly {@link NetMessage.MsgMfrDeletePlayer.verify|verify} messages.
         * @param message MsgMfrDeletePlayer message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMfrDeletePlayer, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMfrDeletePlayer message, length delimited. Does not implicitly {@link NetMessage.MsgMfrDeletePlayer.verify|verify} messages.
         * @param message MsgMfrDeletePlayer message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMfrDeletePlayer, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMfrDeletePlayer message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMfrDeletePlayer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMfrDeletePlayer;

        /**
         * Decodes a MsgMfrDeletePlayer message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMfrDeletePlayer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMfrDeletePlayer;

        /**
         * Verifies a MsgMfrDeletePlayer message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMfrDeletePlayer message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMfrDeletePlayer
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMfrDeletePlayer;

        /**
         * Creates a plain object from a MsgMfrDeletePlayer message. Also converts values to other types if specified.
         * @param message MsgMfrDeletePlayer
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMfrDeletePlayer, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMfrDeletePlayer to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMfrDeletePlayer {

        /** Properties of a C. */
        interface IC {

            /** C roomId */
            roomId?: (number|null);

            /** C playerIndex */
            playerIndex?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMfrDeletePlayer.IC);

            /** C roomId. */
            public roomId: number;

            /** C playerIndex. */
            public playerIndex: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMfrDeletePlayer.IC): NetMessage.MsgMfrDeletePlayer.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMfrDeletePlayer.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMfrDeletePlayer.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMfrDeletePlayer.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMfrDeletePlayer.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMfrDeletePlayer.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMfrDeletePlayer.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMfrDeletePlayer.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMfrDeletePlayer.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S roomId */
            roomId?: (number|null);

            /** S playerIndex */
            playerIndex?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMfrDeletePlayer.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S roomId. */
            public roomId: number;

            /** S playerIndex. */
            public playerIndex: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMfrDeletePlayer.IS): NetMessage.MsgMfrDeletePlayer.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMfrDeletePlayer.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMfrDeletePlayer.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMfrDeletePlayer.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMfrDeletePlayer.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMfrDeletePlayer.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMfrDeletePlayer.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMfrDeletePlayer.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMfrDeletePlayer.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMfrSetSelfSettings. */
    interface IMsgMfrSetSelfSettings {

        /** MsgMfrSetSelfSettings c */
        c?: (NetMessage.MsgMfrSetSelfSettings.IC|null);

        /** MsgMfrSetSelfSettings s */
        s?: (NetMessage.MsgMfrSetSelfSettings.IS|null);
    }

    /** Represents a MsgMfrSetSelfSettings. */
    class MsgMfrSetSelfSettings implements IMsgMfrSetSelfSettings {

        /**
         * Constructs a new MsgMfrSetSelfSettings.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMfrSetSelfSettings);

        /** MsgMfrSetSelfSettings c. */
        public c?: (NetMessage.MsgMfrSetSelfSettings.IC|null);

        /** MsgMfrSetSelfSettings s. */
        public s?: (NetMessage.MsgMfrSetSelfSettings.IS|null);

        /**
         * Creates a new MsgMfrSetSelfSettings instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMfrSetSelfSettings instance
         */
        public static create(properties?: NetMessage.IMsgMfrSetSelfSettings): NetMessage.MsgMfrSetSelfSettings;

        /**
         * Encodes the specified MsgMfrSetSelfSettings message. Does not implicitly {@link NetMessage.MsgMfrSetSelfSettings.verify|verify} messages.
         * @param message MsgMfrSetSelfSettings message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMfrSetSelfSettings, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMfrSetSelfSettings message, length delimited. Does not implicitly {@link NetMessage.MsgMfrSetSelfSettings.verify|verify} messages.
         * @param message MsgMfrSetSelfSettings message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMfrSetSelfSettings, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMfrSetSelfSettings message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMfrSetSelfSettings
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMfrSetSelfSettings;

        /**
         * Decodes a MsgMfrSetSelfSettings message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMfrSetSelfSettings
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMfrSetSelfSettings;

        /**
         * Verifies a MsgMfrSetSelfSettings message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMfrSetSelfSettings message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMfrSetSelfSettings
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMfrSetSelfSettings;

        /**
         * Creates a plain object from a MsgMfrSetSelfSettings message. Also converts values to other types if specified.
         * @param message MsgMfrSetSelfSettings
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMfrSetSelfSettings, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMfrSetSelfSettings to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMfrSetSelfSettings {

        /** Properties of a C. */
        interface IC {

            /** C roomId */
            roomId?: (number|null);

            /** C playerIndex */
            playerIndex?: (number|null);

            /** C coId */
            coId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMfrSetSelfSettings.IC);

            /** C roomId. */
            public roomId: number;

            /** C playerIndex. */
            public playerIndex: number;

            /** C coId. */
            public coId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMfrSetSelfSettings.IC): NetMessage.MsgMfrSetSelfSettings.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMfrSetSelfSettings.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMfrSetSelfSettings.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMfrSetSelfSettings.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMfrSetSelfSettings.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMfrSetSelfSettings.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMfrSetSelfSettings.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMfrSetSelfSettings.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMfrSetSelfSettings.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S roomId */
            roomId?: (number|null);

            /** S oldPlayerIndex */
            oldPlayerIndex?: (number|null);

            /** S newPlayerIndex */
            newPlayerIndex?: (number|null);

            /** S coId */
            coId?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMfrSetSelfSettings.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S roomId. */
            public roomId: number;

            /** S oldPlayerIndex. */
            public oldPlayerIndex: number;

            /** S newPlayerIndex. */
            public newPlayerIndex: number;

            /** S coId. */
            public coId: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMfrSetSelfSettings.IS): NetMessage.MsgMfrSetSelfSettings.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMfrSetSelfSettings.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMfrSetSelfSettings.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMfrSetSelfSettings.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMfrSetSelfSettings.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMfrSetSelfSettings.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMfrSetSelfSettings.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMfrSetSelfSettings.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMfrSetSelfSettings.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMfrStartWar. */
    interface IMsgMfrStartWar {

        /** MsgMfrStartWar c */
        c?: (NetMessage.MsgMfrStartWar.IC|null);

        /** MsgMfrStartWar s */
        s?: (NetMessage.MsgMfrStartWar.IS|null);
    }

    /** Represents a MsgMfrStartWar. */
    class MsgMfrStartWar implements IMsgMfrStartWar {

        /**
         * Constructs a new MsgMfrStartWar.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMfrStartWar);

        /** MsgMfrStartWar c. */
        public c?: (NetMessage.MsgMfrStartWar.IC|null);

        /** MsgMfrStartWar s. */
        public s?: (NetMessage.MsgMfrStartWar.IS|null);

        /**
         * Creates a new MsgMfrStartWar instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMfrStartWar instance
         */
        public static create(properties?: NetMessage.IMsgMfrStartWar): NetMessage.MsgMfrStartWar;

        /**
         * Encodes the specified MsgMfrStartWar message. Does not implicitly {@link NetMessage.MsgMfrStartWar.verify|verify} messages.
         * @param message MsgMfrStartWar message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMfrStartWar, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMfrStartWar message, length delimited. Does not implicitly {@link NetMessage.MsgMfrStartWar.verify|verify} messages.
         * @param message MsgMfrStartWar message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMfrStartWar, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMfrStartWar message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMfrStartWar
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMfrStartWar;

        /**
         * Decodes a MsgMfrStartWar message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMfrStartWar
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMfrStartWar;

        /**
         * Verifies a MsgMfrStartWar message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMfrStartWar message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMfrStartWar
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMfrStartWar;

        /**
         * Creates a plain object from a MsgMfrStartWar message. Also converts values to other types if specified.
         * @param message MsgMfrStartWar
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMfrStartWar, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMfrStartWar to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMfrStartWar {

        /** Properties of a C. */
        interface IC {

            /** C roomId */
            roomId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMfrStartWar.IC);

            /** C roomId. */
            public roomId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMfrStartWar.IC): NetMessage.MsgMfrStartWar.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMfrStartWar.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMfrStartWar.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMfrStartWar.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMfrStartWar.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMfrStartWar.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMfrStartWar.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMfrStartWar.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMfrStartWar.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S roomId */
            roomId?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMfrStartWar.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S roomId. */
            public roomId: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMfrStartWar.IS): NetMessage.MsgMfrStartWar.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMfrStartWar.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMfrStartWar.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMfrStartWar.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMfrStartWar.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMfrStartWar.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMfrStartWar.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMfrStartWar.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMfrStartWar.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgCcrCreateRoom. */
    interface IMsgCcrCreateRoom {

        /** MsgCcrCreateRoom c */
        c?: (NetMessage.MsgCcrCreateRoom.IC|null);

        /** MsgCcrCreateRoom s */
        s?: (NetMessage.MsgCcrCreateRoom.IS|null);
    }

    /** Represents a MsgCcrCreateRoom. */
    class MsgCcrCreateRoom implements IMsgCcrCreateRoom {

        /**
         * Constructs a new MsgCcrCreateRoom.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgCcrCreateRoom);

        /** MsgCcrCreateRoom c. */
        public c?: (NetMessage.MsgCcrCreateRoom.IC|null);

        /** MsgCcrCreateRoom s. */
        public s?: (NetMessage.MsgCcrCreateRoom.IS|null);

        /**
         * Creates a new MsgCcrCreateRoom instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgCcrCreateRoom instance
         */
        public static create(properties?: NetMessage.IMsgCcrCreateRoom): NetMessage.MsgCcrCreateRoom;

        /**
         * Encodes the specified MsgCcrCreateRoom message. Does not implicitly {@link NetMessage.MsgCcrCreateRoom.verify|verify} messages.
         * @param message MsgCcrCreateRoom message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgCcrCreateRoom, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgCcrCreateRoom message, length delimited. Does not implicitly {@link NetMessage.MsgCcrCreateRoom.verify|verify} messages.
         * @param message MsgCcrCreateRoom message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgCcrCreateRoom, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgCcrCreateRoom message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgCcrCreateRoom
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgCcrCreateRoom;

        /**
         * Decodes a MsgCcrCreateRoom message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgCcrCreateRoom
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgCcrCreateRoom;

        /**
         * Verifies a MsgCcrCreateRoom message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgCcrCreateRoom message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgCcrCreateRoom
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgCcrCreateRoom;

        /**
         * Creates a plain object from a MsgCcrCreateRoom message. Also converts values to other types if specified.
         * @param message MsgCcrCreateRoom
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgCcrCreateRoom, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgCcrCreateRoom to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgCcrCreateRoom {

        /** Properties of an AiSkinInfo. */
        interface IAiSkinInfo {

            /** AiSkinInfo playerIndex */
            playerIndex?: (number|null);

            /** AiSkinInfo unitAndTileSkinId */
            unitAndTileSkinId?: (number|null);
        }

        /** Represents an AiSkinInfo. */
        class AiSkinInfo implements IAiSkinInfo {

            /**
             * Constructs a new AiSkinInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgCcrCreateRoom.IAiSkinInfo);

            /** AiSkinInfo playerIndex. */
            public playerIndex: number;

            /** AiSkinInfo unitAndTileSkinId. */
            public unitAndTileSkinId: number;

            /**
             * Creates a new AiSkinInfo instance using the specified properties.
             * @param [properties] Properties to set
             * @returns AiSkinInfo instance
             */
            public static create(properties?: NetMessage.MsgCcrCreateRoom.IAiSkinInfo): NetMessage.MsgCcrCreateRoom.AiSkinInfo;

            /**
             * Encodes the specified AiSkinInfo message. Does not implicitly {@link NetMessage.MsgCcrCreateRoom.AiSkinInfo.verify|verify} messages.
             * @param message AiSkinInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgCcrCreateRoom.IAiSkinInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified AiSkinInfo message, length delimited. Does not implicitly {@link NetMessage.MsgCcrCreateRoom.AiSkinInfo.verify|verify} messages.
             * @param message AiSkinInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgCcrCreateRoom.IAiSkinInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an AiSkinInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns AiSkinInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgCcrCreateRoom.AiSkinInfo;

            /**
             * Decodes an AiSkinInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns AiSkinInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgCcrCreateRoom.AiSkinInfo;

            /**
             * Verifies an AiSkinInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an AiSkinInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns AiSkinInfo
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgCcrCreateRoom.AiSkinInfo;

            /**
             * Creates a plain object from an AiSkinInfo message. Also converts values to other types if specified.
             * @param message AiSkinInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgCcrCreateRoom.AiSkinInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this AiSkinInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a C. */
        interface IC {

            /** C settingsForCommon */
            settingsForCommon?: (WarSettings.ISettingsForCommon|null);

            /** C settingsForCcw */
            settingsForCcw?: (WarSettings.ISettingsForCcw|null);

            /** C selfPlayerIndex */
            selfPlayerIndex?: (number|null);

            /** C selfCoId */
            selfCoId?: (number|null);

            /** C selfUnitAndTileSkinId */
            selfUnitAndTileSkinId?: (number|null);

            /** C aiSkinInfoArray */
            aiSkinInfoArray?: (NetMessage.MsgCcrCreateRoom.IAiSkinInfo[]|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgCcrCreateRoom.IC);

            /** C settingsForCommon. */
            public settingsForCommon?: (WarSettings.ISettingsForCommon|null);

            /** C settingsForCcw. */
            public settingsForCcw?: (WarSettings.ISettingsForCcw|null);

            /** C selfPlayerIndex. */
            public selfPlayerIndex: number;

            /** C selfCoId. */
            public selfCoId: number;

            /** C selfUnitAndTileSkinId. */
            public selfUnitAndTileSkinId: number;

            /** C aiSkinInfoArray. */
            public aiSkinInfoArray: NetMessage.MsgCcrCreateRoom.IAiSkinInfo[];

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgCcrCreateRoom.IC): NetMessage.MsgCcrCreateRoom.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgCcrCreateRoom.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgCcrCreateRoom.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgCcrCreateRoom.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgCcrCreateRoom.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgCcrCreateRoom.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgCcrCreateRoom.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgCcrCreateRoom.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgCcrCreateRoom.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgCcrCreateRoom.IS);

            /** S errorCode. */
            public errorCode: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgCcrCreateRoom.IS): NetMessage.MsgCcrCreateRoom.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgCcrCreateRoom.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgCcrCreateRoom.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgCcrCreateRoom.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgCcrCreateRoom.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgCcrCreateRoom.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgCcrCreateRoom.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgCcrCreateRoom.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgCcrCreateRoom.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgCcrExitRoom. */
    interface IMsgCcrExitRoom {

        /** MsgCcrExitRoom c */
        c?: (NetMessage.MsgCcrExitRoom.IC|null);

        /** MsgCcrExitRoom s */
        s?: (NetMessage.MsgCcrExitRoom.IS|null);
    }

    /** Represents a MsgCcrExitRoom. */
    class MsgCcrExitRoom implements IMsgCcrExitRoom {

        /**
         * Constructs a new MsgCcrExitRoom.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgCcrExitRoom);

        /** MsgCcrExitRoom c. */
        public c?: (NetMessage.MsgCcrExitRoom.IC|null);

        /** MsgCcrExitRoom s. */
        public s?: (NetMessage.MsgCcrExitRoom.IS|null);

        /**
         * Creates a new MsgCcrExitRoom instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgCcrExitRoom instance
         */
        public static create(properties?: NetMessage.IMsgCcrExitRoom): NetMessage.MsgCcrExitRoom;

        /**
         * Encodes the specified MsgCcrExitRoom message. Does not implicitly {@link NetMessage.MsgCcrExitRoom.verify|verify} messages.
         * @param message MsgCcrExitRoom message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgCcrExitRoom, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgCcrExitRoom message, length delimited. Does not implicitly {@link NetMessage.MsgCcrExitRoom.verify|verify} messages.
         * @param message MsgCcrExitRoom message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgCcrExitRoom, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgCcrExitRoom message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgCcrExitRoom
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgCcrExitRoom;

        /**
         * Decodes a MsgCcrExitRoom message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgCcrExitRoom
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgCcrExitRoom;

        /**
         * Verifies a MsgCcrExitRoom message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgCcrExitRoom message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgCcrExitRoom
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgCcrExitRoom;

        /**
         * Creates a plain object from a MsgCcrExitRoom message. Also converts values to other types if specified.
         * @param message MsgCcrExitRoom
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgCcrExitRoom, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgCcrExitRoom to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgCcrExitRoom {

        /** Properties of a C. */
        interface IC {

            /** C roomId */
            roomId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgCcrExitRoom.IC);

            /** C roomId. */
            public roomId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgCcrExitRoom.IC): NetMessage.MsgCcrExitRoom.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgCcrExitRoom.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgCcrExitRoom.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgCcrExitRoom.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgCcrExitRoom.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgCcrExitRoom.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgCcrExitRoom.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgCcrExitRoom.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgCcrExitRoom.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S roomId */
            roomId?: (number|null);

            /** S exitType */
            exitType?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgCcrExitRoom.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S roomId. */
            public roomId: number;

            /** S exitType. */
            public exitType: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgCcrExitRoom.IS): NetMessage.MsgCcrExitRoom.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgCcrExitRoom.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgCcrExitRoom.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgCcrExitRoom.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgCcrExitRoom.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgCcrExitRoom.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgCcrExitRoom.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgCcrExitRoom.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgCcrExitRoom.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgCcrGetJoinedRoomIdArray. */
    interface IMsgCcrGetJoinedRoomIdArray {

        /** MsgCcrGetJoinedRoomIdArray c */
        c?: (NetMessage.MsgCcrGetJoinedRoomIdArray.IC|null);

        /** MsgCcrGetJoinedRoomIdArray s */
        s?: (NetMessage.MsgCcrGetJoinedRoomIdArray.IS|null);
    }

    /** Represents a MsgCcrGetJoinedRoomIdArray. */
    class MsgCcrGetJoinedRoomIdArray implements IMsgCcrGetJoinedRoomIdArray {

        /**
         * Constructs a new MsgCcrGetJoinedRoomIdArray.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgCcrGetJoinedRoomIdArray);

        /** MsgCcrGetJoinedRoomIdArray c. */
        public c?: (NetMessage.MsgCcrGetJoinedRoomIdArray.IC|null);

        /** MsgCcrGetJoinedRoomIdArray s. */
        public s?: (NetMessage.MsgCcrGetJoinedRoomIdArray.IS|null);

        /**
         * Creates a new MsgCcrGetJoinedRoomIdArray instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgCcrGetJoinedRoomIdArray instance
         */
        public static create(properties?: NetMessage.IMsgCcrGetJoinedRoomIdArray): NetMessage.MsgCcrGetJoinedRoomIdArray;

        /**
         * Encodes the specified MsgCcrGetJoinedRoomIdArray message. Does not implicitly {@link NetMessage.MsgCcrGetJoinedRoomIdArray.verify|verify} messages.
         * @param message MsgCcrGetJoinedRoomIdArray message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgCcrGetJoinedRoomIdArray, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgCcrGetJoinedRoomIdArray message, length delimited. Does not implicitly {@link NetMessage.MsgCcrGetJoinedRoomIdArray.verify|verify} messages.
         * @param message MsgCcrGetJoinedRoomIdArray message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgCcrGetJoinedRoomIdArray, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgCcrGetJoinedRoomIdArray message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgCcrGetJoinedRoomIdArray
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgCcrGetJoinedRoomIdArray;

        /**
         * Decodes a MsgCcrGetJoinedRoomIdArray message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgCcrGetJoinedRoomIdArray
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgCcrGetJoinedRoomIdArray;

        /**
         * Verifies a MsgCcrGetJoinedRoomIdArray message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgCcrGetJoinedRoomIdArray message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgCcrGetJoinedRoomIdArray
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgCcrGetJoinedRoomIdArray;

        /**
         * Creates a plain object from a MsgCcrGetJoinedRoomIdArray message. Also converts values to other types if specified.
         * @param message MsgCcrGetJoinedRoomIdArray
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgCcrGetJoinedRoomIdArray, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgCcrGetJoinedRoomIdArray to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgCcrGetJoinedRoomIdArray {

        /** Properties of a C. */
        interface IC {
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgCcrGetJoinedRoomIdArray.IC);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgCcrGetJoinedRoomIdArray.IC): NetMessage.MsgCcrGetJoinedRoomIdArray.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgCcrGetJoinedRoomIdArray.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgCcrGetJoinedRoomIdArray.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgCcrGetJoinedRoomIdArray.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgCcrGetJoinedRoomIdArray.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgCcrGetJoinedRoomIdArray.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgCcrGetJoinedRoomIdArray.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgCcrGetJoinedRoomIdArray.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgCcrGetJoinedRoomIdArray.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S roomIdArray */
            roomIdArray?: (number[]|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgCcrGetJoinedRoomIdArray.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S roomIdArray. */
            public roomIdArray: number[];

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgCcrGetJoinedRoomIdArray.IS): NetMessage.MsgCcrGetJoinedRoomIdArray.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgCcrGetJoinedRoomIdArray.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgCcrGetJoinedRoomIdArray.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgCcrGetJoinedRoomIdArray.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgCcrGetJoinedRoomIdArray.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgCcrGetJoinedRoomIdArray.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgCcrGetJoinedRoomIdArray.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgCcrGetJoinedRoomIdArray.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgCcrGetJoinedRoomIdArray.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgCcrGetRoomStaticInfo. */
    interface IMsgCcrGetRoomStaticInfo {

        /** MsgCcrGetRoomStaticInfo c */
        c?: (NetMessage.MsgCcrGetRoomStaticInfo.IC|null);

        /** MsgCcrGetRoomStaticInfo s */
        s?: (NetMessage.MsgCcrGetRoomStaticInfo.IS|null);
    }

    /** Represents a MsgCcrGetRoomStaticInfo. */
    class MsgCcrGetRoomStaticInfo implements IMsgCcrGetRoomStaticInfo {

        /**
         * Constructs a new MsgCcrGetRoomStaticInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgCcrGetRoomStaticInfo);

        /** MsgCcrGetRoomStaticInfo c. */
        public c?: (NetMessage.MsgCcrGetRoomStaticInfo.IC|null);

        /** MsgCcrGetRoomStaticInfo s. */
        public s?: (NetMessage.MsgCcrGetRoomStaticInfo.IS|null);

        /**
         * Creates a new MsgCcrGetRoomStaticInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgCcrGetRoomStaticInfo instance
         */
        public static create(properties?: NetMessage.IMsgCcrGetRoomStaticInfo): NetMessage.MsgCcrGetRoomStaticInfo;

        /**
         * Encodes the specified MsgCcrGetRoomStaticInfo message. Does not implicitly {@link NetMessage.MsgCcrGetRoomStaticInfo.verify|verify} messages.
         * @param message MsgCcrGetRoomStaticInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgCcrGetRoomStaticInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgCcrGetRoomStaticInfo message, length delimited. Does not implicitly {@link NetMessage.MsgCcrGetRoomStaticInfo.verify|verify} messages.
         * @param message MsgCcrGetRoomStaticInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgCcrGetRoomStaticInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgCcrGetRoomStaticInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgCcrGetRoomStaticInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgCcrGetRoomStaticInfo;

        /**
         * Decodes a MsgCcrGetRoomStaticInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgCcrGetRoomStaticInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgCcrGetRoomStaticInfo;

        /**
         * Verifies a MsgCcrGetRoomStaticInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgCcrGetRoomStaticInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgCcrGetRoomStaticInfo
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgCcrGetRoomStaticInfo;

        /**
         * Creates a plain object from a MsgCcrGetRoomStaticInfo message. Also converts values to other types if specified.
         * @param message MsgCcrGetRoomStaticInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgCcrGetRoomStaticInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgCcrGetRoomStaticInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgCcrGetRoomStaticInfo {

        /** Properties of a C. */
        interface IC {

            /** C roomId */
            roomId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgCcrGetRoomStaticInfo.IC);

            /** C roomId. */
            public roomId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgCcrGetRoomStaticInfo.IC): NetMessage.MsgCcrGetRoomStaticInfo.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgCcrGetRoomStaticInfo.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgCcrGetRoomStaticInfo.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgCcrGetRoomStaticInfo.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgCcrGetRoomStaticInfo.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgCcrGetRoomStaticInfo.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgCcrGetRoomStaticInfo.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgCcrGetRoomStaticInfo.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgCcrGetRoomStaticInfo.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S roomId */
            roomId?: (number|null);

            /** S roomStaticInfo */
            roomStaticInfo?: (CoopCustomRoom.ICcrRoomStaticInfo|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgCcrGetRoomStaticInfo.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S roomId. */
            public roomId: number;

            /** S roomStaticInfo. */
            public roomStaticInfo?: (CoopCustomRoom.ICcrRoomStaticInfo|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgCcrGetRoomStaticInfo.IS): NetMessage.MsgCcrGetRoomStaticInfo.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgCcrGetRoomStaticInfo.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgCcrGetRoomStaticInfo.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgCcrGetRoomStaticInfo.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgCcrGetRoomStaticInfo.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgCcrGetRoomStaticInfo.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgCcrGetRoomStaticInfo.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgCcrGetRoomStaticInfo.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgCcrGetRoomStaticInfo.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgCcrGetRoomPlayerInfo. */
    interface IMsgCcrGetRoomPlayerInfo {

        /** MsgCcrGetRoomPlayerInfo c */
        c?: (NetMessage.MsgCcrGetRoomPlayerInfo.IC|null);

        /** MsgCcrGetRoomPlayerInfo s */
        s?: (NetMessage.MsgCcrGetRoomPlayerInfo.IS|null);
    }

    /** Represents a MsgCcrGetRoomPlayerInfo. */
    class MsgCcrGetRoomPlayerInfo implements IMsgCcrGetRoomPlayerInfo {

        /**
         * Constructs a new MsgCcrGetRoomPlayerInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgCcrGetRoomPlayerInfo);

        /** MsgCcrGetRoomPlayerInfo c. */
        public c?: (NetMessage.MsgCcrGetRoomPlayerInfo.IC|null);

        /** MsgCcrGetRoomPlayerInfo s. */
        public s?: (NetMessage.MsgCcrGetRoomPlayerInfo.IS|null);

        /**
         * Creates a new MsgCcrGetRoomPlayerInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgCcrGetRoomPlayerInfo instance
         */
        public static create(properties?: NetMessage.IMsgCcrGetRoomPlayerInfo): NetMessage.MsgCcrGetRoomPlayerInfo;

        /**
         * Encodes the specified MsgCcrGetRoomPlayerInfo message. Does not implicitly {@link NetMessage.MsgCcrGetRoomPlayerInfo.verify|verify} messages.
         * @param message MsgCcrGetRoomPlayerInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgCcrGetRoomPlayerInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgCcrGetRoomPlayerInfo message, length delimited. Does not implicitly {@link NetMessage.MsgCcrGetRoomPlayerInfo.verify|verify} messages.
         * @param message MsgCcrGetRoomPlayerInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgCcrGetRoomPlayerInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgCcrGetRoomPlayerInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgCcrGetRoomPlayerInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgCcrGetRoomPlayerInfo;

        /**
         * Decodes a MsgCcrGetRoomPlayerInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgCcrGetRoomPlayerInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgCcrGetRoomPlayerInfo;

        /**
         * Verifies a MsgCcrGetRoomPlayerInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgCcrGetRoomPlayerInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgCcrGetRoomPlayerInfo
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgCcrGetRoomPlayerInfo;

        /**
         * Creates a plain object from a MsgCcrGetRoomPlayerInfo message. Also converts values to other types if specified.
         * @param message MsgCcrGetRoomPlayerInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgCcrGetRoomPlayerInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgCcrGetRoomPlayerInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgCcrGetRoomPlayerInfo {

        /** Properties of a C. */
        interface IC {

            /** C roomId */
            roomId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgCcrGetRoomPlayerInfo.IC);

            /** C roomId. */
            public roomId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgCcrGetRoomPlayerInfo.IC): NetMessage.MsgCcrGetRoomPlayerInfo.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgCcrGetRoomPlayerInfo.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgCcrGetRoomPlayerInfo.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgCcrGetRoomPlayerInfo.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgCcrGetRoomPlayerInfo.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgCcrGetRoomPlayerInfo.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgCcrGetRoomPlayerInfo.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgCcrGetRoomPlayerInfo.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgCcrGetRoomPlayerInfo.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S roomId */
            roomId?: (number|null);

            /** S roomPlayerInfo */
            roomPlayerInfo?: (CoopCustomRoom.ICcrRoomPlayerInfo|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgCcrGetRoomPlayerInfo.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S roomId. */
            public roomId: number;

            /** S roomPlayerInfo. */
            public roomPlayerInfo?: (CoopCustomRoom.ICcrRoomPlayerInfo|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgCcrGetRoomPlayerInfo.IS): NetMessage.MsgCcrGetRoomPlayerInfo.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgCcrGetRoomPlayerInfo.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgCcrGetRoomPlayerInfo.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgCcrGetRoomPlayerInfo.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgCcrGetRoomPlayerInfo.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgCcrGetRoomPlayerInfo.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgCcrGetRoomPlayerInfo.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgCcrGetRoomPlayerInfo.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgCcrGetRoomPlayerInfo.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgCcrGetJoinableRoomIdArray. */
    interface IMsgCcrGetJoinableRoomIdArray {

        /** MsgCcrGetJoinableRoomIdArray c */
        c?: (NetMessage.MsgCcrGetJoinableRoomIdArray.IC|null);

        /** MsgCcrGetJoinableRoomIdArray s */
        s?: (NetMessage.MsgCcrGetJoinableRoomIdArray.IS|null);
    }

    /** Represents a MsgCcrGetJoinableRoomIdArray. */
    class MsgCcrGetJoinableRoomIdArray implements IMsgCcrGetJoinableRoomIdArray {

        /**
         * Constructs a new MsgCcrGetJoinableRoomIdArray.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgCcrGetJoinableRoomIdArray);

        /** MsgCcrGetJoinableRoomIdArray c. */
        public c?: (NetMessage.MsgCcrGetJoinableRoomIdArray.IC|null);

        /** MsgCcrGetJoinableRoomIdArray s. */
        public s?: (NetMessage.MsgCcrGetJoinableRoomIdArray.IS|null);

        /**
         * Creates a new MsgCcrGetJoinableRoomIdArray instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgCcrGetJoinableRoomIdArray instance
         */
        public static create(properties?: NetMessage.IMsgCcrGetJoinableRoomIdArray): NetMessage.MsgCcrGetJoinableRoomIdArray;

        /**
         * Encodes the specified MsgCcrGetJoinableRoomIdArray message. Does not implicitly {@link NetMessage.MsgCcrGetJoinableRoomIdArray.verify|verify} messages.
         * @param message MsgCcrGetJoinableRoomIdArray message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgCcrGetJoinableRoomIdArray, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgCcrGetJoinableRoomIdArray message, length delimited. Does not implicitly {@link NetMessage.MsgCcrGetJoinableRoomIdArray.verify|verify} messages.
         * @param message MsgCcrGetJoinableRoomIdArray message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgCcrGetJoinableRoomIdArray, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgCcrGetJoinableRoomIdArray message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgCcrGetJoinableRoomIdArray
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgCcrGetJoinableRoomIdArray;

        /**
         * Decodes a MsgCcrGetJoinableRoomIdArray message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgCcrGetJoinableRoomIdArray
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgCcrGetJoinableRoomIdArray;

        /**
         * Verifies a MsgCcrGetJoinableRoomIdArray message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgCcrGetJoinableRoomIdArray message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgCcrGetJoinableRoomIdArray
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgCcrGetJoinableRoomIdArray;

        /**
         * Creates a plain object from a MsgCcrGetJoinableRoomIdArray message. Also converts values to other types if specified.
         * @param message MsgCcrGetJoinableRoomIdArray
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgCcrGetJoinableRoomIdArray, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgCcrGetJoinableRoomIdArray to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgCcrGetJoinableRoomIdArray {

        /** Properties of a C. */
        interface IC {

            /** C roomFilter */
            roomFilter?: (CoopCustomRoom.ICcrRoomFilter|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgCcrGetJoinableRoomIdArray.IC);

            /** C roomFilter. */
            public roomFilter?: (CoopCustomRoom.ICcrRoomFilter|null);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgCcrGetJoinableRoomIdArray.IC): NetMessage.MsgCcrGetJoinableRoomIdArray.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgCcrGetJoinableRoomIdArray.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgCcrGetJoinableRoomIdArray.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgCcrGetJoinableRoomIdArray.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgCcrGetJoinableRoomIdArray.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgCcrGetJoinableRoomIdArray.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgCcrGetJoinableRoomIdArray.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgCcrGetJoinableRoomIdArray.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgCcrGetJoinableRoomIdArray.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S roomIdArray */
            roomIdArray?: (number[]|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgCcrGetJoinableRoomIdArray.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S roomIdArray. */
            public roomIdArray: number[];

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgCcrGetJoinableRoomIdArray.IS): NetMessage.MsgCcrGetJoinableRoomIdArray.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgCcrGetJoinableRoomIdArray.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgCcrGetJoinableRoomIdArray.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgCcrGetJoinableRoomIdArray.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgCcrGetJoinableRoomIdArray.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgCcrGetJoinableRoomIdArray.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgCcrGetJoinableRoomIdArray.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgCcrGetJoinableRoomIdArray.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgCcrGetJoinableRoomIdArray.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgCcrJoinRoom. */
    interface IMsgCcrJoinRoom {

        /** MsgCcrJoinRoom c */
        c?: (NetMessage.MsgCcrJoinRoom.IC|null);

        /** MsgCcrJoinRoom s */
        s?: (NetMessage.MsgCcrJoinRoom.IS|null);
    }

    /** Represents a MsgCcrJoinRoom. */
    class MsgCcrJoinRoom implements IMsgCcrJoinRoom {

        /**
         * Constructs a new MsgCcrJoinRoom.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgCcrJoinRoom);

        /** MsgCcrJoinRoom c. */
        public c?: (NetMessage.MsgCcrJoinRoom.IC|null);

        /** MsgCcrJoinRoom s. */
        public s?: (NetMessage.MsgCcrJoinRoom.IS|null);

        /**
         * Creates a new MsgCcrJoinRoom instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgCcrJoinRoom instance
         */
        public static create(properties?: NetMessage.IMsgCcrJoinRoom): NetMessage.MsgCcrJoinRoom;

        /**
         * Encodes the specified MsgCcrJoinRoom message. Does not implicitly {@link NetMessage.MsgCcrJoinRoom.verify|verify} messages.
         * @param message MsgCcrJoinRoom message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgCcrJoinRoom, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgCcrJoinRoom message, length delimited. Does not implicitly {@link NetMessage.MsgCcrJoinRoom.verify|verify} messages.
         * @param message MsgCcrJoinRoom message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgCcrJoinRoom, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgCcrJoinRoom message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgCcrJoinRoom
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgCcrJoinRoom;

        /**
         * Decodes a MsgCcrJoinRoom message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgCcrJoinRoom
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgCcrJoinRoom;

        /**
         * Verifies a MsgCcrJoinRoom message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgCcrJoinRoom message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgCcrJoinRoom
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgCcrJoinRoom;

        /**
         * Creates a plain object from a MsgCcrJoinRoom message. Also converts values to other types if specified.
         * @param message MsgCcrJoinRoom
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgCcrJoinRoom, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgCcrJoinRoom to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgCcrJoinRoom {

        /** Properties of a C. */
        interface IC {

            /** C roomId */
            roomId?: (number|null);

            /** C playerIndex */
            playerIndex?: (number|null);

            /** C coId */
            coId?: (number|null);

            /** C isReady */
            isReady?: (boolean|null);

            /** C unitAndTileSkinId */
            unitAndTileSkinId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgCcrJoinRoom.IC);

            /** C roomId. */
            public roomId: number;

            /** C playerIndex. */
            public playerIndex: number;

            /** C coId. */
            public coId: number;

            /** C isReady. */
            public isReady: boolean;

            /** C unitAndTileSkinId. */
            public unitAndTileSkinId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgCcrJoinRoom.IC): NetMessage.MsgCcrJoinRoom.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgCcrJoinRoom.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgCcrJoinRoom.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgCcrJoinRoom.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgCcrJoinRoom.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgCcrJoinRoom.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgCcrJoinRoom.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgCcrJoinRoom.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgCcrJoinRoom.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S roomId */
            roomId?: (number|null);

            /** S playerIndex */
            playerIndex?: (number|null);

            /** S coId */
            coId?: (number|null);

            /** S isReady */
            isReady?: (boolean|null);

            /** S unitAndTileSkinId */
            unitAndTileSkinId?: (number|null);

            /** S userId */
            userId?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgCcrJoinRoom.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S roomId. */
            public roomId: number;

            /** S playerIndex. */
            public playerIndex: number;

            /** S coId. */
            public coId: number;

            /** S isReady. */
            public isReady: boolean;

            /** S unitAndTileSkinId. */
            public unitAndTileSkinId: number;

            /** S userId. */
            public userId: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgCcrJoinRoom.IS): NetMessage.MsgCcrJoinRoom.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgCcrJoinRoom.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgCcrJoinRoom.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgCcrJoinRoom.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgCcrJoinRoom.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgCcrJoinRoom.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgCcrJoinRoom.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgCcrJoinRoom.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgCcrJoinRoom.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgCcrDeleteRoom. */
    interface IMsgCcrDeleteRoom {

        /** MsgCcrDeleteRoom c */
        c?: (NetMessage.MsgCcrDeleteRoom.IC|null);

        /** MsgCcrDeleteRoom s */
        s?: (NetMessage.MsgCcrDeleteRoom.IS|null);
    }

    /** Represents a MsgCcrDeleteRoom. */
    class MsgCcrDeleteRoom implements IMsgCcrDeleteRoom {

        /**
         * Constructs a new MsgCcrDeleteRoom.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgCcrDeleteRoom);

        /** MsgCcrDeleteRoom c. */
        public c?: (NetMessage.MsgCcrDeleteRoom.IC|null);

        /** MsgCcrDeleteRoom s. */
        public s?: (NetMessage.MsgCcrDeleteRoom.IS|null);

        /**
         * Creates a new MsgCcrDeleteRoom instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgCcrDeleteRoom instance
         */
        public static create(properties?: NetMessage.IMsgCcrDeleteRoom): NetMessage.MsgCcrDeleteRoom;

        /**
         * Encodes the specified MsgCcrDeleteRoom message. Does not implicitly {@link NetMessage.MsgCcrDeleteRoom.verify|verify} messages.
         * @param message MsgCcrDeleteRoom message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgCcrDeleteRoom, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgCcrDeleteRoom message, length delimited. Does not implicitly {@link NetMessage.MsgCcrDeleteRoom.verify|verify} messages.
         * @param message MsgCcrDeleteRoom message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgCcrDeleteRoom, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgCcrDeleteRoom message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgCcrDeleteRoom
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgCcrDeleteRoom;

        /**
         * Decodes a MsgCcrDeleteRoom message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgCcrDeleteRoom
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgCcrDeleteRoom;

        /**
         * Verifies a MsgCcrDeleteRoom message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgCcrDeleteRoom message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgCcrDeleteRoom
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgCcrDeleteRoom;

        /**
         * Creates a plain object from a MsgCcrDeleteRoom message. Also converts values to other types if specified.
         * @param message MsgCcrDeleteRoom
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgCcrDeleteRoom, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgCcrDeleteRoom to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgCcrDeleteRoom {

        /** Properties of a C. */
        interface IC {

            /** C roomId */
            roomId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgCcrDeleteRoom.IC);

            /** C roomId. */
            public roomId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgCcrDeleteRoom.IC): NetMessage.MsgCcrDeleteRoom.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgCcrDeleteRoom.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgCcrDeleteRoom.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgCcrDeleteRoom.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgCcrDeleteRoom.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgCcrDeleteRoom.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgCcrDeleteRoom.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgCcrDeleteRoom.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgCcrDeleteRoom.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S roomId */
            roomId?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgCcrDeleteRoom.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S roomId. */
            public roomId: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgCcrDeleteRoom.IS): NetMessage.MsgCcrDeleteRoom.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgCcrDeleteRoom.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgCcrDeleteRoom.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgCcrDeleteRoom.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgCcrDeleteRoom.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgCcrDeleteRoom.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgCcrDeleteRoom.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgCcrDeleteRoom.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgCcrDeleteRoom.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgCcrSetReady. */
    interface IMsgCcrSetReady {

        /** MsgCcrSetReady c */
        c?: (NetMessage.MsgCcrSetReady.IC|null);

        /** MsgCcrSetReady s */
        s?: (NetMessage.MsgCcrSetReady.IS|null);
    }

    /** Represents a MsgCcrSetReady. */
    class MsgCcrSetReady implements IMsgCcrSetReady {

        /**
         * Constructs a new MsgCcrSetReady.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgCcrSetReady);

        /** MsgCcrSetReady c. */
        public c?: (NetMessage.MsgCcrSetReady.IC|null);

        /** MsgCcrSetReady s. */
        public s?: (NetMessage.MsgCcrSetReady.IS|null);

        /**
         * Creates a new MsgCcrSetReady instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgCcrSetReady instance
         */
        public static create(properties?: NetMessage.IMsgCcrSetReady): NetMessage.MsgCcrSetReady;

        /**
         * Encodes the specified MsgCcrSetReady message. Does not implicitly {@link NetMessage.MsgCcrSetReady.verify|verify} messages.
         * @param message MsgCcrSetReady message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgCcrSetReady, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgCcrSetReady message, length delimited. Does not implicitly {@link NetMessage.MsgCcrSetReady.verify|verify} messages.
         * @param message MsgCcrSetReady message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgCcrSetReady, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgCcrSetReady message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgCcrSetReady
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgCcrSetReady;

        /**
         * Decodes a MsgCcrSetReady message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgCcrSetReady
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgCcrSetReady;

        /**
         * Verifies a MsgCcrSetReady message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgCcrSetReady message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgCcrSetReady
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgCcrSetReady;

        /**
         * Creates a plain object from a MsgCcrSetReady message. Also converts values to other types if specified.
         * @param message MsgCcrSetReady
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgCcrSetReady, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgCcrSetReady to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgCcrSetReady {

        /** Properties of a C. */
        interface IC {

            /** C roomId */
            roomId?: (number|null);

            /** C isReady */
            isReady?: (boolean|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgCcrSetReady.IC);

            /** C roomId. */
            public roomId: number;

            /** C isReady. */
            public isReady: boolean;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgCcrSetReady.IC): NetMessage.MsgCcrSetReady.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgCcrSetReady.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgCcrSetReady.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgCcrSetReady.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgCcrSetReady.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgCcrSetReady.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgCcrSetReady.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgCcrSetReady.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgCcrSetReady.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S roomId */
            roomId?: (number|null);

            /** S isReady */
            isReady?: (boolean|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgCcrSetReady.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S roomId. */
            public roomId: number;

            /** S isReady. */
            public isReady: boolean;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgCcrSetReady.IS): NetMessage.MsgCcrSetReady.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgCcrSetReady.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgCcrSetReady.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgCcrSetReady.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgCcrSetReady.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgCcrSetReady.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgCcrSetReady.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgCcrSetReady.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgCcrSetReady.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgCcrDeletePlayer. */
    interface IMsgCcrDeletePlayer {

        /** MsgCcrDeletePlayer c */
        c?: (NetMessage.MsgCcrDeletePlayer.IC|null);

        /** MsgCcrDeletePlayer s */
        s?: (NetMessage.MsgCcrDeletePlayer.IS|null);
    }

    /** Represents a MsgCcrDeletePlayer. */
    class MsgCcrDeletePlayer implements IMsgCcrDeletePlayer {

        /**
         * Constructs a new MsgCcrDeletePlayer.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgCcrDeletePlayer);

        /** MsgCcrDeletePlayer c. */
        public c?: (NetMessage.MsgCcrDeletePlayer.IC|null);

        /** MsgCcrDeletePlayer s. */
        public s?: (NetMessage.MsgCcrDeletePlayer.IS|null);

        /**
         * Creates a new MsgCcrDeletePlayer instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgCcrDeletePlayer instance
         */
        public static create(properties?: NetMessage.IMsgCcrDeletePlayer): NetMessage.MsgCcrDeletePlayer;

        /**
         * Encodes the specified MsgCcrDeletePlayer message. Does not implicitly {@link NetMessage.MsgCcrDeletePlayer.verify|verify} messages.
         * @param message MsgCcrDeletePlayer message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgCcrDeletePlayer, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgCcrDeletePlayer message, length delimited. Does not implicitly {@link NetMessage.MsgCcrDeletePlayer.verify|verify} messages.
         * @param message MsgCcrDeletePlayer message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgCcrDeletePlayer, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgCcrDeletePlayer message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgCcrDeletePlayer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgCcrDeletePlayer;

        /**
         * Decodes a MsgCcrDeletePlayer message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgCcrDeletePlayer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgCcrDeletePlayer;

        /**
         * Verifies a MsgCcrDeletePlayer message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgCcrDeletePlayer message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgCcrDeletePlayer
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgCcrDeletePlayer;

        /**
         * Creates a plain object from a MsgCcrDeletePlayer message. Also converts values to other types if specified.
         * @param message MsgCcrDeletePlayer
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgCcrDeletePlayer, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgCcrDeletePlayer to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgCcrDeletePlayer {

        /** Properties of a C. */
        interface IC {

            /** C roomId */
            roomId?: (number|null);

            /** C playerIndex */
            playerIndex?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgCcrDeletePlayer.IC);

            /** C roomId. */
            public roomId: number;

            /** C playerIndex. */
            public playerIndex: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgCcrDeletePlayer.IC): NetMessage.MsgCcrDeletePlayer.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgCcrDeletePlayer.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgCcrDeletePlayer.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgCcrDeletePlayer.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgCcrDeletePlayer.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgCcrDeletePlayer.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgCcrDeletePlayer.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgCcrDeletePlayer.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgCcrDeletePlayer.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S roomId */
            roomId?: (number|null);

            /** S playerIndex */
            playerIndex?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgCcrDeletePlayer.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S roomId. */
            public roomId: number;

            /** S playerIndex. */
            public playerIndex: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgCcrDeletePlayer.IS): NetMessage.MsgCcrDeletePlayer.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgCcrDeletePlayer.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgCcrDeletePlayer.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgCcrDeletePlayer.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgCcrDeletePlayer.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgCcrDeletePlayer.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgCcrDeletePlayer.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgCcrDeletePlayer.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgCcrDeletePlayer.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgCcrSetSelfSettings. */
    interface IMsgCcrSetSelfSettings {

        /** MsgCcrSetSelfSettings c */
        c?: (NetMessage.MsgCcrSetSelfSettings.IC|null);

        /** MsgCcrSetSelfSettings s */
        s?: (NetMessage.MsgCcrSetSelfSettings.IS|null);
    }

    /** Represents a MsgCcrSetSelfSettings. */
    class MsgCcrSetSelfSettings implements IMsgCcrSetSelfSettings {

        /**
         * Constructs a new MsgCcrSetSelfSettings.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgCcrSetSelfSettings);

        /** MsgCcrSetSelfSettings c. */
        public c?: (NetMessage.MsgCcrSetSelfSettings.IC|null);

        /** MsgCcrSetSelfSettings s. */
        public s?: (NetMessage.MsgCcrSetSelfSettings.IS|null);

        /**
         * Creates a new MsgCcrSetSelfSettings instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgCcrSetSelfSettings instance
         */
        public static create(properties?: NetMessage.IMsgCcrSetSelfSettings): NetMessage.MsgCcrSetSelfSettings;

        /**
         * Encodes the specified MsgCcrSetSelfSettings message. Does not implicitly {@link NetMessage.MsgCcrSetSelfSettings.verify|verify} messages.
         * @param message MsgCcrSetSelfSettings message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgCcrSetSelfSettings, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgCcrSetSelfSettings message, length delimited. Does not implicitly {@link NetMessage.MsgCcrSetSelfSettings.verify|verify} messages.
         * @param message MsgCcrSetSelfSettings message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgCcrSetSelfSettings, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgCcrSetSelfSettings message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgCcrSetSelfSettings
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgCcrSetSelfSettings;

        /**
         * Decodes a MsgCcrSetSelfSettings message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgCcrSetSelfSettings
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgCcrSetSelfSettings;

        /**
         * Verifies a MsgCcrSetSelfSettings message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgCcrSetSelfSettings message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgCcrSetSelfSettings
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgCcrSetSelfSettings;

        /**
         * Creates a plain object from a MsgCcrSetSelfSettings message. Also converts values to other types if specified.
         * @param message MsgCcrSetSelfSettings
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgCcrSetSelfSettings, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgCcrSetSelfSettings to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgCcrSetSelfSettings {

        /** Properties of a C. */
        interface IC {

            /** C roomId */
            roomId?: (number|null);

            /** C playerIndex */
            playerIndex?: (number|null);

            /** C coId */
            coId?: (number|null);

            /** C unitAndTileSkinId */
            unitAndTileSkinId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgCcrSetSelfSettings.IC);

            /** C roomId. */
            public roomId: number;

            /** C playerIndex. */
            public playerIndex: number;

            /** C coId. */
            public coId: number;

            /** C unitAndTileSkinId. */
            public unitAndTileSkinId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgCcrSetSelfSettings.IC): NetMessage.MsgCcrSetSelfSettings.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgCcrSetSelfSettings.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgCcrSetSelfSettings.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgCcrSetSelfSettings.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgCcrSetSelfSettings.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgCcrSetSelfSettings.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgCcrSetSelfSettings.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgCcrSetSelfSettings.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgCcrSetSelfSettings.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S roomId */
            roomId?: (number|null);

            /** S oldPlayerIndex */
            oldPlayerIndex?: (number|null);

            /** S newPlayerIndex */
            newPlayerIndex?: (number|null);

            /** S coId */
            coId?: (number|null);

            /** S unitAndTileSkinId */
            unitAndTileSkinId?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgCcrSetSelfSettings.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S roomId. */
            public roomId: number;

            /** S oldPlayerIndex. */
            public oldPlayerIndex: number;

            /** S newPlayerIndex. */
            public newPlayerIndex: number;

            /** S coId. */
            public coId: number;

            /** S unitAndTileSkinId. */
            public unitAndTileSkinId: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgCcrSetSelfSettings.IS): NetMessage.MsgCcrSetSelfSettings.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgCcrSetSelfSettings.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgCcrSetSelfSettings.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgCcrSetSelfSettings.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgCcrSetSelfSettings.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgCcrSetSelfSettings.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgCcrSetSelfSettings.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgCcrSetSelfSettings.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgCcrSetSelfSettings.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgCcrStartWar. */
    interface IMsgCcrStartWar {

        /** MsgCcrStartWar c */
        c?: (NetMessage.MsgCcrStartWar.IC|null);

        /** MsgCcrStartWar s */
        s?: (NetMessage.MsgCcrStartWar.IS|null);
    }

    /** Represents a MsgCcrStartWar. */
    class MsgCcrStartWar implements IMsgCcrStartWar {

        /**
         * Constructs a new MsgCcrStartWar.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgCcrStartWar);

        /** MsgCcrStartWar c. */
        public c?: (NetMessage.MsgCcrStartWar.IC|null);

        /** MsgCcrStartWar s. */
        public s?: (NetMessage.MsgCcrStartWar.IS|null);

        /**
         * Creates a new MsgCcrStartWar instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgCcrStartWar instance
         */
        public static create(properties?: NetMessage.IMsgCcrStartWar): NetMessage.MsgCcrStartWar;

        /**
         * Encodes the specified MsgCcrStartWar message. Does not implicitly {@link NetMessage.MsgCcrStartWar.verify|verify} messages.
         * @param message MsgCcrStartWar message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgCcrStartWar, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgCcrStartWar message, length delimited. Does not implicitly {@link NetMessage.MsgCcrStartWar.verify|verify} messages.
         * @param message MsgCcrStartWar message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgCcrStartWar, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgCcrStartWar message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgCcrStartWar
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgCcrStartWar;

        /**
         * Decodes a MsgCcrStartWar message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgCcrStartWar
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgCcrStartWar;

        /**
         * Verifies a MsgCcrStartWar message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgCcrStartWar message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgCcrStartWar
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgCcrStartWar;

        /**
         * Creates a plain object from a MsgCcrStartWar message. Also converts values to other types if specified.
         * @param message MsgCcrStartWar
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgCcrStartWar, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgCcrStartWar to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgCcrStartWar {

        /** Properties of a C. */
        interface IC {

            /** C roomId */
            roomId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgCcrStartWar.IC);

            /** C roomId. */
            public roomId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgCcrStartWar.IC): NetMessage.MsgCcrStartWar.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgCcrStartWar.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgCcrStartWar.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgCcrStartWar.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgCcrStartWar.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgCcrStartWar.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgCcrStartWar.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgCcrStartWar.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgCcrStartWar.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S roomId */
            roomId?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgCcrStartWar.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S roomId. */
            public roomId: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgCcrStartWar.IS): NetMessage.MsgCcrStartWar.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgCcrStartWar.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgCcrStartWar.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgCcrStartWar.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgCcrStartWar.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgCcrStartWar.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgCcrStartWar.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgCcrStartWar.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgCcrStartWar.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgLbSpmOverallGetTopDataArray. */
    interface IMsgLbSpmOverallGetTopDataArray {

        /** MsgLbSpmOverallGetTopDataArray c */
        c?: (NetMessage.MsgLbSpmOverallGetTopDataArray.IC|null);

        /** MsgLbSpmOverallGetTopDataArray s */
        s?: (NetMessage.MsgLbSpmOverallGetTopDataArray.IS|null);
    }

    /** Represents a MsgLbSpmOverallGetTopDataArray. */
    class MsgLbSpmOverallGetTopDataArray implements IMsgLbSpmOverallGetTopDataArray {

        /**
         * Constructs a new MsgLbSpmOverallGetTopDataArray.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgLbSpmOverallGetTopDataArray);

        /** MsgLbSpmOverallGetTopDataArray c. */
        public c?: (NetMessage.MsgLbSpmOverallGetTopDataArray.IC|null);

        /** MsgLbSpmOverallGetTopDataArray s. */
        public s?: (NetMessage.MsgLbSpmOverallGetTopDataArray.IS|null);

        /**
         * Creates a new MsgLbSpmOverallGetTopDataArray instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgLbSpmOverallGetTopDataArray instance
         */
        public static create(properties?: NetMessage.IMsgLbSpmOverallGetTopDataArray): NetMessage.MsgLbSpmOverallGetTopDataArray;

        /**
         * Encodes the specified MsgLbSpmOverallGetTopDataArray message. Does not implicitly {@link NetMessage.MsgLbSpmOverallGetTopDataArray.verify|verify} messages.
         * @param message MsgLbSpmOverallGetTopDataArray message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgLbSpmOverallGetTopDataArray, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgLbSpmOverallGetTopDataArray message, length delimited. Does not implicitly {@link NetMessage.MsgLbSpmOverallGetTopDataArray.verify|verify} messages.
         * @param message MsgLbSpmOverallGetTopDataArray message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgLbSpmOverallGetTopDataArray, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgLbSpmOverallGetTopDataArray message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgLbSpmOverallGetTopDataArray
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgLbSpmOverallGetTopDataArray;

        /**
         * Decodes a MsgLbSpmOverallGetTopDataArray message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgLbSpmOverallGetTopDataArray
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgLbSpmOverallGetTopDataArray;

        /**
         * Verifies a MsgLbSpmOverallGetTopDataArray message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgLbSpmOverallGetTopDataArray message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgLbSpmOverallGetTopDataArray
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgLbSpmOverallGetTopDataArray;

        /**
         * Creates a plain object from a MsgLbSpmOverallGetTopDataArray message. Also converts values to other types if specified.
         * @param message MsgLbSpmOverallGetTopDataArray
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgLbSpmOverallGetTopDataArray, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgLbSpmOverallGetTopDataArray to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgLbSpmOverallGetTopDataArray {

        /** Properties of a C. */
        interface IC {
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgLbSpmOverallGetTopDataArray.IC);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgLbSpmOverallGetTopDataArray.IC): NetMessage.MsgLbSpmOverallGetTopDataArray.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgLbSpmOverallGetTopDataArray.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgLbSpmOverallGetTopDataArray.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgLbSpmOverallGetTopDataArray.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgLbSpmOverallGetTopDataArray.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgLbSpmOverallGetTopDataArray.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgLbSpmOverallGetTopDataArray.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgLbSpmOverallGetTopDataArray.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgLbSpmOverallGetTopDataArray.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S dataArray */
            dataArray?: (Leaderboard.LeaderboardSpmOverall.ISingleData[]|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgLbSpmOverallGetTopDataArray.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S dataArray. */
            public dataArray: Leaderboard.LeaderboardSpmOverall.ISingleData[];

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgLbSpmOverallGetTopDataArray.IS): NetMessage.MsgLbSpmOverallGetTopDataArray.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgLbSpmOverallGetTopDataArray.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgLbSpmOverallGetTopDataArray.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgLbSpmOverallGetTopDataArray.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgLbSpmOverallGetTopDataArray.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgLbSpmOverallGetTopDataArray.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgLbSpmOverallGetTopDataArray.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgLbSpmOverallGetTopDataArray.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgLbSpmOverallGetTopDataArray.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgLbSpmOverallGetRankIndex. */
    interface IMsgLbSpmOverallGetRankIndex {

        /** MsgLbSpmOverallGetRankIndex c */
        c?: (NetMessage.MsgLbSpmOverallGetRankIndex.IC|null);

        /** MsgLbSpmOverallGetRankIndex s */
        s?: (NetMessage.MsgLbSpmOverallGetRankIndex.IS|null);
    }

    /** Represents a MsgLbSpmOverallGetRankIndex. */
    class MsgLbSpmOverallGetRankIndex implements IMsgLbSpmOverallGetRankIndex {

        /**
         * Constructs a new MsgLbSpmOverallGetRankIndex.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgLbSpmOverallGetRankIndex);

        /** MsgLbSpmOverallGetRankIndex c. */
        public c?: (NetMessage.MsgLbSpmOverallGetRankIndex.IC|null);

        /** MsgLbSpmOverallGetRankIndex s. */
        public s?: (NetMessage.MsgLbSpmOverallGetRankIndex.IS|null);

        /**
         * Creates a new MsgLbSpmOverallGetRankIndex instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgLbSpmOverallGetRankIndex instance
         */
        public static create(properties?: NetMessage.IMsgLbSpmOverallGetRankIndex): NetMessage.MsgLbSpmOverallGetRankIndex;

        /**
         * Encodes the specified MsgLbSpmOverallGetRankIndex message. Does not implicitly {@link NetMessage.MsgLbSpmOverallGetRankIndex.verify|verify} messages.
         * @param message MsgLbSpmOverallGetRankIndex message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgLbSpmOverallGetRankIndex, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgLbSpmOverallGetRankIndex message, length delimited. Does not implicitly {@link NetMessage.MsgLbSpmOverallGetRankIndex.verify|verify} messages.
         * @param message MsgLbSpmOverallGetRankIndex message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgLbSpmOverallGetRankIndex, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgLbSpmOverallGetRankIndex message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgLbSpmOverallGetRankIndex
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgLbSpmOverallGetRankIndex;

        /**
         * Decodes a MsgLbSpmOverallGetRankIndex message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgLbSpmOverallGetRankIndex
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgLbSpmOverallGetRankIndex;

        /**
         * Verifies a MsgLbSpmOverallGetRankIndex message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgLbSpmOverallGetRankIndex message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgLbSpmOverallGetRankIndex
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgLbSpmOverallGetRankIndex;

        /**
         * Creates a plain object from a MsgLbSpmOverallGetRankIndex message. Also converts values to other types if specified.
         * @param message MsgLbSpmOverallGetRankIndex
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgLbSpmOverallGetRankIndex, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgLbSpmOverallGetRankIndex to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgLbSpmOverallGetRankIndex {

        /** Properties of a C. */
        interface IC {

            /** C userId */
            userId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgLbSpmOverallGetRankIndex.IC);

            /** C userId. */
            public userId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgLbSpmOverallGetRankIndex.IC): NetMessage.MsgLbSpmOverallGetRankIndex.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgLbSpmOverallGetRankIndex.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgLbSpmOverallGetRankIndex.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgLbSpmOverallGetRankIndex.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgLbSpmOverallGetRankIndex.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgLbSpmOverallGetRankIndex.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgLbSpmOverallGetRankIndex.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgLbSpmOverallGetRankIndex.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgLbSpmOverallGetRankIndex.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S userId */
            userId?: (number|null);

            /** S rankIndex */
            rankIndex?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgLbSpmOverallGetRankIndex.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S userId. */
            public userId: number;

            /** S rankIndex. */
            public rankIndex: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgLbSpmOverallGetRankIndex.IS): NetMessage.MsgLbSpmOverallGetRankIndex.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgLbSpmOverallGetRankIndex.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgLbSpmOverallGetRankIndex.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgLbSpmOverallGetRankIndex.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgLbSpmOverallGetRankIndex.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgLbSpmOverallGetRankIndex.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgLbSpmOverallGetRankIndex.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgLbSpmOverallGetRankIndex.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgLbSpmOverallGetRankIndex.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }
}
}
