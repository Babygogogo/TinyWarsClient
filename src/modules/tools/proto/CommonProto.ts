

/** Namespace CommonProto. */
declare namespace CommonProto {

    /** Properties of a Config. */
    interface IConfig {
    }

    /** Represents a Config. */
    class Config implements IConfig {

        /**
         * Constructs a new Config.
         * @param [properties] Properties to set
         */
        constructor(properties?: CommonProto.IConfig);

        /**
         * Creates a new Config instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Config instance
         */
        public static create(properties?: CommonProto.IConfig): CommonProto.Config;

        /**
         * Encodes the specified Config message. Does not implicitly {@link CommonProto.Config.verify|verify} messages.
         * @param message Config message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: CommonProto.IConfig, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified Config message, length delimited. Does not implicitly {@link CommonProto.Config.verify|verify} messages.
         * @param message Config message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: CommonProto.IConfig, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a Config message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Config
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.Config;

        /**
         * Decodes a Config message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Config
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.Config;

        /**
         * Verifies a Config message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Config message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Config
         */
        public static fromObject(object: { [k: string]: any }): CommonProto.Config;

        /**
         * Creates a plain object from a Config message. Also converts values to other types if specified.
         * @param message Config
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: CommonProto.Config, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Config to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace Config {

        /** Properties of a SystemCfg. */
        interface ISystemCfg {

            /** SystemCfg energyGrowthMultiplierArray */
            energyGrowthMultiplierArray?: (number[]|null);

            /** SystemCfg maxBanCount */
            maxBanCount?: (number|null);

            /** SystemCfg dialogueBackgroundMaxId */
            dialogueBackgroundMaxId?: (number|null);

            /** SystemCfg isUnitHpRoundedUpWhenHealed */
            isUnitHpRoundedUpWhenHealed?: (number|null);

            /** SystemCfg isLoadedUnitVisibleInFog */
            isLoadedUnitVisibleInFog?: (number|null);

            /** SystemCfg canDroppedUnitGetVisionOnStart */
            canDroppedUnitGetVisionOnStart?: (number|null);
        }

        /** Represents a SystemCfg. */
        class SystemCfg implements ISystemCfg {

            /**
             * Constructs a new SystemCfg.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.Config.ISystemCfg);

            /** SystemCfg energyGrowthMultiplierArray. */
            public energyGrowthMultiplierArray: number[];

            /** SystemCfg maxBanCount. */
            public maxBanCount: number;

            /** SystemCfg dialogueBackgroundMaxId. */
            public dialogueBackgroundMaxId: number;

            /** SystemCfg isUnitHpRoundedUpWhenHealed. */
            public isUnitHpRoundedUpWhenHealed: number;

            /** SystemCfg isLoadedUnitVisibleInFog. */
            public isLoadedUnitVisibleInFog: number;

            /** SystemCfg canDroppedUnitGetVisionOnStart. */
            public canDroppedUnitGetVisionOnStart: number;

            /**
             * Creates a new SystemCfg instance using the specified properties.
             * @param [properties] Properties to set
             * @returns SystemCfg instance
             */
            public static create(properties?: CommonProto.Config.ISystemCfg): CommonProto.Config.SystemCfg;

            /**
             * Encodes the specified SystemCfg message. Does not implicitly {@link CommonProto.Config.SystemCfg.verify|verify} messages.
             * @param message SystemCfg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.Config.ISystemCfg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified SystemCfg message, length delimited. Does not implicitly {@link CommonProto.Config.SystemCfg.verify|verify} messages.
             * @param message SystemCfg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.Config.ISystemCfg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a SystemCfg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SystemCfg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.Config.SystemCfg;

            /**
             * Decodes a SystemCfg message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SystemCfg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.Config.SystemCfg;

            /**
             * Verifies a SystemCfg message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SystemCfg message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SystemCfg
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.Config.SystemCfg;

            /**
             * Creates a plain object from a SystemCfg message. Also converts values to other types if specified.
             * @param message SystemCfg
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.Config.SystemCfg, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SystemCfg to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a TileCategoryCfg. */
        interface ITileCategoryCfg {

            /** TileCategoryCfg category */
            category?: (number|null);

            /** TileCategoryCfg tileTypes */
            tileTypes?: (number[]|null);
        }

        /** Represents a TileCategoryCfg. */
        class TileCategoryCfg implements ITileCategoryCfg {

            /**
             * Constructs a new TileCategoryCfg.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.Config.ITileCategoryCfg);

            /** TileCategoryCfg category. */
            public category: number;

            /** TileCategoryCfg tileTypes. */
            public tileTypes: number[];

            /**
             * Creates a new TileCategoryCfg instance using the specified properties.
             * @param [properties] Properties to set
             * @returns TileCategoryCfg instance
             */
            public static create(properties?: CommonProto.Config.ITileCategoryCfg): CommonProto.Config.TileCategoryCfg;

            /**
             * Encodes the specified TileCategoryCfg message. Does not implicitly {@link CommonProto.Config.TileCategoryCfg.verify|verify} messages.
             * @param message TileCategoryCfg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.Config.ITileCategoryCfg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified TileCategoryCfg message, length delimited. Does not implicitly {@link CommonProto.Config.TileCategoryCfg.verify|verify} messages.
             * @param message TileCategoryCfg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.Config.ITileCategoryCfg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a TileCategoryCfg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns TileCategoryCfg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.Config.TileCategoryCfg;

            /**
             * Decodes a TileCategoryCfg message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns TileCategoryCfg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.Config.TileCategoryCfg;

            /**
             * Verifies a TileCategoryCfg message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a TileCategoryCfg message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns TileCategoryCfg
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.Config.TileCategoryCfg;

            /**
             * Creates a plain object from a TileCategoryCfg message. Also converts values to other types if specified.
             * @param message TileCategoryCfg
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.Config.TileCategoryCfg, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this TileCategoryCfg to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an UnitCategoryCfg. */
        interface IUnitCategoryCfg {

            /** UnitCategoryCfg category */
            category?: (number|null);

            /** UnitCategoryCfg unitTypes */
            unitTypes?: (number[]|null);

            /** UnitCategoryCfg lang */
            lang?: (number|null);
        }

        /** Represents an UnitCategoryCfg. */
        class UnitCategoryCfg implements IUnitCategoryCfg {

            /**
             * Constructs a new UnitCategoryCfg.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.Config.IUnitCategoryCfg);

            /** UnitCategoryCfg category. */
            public category: number;

            /** UnitCategoryCfg unitTypes. */
            public unitTypes: number[];

            /** UnitCategoryCfg lang. */
            public lang: number;

            /**
             * Creates a new UnitCategoryCfg instance using the specified properties.
             * @param [properties] Properties to set
             * @returns UnitCategoryCfg instance
             */
            public static create(properties?: CommonProto.Config.IUnitCategoryCfg): CommonProto.Config.UnitCategoryCfg;

            /**
             * Encodes the specified UnitCategoryCfg message. Does not implicitly {@link CommonProto.Config.UnitCategoryCfg.verify|verify} messages.
             * @param message UnitCategoryCfg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.Config.IUnitCategoryCfg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified UnitCategoryCfg message, length delimited. Does not implicitly {@link CommonProto.Config.UnitCategoryCfg.verify|verify} messages.
             * @param message UnitCategoryCfg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.Config.IUnitCategoryCfg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an UnitCategoryCfg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns UnitCategoryCfg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.Config.UnitCategoryCfg;

            /**
             * Decodes an UnitCategoryCfg message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns UnitCategoryCfg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.Config.UnitCategoryCfg;

            /**
             * Verifies an UnitCategoryCfg message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an UnitCategoryCfg message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns UnitCategoryCfg
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.Config.UnitCategoryCfg;

            /**
             * Creates a plain object from an UnitCategoryCfg message. Also converts values to other types if specified.
             * @param message UnitCategoryCfg
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.Config.UnitCategoryCfg, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this UnitCategoryCfg to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a WeatherCategoryCfg. */
        interface IWeatherCategoryCfg {

            /** WeatherCategoryCfg category */
            category?: (number|null);

            /** WeatherCategoryCfg weatherTypes */
            weatherTypes?: (number[]|null);
        }

        /** Represents a WeatherCategoryCfg. */
        class WeatherCategoryCfg implements IWeatherCategoryCfg {

            /**
             * Constructs a new WeatherCategoryCfg.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.Config.IWeatherCategoryCfg);

            /** WeatherCategoryCfg category. */
            public category: number;

            /** WeatherCategoryCfg weatherTypes. */
            public weatherTypes: number[];

            /**
             * Creates a new WeatherCategoryCfg instance using the specified properties.
             * @param [properties] Properties to set
             * @returns WeatherCategoryCfg instance
             */
            public static create(properties?: CommonProto.Config.IWeatherCategoryCfg): CommonProto.Config.WeatherCategoryCfg;

            /**
             * Encodes the specified WeatherCategoryCfg message. Does not implicitly {@link CommonProto.Config.WeatherCategoryCfg.verify|verify} messages.
             * @param message WeatherCategoryCfg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.Config.IWeatherCategoryCfg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified WeatherCategoryCfg message, length delimited. Does not implicitly {@link CommonProto.Config.WeatherCategoryCfg.verify|verify} messages.
             * @param message WeatherCategoryCfg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.Config.IWeatherCategoryCfg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a WeatherCategoryCfg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns WeatherCategoryCfg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.Config.WeatherCategoryCfg;

            /**
             * Decodes a WeatherCategoryCfg message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns WeatherCategoryCfg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.Config.WeatherCategoryCfg;

            /**
             * Verifies a WeatherCategoryCfg message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a WeatherCategoryCfg message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns WeatherCategoryCfg
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.Config.WeatherCategoryCfg;

            /**
             * Creates a plain object from a WeatherCategoryCfg message. Also converts values to other types if specified.
             * @param message WeatherCategoryCfg
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.Config.WeatherCategoryCfg, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this WeatherCategoryCfg to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a TileTemplateCfg. */
        interface ITileTemplateCfg {

            /** TileTemplateCfg type */
            type?: (number|null);

            /** TileTemplateCfg defenseAmount */
            defenseAmount?: (number|null);

            /** TileTemplateCfg defenseUnitCategory */
            defenseUnitCategory?: (number|null);

            /** TileTemplateCfg maxBuildPoint */
            maxBuildPoint?: (number|null);

            /** TileTemplateCfg maxCapturePoint */
            maxCapturePoint?: (number|null);

            /** TileTemplateCfg isDefeatedOnCapture */
            isDefeatedOnCapture?: (number|null);

            /** TileTemplateCfg isAlwaysShowOwner */
            isAlwaysShowOwner?: (number|null);

            /** TileTemplateCfg repairAmount */
            repairAmount?: (number|null);

            /** TileTemplateCfg repairUnitCategory */
            repairUnitCategory?: (number|null);

            /** TileTemplateCfg incomePerTurn */
            incomePerTurn?: (number|null);

            /** TileTemplateCfg visionRange */
            visionRange?: (number|null);

            /** TileTemplateCfg isVisionEnabledForAllPlayers */
            isVisionEnabledForAllPlayers?: (number|null);

            /** TileTemplateCfg hideUnitCategory */
            hideUnitCategory?: (number|null);

            /** TileTemplateCfg isDestroyedWithAdjacentMeteor */
            isDestroyedWithAdjacentMeteor?: (number|null);

            /** TileTemplateCfg produceUnitCategory */
            produceUnitCategory?: (number|null);

            /** TileTemplateCfg globalAttackBonus */
            globalAttackBonus?: (number|null);

            /** TileTemplateCfg globalDefenseBonus */
            globalDefenseBonus?: (number|null);

            /** TileTemplateCfg maxHp */
            maxHp?: (number|null);

            /** TileTemplateCfg armorType */
            armorType?: (number|null);

            /** TileTemplateCfg isAffectedByLuck */
            isAffectedByLuck?: (number|null);

            /** TileTemplateCfg destroyConnectedTypeWhenDestroyed */
            destroyConnectedTypeWhenDestroyed?: (number|null);

            /** TileTemplateCfg loadCoUnitCategory */
            loadCoUnitCategory?: (number|null);

            /** TileTemplateCfg blockEnemyUnitCategory */
            blockEnemyUnitCategory?: (number|null);

            /** TileTemplateCfg mapWeaponType */
            mapWeaponType?: (number|null);

            /** TileTemplateCfg lang */
            lang?: (number|null);

            /** TileTemplateCfg canConnectRoad */
            canConnectRoad?: (number|null);

            /** TileTemplateCfg sortWeightForTileChart */
            sortWeightForTileChart?: (number|null);

            /** TileTemplateCfg sortWeightForDamageChart */
            sortWeightForDamageChart?: (number|null);

            /** TileTemplateCfg sortWeightForMapInfo */
            sortWeightForMapInfo?: (number|null);

            /** TileTemplateCfg toTileBaseType */
            toTileBaseType?: (number|null);

            /** TileTemplateCfg toTileObjectType */
            toTileObjectType?: (number|null);

            /** TileTemplateCfg aiScoreForCapture */
            aiScoreForCapture?: (number|null);

            /** TileTemplateCfg aiScoreForStay */
            aiScoreForStay?: (number[]|null);
        }

        /** Represents a TileTemplateCfg. */
        class TileTemplateCfg implements ITileTemplateCfg {

            /**
             * Constructs a new TileTemplateCfg.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.Config.ITileTemplateCfg);

            /** TileTemplateCfg type. */
            public type: number;

            /** TileTemplateCfg defenseAmount. */
            public defenseAmount: number;

            /** TileTemplateCfg defenseUnitCategory. */
            public defenseUnitCategory: number;

            /** TileTemplateCfg maxBuildPoint. */
            public maxBuildPoint: number;

            /** TileTemplateCfg maxCapturePoint. */
            public maxCapturePoint: number;

            /** TileTemplateCfg isDefeatedOnCapture. */
            public isDefeatedOnCapture: number;

            /** TileTemplateCfg isAlwaysShowOwner. */
            public isAlwaysShowOwner: number;

            /** TileTemplateCfg repairAmount. */
            public repairAmount: number;

            /** TileTemplateCfg repairUnitCategory. */
            public repairUnitCategory: number;

            /** TileTemplateCfg incomePerTurn. */
            public incomePerTurn: number;

            /** TileTemplateCfg visionRange. */
            public visionRange: number;

            /** TileTemplateCfg isVisionEnabledForAllPlayers. */
            public isVisionEnabledForAllPlayers: number;

            /** TileTemplateCfg hideUnitCategory. */
            public hideUnitCategory: number;

            /** TileTemplateCfg isDestroyedWithAdjacentMeteor. */
            public isDestroyedWithAdjacentMeteor: number;

            /** TileTemplateCfg produceUnitCategory. */
            public produceUnitCategory: number;

            /** TileTemplateCfg globalAttackBonus. */
            public globalAttackBonus: number;

            /** TileTemplateCfg globalDefenseBonus. */
            public globalDefenseBonus: number;

            /** TileTemplateCfg maxHp. */
            public maxHp: number;

            /** TileTemplateCfg armorType. */
            public armorType: number;

            /** TileTemplateCfg isAffectedByLuck. */
            public isAffectedByLuck: number;

            /** TileTemplateCfg destroyConnectedTypeWhenDestroyed. */
            public destroyConnectedTypeWhenDestroyed: number;

            /** TileTemplateCfg loadCoUnitCategory. */
            public loadCoUnitCategory: number;

            /** TileTemplateCfg blockEnemyUnitCategory. */
            public blockEnemyUnitCategory: number;

            /** TileTemplateCfg mapWeaponType. */
            public mapWeaponType: number;

            /** TileTemplateCfg lang. */
            public lang: number;

            /** TileTemplateCfg canConnectRoad. */
            public canConnectRoad: number;

            /** TileTemplateCfg sortWeightForTileChart. */
            public sortWeightForTileChart: number;

            /** TileTemplateCfg sortWeightForDamageChart. */
            public sortWeightForDamageChart: number;

            /** TileTemplateCfg sortWeightForMapInfo. */
            public sortWeightForMapInfo: number;

            /** TileTemplateCfg toTileBaseType. */
            public toTileBaseType: number;

            /** TileTemplateCfg toTileObjectType. */
            public toTileObjectType: number;

            /** TileTemplateCfg aiScoreForCapture. */
            public aiScoreForCapture: number;

            /** TileTemplateCfg aiScoreForStay. */
            public aiScoreForStay: number[];

            /**
             * Creates a new TileTemplateCfg instance using the specified properties.
             * @param [properties] Properties to set
             * @returns TileTemplateCfg instance
             */
            public static create(properties?: CommonProto.Config.ITileTemplateCfg): CommonProto.Config.TileTemplateCfg;

            /**
             * Encodes the specified TileTemplateCfg message. Does not implicitly {@link CommonProto.Config.TileTemplateCfg.verify|verify} messages.
             * @param message TileTemplateCfg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.Config.ITileTemplateCfg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified TileTemplateCfg message, length delimited. Does not implicitly {@link CommonProto.Config.TileTemplateCfg.verify|verify} messages.
             * @param message TileTemplateCfg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.Config.ITileTemplateCfg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a TileTemplateCfg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns TileTemplateCfg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.Config.TileTemplateCfg;

            /**
             * Decodes a TileTemplateCfg message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns TileTemplateCfg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.Config.TileTemplateCfg;

            /**
             * Verifies a TileTemplateCfg message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a TileTemplateCfg message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns TileTemplateCfg
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.Config.TileTemplateCfg;

            /**
             * Creates a plain object from a TileTemplateCfg message. Also converts values to other types if specified.
             * @param message TileTemplateCfg
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.Config.TileTemplateCfg, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this TileTemplateCfg to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a TileBaseCfg. */
        interface ITileBaseCfg {

            /** TileBaseCfg tileBaseType */
            tileBaseType?: (number|null);

            /** TileBaseCfg shapesCount */
            shapesCount?: (number|null);

            /** TileBaseCfg isEnabled */
            isEnabled?: (number|null);

            /** TileBaseCfg isDefault */
            isDefault?: (number|null);

            /** TileBaseCfg animParams */
            animParams?: (number[]|null);

            /** TileBaseCfg animParamsForV0 */
            animParamsForV0?: (number[]|null);
        }

        /** Represents a TileBaseCfg. */
        class TileBaseCfg implements ITileBaseCfg {

            /**
             * Constructs a new TileBaseCfg.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.Config.ITileBaseCfg);

            /** TileBaseCfg tileBaseType. */
            public tileBaseType: number;

            /** TileBaseCfg shapesCount. */
            public shapesCount: number;

            /** TileBaseCfg isEnabled. */
            public isEnabled: number;

            /** TileBaseCfg isDefault. */
            public isDefault: number;

            /** TileBaseCfg animParams. */
            public animParams: number[];

            /** TileBaseCfg animParamsForV0. */
            public animParamsForV0: number[];

            /**
             * Creates a new TileBaseCfg instance using the specified properties.
             * @param [properties] Properties to set
             * @returns TileBaseCfg instance
             */
            public static create(properties?: CommonProto.Config.ITileBaseCfg): CommonProto.Config.TileBaseCfg;

            /**
             * Encodes the specified TileBaseCfg message. Does not implicitly {@link CommonProto.Config.TileBaseCfg.verify|verify} messages.
             * @param message TileBaseCfg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.Config.ITileBaseCfg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified TileBaseCfg message, length delimited. Does not implicitly {@link CommonProto.Config.TileBaseCfg.verify|verify} messages.
             * @param message TileBaseCfg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.Config.ITileBaseCfg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a TileBaseCfg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns TileBaseCfg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.Config.TileBaseCfg;

            /**
             * Decodes a TileBaseCfg message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns TileBaseCfg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.Config.TileBaseCfg;

            /**
             * Verifies a TileBaseCfg message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a TileBaseCfg message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns TileBaseCfg
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.Config.TileBaseCfg;

            /**
             * Creates a plain object from a TileBaseCfg message. Also converts values to other types if specified.
             * @param message TileBaseCfg
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.Config.TileBaseCfg, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this TileBaseCfg to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a TileBaseSymmetryCfg. */
        interface ITileBaseSymmetryCfg {

            /** TileBaseSymmetryCfg tileBaseType */
            tileBaseType?: (number|null);

            /** TileBaseSymmetryCfg shapeId */
            shapeId?: (number|null);

            /** TileBaseSymmetryCfg symmetryShapeIds */
            symmetryShapeIds?: (number[]|null);
        }

        /** Represents a TileBaseSymmetryCfg. */
        class TileBaseSymmetryCfg implements ITileBaseSymmetryCfg {

            /**
             * Constructs a new TileBaseSymmetryCfg.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.Config.ITileBaseSymmetryCfg);

            /** TileBaseSymmetryCfg tileBaseType. */
            public tileBaseType: number;

            /** TileBaseSymmetryCfg shapeId. */
            public shapeId: number;

            /** TileBaseSymmetryCfg symmetryShapeIds. */
            public symmetryShapeIds: number[];

            /**
             * Creates a new TileBaseSymmetryCfg instance using the specified properties.
             * @param [properties] Properties to set
             * @returns TileBaseSymmetryCfg instance
             */
            public static create(properties?: CommonProto.Config.ITileBaseSymmetryCfg): CommonProto.Config.TileBaseSymmetryCfg;

            /**
             * Encodes the specified TileBaseSymmetryCfg message. Does not implicitly {@link CommonProto.Config.TileBaseSymmetryCfg.verify|verify} messages.
             * @param message TileBaseSymmetryCfg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.Config.ITileBaseSymmetryCfg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified TileBaseSymmetryCfg message, length delimited. Does not implicitly {@link CommonProto.Config.TileBaseSymmetryCfg.verify|verify} messages.
             * @param message TileBaseSymmetryCfg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.Config.ITileBaseSymmetryCfg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a TileBaseSymmetryCfg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns TileBaseSymmetryCfg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.Config.TileBaseSymmetryCfg;

            /**
             * Decodes a TileBaseSymmetryCfg message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns TileBaseSymmetryCfg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.Config.TileBaseSymmetryCfg;

            /**
             * Verifies a TileBaseSymmetryCfg message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a TileBaseSymmetryCfg message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns TileBaseSymmetryCfg
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.Config.TileBaseSymmetryCfg;

            /**
             * Creates a plain object from a TileBaseSymmetryCfg message. Also converts values to other types if specified.
             * @param message TileBaseSymmetryCfg
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.Config.TileBaseSymmetryCfg, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this TileBaseSymmetryCfg to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a TileObjectCfg. */
        interface ITileObjectCfg {

            /** TileObjectCfg tileObjectType */
            tileObjectType?: (number|null);

            /** TileObjectCfg shapeIdAfterDestruction */
            shapeIdAfterDestruction?: (number[]|null);

            /** TileObjectCfg playerIndexRange */
            playerIndexRange?: (number[]|null);

            /** TileObjectCfg shapesCount */
            shapesCount?: (number|null);

            /** TileObjectCfg shapesCountForV0 */
            shapesCountForV0?: (number|null);

            /** TileObjectCfg sortWeight */
            sortWeight?: (number|null);

            /** TileObjectCfg typeAfterOwnerChange */
            typeAfterOwnerChange?: (number|null);

            /** TileObjectCfg launchSiloParams */
            launchSiloParams?: (number[]|null);

            /** TileObjectCfg lang */
            lang?: (number|null);

            /** TileObjectCfg animParams */
            animParams?: (number[]|null);

            /** TileObjectCfg animParamsForV0 */
            animParamsForV0?: (number[]|null);

            /** TileObjectCfg symmetryTypes */
            symmetryTypes?: (number[]|null);
        }

        /** Represents a TileObjectCfg. */
        class TileObjectCfg implements ITileObjectCfg {

            /**
             * Constructs a new TileObjectCfg.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.Config.ITileObjectCfg);

            /** TileObjectCfg tileObjectType. */
            public tileObjectType: number;

            /** TileObjectCfg shapeIdAfterDestruction. */
            public shapeIdAfterDestruction: number[];

            /** TileObjectCfg playerIndexRange. */
            public playerIndexRange: number[];

            /** TileObjectCfg shapesCount. */
            public shapesCount: number;

            /** TileObjectCfg shapesCountForV0. */
            public shapesCountForV0: number;

            /** TileObjectCfg sortWeight. */
            public sortWeight: number;

            /** TileObjectCfg typeAfterOwnerChange. */
            public typeAfterOwnerChange: number;

            /** TileObjectCfg launchSiloParams. */
            public launchSiloParams: number[];

            /** TileObjectCfg lang. */
            public lang: number;

            /** TileObjectCfg animParams. */
            public animParams: number[];

            /** TileObjectCfg animParamsForV0. */
            public animParamsForV0: number[];

            /** TileObjectCfg symmetryTypes. */
            public symmetryTypes: number[];

            /**
             * Creates a new TileObjectCfg instance using the specified properties.
             * @param [properties] Properties to set
             * @returns TileObjectCfg instance
             */
            public static create(properties?: CommonProto.Config.ITileObjectCfg): CommonProto.Config.TileObjectCfg;

            /**
             * Encodes the specified TileObjectCfg message. Does not implicitly {@link CommonProto.Config.TileObjectCfg.verify|verify} messages.
             * @param message TileObjectCfg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.Config.ITileObjectCfg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified TileObjectCfg message, length delimited. Does not implicitly {@link CommonProto.Config.TileObjectCfg.verify|verify} messages.
             * @param message TileObjectCfg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.Config.ITileObjectCfg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a TileObjectCfg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns TileObjectCfg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.Config.TileObjectCfg;

            /**
             * Decodes a TileObjectCfg message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns TileObjectCfg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.Config.TileObjectCfg;

            /**
             * Verifies a TileObjectCfg message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a TileObjectCfg message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns TileObjectCfg
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.Config.TileObjectCfg;

            /**
             * Creates a plain object from a TileObjectCfg message. Also converts values to other types if specified.
             * @param message TileObjectCfg
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.Config.TileObjectCfg, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this TileObjectCfg to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a TileObjectSymmetryCfg. */
        interface ITileObjectSymmetryCfg {

            /** TileObjectSymmetryCfg tileObjectType */
            tileObjectType?: (number|null);

            /** TileObjectSymmetryCfg shapeId */
            shapeId?: (number|null);

            /** TileObjectSymmetryCfg symmetryShapeIds */
            symmetryShapeIds?: (number[]|null);
        }

        /** Represents a TileObjectSymmetryCfg. */
        class TileObjectSymmetryCfg implements ITileObjectSymmetryCfg {

            /**
             * Constructs a new TileObjectSymmetryCfg.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.Config.ITileObjectSymmetryCfg);

            /** TileObjectSymmetryCfg tileObjectType. */
            public tileObjectType: number;

            /** TileObjectSymmetryCfg shapeId. */
            public shapeId: number;

            /** TileObjectSymmetryCfg symmetryShapeIds. */
            public symmetryShapeIds: number[];

            /**
             * Creates a new TileObjectSymmetryCfg instance using the specified properties.
             * @param [properties] Properties to set
             * @returns TileObjectSymmetryCfg instance
             */
            public static create(properties?: CommonProto.Config.ITileObjectSymmetryCfg): CommonProto.Config.TileObjectSymmetryCfg;

            /**
             * Encodes the specified TileObjectSymmetryCfg message. Does not implicitly {@link CommonProto.Config.TileObjectSymmetryCfg.verify|verify} messages.
             * @param message TileObjectSymmetryCfg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.Config.ITileObjectSymmetryCfg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified TileObjectSymmetryCfg message, length delimited. Does not implicitly {@link CommonProto.Config.TileObjectSymmetryCfg.verify|verify} messages.
             * @param message TileObjectSymmetryCfg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.Config.ITileObjectSymmetryCfg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a TileObjectSymmetryCfg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns TileObjectSymmetryCfg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.Config.TileObjectSymmetryCfg;

            /**
             * Decodes a TileObjectSymmetryCfg message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns TileObjectSymmetryCfg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.Config.TileObjectSymmetryCfg;

            /**
             * Verifies a TileObjectSymmetryCfg message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a TileObjectSymmetryCfg message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns TileObjectSymmetryCfg
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.Config.TileObjectSymmetryCfg;

            /**
             * Creates a plain object from a TileObjectSymmetryCfg message. Also converts values to other types if specified.
             * @param message TileObjectSymmetryCfg
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.Config.TileObjectSymmetryCfg, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this TileObjectSymmetryCfg to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a TileDecorationCfg. */
        interface ITileDecorationCfg {

            /** TileDecorationCfg tileDecorationType */
            tileDecorationType?: (number|null);

            /** TileDecorationCfg shapesCount */
            shapesCount?: (number|null);

            /** TileDecorationCfg animParams */
            animParams?: (number[]|null);

            /** TileDecorationCfg animParamsForV0 */
            animParamsForV0?: (number[]|null);

            /** TileDecorationCfg lang */
            lang?: (number|null);
        }

        /** Represents a TileDecorationCfg. */
        class TileDecorationCfg implements ITileDecorationCfg {

            /**
             * Constructs a new TileDecorationCfg.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.Config.ITileDecorationCfg);

            /** TileDecorationCfg tileDecorationType. */
            public tileDecorationType: number;

            /** TileDecorationCfg shapesCount. */
            public shapesCount: number;

            /** TileDecorationCfg animParams. */
            public animParams: number[];

            /** TileDecorationCfg animParamsForV0. */
            public animParamsForV0: number[];

            /** TileDecorationCfg lang. */
            public lang: number;

            /**
             * Creates a new TileDecorationCfg instance using the specified properties.
             * @param [properties] Properties to set
             * @returns TileDecorationCfg instance
             */
            public static create(properties?: CommonProto.Config.ITileDecorationCfg): CommonProto.Config.TileDecorationCfg;

            /**
             * Encodes the specified TileDecorationCfg message. Does not implicitly {@link CommonProto.Config.TileDecorationCfg.verify|verify} messages.
             * @param message TileDecorationCfg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.Config.ITileDecorationCfg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified TileDecorationCfg message, length delimited. Does not implicitly {@link CommonProto.Config.TileDecorationCfg.verify|verify} messages.
             * @param message TileDecorationCfg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.Config.ITileDecorationCfg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a TileDecorationCfg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns TileDecorationCfg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.Config.TileDecorationCfg;

            /**
             * Decodes a TileDecorationCfg message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns TileDecorationCfg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.Config.TileDecorationCfg;

            /**
             * Verifies a TileDecorationCfg message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a TileDecorationCfg message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns TileDecorationCfg
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.Config.TileDecorationCfg;

            /**
             * Creates a plain object from a TileDecorationCfg message. Also converts values to other types if specified.
             * @param message TileDecorationCfg
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.Config.TileDecorationCfg, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this TileDecorationCfg to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a TileDecorationSymmetryCfg. */
        interface ITileDecorationSymmetryCfg {

            /** TileDecorationSymmetryCfg tileDecorationType */
            tileDecorationType?: (number|null);

            /** TileDecorationSymmetryCfg shapeId */
            shapeId?: (number|null);

            /** TileDecorationSymmetryCfg symmetryShapeIds */
            symmetryShapeIds?: (number[]|null);
        }

        /** Represents a TileDecorationSymmetryCfg. */
        class TileDecorationSymmetryCfg implements ITileDecorationSymmetryCfg {

            /**
             * Constructs a new TileDecorationSymmetryCfg.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.Config.ITileDecorationSymmetryCfg);

            /** TileDecorationSymmetryCfg tileDecorationType. */
            public tileDecorationType: number;

            /** TileDecorationSymmetryCfg shapeId. */
            public shapeId: number;

            /** TileDecorationSymmetryCfg symmetryShapeIds. */
            public symmetryShapeIds: number[];

            /**
             * Creates a new TileDecorationSymmetryCfg instance using the specified properties.
             * @param [properties] Properties to set
             * @returns TileDecorationSymmetryCfg instance
             */
            public static create(properties?: CommonProto.Config.ITileDecorationSymmetryCfg): CommonProto.Config.TileDecorationSymmetryCfg;

            /**
             * Encodes the specified TileDecorationSymmetryCfg message. Does not implicitly {@link CommonProto.Config.TileDecorationSymmetryCfg.verify|verify} messages.
             * @param message TileDecorationSymmetryCfg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.Config.ITileDecorationSymmetryCfg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified TileDecorationSymmetryCfg message, length delimited. Does not implicitly {@link CommonProto.Config.TileDecorationSymmetryCfg.verify|verify} messages.
             * @param message TileDecorationSymmetryCfg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.Config.ITileDecorationSymmetryCfg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a TileDecorationSymmetryCfg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns TileDecorationSymmetryCfg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.Config.TileDecorationSymmetryCfg;

            /**
             * Decodes a TileDecorationSymmetryCfg message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns TileDecorationSymmetryCfg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.Config.TileDecorationSymmetryCfg;

            /**
             * Verifies a TileDecorationSymmetryCfg message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a TileDecorationSymmetryCfg message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns TileDecorationSymmetryCfg
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.Config.TileDecorationSymmetryCfg;

            /**
             * Creates a plain object from a TileDecorationSymmetryCfg message. Also converts values to other types if specified.
             * @param message TileDecorationSymmetryCfg
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.Config.TileDecorationSymmetryCfg, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this TileDecorationSymmetryCfg to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a TileTypeMappingCfg. */
        interface ITileTypeMappingCfg {

            /** TileTypeMappingCfg tileBaseType */
            tileBaseType?: (number|null);

            /** TileTypeMappingCfg tileObjectType */
            tileObjectType?: (number|null);

            /** TileTypeMappingCfg tileType */
            tileType?: (number|null);
        }

        /** Represents a TileTypeMappingCfg. */
        class TileTypeMappingCfg implements ITileTypeMappingCfg {

            /**
             * Constructs a new TileTypeMappingCfg.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.Config.ITileTypeMappingCfg);

            /** TileTypeMappingCfg tileBaseType. */
            public tileBaseType: number;

            /** TileTypeMappingCfg tileObjectType. */
            public tileObjectType: number;

            /** TileTypeMappingCfg tileType. */
            public tileType: number;

            /**
             * Creates a new TileTypeMappingCfg instance using the specified properties.
             * @param [properties] Properties to set
             * @returns TileTypeMappingCfg instance
             */
            public static create(properties?: CommonProto.Config.ITileTypeMappingCfg): CommonProto.Config.TileTypeMappingCfg;

            /**
             * Encodes the specified TileTypeMappingCfg message. Does not implicitly {@link CommonProto.Config.TileTypeMappingCfg.verify|verify} messages.
             * @param message TileTypeMappingCfg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.Config.ITileTypeMappingCfg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified TileTypeMappingCfg message, length delimited. Does not implicitly {@link CommonProto.Config.TileTypeMappingCfg.verify|verify} messages.
             * @param message TileTypeMappingCfg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.Config.ITileTypeMappingCfg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a TileTypeMappingCfg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns TileTypeMappingCfg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.Config.TileTypeMappingCfg;

            /**
             * Decodes a TileTypeMappingCfg message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns TileTypeMappingCfg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.Config.TileTypeMappingCfg;

            /**
             * Verifies a TileTypeMappingCfg message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a TileTypeMappingCfg message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns TileTypeMappingCfg
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.Config.TileTypeMappingCfg;

            /**
             * Creates a plain object from a TileTypeMappingCfg message. Also converts values to other types if specified.
             * @param message TileTypeMappingCfg
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.Config.TileTypeMappingCfg, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this TileTypeMappingCfg to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an UnitTemplateCfg. */
        interface IUnitTemplateCfg {

            /** UnitTemplateCfg type */
            type?: (number|null);

            /** UnitTemplateCfg minAttackRange */
            minAttackRange?: (number|null);

            /** UnitTemplateCfg maxAttackRange */
            maxAttackRange?: (number|null);

            /** UnitTemplateCfg canAttackAfterMove */
            canAttackAfterMove?: (number|null);

            /** UnitTemplateCfg canAttackDivingUnits */
            canAttackDivingUnits?: (number|null);

            /** UnitTemplateCfg primaryWeaponMaxAmmo */
            primaryWeaponMaxAmmo?: (number|null);

            /** UnitTemplateCfg maxHp */
            maxHp?: (number|null);

            /** UnitTemplateCfg armorType */
            armorType?: (number|null);

            /** UnitTemplateCfg isAffectedByLuck */
            isAffectedByLuck?: (number|null);

            /** UnitTemplateCfg moveRange */
            moveRange?: (number|null);

            /** UnitTemplateCfg moveType */
            moveType?: (number|null);

            /** UnitTemplateCfg maxFuel */
            maxFuel?: (number|null);

            /** UnitTemplateCfg fuelConsumptionPerTurn */
            fuelConsumptionPerTurn?: (number|null);

            /** UnitTemplateCfg diveCfgs */
            diveCfgs?: (number[]|null);

            /** UnitTemplateCfg isDestroyedOnOutOfFuel */
            isDestroyedOnOutOfFuel?: (number|null);

            /** UnitTemplateCfg maxLoadUnitsCount */
            maxLoadUnitsCount?: (number|null);

            /** UnitTemplateCfg loadUnitCategory */
            loadUnitCategory?: (number|null);

            /** UnitTemplateCfg canLaunchLoadedUnits */
            canLaunchLoadedUnits?: (number|null);

            /** UnitTemplateCfg canDropLoadedUnits */
            canDropLoadedUnits?: (number|null);

            /** UnitTemplateCfg canSupplyLoadedUnits */
            canSupplyLoadedUnits?: (number|null);

            /** UnitTemplateCfg repairAmountForLoadedUnits */
            repairAmountForLoadedUnits?: (number|null);

            /** UnitTemplateCfg loadableTileCategory */
            loadableTileCategory?: (number|null);

            /** UnitTemplateCfg canSupplyAdjacentUnits */
            canSupplyAdjacentUnits?: (number|null);

            /** UnitTemplateCfg produceUnitType */
            produceUnitType?: (number|null);

            /** UnitTemplateCfg maxProduceMaterial */
            maxProduceMaterial?: (number|null);

            /** UnitTemplateCfg maxBuildMaterial */
            maxBuildMaterial?: (number|null);

            /** UnitTemplateCfg canCaptureTile */
            canCaptureTile?: (number|null);

            /** UnitTemplateCfg productionCost */
            productionCost?: (number|null);

            /** UnitTemplateCfg visionRange */
            visionRange?: (number|null);

            /** UnitTemplateCfg flareMaxAmmo */
            flareMaxAmmo?: (number|null);

            /** UnitTemplateCfg flareMaxRange */
            flareMaxRange?: (number|null);

            /** UnitTemplateCfg flareRadius */
            flareRadius?: (number|null);

            /** UnitTemplateCfg lang */
            lang?: (number|null);

            /** UnitTemplateCfg moveSfx */
            moveSfx?: (number|null);

            /** UnitTemplateCfg layer */
            layer?: (number|null);

            /** UnitTemplateCfg aiProductionScore */
            aiProductionScore?: (number[]|null);

            /** UnitTemplateCfg animParams */
            animParams?: (number[]|null);
        }

        /** Represents an UnitTemplateCfg. */
        class UnitTemplateCfg implements IUnitTemplateCfg {

            /**
             * Constructs a new UnitTemplateCfg.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.Config.IUnitTemplateCfg);

            /** UnitTemplateCfg type. */
            public type: number;

            /** UnitTemplateCfg minAttackRange. */
            public minAttackRange: number;

            /** UnitTemplateCfg maxAttackRange. */
            public maxAttackRange: number;

            /** UnitTemplateCfg canAttackAfterMove. */
            public canAttackAfterMove: number;

            /** UnitTemplateCfg canAttackDivingUnits. */
            public canAttackDivingUnits: number;

            /** UnitTemplateCfg primaryWeaponMaxAmmo. */
            public primaryWeaponMaxAmmo: number;

            /** UnitTemplateCfg maxHp. */
            public maxHp: number;

            /** UnitTemplateCfg armorType. */
            public armorType: number;

            /** UnitTemplateCfg isAffectedByLuck. */
            public isAffectedByLuck: number;

            /** UnitTemplateCfg moveRange. */
            public moveRange: number;

            /** UnitTemplateCfg moveType. */
            public moveType: number;

            /** UnitTemplateCfg maxFuel. */
            public maxFuel: number;

            /** UnitTemplateCfg fuelConsumptionPerTurn. */
            public fuelConsumptionPerTurn: number;

            /** UnitTemplateCfg diveCfgs. */
            public diveCfgs: number[];

            /** UnitTemplateCfg isDestroyedOnOutOfFuel. */
            public isDestroyedOnOutOfFuel: number;

            /** UnitTemplateCfg maxLoadUnitsCount. */
            public maxLoadUnitsCount: number;

            /** UnitTemplateCfg loadUnitCategory. */
            public loadUnitCategory: number;

            /** UnitTemplateCfg canLaunchLoadedUnits. */
            public canLaunchLoadedUnits: number;

            /** UnitTemplateCfg canDropLoadedUnits. */
            public canDropLoadedUnits: number;

            /** UnitTemplateCfg canSupplyLoadedUnits. */
            public canSupplyLoadedUnits: number;

            /** UnitTemplateCfg repairAmountForLoadedUnits. */
            public repairAmountForLoadedUnits: number;

            /** UnitTemplateCfg loadableTileCategory. */
            public loadableTileCategory: number;

            /** UnitTemplateCfg canSupplyAdjacentUnits. */
            public canSupplyAdjacentUnits: number;

            /** UnitTemplateCfg produceUnitType. */
            public produceUnitType: number;

            /** UnitTemplateCfg maxProduceMaterial. */
            public maxProduceMaterial: number;

            /** UnitTemplateCfg maxBuildMaterial. */
            public maxBuildMaterial: number;

            /** UnitTemplateCfg canCaptureTile. */
            public canCaptureTile: number;

            /** UnitTemplateCfg productionCost. */
            public productionCost: number;

            /** UnitTemplateCfg visionRange. */
            public visionRange: number;

            /** UnitTemplateCfg flareMaxAmmo. */
            public flareMaxAmmo: number;

            /** UnitTemplateCfg flareMaxRange. */
            public flareMaxRange: number;

            /** UnitTemplateCfg flareRadius. */
            public flareRadius: number;

            /** UnitTemplateCfg lang. */
            public lang: number;

            /** UnitTemplateCfg moveSfx. */
            public moveSfx: number;

            /** UnitTemplateCfg layer. */
            public layer: number;

            /** UnitTemplateCfg aiProductionScore. */
            public aiProductionScore: number[];

            /** UnitTemplateCfg animParams. */
            public animParams: number[];

            /**
             * Creates a new UnitTemplateCfg instance using the specified properties.
             * @param [properties] Properties to set
             * @returns UnitTemplateCfg instance
             */
            public static create(properties?: CommonProto.Config.IUnitTemplateCfg): CommonProto.Config.UnitTemplateCfg;

            /**
             * Encodes the specified UnitTemplateCfg message. Does not implicitly {@link CommonProto.Config.UnitTemplateCfg.verify|verify} messages.
             * @param message UnitTemplateCfg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.Config.IUnitTemplateCfg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified UnitTemplateCfg message, length delimited. Does not implicitly {@link CommonProto.Config.UnitTemplateCfg.verify|verify} messages.
             * @param message UnitTemplateCfg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.Config.IUnitTemplateCfg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an UnitTemplateCfg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns UnitTemplateCfg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.Config.UnitTemplateCfg;

            /**
             * Decodes an UnitTemplateCfg message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns UnitTemplateCfg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.Config.UnitTemplateCfg;

            /**
             * Verifies an UnitTemplateCfg message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an UnitTemplateCfg message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns UnitTemplateCfg
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.Config.UnitTemplateCfg;

            /**
             * Creates a plain object from an UnitTemplateCfg message. Also converts values to other types if specified.
             * @param message UnitTemplateCfg
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.Config.UnitTemplateCfg, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this UnitTemplateCfg to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a DamageChartCfg. */
        interface IDamageChartCfg {

            /** DamageChartCfg attackerType */
            attackerType?: (number|null);

            /** DamageChartCfg armorType */
            armorType?: (number|null);

            /** DamageChartCfg weaponType */
            weaponType?: (number|null);

            /** DamageChartCfg damage */
            damage?: (number|null);
        }

        /** Represents a DamageChartCfg. */
        class DamageChartCfg implements IDamageChartCfg {

            /**
             * Constructs a new DamageChartCfg.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.Config.IDamageChartCfg);

            /** DamageChartCfg attackerType. */
            public attackerType: number;

            /** DamageChartCfg armorType. */
            public armorType: number;

            /** DamageChartCfg weaponType. */
            public weaponType: number;

            /** DamageChartCfg damage. */
            public damage: number;

            /**
             * Creates a new DamageChartCfg instance using the specified properties.
             * @param [properties] Properties to set
             * @returns DamageChartCfg instance
             */
            public static create(properties?: CommonProto.Config.IDamageChartCfg): CommonProto.Config.DamageChartCfg;

            /**
             * Encodes the specified DamageChartCfg message. Does not implicitly {@link CommonProto.Config.DamageChartCfg.verify|verify} messages.
             * @param message DamageChartCfg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.Config.IDamageChartCfg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified DamageChartCfg message, length delimited. Does not implicitly {@link CommonProto.Config.DamageChartCfg.verify|verify} messages.
             * @param message DamageChartCfg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.Config.IDamageChartCfg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a DamageChartCfg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns DamageChartCfg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.Config.DamageChartCfg;

            /**
             * Decodes a DamageChartCfg message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns DamageChartCfg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.Config.DamageChartCfg;

            /**
             * Verifies a DamageChartCfg message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a DamageChartCfg message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns DamageChartCfg
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.Config.DamageChartCfg;

            /**
             * Creates a plain object from a DamageChartCfg message. Also converts values to other types if specified.
             * @param message DamageChartCfg
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.Config.DamageChartCfg, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this DamageChartCfg to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a MoveCostCfg. */
        interface IMoveCostCfg {

            /** MoveCostCfg tileType */
            tileType?: (number|null);

            /** MoveCostCfg moveType */
            moveType?: (number|null);

            /** MoveCostCfg cost */
            cost?: (number|null);
        }

        /** Represents a MoveCostCfg. */
        class MoveCostCfg implements IMoveCostCfg {

            /**
             * Constructs a new MoveCostCfg.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.Config.IMoveCostCfg);

            /** MoveCostCfg tileType. */
            public tileType: number;

            /** MoveCostCfg moveType. */
            public moveType: number;

            /** MoveCostCfg cost. */
            public cost: number;

            /**
             * Creates a new MoveCostCfg instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MoveCostCfg instance
             */
            public static create(properties?: CommonProto.Config.IMoveCostCfg): CommonProto.Config.MoveCostCfg;

            /**
             * Encodes the specified MoveCostCfg message. Does not implicitly {@link CommonProto.Config.MoveCostCfg.verify|verify} messages.
             * @param message MoveCostCfg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.Config.IMoveCostCfg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MoveCostCfg message, length delimited. Does not implicitly {@link CommonProto.Config.MoveCostCfg.verify|verify} messages.
             * @param message MoveCostCfg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.Config.IMoveCostCfg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MoveCostCfg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MoveCostCfg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.Config.MoveCostCfg;

            /**
             * Decodes a MoveCostCfg message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MoveCostCfg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.Config.MoveCostCfg;

            /**
             * Verifies a MoveCostCfg message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MoveCostCfg message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MoveCostCfg
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.Config.MoveCostCfg;

            /**
             * Creates a plain object from a MoveCostCfg message. Also converts values to other types if specified.
             * @param message MoveCostCfg
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.Config.MoveCostCfg, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MoveCostCfg to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an UnitPromotionCfg. */
        interface IUnitPromotionCfg {

            /** UnitPromotionCfg promotion */
            promotion?: (number|null);

            /** UnitPromotionCfg attackBonus */
            attackBonus?: (number|null);

            /** UnitPromotionCfg defenseBonus */
            defenseBonus?: (number|null);
        }

        /** Represents an UnitPromotionCfg. */
        class UnitPromotionCfg implements IUnitPromotionCfg {

            /**
             * Constructs a new UnitPromotionCfg.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.Config.IUnitPromotionCfg);

            /** UnitPromotionCfg promotion. */
            public promotion: number;

            /** UnitPromotionCfg attackBonus. */
            public attackBonus: number;

            /** UnitPromotionCfg defenseBonus. */
            public defenseBonus: number;

            /**
             * Creates a new UnitPromotionCfg instance using the specified properties.
             * @param [properties] Properties to set
             * @returns UnitPromotionCfg instance
             */
            public static create(properties?: CommonProto.Config.IUnitPromotionCfg): CommonProto.Config.UnitPromotionCfg;

            /**
             * Encodes the specified UnitPromotionCfg message. Does not implicitly {@link CommonProto.Config.UnitPromotionCfg.verify|verify} messages.
             * @param message UnitPromotionCfg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.Config.IUnitPromotionCfg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified UnitPromotionCfg message, length delimited. Does not implicitly {@link CommonProto.Config.UnitPromotionCfg.verify|verify} messages.
             * @param message UnitPromotionCfg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.Config.IUnitPromotionCfg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an UnitPromotionCfg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns UnitPromotionCfg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.Config.UnitPromotionCfg;

            /**
             * Decodes an UnitPromotionCfg message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns UnitPromotionCfg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.Config.UnitPromotionCfg;

            /**
             * Verifies an UnitPromotionCfg message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an UnitPromotionCfg message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns UnitPromotionCfg
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.Config.UnitPromotionCfg;

            /**
             * Creates a plain object from an UnitPromotionCfg message. Also converts values to other types if specified.
             * @param message UnitPromotionCfg
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.Config.UnitPromotionCfg, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this UnitPromotionCfg to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a VisionBonusCfg. */
        interface IVisionBonusCfg {

            /** VisionBonusCfg unitType */
            unitType?: (number|null);

            /** VisionBonusCfg tileType */
            tileType?: (number|null);

            /** VisionBonusCfg visionBonus */
            visionBonus?: (number|null);
        }

        /** Represents a VisionBonusCfg. */
        class VisionBonusCfg implements IVisionBonusCfg {

            /**
             * Constructs a new VisionBonusCfg.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.Config.IVisionBonusCfg);

            /** VisionBonusCfg unitType. */
            public unitType: number;

            /** VisionBonusCfg tileType. */
            public tileType: number;

            /** VisionBonusCfg visionBonus. */
            public visionBonus: number;

            /**
             * Creates a new VisionBonusCfg instance using the specified properties.
             * @param [properties] Properties to set
             * @returns VisionBonusCfg instance
             */
            public static create(properties?: CommonProto.Config.IVisionBonusCfg): CommonProto.Config.VisionBonusCfg;

            /**
             * Encodes the specified VisionBonusCfg message. Does not implicitly {@link CommonProto.Config.VisionBonusCfg.verify|verify} messages.
             * @param message VisionBonusCfg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.Config.IVisionBonusCfg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified VisionBonusCfg message, length delimited. Does not implicitly {@link CommonProto.Config.VisionBonusCfg.verify|verify} messages.
             * @param message VisionBonusCfg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.Config.IVisionBonusCfg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a VisionBonusCfg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns VisionBonusCfg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.Config.VisionBonusCfg;

            /**
             * Decodes a VisionBonusCfg message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns VisionBonusCfg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.Config.VisionBonusCfg;

            /**
             * Verifies a VisionBonusCfg message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a VisionBonusCfg message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns VisionBonusCfg
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.Config.VisionBonusCfg;

            /**
             * Creates a plain object from a VisionBonusCfg message. Also converts values to other types if specified.
             * @param message VisionBonusCfg
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.Config.VisionBonusCfg, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this VisionBonusCfg to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a BuildableTileCfg. */
        interface IBuildableTileCfg {

            /** BuildableTileCfg unitType */
            unitType?: (number|null);

            /** BuildableTileCfg srcBaseType */
            srcBaseType?: (number|null);

            /** BuildableTileCfg srcObjectType */
            srcObjectType?: (number|null);

            /** BuildableTileCfg dstBaseType */
            dstBaseType?: (number|null);

            /** BuildableTileCfg dstObjectType */
            dstObjectType?: (number|null);
        }

        /** Represents a BuildableTileCfg. */
        class BuildableTileCfg implements IBuildableTileCfg {

            /**
             * Constructs a new BuildableTileCfg.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.Config.IBuildableTileCfg);

            /** BuildableTileCfg unitType. */
            public unitType: number;

            /** BuildableTileCfg srcBaseType. */
            public srcBaseType: number;

            /** BuildableTileCfg srcObjectType. */
            public srcObjectType: number;

            /** BuildableTileCfg dstBaseType. */
            public dstBaseType: number;

            /** BuildableTileCfg dstObjectType. */
            public dstObjectType: number;

            /**
             * Creates a new BuildableTileCfg instance using the specified properties.
             * @param [properties] Properties to set
             * @returns BuildableTileCfg instance
             */
            public static create(properties?: CommonProto.Config.IBuildableTileCfg): CommonProto.Config.BuildableTileCfg;

            /**
             * Encodes the specified BuildableTileCfg message. Does not implicitly {@link CommonProto.Config.BuildableTileCfg.verify|verify} messages.
             * @param message BuildableTileCfg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.Config.IBuildableTileCfg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified BuildableTileCfg message, length delimited. Does not implicitly {@link CommonProto.Config.BuildableTileCfg.verify|verify} messages.
             * @param message BuildableTileCfg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.Config.IBuildableTileCfg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a BuildableTileCfg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns BuildableTileCfg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.Config.BuildableTileCfg;

            /**
             * Decodes a BuildableTileCfg message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns BuildableTileCfg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.Config.BuildableTileCfg;

            /**
             * Verifies a BuildableTileCfg message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a BuildableTileCfg message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns BuildableTileCfg
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.Config.BuildableTileCfg;

            /**
             * Creates a plain object from a BuildableTileCfg message. Also converts values to other types if specified.
             * @param message BuildableTileCfg
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.Config.BuildableTileCfg, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this BuildableTileCfg to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a PlayerRankCfg. */
        interface IPlayerRankCfg {

            /** PlayerRankCfg minScore */
            minScore?: (number|null);

            /** PlayerRankCfg rank */
            rank?: (number|null);

            /** PlayerRankCfg nameList */
            nameList?: (string[]|null);
        }

        /** Represents a PlayerRankCfg. */
        class PlayerRankCfg implements IPlayerRankCfg {

            /**
             * Constructs a new PlayerRankCfg.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.Config.IPlayerRankCfg);

            /** PlayerRankCfg minScore. */
            public minScore: number;

            /** PlayerRankCfg rank. */
            public rank: number;

            /** PlayerRankCfg nameList. */
            public nameList: string[];

            /**
             * Creates a new PlayerRankCfg instance using the specified properties.
             * @param [properties] Properties to set
             * @returns PlayerRankCfg instance
             */
            public static create(properties?: CommonProto.Config.IPlayerRankCfg): CommonProto.Config.PlayerRankCfg;

            /**
             * Encodes the specified PlayerRankCfg message. Does not implicitly {@link CommonProto.Config.PlayerRankCfg.verify|verify} messages.
             * @param message PlayerRankCfg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.Config.IPlayerRankCfg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified PlayerRankCfg message, length delimited. Does not implicitly {@link CommonProto.Config.PlayerRankCfg.verify|verify} messages.
             * @param message PlayerRankCfg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.Config.IPlayerRankCfg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a PlayerRankCfg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns PlayerRankCfg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.Config.PlayerRankCfg;

            /**
             * Decodes a PlayerRankCfg message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns PlayerRankCfg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.Config.PlayerRankCfg;

            /**
             * Verifies a PlayerRankCfg message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a PlayerRankCfg message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns PlayerRankCfg
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.Config.PlayerRankCfg;

            /**
             * Creates a plain object from a PlayerRankCfg message. Also converts values to other types if specified.
             * @param message PlayerRankCfg
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.Config.PlayerRankCfg, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this PlayerRankCfg to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a CoCategoryCfg. */
        interface ICoCategoryCfg {

            /** CoCategoryCfg categoryId */
            categoryId?: (number|null);

            /** CoCategoryCfg name */
            name?: (string|null);
        }

        /** Represents a CoCategoryCfg. */
        class CoCategoryCfg implements ICoCategoryCfg {

            /**
             * Constructs a new CoCategoryCfg.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.Config.ICoCategoryCfg);

            /** CoCategoryCfg categoryId. */
            public categoryId: number;

            /** CoCategoryCfg name. */
            public name: string;

            /**
             * Creates a new CoCategoryCfg instance using the specified properties.
             * @param [properties] Properties to set
             * @returns CoCategoryCfg instance
             */
            public static create(properties?: CommonProto.Config.ICoCategoryCfg): CommonProto.Config.CoCategoryCfg;

            /**
             * Encodes the specified CoCategoryCfg message. Does not implicitly {@link CommonProto.Config.CoCategoryCfg.verify|verify} messages.
             * @param message CoCategoryCfg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.Config.ICoCategoryCfg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified CoCategoryCfg message, length delimited. Does not implicitly {@link CommonProto.Config.CoCategoryCfg.verify|verify} messages.
             * @param message CoCategoryCfg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.Config.ICoCategoryCfg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CoCategoryCfg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CoCategoryCfg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.Config.CoCategoryCfg;

            /**
             * Decodes a CoCategoryCfg message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns CoCategoryCfg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.Config.CoCategoryCfg;

            /**
             * Verifies a CoCategoryCfg message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a CoCategoryCfg message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns CoCategoryCfg
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.Config.CoCategoryCfg;

            /**
             * Creates a plain object from a CoCategoryCfg message. Also converts values to other types if specified.
             * @param message CoCategoryCfg
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.Config.CoCategoryCfg, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this CoCategoryCfg to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a CoBasicCfg. */
        interface ICoBasicCfg {

            /** CoBasicCfg coId */
            coId?: (number|null);

            /** CoBasicCfg categoryId */
            categoryId?: (number|null);

            /** CoBasicCfg name */
            name?: (string|null);

            /** CoBasicCfg zoneRadius */
            zoneRadius?: (number|null);

            /** CoBasicCfg boardCostPercentage */
            boardCostPercentage?: (number|null);

            /** CoBasicCfg zoneExpansionEnergyList */
            zoneExpansionEnergyList?: (number[]|null);

            /** CoBasicCfg powerEnergyList */
            powerEnergyList?: (number[]|null);

            /** CoBasicCfg isEnabled */
            isEnabled?: (number|null);

            /** CoBasicCfg isEnabledForDialogue */
            isEnabledForDialogue?: (number|null);

            /** CoBasicCfg artDesigner */
            artDesigner?: (string|null);

            /** CoBasicCfg dataDesigner */
            dataDesigner?: (string|null);

            /** CoBasicCfg image */
            image?: (number|null);

            /** CoBasicCfg bgmCode */
            bgmCode?: (number[]|null);

            /** CoBasicCfg tier */
            tier?: (number|null);

            /** CoBasicCfg maxLoadCount */
            maxLoadCount?: (number|null);

            /** CoBasicCfg energyType */
            energyType?: (number|null);

            /** CoBasicCfg globalCoEnergyParameters */
            globalCoEnergyParameters?: (number[]|null);

            /** CoBasicCfg canGetEnergyWithBattleOnPowerSkills */
            canGetEnergyWithBattleOnPowerSkills?: (number|null);

            /** CoBasicCfg aiBoardUnitTypeAndScore */
            aiBoardUnitTypeAndScore?: (number[]|null);

            /** CoBasicCfg passiveSkills */
            passiveSkills?: (number[]|null);

            /** CoBasicCfg powerSkills */
            powerSkills?: (number[]|null);

            /** CoBasicCfg superPowerSkills */
            superPowerSkills?: (number[]|null);

            /** CoBasicCfg passiveDesc */
            passiveDesc?: (string[]|null);

            /** CoBasicCfg copDesc */
            copDesc?: (string[]|null);

            /** CoBasicCfg scopDesc */
            scopDesc?: (string[]|null);
        }

        /** Represents a CoBasicCfg. */
        class CoBasicCfg implements ICoBasicCfg {

            /**
             * Constructs a new CoBasicCfg.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.Config.ICoBasicCfg);

            /** CoBasicCfg coId. */
            public coId: number;

            /** CoBasicCfg categoryId. */
            public categoryId: number;

            /** CoBasicCfg name. */
            public name: string;

            /** CoBasicCfg zoneRadius. */
            public zoneRadius: number;

            /** CoBasicCfg boardCostPercentage. */
            public boardCostPercentage: number;

            /** CoBasicCfg zoneExpansionEnergyList. */
            public zoneExpansionEnergyList: number[];

            /** CoBasicCfg powerEnergyList. */
            public powerEnergyList: number[];

            /** CoBasicCfg isEnabled. */
            public isEnabled: number;

            /** CoBasicCfg isEnabledForDialogue. */
            public isEnabledForDialogue: number;

            /** CoBasicCfg artDesigner. */
            public artDesigner: string;

            /** CoBasicCfg dataDesigner. */
            public dataDesigner: string;

            /** CoBasicCfg image. */
            public image: number;

            /** CoBasicCfg bgmCode. */
            public bgmCode: number[];

            /** CoBasicCfg tier. */
            public tier: number;

            /** CoBasicCfg maxLoadCount. */
            public maxLoadCount: number;

            /** CoBasicCfg energyType. */
            public energyType: number;

            /** CoBasicCfg globalCoEnergyParameters. */
            public globalCoEnergyParameters: number[];

            /** CoBasicCfg canGetEnergyWithBattleOnPowerSkills. */
            public canGetEnergyWithBattleOnPowerSkills: number;

            /** CoBasicCfg aiBoardUnitTypeAndScore. */
            public aiBoardUnitTypeAndScore: number[];

            /** CoBasicCfg passiveSkills. */
            public passiveSkills: number[];

            /** CoBasicCfg powerSkills. */
            public powerSkills: number[];

            /** CoBasicCfg superPowerSkills. */
            public superPowerSkills: number[];

            /** CoBasicCfg passiveDesc. */
            public passiveDesc: string[];

            /** CoBasicCfg copDesc. */
            public copDesc: string[];

            /** CoBasicCfg scopDesc. */
            public scopDesc: string[];

            /**
             * Creates a new CoBasicCfg instance using the specified properties.
             * @param [properties] Properties to set
             * @returns CoBasicCfg instance
             */
            public static create(properties?: CommonProto.Config.ICoBasicCfg): CommonProto.Config.CoBasicCfg;

            /**
             * Encodes the specified CoBasicCfg message. Does not implicitly {@link CommonProto.Config.CoBasicCfg.verify|verify} messages.
             * @param message CoBasicCfg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.Config.ICoBasicCfg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified CoBasicCfg message, length delimited. Does not implicitly {@link CommonProto.Config.CoBasicCfg.verify|verify} messages.
             * @param message CoBasicCfg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.Config.ICoBasicCfg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CoBasicCfg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CoBasicCfg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.Config.CoBasicCfg;

            /**
             * Decodes a CoBasicCfg message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns CoBasicCfg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.Config.CoBasicCfg;

            /**
             * Verifies a CoBasicCfg message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a CoBasicCfg message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns CoBasicCfg
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.Config.CoBasicCfg;

            /**
             * Creates a plain object from a CoBasicCfg message. Also converts values to other types if specified.
             * @param message CoBasicCfg
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.Config.CoBasicCfg, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this CoBasicCfg to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a CoSkillCfg. */
        interface ICoSkillCfg {

            /** CoSkillCfg skillId */
            skillId?: (number|null);

            /** CoSkillCfg name */
            name?: (string|null);

            /** CoSkillCfg showZone */
            showZone?: (number|null);

            /** CoSkillCfg desc */
            desc?: (string[]|null);

            /** CoSkillCfg selfOffenseBonus */
            selfOffenseBonus?: (number[]|null);

            /** CoSkillCfg selfDefenseBonus */
            selfDefenseBonus?: (number[]|null);

            /** CoSkillCfg selfMoveRangeBonus */
            selfMoveRangeBonus?: (number[]|null);

            /** CoSkillCfg maxAttackRangeBonus */
            maxAttackRangeBonus?: (number[]|null);

            /** CoSkillCfg selfHpGain */
            selfHpGain?: (number[]|null);

            /** CoSkillCfg enemyHpGain */
            enemyHpGain?: (number[]|null);

            /** CoSkillCfg selfPrimaryAmmoGain */
            selfPrimaryAmmoGain?: (number[]|null);

            /** CoSkillCfg enemyPrimaryAmmoGain */
            enemyPrimaryAmmoGain?: (number[]|null);

            /** CoSkillCfg selfFuelGain */
            selfFuelGain?: (number[]|null);

            /** CoSkillCfg enemyFuelGain */
            enemyFuelGain?: (number[]|null);

            /** CoSkillCfg selfMaterialGain */
            selfMaterialGain?: (number[]|null);

            /** CoSkillCfg enemyMaterialGain */
            enemyMaterialGain?: (number[]|null);

            /** CoSkillCfg selfHpRecovery */
            selfHpRecovery?: (number[]|null);

            /** CoSkillCfg fixedAreaDamage */
            fixedAreaDamage?: (number[]|null);

            /** CoSkillCfg selfPromotionGain */
            selfPromotionGain?: (number[]|null);

            /** CoSkillCfg unitVisionRangeBonus */
            unitVisionRangeBonus?: (number[]|null);

            /** CoSkillCfg unitTrueVision */
            unitTrueVision?: (number[]|null);

            /** CoSkillCfg attackBonusByPromotion */
            attackBonusByPromotion?: (number[]|null);

            /** CoSkillCfg defenseBonusByPromotion */
            defenseBonusByPromotion?: (number[]|null);

            /** CoSkillCfg promotionBonusByAttack */
            promotionBonusByAttack?: (number[]|null);

            /** CoSkillCfg selfPrimaryAmmoRecovery */
            selfPrimaryAmmoRecovery?: (number[]|null);

            /** CoSkillCfg selfFuelRecovery */
            selfFuelRecovery?: (number[]|null);

            /** CoSkillCfg selfUnitProduction */
            selfUnitProduction?: (number[]|null);

            /** CoSkillCfg selfFuelConsumption */
            selfFuelConsumption?: (number[]|null);

            /** CoSkillCfg selfUnitActionState */
            selfUnitActionState?: (number[]|null);

            /** CoSkillCfg selfLuckRangeBonus */
            selfLuckRangeBonus?: (number[]|null);

            /** CoSkillCfg selfUnitCost */
            selfUnitCost?: (number[]|null);

            /** CoSkillCfg selfFund */
            selfFund?: (number[]|null);

            /** CoSkillCfg selfOffenseBonusByFund */
            selfOffenseBonusByFund?: (number[]|null);

            /** CoSkillCfg selfCaptureAmount */
            selfCaptureAmount?: (number[]|null);

            /** CoSkillCfg selfTileIncome */
            selfTileIncome?: (number[]|null);

            /** CoSkillCfg enemyEnergy */
            enemyEnergy?: (number[]|null);

            /** CoSkillCfg selfOffenseBonusByTileCount */
            selfOffenseBonusByTileCount?: (number[]|null);

            /** CoSkillCfg selfGetFundByAttackUnit */
            selfGetFundByAttackUnit?: (number[]|null);

            /** CoSkillCfg selfAddUnit */
            selfAddUnit?: (number[]|null);

            /** CoSkillCfg selfFlareAmmoGain */
            selfFlareAmmoGain?: (number[]|null);

            /** CoSkillCfg selfUnitIgnoreWeather */
            selfUnitIgnoreWeather?: (number[]|null);

            /** CoSkillCfg changeWeather */
            changeWeather?: (number[]|null);

            /** CoSkillCfg selfUnitMoveCost */
            selfUnitMoveCost?: (number[]|null);

            /** CoSkillCfg selfOffenseBonusByTileDefense */
            selfOffenseBonusByTileDefense?: (number[]|null);

            /** CoSkillCfg selfDefenseBonusByTileDefense */
            selfDefenseBonusByTileDefense?: (number[]|null);

            /** CoSkillCfg selfRepairAmountBonus */
            selfRepairAmountBonus?: (number[]|null);

            /** CoSkillCfg selfOffenseBonusByEnemyTileDefense */
            selfOffenseBonusByEnemyTileDefense?: (number[]|null);

            /** CoSkillCfg selfOffenseBonusByCounter */
            selfOffenseBonusByCounter?: (number[]|null);

            /** CoSkillCfg selfPromotionBonusByProduce */
            selfPromotionBonusByProduce?: (number[]|null);
        }

        /** Represents a CoSkillCfg. */
        class CoSkillCfg implements ICoSkillCfg {

            /**
             * Constructs a new CoSkillCfg.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.Config.ICoSkillCfg);

            /** CoSkillCfg skillId. */
            public skillId: number;

            /** CoSkillCfg name. */
            public name: string;

            /** CoSkillCfg showZone. */
            public showZone: number;

            /** CoSkillCfg desc. */
            public desc: string[];

            /** CoSkillCfg selfOffenseBonus. */
            public selfOffenseBonus: number[];

            /** CoSkillCfg selfDefenseBonus. */
            public selfDefenseBonus: number[];

            /** CoSkillCfg selfMoveRangeBonus. */
            public selfMoveRangeBonus: number[];

            /** CoSkillCfg maxAttackRangeBonus. */
            public maxAttackRangeBonus: number[];

            /** CoSkillCfg selfHpGain. */
            public selfHpGain: number[];

            /** CoSkillCfg enemyHpGain. */
            public enemyHpGain: number[];

            /** CoSkillCfg selfPrimaryAmmoGain. */
            public selfPrimaryAmmoGain: number[];

            /** CoSkillCfg enemyPrimaryAmmoGain. */
            public enemyPrimaryAmmoGain: number[];

            /** CoSkillCfg selfFuelGain. */
            public selfFuelGain: number[];

            /** CoSkillCfg enemyFuelGain. */
            public enemyFuelGain: number[];

            /** CoSkillCfg selfMaterialGain. */
            public selfMaterialGain: number[];

            /** CoSkillCfg enemyMaterialGain. */
            public enemyMaterialGain: number[];

            /** CoSkillCfg selfHpRecovery. */
            public selfHpRecovery: number[];

            /** CoSkillCfg fixedAreaDamage. */
            public fixedAreaDamage: number[];

            /** CoSkillCfg selfPromotionGain. */
            public selfPromotionGain: number[];

            /** CoSkillCfg unitVisionRangeBonus. */
            public unitVisionRangeBonus: number[];

            /** CoSkillCfg unitTrueVision. */
            public unitTrueVision: number[];

            /** CoSkillCfg attackBonusByPromotion. */
            public attackBonusByPromotion: number[];

            /** CoSkillCfg defenseBonusByPromotion. */
            public defenseBonusByPromotion: number[];

            /** CoSkillCfg promotionBonusByAttack. */
            public promotionBonusByAttack: number[];

            /** CoSkillCfg selfPrimaryAmmoRecovery. */
            public selfPrimaryAmmoRecovery: number[];

            /** CoSkillCfg selfFuelRecovery. */
            public selfFuelRecovery: number[];

            /** CoSkillCfg selfUnitProduction. */
            public selfUnitProduction: number[];

            /** CoSkillCfg selfFuelConsumption. */
            public selfFuelConsumption: number[];

            /** CoSkillCfg selfUnitActionState. */
            public selfUnitActionState: number[];

            /** CoSkillCfg selfLuckRangeBonus. */
            public selfLuckRangeBonus: number[];

            /** CoSkillCfg selfUnitCost. */
            public selfUnitCost: number[];

            /** CoSkillCfg selfFund. */
            public selfFund: number[];

            /** CoSkillCfg selfOffenseBonusByFund. */
            public selfOffenseBonusByFund: number[];

            /** CoSkillCfg selfCaptureAmount. */
            public selfCaptureAmount: number[];

            /** CoSkillCfg selfTileIncome. */
            public selfTileIncome: number[];

            /** CoSkillCfg enemyEnergy. */
            public enemyEnergy: number[];

            /** CoSkillCfg selfOffenseBonusByTileCount. */
            public selfOffenseBonusByTileCount: number[];

            /** CoSkillCfg selfGetFundByAttackUnit. */
            public selfGetFundByAttackUnit: number[];

            /** CoSkillCfg selfAddUnit. */
            public selfAddUnit: number[];

            /** CoSkillCfg selfFlareAmmoGain. */
            public selfFlareAmmoGain: number[];

            /** CoSkillCfg selfUnitIgnoreWeather. */
            public selfUnitIgnoreWeather: number[];

            /** CoSkillCfg changeWeather. */
            public changeWeather: number[];

            /** CoSkillCfg selfUnitMoveCost. */
            public selfUnitMoveCost: number[];

            /** CoSkillCfg selfOffenseBonusByTileDefense. */
            public selfOffenseBonusByTileDefense: number[];

            /** CoSkillCfg selfDefenseBonusByTileDefense. */
            public selfDefenseBonusByTileDefense: number[];

            /** CoSkillCfg selfRepairAmountBonus. */
            public selfRepairAmountBonus: number[];

            /** CoSkillCfg selfOffenseBonusByEnemyTileDefense. */
            public selfOffenseBonusByEnemyTileDefense: number[];

            /** CoSkillCfg selfOffenseBonusByCounter. */
            public selfOffenseBonusByCounter: number[];

            /** CoSkillCfg selfPromotionBonusByProduce. */
            public selfPromotionBonusByProduce: number[];

            /**
             * Creates a new CoSkillCfg instance using the specified properties.
             * @param [properties] Properties to set
             * @returns CoSkillCfg instance
             */
            public static create(properties?: CommonProto.Config.ICoSkillCfg): CommonProto.Config.CoSkillCfg;

            /**
             * Encodes the specified CoSkillCfg message. Does not implicitly {@link CommonProto.Config.CoSkillCfg.verify|verify} messages.
             * @param message CoSkillCfg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.Config.ICoSkillCfg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified CoSkillCfg message, length delimited. Does not implicitly {@link CommonProto.Config.CoSkillCfg.verify|verify} messages.
             * @param message CoSkillCfg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.Config.ICoSkillCfg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CoSkillCfg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CoSkillCfg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.Config.CoSkillCfg;

            /**
             * Decodes a CoSkillCfg message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns CoSkillCfg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.Config.CoSkillCfg;

            /**
             * Verifies a CoSkillCfg message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a CoSkillCfg message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns CoSkillCfg
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.Config.CoSkillCfg;

            /**
             * Creates a plain object from a CoSkillCfg message. Also converts values to other types if specified.
             * @param message CoSkillCfg
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.Config.CoSkillCfg, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this CoSkillCfg to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a WeatherCfg. */
        interface IWeatherCfg {

            /** WeatherCfg weatherType */
            weatherType?: (number|null);

            /** WeatherCfg isDefault */
            isDefault?: (number|null);

            /** WeatherCfg fog */
            fog?: (number|null);

            /** WeatherCfg offenseBonus */
            offenseBonus?: (number[]|null);

            /** WeatherCfg movementBonus */
            movementBonus?: (number[]|null);

            /** WeatherCfg unitVisionFixed */
            unitVisionFixed?: (number[]|null);

            /** WeatherCfg tileVisionFixed */
            tileVisionFixed?: (number[]|null);

            /** WeatherCfg icon */
            icon?: (string|null);

            /** WeatherCfg lang */
            lang?: (number|null);

            /** WeatherCfg anim */
            anim?: (number|null);

            /** WeatherCfg tileTheme */
            tileTheme?: (number|null);
        }

        /** Represents a WeatherCfg. */
        class WeatherCfg implements IWeatherCfg {

            /**
             * Constructs a new WeatherCfg.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.Config.IWeatherCfg);

            /** WeatherCfg weatherType. */
            public weatherType: number;

            /** WeatherCfg isDefault. */
            public isDefault: number;

            /** WeatherCfg fog. */
            public fog: number;

            /** WeatherCfg offenseBonus. */
            public offenseBonus: number[];

            /** WeatherCfg movementBonus. */
            public movementBonus: number[];

            /** WeatherCfg unitVisionFixed. */
            public unitVisionFixed: number[];

            /** WeatherCfg tileVisionFixed. */
            public tileVisionFixed: number[];

            /** WeatherCfg icon. */
            public icon: string;

            /** WeatherCfg lang. */
            public lang: number;

            /** WeatherCfg anim. */
            public anim: number;

            /** WeatherCfg tileTheme. */
            public tileTheme: number;

            /**
             * Creates a new WeatherCfg instance using the specified properties.
             * @param [properties] Properties to set
             * @returns WeatherCfg instance
             */
            public static create(properties?: CommonProto.Config.IWeatherCfg): CommonProto.Config.WeatherCfg;

            /**
             * Encodes the specified WeatherCfg message. Does not implicitly {@link CommonProto.Config.WeatherCfg.verify|verify} messages.
             * @param message WeatherCfg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.Config.IWeatherCfg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified WeatherCfg message, length delimited. Does not implicitly {@link CommonProto.Config.WeatherCfg.verify|verify} messages.
             * @param message WeatherCfg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.Config.IWeatherCfg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a WeatherCfg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns WeatherCfg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.Config.WeatherCfg;

            /**
             * Decodes a WeatherCfg message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns WeatherCfg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.Config.WeatherCfg;

            /**
             * Verifies a WeatherCfg message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a WeatherCfg message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns WeatherCfg
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.Config.WeatherCfg;

            /**
             * Creates a plain object from a WeatherCfg message. Also converts values to other types if specified.
             * @param message WeatherCfg
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.Config.WeatherCfg, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this WeatherCfg to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a UserAvatarCfg. */
        interface IUserAvatarCfg {

            /** UserAvatarCfg avatarId */
            avatarId?: (number|null);

            /** UserAvatarCfg sortWeight */
            sortWeight?: (number|null);
        }

        /** Represents a UserAvatarCfg. */
        class UserAvatarCfg implements IUserAvatarCfg {

            /**
             * Constructs a new UserAvatarCfg.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.Config.IUserAvatarCfg);

            /** UserAvatarCfg avatarId. */
            public avatarId: number;

            /** UserAvatarCfg sortWeight. */
            public sortWeight: number;

            /**
             * Creates a new UserAvatarCfg instance using the specified properties.
             * @param [properties] Properties to set
             * @returns UserAvatarCfg instance
             */
            public static create(properties?: CommonProto.Config.IUserAvatarCfg): CommonProto.Config.UserAvatarCfg;

            /**
             * Encodes the specified UserAvatarCfg message. Does not implicitly {@link CommonProto.Config.UserAvatarCfg.verify|verify} messages.
             * @param message UserAvatarCfg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.Config.IUserAvatarCfg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified UserAvatarCfg message, length delimited. Does not implicitly {@link CommonProto.Config.UserAvatarCfg.verify|verify} messages.
             * @param message UserAvatarCfg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.Config.IUserAvatarCfg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a UserAvatarCfg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns UserAvatarCfg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.Config.UserAvatarCfg;

            /**
             * Decodes a UserAvatarCfg message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns UserAvatarCfg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.Config.UserAvatarCfg;

            /**
             * Verifies a UserAvatarCfg message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a UserAvatarCfg message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns UserAvatarCfg
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.Config.UserAvatarCfg;

            /**
             * Creates a plain object from a UserAvatarCfg message. Also converts values to other types if specified.
             * @param message UserAvatarCfg
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.Config.UserAvatarCfg, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this UserAvatarCfg to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a BgmSfxCfg. */
        interface IBgmSfxCfg {

            /** BgmSfxCfg code */
            code?: (number|null);

            /** BgmSfxCfg filename */
            filename?: (string|null);

            /** BgmSfxCfg isBgm */
            isBgm?: (number|null);

            /** BgmSfxCfg lang */
            lang?: (number|null);

            /** BgmSfxCfg sortWeight */
            sortWeight?: (number|null);

            /** BgmSfxCfg loopStart */
            loopStart?: (number|null);

            /** BgmSfxCfg loopEnd */
            loopEnd?: (number|null);
        }

        /** Represents a BgmSfxCfg. */
        class BgmSfxCfg implements IBgmSfxCfg {

            /**
             * Constructs a new BgmSfxCfg.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.Config.IBgmSfxCfg);

            /** BgmSfxCfg code. */
            public code: number;

            /** BgmSfxCfg filename. */
            public filename: string;

            /** BgmSfxCfg isBgm. */
            public isBgm: number;

            /** BgmSfxCfg lang. */
            public lang: number;

            /** BgmSfxCfg sortWeight. */
            public sortWeight: number;

            /** BgmSfxCfg loopStart. */
            public loopStart: number;

            /** BgmSfxCfg loopEnd. */
            public loopEnd: number;

            /**
             * Creates a new BgmSfxCfg instance using the specified properties.
             * @param [properties] Properties to set
             * @returns BgmSfxCfg instance
             */
            public static create(properties?: CommonProto.Config.IBgmSfxCfg): CommonProto.Config.BgmSfxCfg;

            /**
             * Encodes the specified BgmSfxCfg message. Does not implicitly {@link CommonProto.Config.BgmSfxCfg.verify|verify} messages.
             * @param message BgmSfxCfg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.Config.IBgmSfxCfg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified BgmSfxCfg message, length delimited. Does not implicitly {@link CommonProto.Config.BgmSfxCfg.verify|verify} messages.
             * @param message BgmSfxCfg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.Config.IBgmSfxCfg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a BgmSfxCfg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns BgmSfxCfg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.Config.BgmSfxCfg;

            /**
             * Decodes a BgmSfxCfg message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns BgmSfxCfg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.Config.BgmSfxCfg;

            /**
             * Verifies a BgmSfxCfg message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a BgmSfxCfg message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns BgmSfxCfg
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.Config.BgmSfxCfg;

            /**
             * Creates a plain object from a BgmSfxCfg message. Also converts values to other types if specified.
             * @param message BgmSfxCfg
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.Config.BgmSfxCfg, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this BgmSfxCfg to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a MoveTypeCfg. */
        interface IMoveTypeCfg {

            /** MoveTypeCfg moveType */
            moveType?: (number|null);

            /** MoveTypeCfg lang */
            lang?: (number|null);
        }

        /** Represents a MoveTypeCfg. */
        class MoveTypeCfg implements IMoveTypeCfg {

            /**
             * Constructs a new MoveTypeCfg.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.Config.IMoveTypeCfg);

            /** MoveTypeCfg moveType. */
            public moveType: number;

            /** MoveTypeCfg lang. */
            public lang: number;

            /**
             * Creates a new MoveTypeCfg instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MoveTypeCfg instance
             */
            public static create(properties?: CommonProto.Config.IMoveTypeCfg): CommonProto.Config.MoveTypeCfg;

            /**
             * Encodes the specified MoveTypeCfg message. Does not implicitly {@link CommonProto.Config.MoveTypeCfg.verify|verify} messages.
             * @param message MoveTypeCfg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.Config.IMoveTypeCfg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MoveTypeCfg message, length delimited. Does not implicitly {@link CommonProto.Config.MoveTypeCfg.verify|verify} messages.
             * @param message MoveTypeCfg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.Config.IMoveTypeCfg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MoveTypeCfg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MoveTypeCfg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.Config.MoveTypeCfg;

            /**
             * Decodes a MoveTypeCfg message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MoveTypeCfg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.Config.MoveTypeCfg;

            /**
             * Verifies a MoveTypeCfg message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MoveTypeCfg message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MoveTypeCfg
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.Config.MoveTypeCfg;

            /**
             * Creates a plain object from a MoveTypeCfg message. Also converts values to other types if specified.
             * @param message MoveTypeCfg
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.Config.MoveTypeCfg, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MoveTypeCfg to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a MapWeaponCfg. */
        interface IMapWeaponCfg {

            /** MapWeaponCfg mapWeaponType */
            mapWeaponType?: (number|null);

            /** MapWeaponCfg isCustom */
            isCustom?: (number|null);
        }

        /** Represents a MapWeaponCfg. */
        class MapWeaponCfg implements IMapWeaponCfg {

            /**
             * Constructs a new MapWeaponCfg.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.Config.IMapWeaponCfg);

            /** MapWeaponCfg mapWeaponType. */
            public mapWeaponType: number;

            /** MapWeaponCfg isCustom. */
            public isCustom: number;

            /**
             * Creates a new MapWeaponCfg instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MapWeaponCfg instance
             */
            public static create(properties?: CommonProto.Config.IMapWeaponCfg): CommonProto.Config.MapWeaponCfg;

            /**
             * Encodes the specified MapWeaponCfg message. Does not implicitly {@link CommonProto.Config.MapWeaponCfg.verify|verify} messages.
             * @param message MapWeaponCfg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.Config.IMapWeaponCfg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MapWeaponCfg message, length delimited. Does not implicitly {@link CommonProto.Config.MapWeaponCfg.verify|verify} messages.
             * @param message MapWeaponCfg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.Config.IMapWeaponCfg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MapWeaponCfg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MapWeaponCfg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.Config.MapWeaponCfg;

            /**
             * Decodes a MapWeaponCfg message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MapWeaponCfg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.Config.MapWeaponCfg;

            /**
             * Verifies a MapWeaponCfg message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MapWeaponCfg message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MapWeaponCfg
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.Config.MapWeaponCfg;

            /**
             * Creates a plain object from a MapWeaponCfg message. Also converts values to other types if specified.
             * @param message MapWeaponCfg
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.Config.MapWeaponCfg, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MapWeaponCfg to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a FullConfig. */
        interface IFullConfig {

            /** FullConfig System */
            System?: (CommonProto.Config.ISystemCfg|null);

            /** FullConfig TileCategory */
            TileCategory?: (CommonProto.Config.ITileCategoryCfg[]|null);

            /** FullConfig TileBase */
            TileBase?: (CommonProto.Config.ITileBaseCfg[]|null);

            /** FullConfig TileBaseSymmetry */
            TileBaseSymmetry?: (CommonProto.Config.ITileBaseSymmetryCfg[]|null);

            /** FullConfig TileObject */
            TileObject?: (CommonProto.Config.ITileObjectCfg[]|null);

            /** FullConfig TileObjectSymmetry */
            TileObjectSymmetry?: (CommonProto.Config.ITileObjectSymmetryCfg[]|null);

            /** FullConfig TileDecoration */
            TileDecoration?: (CommonProto.Config.ITileDecorationCfg[]|null);

            /** FullConfig TileDecorationSymmetry */
            TileDecorationSymmetry?: (CommonProto.Config.ITileDecorationSymmetryCfg[]|null);

            /** FullConfig TileTypeMapping */
            TileTypeMapping?: (CommonProto.Config.ITileTypeMappingCfg[]|null);

            /** FullConfig UnitCategory */
            UnitCategory?: (CommonProto.Config.IUnitCategoryCfg[]|null);

            /** FullConfig TileTemplate */
            TileTemplate?: (CommonProto.Config.ITileTemplateCfg[]|null);

            /** FullConfig UnitTemplate */
            UnitTemplate?: (CommonProto.Config.IUnitTemplateCfg[]|null);

            /** FullConfig DamageChart */
            DamageChart?: (CommonProto.Config.IDamageChartCfg[]|null);

            /** FullConfig MoveCost */
            MoveCost?: (CommonProto.Config.IMoveCostCfg[]|null);

            /** FullConfig UnitPromotion */
            UnitPromotion?: (CommonProto.Config.IUnitPromotionCfg[]|null);

            /** FullConfig VisionBonus */
            VisionBonus?: (CommonProto.Config.IVisionBonusCfg[]|null);

            /** FullConfig BuildableTile */
            BuildableTile?: (CommonProto.Config.IBuildableTileCfg[]|null);

            /** FullConfig PlayerRank */
            PlayerRank?: (CommonProto.Config.IPlayerRankCfg[]|null);

            /** FullConfig CoCategory */
            CoCategory?: (CommonProto.Config.ICoCategoryCfg[]|null);

            /** FullConfig CoBasic */
            CoBasic?: (CommonProto.Config.ICoBasicCfg[]|null);

            /** FullConfig CoSkill */
            CoSkill?: (CommonProto.Config.ICoSkillCfg[]|null);

            /** FullConfig Weather */
            Weather?: (CommonProto.Config.IWeatherCfg[]|null);

            /** FullConfig WeatherCategory */
            WeatherCategory?: (CommonProto.Config.IWeatherCategoryCfg[]|null);

            /** FullConfig UserAvatar */
            UserAvatar?: (CommonProto.Config.IUserAvatarCfg[]|null);

            /** FullConfig BgmSfx */
            BgmSfx?: (CommonProto.Config.IBgmSfxCfg[]|null);

            /** FullConfig MoveType */
            MoveType?: (CommonProto.Config.IMoveTypeCfg[]|null);

            /** FullConfig MapWeapon */
            MapWeapon?: (CommonProto.Config.IMapWeaponCfg[]|null);
        }

        /** Represents a FullConfig. */
        class FullConfig implements IFullConfig {

            /**
             * Constructs a new FullConfig.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.Config.IFullConfig);

            /** FullConfig System. */
            public System?: (CommonProto.Config.ISystemCfg|null);

            /** FullConfig TileCategory. */
            public TileCategory: CommonProto.Config.ITileCategoryCfg[];

            /** FullConfig TileBase. */
            public TileBase: CommonProto.Config.ITileBaseCfg[];

            /** FullConfig TileBaseSymmetry. */
            public TileBaseSymmetry: CommonProto.Config.ITileBaseSymmetryCfg[];

            /** FullConfig TileObject. */
            public TileObject: CommonProto.Config.ITileObjectCfg[];

            /** FullConfig TileObjectSymmetry. */
            public TileObjectSymmetry: CommonProto.Config.ITileObjectSymmetryCfg[];

            /** FullConfig TileDecoration. */
            public TileDecoration: CommonProto.Config.ITileDecorationCfg[];

            /** FullConfig TileDecorationSymmetry. */
            public TileDecorationSymmetry: CommonProto.Config.ITileDecorationSymmetryCfg[];

            /** FullConfig TileTypeMapping. */
            public TileTypeMapping: CommonProto.Config.ITileTypeMappingCfg[];

            /** FullConfig UnitCategory. */
            public UnitCategory: CommonProto.Config.IUnitCategoryCfg[];

            /** FullConfig TileTemplate. */
            public TileTemplate: CommonProto.Config.ITileTemplateCfg[];

            /** FullConfig UnitTemplate. */
            public UnitTemplate: CommonProto.Config.IUnitTemplateCfg[];

            /** FullConfig DamageChart. */
            public DamageChart: CommonProto.Config.IDamageChartCfg[];

            /** FullConfig MoveCost. */
            public MoveCost: CommonProto.Config.IMoveCostCfg[];

            /** FullConfig UnitPromotion. */
            public UnitPromotion: CommonProto.Config.IUnitPromotionCfg[];

            /** FullConfig VisionBonus. */
            public VisionBonus: CommonProto.Config.IVisionBonusCfg[];

            /** FullConfig BuildableTile. */
            public BuildableTile: CommonProto.Config.IBuildableTileCfg[];

            /** FullConfig PlayerRank. */
            public PlayerRank: CommonProto.Config.IPlayerRankCfg[];

            /** FullConfig CoCategory. */
            public CoCategory: CommonProto.Config.ICoCategoryCfg[];

            /** FullConfig CoBasic. */
            public CoBasic: CommonProto.Config.ICoBasicCfg[];

            /** FullConfig CoSkill. */
            public CoSkill: CommonProto.Config.ICoSkillCfg[];

            /** FullConfig Weather. */
            public Weather: CommonProto.Config.IWeatherCfg[];

            /** FullConfig WeatherCategory. */
            public WeatherCategory: CommonProto.Config.IWeatherCategoryCfg[];

            /** FullConfig UserAvatar. */
            public UserAvatar: CommonProto.Config.IUserAvatarCfg[];

            /** FullConfig BgmSfx. */
            public BgmSfx: CommonProto.Config.IBgmSfxCfg[];

            /** FullConfig MoveType. */
            public MoveType: CommonProto.Config.IMoveTypeCfg[];

            /** FullConfig MapWeapon. */
            public MapWeapon: CommonProto.Config.IMapWeaponCfg[];

            /**
             * Creates a new FullConfig instance using the specified properties.
             * @param [properties] Properties to set
             * @returns FullConfig instance
             */
            public static create(properties?: CommonProto.Config.IFullConfig): CommonProto.Config.FullConfig;

            /**
             * Encodes the specified FullConfig message. Does not implicitly {@link CommonProto.Config.FullConfig.verify|verify} messages.
             * @param message FullConfig message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.Config.IFullConfig, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified FullConfig message, length delimited. Does not implicitly {@link CommonProto.Config.FullConfig.verify|verify} messages.
             * @param message FullConfig message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.Config.IFullConfig, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a FullConfig message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns FullConfig
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.Config.FullConfig;

            /**
             * Decodes a FullConfig message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns FullConfig
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.Config.FullConfig;

            /**
             * Verifies a FullConfig message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a FullConfig message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns FullConfig
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.Config.FullConfig;

            /**
             * Creates a plain object from a FullConfig message. Also converts values to other types if specified.
             * @param message FullConfig
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.Config.FullConfig, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this FullConfig to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a Map. */
    interface IMap {
    }

    /** Represents a Map. */
    class Map implements IMap {

        /**
         * Constructs a new Map.
         * @param [properties] Properties to set
         */
        constructor(properties?: CommonProto.IMap);

        /**
         * Creates a new Map instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Map instance
         */
        public static create(properties?: CommonProto.IMap): CommonProto.Map;

        /**
         * Encodes the specified Map message. Does not implicitly {@link CommonProto.Map.verify|verify} messages.
         * @param message Map message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: CommonProto.IMap, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified Map message, length delimited. Does not implicitly {@link CommonProto.Map.verify|verify} messages.
         * @param message Map message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: CommonProto.IMap, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a Map message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Map
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.Map;

        /**
         * Decodes a Map message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Map
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.Map;

        /**
         * Verifies a Map message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Map message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Map
         */
        public static fromObject(object: { [k: string]: any }): CommonProto.Map;

        /**
         * Creates a plain object from a Map message. Also converts values to other types if specified.
         * @param message Map
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: CommonProto.Map, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Map to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace Map {

        /** Properties of a MapTag. */
        interface IMapTag {

            /** MapTag mapTagDataArray */
            mapTagDataArray?: (CommonProto.Map.MapTag.IMapTagSingleData[]|null);
        }

        /** Represents a MapTag. */
        class MapTag implements IMapTag {

            /**
             * Constructs a new MapTag.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.Map.IMapTag);

            /** MapTag mapTagDataArray. */
            public mapTagDataArray: CommonProto.Map.MapTag.IMapTagSingleData[];

            /**
             * Creates a new MapTag instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MapTag instance
             */
            public static create(properties?: CommonProto.Map.IMapTag): CommonProto.Map.MapTag;

            /**
             * Encodes the specified MapTag message. Does not implicitly {@link CommonProto.Map.MapTag.verify|verify} messages.
             * @param message MapTag message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.Map.IMapTag, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MapTag message, length delimited. Does not implicitly {@link CommonProto.Map.MapTag.verify|verify} messages.
             * @param message MapTag message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.Map.IMapTag, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MapTag message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MapTag
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.Map.MapTag;

            /**
             * Decodes a MapTag message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MapTag
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.Map.MapTag;

            /**
             * Verifies a MapTag message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MapTag message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MapTag
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.Map.MapTag;

            /**
             * Creates a plain object from a MapTag message. Also converts values to other types if specified.
             * @param message MapTag
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.Map.MapTag, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MapTag to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MapTag {

            /** Properties of a MapTagSingleData. */
            interface IMapTagSingleData {

                /** MapTagSingleData mapTagId */
                mapTagId?: (number|null);

                /** MapTagSingleData isEnabled */
                isEnabled?: (boolean|null);

                /** MapTagSingleData nameArray */
                nameArray?: (CommonProto.Structure.ILanguageText[]|null);
            }

            /** Represents a MapTagSingleData. */
            class MapTagSingleData implements IMapTagSingleData {

                /**
                 * Constructs a new MapTagSingleData.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.Map.MapTag.IMapTagSingleData);

                /** MapTagSingleData mapTagId. */
                public mapTagId: number;

                /** MapTagSingleData isEnabled. */
                public isEnabled: boolean;

                /** MapTagSingleData nameArray. */
                public nameArray: CommonProto.Structure.ILanguageText[];

                /**
                 * Creates a new MapTagSingleData instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns MapTagSingleData instance
                 */
                public static create(properties?: CommonProto.Map.MapTag.IMapTagSingleData): CommonProto.Map.MapTag.MapTagSingleData;

                /**
                 * Encodes the specified MapTagSingleData message. Does not implicitly {@link CommonProto.Map.MapTag.MapTagSingleData.verify|verify} messages.
                 * @param message MapTagSingleData message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.Map.MapTag.IMapTagSingleData, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified MapTagSingleData message, length delimited. Does not implicitly {@link CommonProto.Map.MapTag.MapTagSingleData.verify|verify} messages.
                 * @param message MapTagSingleData message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.Map.MapTag.IMapTagSingleData, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a MapTagSingleData message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MapTagSingleData
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.Map.MapTag.MapTagSingleData;

                /**
                 * Decodes a MapTagSingleData message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MapTagSingleData
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.Map.MapTag.MapTagSingleData;

                /**
                 * Verifies a MapTagSingleData message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MapTagSingleData message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MapTagSingleData
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.Map.MapTag.MapTagSingleData;

                /**
                 * Creates a plain object from a MapTagSingleData message. Also converts values to other types if specified.
                 * @param message MapTagSingleData
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.Map.MapTag.MapTagSingleData, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MapTagSingleData to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MapExtraText. */
        interface IMapExtraText {

            /** MapExtraText mapDescription */
            mapDescription?: (CommonProto.Structure.ILanguageText[]|null);
        }

        /** Represents a MapExtraText. */
        class MapExtraText implements IMapExtraText {

            /**
             * Constructs a new MapExtraText.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.Map.IMapExtraText);

            /** MapExtraText mapDescription. */
            public mapDescription: CommonProto.Structure.ILanguageText[];

            /**
             * Creates a new MapExtraText instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MapExtraText instance
             */
            public static create(properties?: CommonProto.Map.IMapExtraText): CommonProto.Map.MapExtraText;

            /**
             * Encodes the specified MapExtraText message. Does not implicitly {@link CommonProto.Map.MapExtraText.verify|verify} messages.
             * @param message MapExtraText message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.Map.IMapExtraText, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MapExtraText message, length delimited. Does not implicitly {@link CommonProto.Map.MapExtraText.verify|verify} messages.
             * @param message MapExtraText message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.Map.IMapExtraText, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MapExtraText message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MapExtraText
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.Map.MapExtraText;

            /**
             * Decodes a MapExtraText message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MapExtraText
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.Map.MapExtraText;

            /**
             * Verifies a MapExtraText message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MapExtraText message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MapExtraText
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.Map.MapExtraText;

            /**
             * Creates a plain object from a MapExtraText message. Also converts values to other types if specified.
             * @param message MapExtraText
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.Map.MapExtraText, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MapExtraText to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a WarEventFullData. */
        interface IWarEventFullData {

            /** WarEventFullData conditionArray */
            conditionArray?: (CommonProto.WarEvent.IWarEventCondition[]|null);

            /** WarEventFullData conditionNodeArray */
            conditionNodeArray?: (CommonProto.WarEvent.IWarEventConditionNode[]|null);

            /** WarEventFullData actionArray */
            actionArray?: (CommonProto.WarEvent.IWarEventAction[]|null);

            /** WarEventFullData eventArray */
            eventArray?: (CommonProto.WarEvent.IWarEvent[]|null);
        }

        /** Represents a WarEventFullData. */
        class WarEventFullData implements IWarEventFullData {

            /**
             * Constructs a new WarEventFullData.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.Map.IWarEventFullData);

            /** WarEventFullData conditionArray. */
            public conditionArray: CommonProto.WarEvent.IWarEventCondition[];

            /** WarEventFullData conditionNodeArray. */
            public conditionNodeArray: CommonProto.WarEvent.IWarEventConditionNode[];

            /** WarEventFullData actionArray. */
            public actionArray: CommonProto.WarEvent.IWarEventAction[];

            /** WarEventFullData eventArray. */
            public eventArray: CommonProto.WarEvent.IWarEvent[];

            /**
             * Creates a new WarEventFullData instance using the specified properties.
             * @param [properties] Properties to set
             * @returns WarEventFullData instance
             */
            public static create(properties?: CommonProto.Map.IWarEventFullData): CommonProto.Map.WarEventFullData;

            /**
             * Encodes the specified WarEventFullData message. Does not implicitly {@link CommonProto.Map.WarEventFullData.verify|verify} messages.
             * @param message WarEventFullData message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.Map.IWarEventFullData, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified WarEventFullData message, length delimited. Does not implicitly {@link CommonProto.Map.WarEventFullData.verify|verify} messages.
             * @param message WarEventFullData message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.Map.IWarEventFullData, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a WarEventFullData message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns WarEventFullData
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.Map.WarEventFullData;

            /**
             * Decodes a WarEventFullData message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns WarEventFullData
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.Map.WarEventFullData;

            /**
             * Verifies a WarEventFullData message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a WarEventFullData message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns WarEventFullData
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.Map.WarEventFullData;

            /**
             * Creates a plain object from a WarEventFullData message. Also converts values to other types if specified.
             * @param message WarEventFullData
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.Map.WarEventFullData, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this WarEventFullData to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a MapWarStatisticsForTurn. */
        interface IMapWarStatisticsForTurn {

            /** MapWarStatisticsForTurn turnIndex */
            turnIndex?: (number|null);

            /** MapWarStatisticsForTurn totalGames */
            totalGames?: (number|null);

            /** MapWarStatisticsForTurn gameResultArray */
            gameResultArray?: (number[]|null);
        }

        /** Represents a MapWarStatisticsForTurn. */
        class MapWarStatisticsForTurn implements IMapWarStatisticsForTurn {

            /**
             * Constructs a new MapWarStatisticsForTurn.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.Map.IMapWarStatisticsForTurn);

            /** MapWarStatisticsForTurn turnIndex. */
            public turnIndex: number;

            /** MapWarStatisticsForTurn totalGames. */
            public totalGames: number;

            /** MapWarStatisticsForTurn gameResultArray. */
            public gameResultArray: number[];

            /**
             * Creates a new MapWarStatisticsForTurn instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MapWarStatisticsForTurn instance
             */
            public static create(properties?: CommonProto.Map.IMapWarStatisticsForTurn): CommonProto.Map.MapWarStatisticsForTurn;

            /**
             * Encodes the specified MapWarStatisticsForTurn message. Does not implicitly {@link CommonProto.Map.MapWarStatisticsForTurn.verify|verify} messages.
             * @param message MapWarStatisticsForTurn message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.Map.IMapWarStatisticsForTurn, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MapWarStatisticsForTurn message, length delimited. Does not implicitly {@link CommonProto.Map.MapWarStatisticsForTurn.verify|verify} messages.
             * @param message MapWarStatisticsForTurn message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.Map.IMapWarStatisticsForTurn, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MapWarStatisticsForTurn message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MapWarStatisticsForTurn
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.Map.MapWarStatisticsForTurn;

            /**
             * Decodes a MapWarStatisticsForTurn message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MapWarStatisticsForTurn
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.Map.MapWarStatisticsForTurn;

            /**
             * Verifies a MapWarStatisticsForTurn message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MapWarStatisticsForTurn message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MapWarStatisticsForTurn
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.Map.MapWarStatisticsForTurn;

            /**
             * Creates a plain object from a MapWarStatisticsForTurn message. Also converts values to other types if specified.
             * @param message MapWarStatisticsForTurn
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.Map.MapWarStatisticsForTurn, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MapWarStatisticsForTurn to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a MapWarStatisticsForRule. */
        interface IMapWarStatisticsForRule {

            /** MapWarStatisticsForRule ruleId */
            ruleId?: (number|null);

            /** MapWarStatisticsForRule warType */
            warType?: (number|null);

            /** MapWarStatisticsForRule statisticsForTurnArray */
            statisticsForTurnArray?: (CommonProto.Map.IMapWarStatisticsForTurn[]|null);
        }

        /** Represents a MapWarStatisticsForRule. */
        class MapWarStatisticsForRule implements IMapWarStatisticsForRule {

            /**
             * Constructs a new MapWarStatisticsForRule.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.Map.IMapWarStatisticsForRule);

            /** MapWarStatisticsForRule ruleId. */
            public ruleId: number;

            /** MapWarStatisticsForRule warType. */
            public warType: number;

            /** MapWarStatisticsForRule statisticsForTurnArray. */
            public statisticsForTurnArray: CommonProto.Map.IMapWarStatisticsForTurn[];

            /**
             * Creates a new MapWarStatisticsForRule instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MapWarStatisticsForRule instance
             */
            public static create(properties?: CommonProto.Map.IMapWarStatisticsForRule): CommonProto.Map.MapWarStatisticsForRule;

            /**
             * Encodes the specified MapWarStatisticsForRule message. Does not implicitly {@link CommonProto.Map.MapWarStatisticsForRule.verify|verify} messages.
             * @param message MapWarStatisticsForRule message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.Map.IMapWarStatisticsForRule, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MapWarStatisticsForRule message, length delimited. Does not implicitly {@link CommonProto.Map.MapWarStatisticsForRule.verify|verify} messages.
             * @param message MapWarStatisticsForRule message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.Map.IMapWarStatisticsForRule, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MapWarStatisticsForRule message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MapWarStatisticsForRule
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.Map.MapWarStatisticsForRule;

            /**
             * Decodes a MapWarStatisticsForRule message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MapWarStatisticsForRule
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.Map.MapWarStatisticsForRule;

            /**
             * Verifies a MapWarStatisticsForRule message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MapWarStatisticsForRule message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MapWarStatisticsForRule
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.Map.MapWarStatisticsForRule;

            /**
             * Creates a plain object from a MapWarStatisticsForRule message. Also converts values to other types if specified.
             * @param message MapWarStatisticsForRule
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.Map.MapWarStatisticsForRule, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MapWarStatisticsForRule to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a MapWarStatistics. */
        interface IMapWarStatistics {

            /** MapWarStatistics statisticsForRuleArray */
            statisticsForRuleArray?: (CommonProto.Map.IMapWarStatisticsForRule[]|null);
        }

        /** Represents a MapWarStatistics. */
        class MapWarStatistics implements IMapWarStatistics {

            /**
             * Constructs a new MapWarStatistics.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.Map.IMapWarStatistics);

            /** MapWarStatistics statisticsForRuleArray. */
            public statisticsForRuleArray: CommonProto.Map.IMapWarStatisticsForRule[];

            /**
             * Creates a new MapWarStatistics instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MapWarStatistics instance
             */
            public static create(properties?: CommonProto.Map.IMapWarStatistics): CommonProto.Map.MapWarStatistics;

            /**
             * Encodes the specified MapWarStatistics message. Does not implicitly {@link CommonProto.Map.MapWarStatistics.verify|verify} messages.
             * @param message MapWarStatistics message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.Map.IMapWarStatistics, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MapWarStatistics message, length delimited. Does not implicitly {@link CommonProto.Map.MapWarStatistics.verify|verify} messages.
             * @param message MapWarStatistics message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.Map.IMapWarStatistics, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MapWarStatistics message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MapWarStatistics
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.Map.MapWarStatistics;

            /**
             * Decodes a MapWarStatistics message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MapWarStatistics
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.Map.MapWarStatistics;

            /**
             * Verifies a MapWarStatistics message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MapWarStatistics message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MapWarStatistics
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.Map.MapWarStatistics;

            /**
             * Creates a plain object from a MapWarStatistics message. Also converts values to other types if specified.
             * @param message MapWarStatistics
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.Map.MapWarStatistics, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MapWarStatistics to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a MapRawData. */
        interface IMapRawData {

            /** MapRawData mapId */
            mapId?: (number|null);

            /** MapRawData designerName */
            designerName?: (string|null);

            /** MapRawData designerUserId */
            designerUserId?: (number|null);

            /** MapRawData mapNameArray */
            mapNameArray?: (CommonProto.Structure.ILanguageText[]|null);

            /** MapRawData mapWidth */
            mapWidth?: (number|null);

            /** MapRawData mapHeight */
            mapHeight?: (number|null);

            /** MapRawData playersCountUnneutral */
            playersCountUnneutral?: (number|null);

            /** MapRawData modifiedTime */
            modifiedTime?: (number|null);

            /** MapRawData tileDataArray */
            tileDataArray?: (CommonProto.WarSerialization.ISerialTile[]|null);

            /** MapRawData unitDataArray */
            unitDataArray?: (CommonProto.WarSerialization.ISerialUnit[]|null);

            /** MapRawData templateWarRuleArray */
            templateWarRuleArray?: (CommonProto.WarRule.ITemplateWarRule[]|null);

            /** MapRawData warEventFullData */
            warEventFullData?: (CommonProto.Map.IWarEventFullData|null);

            /** MapRawData mapExtraText */
            mapExtraText?: (CommonProto.Map.IMapExtraText|null);

            /** MapRawData nextTemplateWarRuleId */
            nextTemplateWarRuleId?: (number|null);

            /** MapRawData mapTagIdFlags */
            mapTagIdFlags?: (number|null);
        }

        /** Represents a MapRawData. */
        class MapRawData implements IMapRawData {

            /**
             * Constructs a new MapRawData.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.Map.IMapRawData);

            /** MapRawData mapId. */
            public mapId: number;

            /** MapRawData designerName. */
            public designerName: string;

            /** MapRawData designerUserId. */
            public designerUserId: number;

            /** MapRawData mapNameArray. */
            public mapNameArray: CommonProto.Structure.ILanguageText[];

            /** MapRawData mapWidth. */
            public mapWidth: number;

            /** MapRawData mapHeight. */
            public mapHeight: number;

            /** MapRawData playersCountUnneutral. */
            public playersCountUnneutral: number;

            /** MapRawData modifiedTime. */
            public modifiedTime: number;

            /** MapRawData tileDataArray. */
            public tileDataArray: CommonProto.WarSerialization.ISerialTile[];

            /** MapRawData unitDataArray. */
            public unitDataArray: CommonProto.WarSerialization.ISerialUnit[];

            /** MapRawData templateWarRuleArray. */
            public templateWarRuleArray: CommonProto.WarRule.ITemplateWarRule[];

            /** MapRawData warEventFullData. */
            public warEventFullData?: (CommonProto.Map.IWarEventFullData|null);

            /** MapRawData mapExtraText. */
            public mapExtraText?: (CommonProto.Map.IMapExtraText|null);

            /** MapRawData nextTemplateWarRuleId. */
            public nextTemplateWarRuleId: number;

            /** MapRawData mapTagIdFlags. */
            public mapTagIdFlags: number;

            /**
             * Creates a new MapRawData instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MapRawData instance
             */
            public static create(properties?: CommonProto.Map.IMapRawData): CommonProto.Map.MapRawData;

            /**
             * Encodes the specified MapRawData message. Does not implicitly {@link CommonProto.Map.MapRawData.verify|verify} messages.
             * @param message MapRawData message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.Map.IMapRawData, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MapRawData message, length delimited. Does not implicitly {@link CommonProto.Map.MapRawData.verify|verify} messages.
             * @param message MapRawData message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.Map.IMapRawData, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MapRawData message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MapRawData
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.Map.MapRawData;

            /**
             * Decodes a MapRawData message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MapRawData
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.Map.MapRawData;

            /**
             * Verifies a MapRawData message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MapRawData message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MapRawData
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.Map.MapRawData;

            /**
             * Creates a plain object from a MapRawData message. Also converts values to other types if specified.
             * @param message MapRawData
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.Map.MapRawData, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MapRawData to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a MapExtraData. */
        interface IMapExtraData {

            /** MapExtraData mapId */
            mapId?: (number|null);

            /** MapExtraData isEnabled */
            isEnabled?: (boolean|null);

            /** MapExtraData totalRating */
            totalRating?: (number|null);

            /** MapExtraData totalRaters */
            totalRaters?: (number|null);

            /** MapExtraData mapWarStatistics */
            mapWarStatistics?: (CommonProto.Map.IMapWarStatistics|null);
        }

        /** Represents a MapExtraData. */
        class MapExtraData implements IMapExtraData {

            /**
             * Constructs a new MapExtraData.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.Map.IMapExtraData);

            /** MapExtraData mapId. */
            public mapId: number;

            /** MapExtraData isEnabled. */
            public isEnabled: boolean;

            /** MapExtraData totalRating. */
            public totalRating: number;

            /** MapExtraData totalRaters. */
            public totalRaters: number;

            /** MapExtraData mapWarStatistics. */
            public mapWarStatistics?: (CommonProto.Map.IMapWarStatistics|null);

            /**
             * Creates a new MapExtraData instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MapExtraData instance
             */
            public static create(properties?: CommonProto.Map.IMapExtraData): CommonProto.Map.MapExtraData;

            /**
             * Encodes the specified MapExtraData message. Does not implicitly {@link CommonProto.Map.MapExtraData.verify|verify} messages.
             * @param message MapExtraData message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.Map.IMapExtraData, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MapExtraData message, length delimited. Does not implicitly {@link CommonProto.Map.MapExtraData.verify|verify} messages.
             * @param message MapExtraData message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.Map.IMapExtraData, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MapExtraData message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MapExtraData
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.Map.MapExtraData;

            /**
             * Decodes a MapExtraData message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MapExtraData
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.Map.MapExtraData;

            /**
             * Verifies a MapExtraData message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MapExtraData message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MapExtraData
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.Map.MapExtraData;

            /**
             * Creates a plain object from a MapExtraData message. Also converts values to other types if specified.
             * @param message MapExtraData
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.Map.MapExtraData, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MapExtraData to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a MapBriefData. */
        interface IMapBriefData {

            /** MapBriefData mapExtraData */
            mapExtraData?: (CommonProto.Map.IMapExtraData|null);

            /** MapBriefData playersCountUnneutral */
            playersCountUnneutral?: (number|null);

            /** MapBriefData designerName */
            designerName?: (string|null);

            /** MapBriefData mapNameArray */
            mapNameArray?: (CommonProto.Structure.ILanguageText[]|null);

            /** MapBriefData mapTagIdFlags */
            mapTagIdFlags?: (number|null);

            /** MapBriefData ruleAvailability */
            ruleAvailability?: (CommonProto.WarRule.IRuleAvailability|null);
        }

        /** Represents a MapBriefData. */
        class MapBriefData implements IMapBriefData {

            /**
             * Constructs a new MapBriefData.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.Map.IMapBriefData);

            /** MapBriefData mapExtraData. */
            public mapExtraData?: (CommonProto.Map.IMapExtraData|null);

            /** MapBriefData playersCountUnneutral. */
            public playersCountUnneutral: number;

            /** MapBriefData designerName. */
            public designerName: string;

            /** MapBriefData mapNameArray. */
            public mapNameArray: CommonProto.Structure.ILanguageText[];

            /** MapBriefData mapTagIdFlags. */
            public mapTagIdFlags: number;

            /** MapBriefData ruleAvailability. */
            public ruleAvailability?: (CommonProto.WarRule.IRuleAvailability|null);

            /**
             * Creates a new MapBriefData instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MapBriefData instance
             */
            public static create(properties?: CommonProto.Map.IMapBriefData): CommonProto.Map.MapBriefData;

            /**
             * Encodes the specified MapBriefData message. Does not implicitly {@link CommonProto.Map.MapBriefData.verify|verify} messages.
             * @param message MapBriefData message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.Map.IMapBriefData, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MapBriefData message, length delimited. Does not implicitly {@link CommonProto.Map.MapBriefData.verify|verify} messages.
             * @param message MapBriefData message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.Map.IMapBriefData, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MapBriefData message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MapBriefData
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.Map.MapBriefData;

            /**
             * Decodes a MapBriefData message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MapBriefData
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.Map.MapBriefData;

            /**
             * Verifies a MapBriefData message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MapBriefData message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MapBriefData
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.Map.MapBriefData;

            /**
             * Creates a plain object from a MapBriefData message. Also converts values to other types if specified.
             * @param message MapBriefData
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.Map.MapBriefData, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MapBriefData to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a MapEditorData. */
        interface IMapEditorData {

            /** MapEditorData slotIndex */
            slotIndex?: (number|null);

            /** MapEditorData mapRawData */
            mapRawData?: (CommonProto.Map.IMapRawData|null);

            /** MapEditorData reviewStatus */
            reviewStatus?: (number|null);

            /** MapEditorData reviewComment */
            reviewComment?: (string|null);
        }

        /** Represents a MapEditorData. */
        class MapEditorData implements IMapEditorData {

            /**
             * Constructs a new MapEditorData.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.Map.IMapEditorData);

            /** MapEditorData slotIndex. */
            public slotIndex: number;

            /** MapEditorData mapRawData. */
            public mapRawData?: (CommonProto.Map.IMapRawData|null);

            /** MapEditorData reviewStatus. */
            public reviewStatus: number;

            /** MapEditorData reviewComment. */
            public reviewComment: string;

            /**
             * Creates a new MapEditorData instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MapEditorData instance
             */
            public static create(properties?: CommonProto.Map.IMapEditorData): CommonProto.Map.MapEditorData;

            /**
             * Encodes the specified MapEditorData message. Does not implicitly {@link CommonProto.Map.MapEditorData.verify|verify} messages.
             * @param message MapEditorData message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.Map.IMapEditorData, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MapEditorData message, length delimited. Does not implicitly {@link CommonProto.Map.MapEditorData.verify|verify} messages.
             * @param message MapEditorData message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.Map.IMapEditorData, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MapEditorData message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MapEditorData
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.Map.MapEditorData;

            /**
             * Decodes a MapEditorData message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MapEditorData
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.Map.MapEditorData;

            /**
             * Verifies a MapEditorData message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MapEditorData message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MapEditorData
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.Map.MapEditorData;

            /**
             * Creates a plain object from a MapEditorData message. Also converts values to other types if specified.
             * @param message MapEditorData
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.Map.MapEditorData, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MapEditorData to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a WarEvent. */
    interface IWarEvent {
    }

    /** Represents a WarEvent. */
    class WarEvent implements IWarEvent {

        /**
         * Constructs a new WarEvent.
         * @param [properties] Properties to set
         */
        constructor(properties?: CommonProto.IWarEvent);

        /**
         * Creates a new WarEvent instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WarEvent instance
         */
        public static create(properties?: CommonProto.IWarEvent): CommonProto.WarEvent;

        /**
         * Encodes the specified WarEvent message. Does not implicitly {@link CommonProto.WarEvent.verify|verify} messages.
         * @param message WarEvent message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: CommonProto.IWarEvent, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WarEvent message, length delimited. Does not implicitly {@link CommonProto.WarEvent.verify|verify} messages.
         * @param message WarEvent message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: CommonProto.IWarEvent, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarEvent message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarEvent
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarEvent;

        /**
         * Decodes a WarEvent message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WarEvent
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarEvent;

        /**
         * Verifies a WarEvent message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WarEvent message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WarEvent
         */
        public static fromObject(object: { [k: string]: any }): CommonProto.WarEvent;

        /**
         * Creates a plain object from a WarEvent message. Also converts values to other types if specified.
         * @param message WarEvent
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: CommonProto.WarEvent, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WarEvent to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace WarEvent {

        /** Properties of a WecCommonData. */
        interface IWecCommonData {

            /** WecCommonData conditionId */
            conditionId?: (number|null);
        }

        /** Represents a WecCommonData. */
        class WecCommonData implements IWecCommonData {

            /**
             * Constructs a new WecCommonData.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarEvent.IWecCommonData);

            /** WecCommonData conditionId. */
            public conditionId: number;

            /**
             * Creates a new WecCommonData instance using the specified properties.
             * @param [properties] Properties to set
             * @returns WecCommonData instance
             */
            public static create(properties?: CommonProto.WarEvent.IWecCommonData): CommonProto.WarEvent.WecCommonData;

            /**
             * Encodes the specified WecCommonData message. Does not implicitly {@link CommonProto.WarEvent.WecCommonData.verify|verify} messages.
             * @param message WecCommonData message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarEvent.IWecCommonData, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified WecCommonData message, length delimited. Does not implicitly {@link CommonProto.WarEvent.WecCommonData.verify|verify} messages.
             * @param message WecCommonData message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarEvent.IWecCommonData, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a WecCommonData message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns WecCommonData
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarEvent.WecCommonData;

            /**
             * Decodes a WecCommonData message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns WecCommonData
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarEvent.WecCommonData;

            /**
             * Verifies a WecCommonData message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a WecCommonData message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns WecCommonData
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarEvent.WecCommonData;

            /**
             * Creates a plain object from a WecCommonData message. Also converts values to other types if specified.
             * @param message WecCommonData
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarEvent.WecCommonData, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this WecCommonData to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a WecTurnAndPlayer. */
        interface IWecTurnAndPlayer {

            /** WecTurnAndPlayer turnIndex */
            turnIndex?: (number|null);

            /** WecTurnAndPlayer turnIndexComparator */
            turnIndexComparator?: (number|null);

            /** WecTurnAndPlayer turnIndexDivider */
            turnIndexDivider?: (number|null);

            /** WecTurnAndPlayer turnIndexRemainder */
            turnIndexRemainder?: (number|null);

            /** WecTurnAndPlayer turnIndexRemainderComparator */
            turnIndexRemainderComparator?: (number|null);

            /** WecTurnAndPlayer turnPhase */
            turnPhase?: (number|null);

            /** WecTurnAndPlayer playerIndexArray */
            playerIndexArray?: (number[]|null);
        }

        /** Represents a WecTurnAndPlayer. */
        class WecTurnAndPlayer implements IWecTurnAndPlayer {

            /**
             * Constructs a new WecTurnAndPlayer.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarEvent.IWecTurnAndPlayer);

            /** WecTurnAndPlayer turnIndex. */
            public turnIndex: number;

            /** WecTurnAndPlayer turnIndexComparator. */
            public turnIndexComparator: number;

            /** WecTurnAndPlayer turnIndexDivider. */
            public turnIndexDivider: number;

            /** WecTurnAndPlayer turnIndexRemainder. */
            public turnIndexRemainder: number;

            /** WecTurnAndPlayer turnIndexRemainderComparator. */
            public turnIndexRemainderComparator: number;

            /** WecTurnAndPlayer turnPhase. */
            public turnPhase: number;

            /** WecTurnAndPlayer playerIndexArray. */
            public playerIndexArray: number[];

            /**
             * Creates a new WecTurnAndPlayer instance using the specified properties.
             * @param [properties] Properties to set
             * @returns WecTurnAndPlayer instance
             */
            public static create(properties?: CommonProto.WarEvent.IWecTurnAndPlayer): CommonProto.WarEvent.WecTurnAndPlayer;

            /**
             * Encodes the specified WecTurnAndPlayer message. Does not implicitly {@link CommonProto.WarEvent.WecTurnAndPlayer.verify|verify} messages.
             * @param message WecTurnAndPlayer message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarEvent.IWecTurnAndPlayer, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified WecTurnAndPlayer message, length delimited. Does not implicitly {@link CommonProto.WarEvent.WecTurnAndPlayer.verify|verify} messages.
             * @param message WecTurnAndPlayer message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarEvent.IWecTurnAndPlayer, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a WecTurnAndPlayer message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns WecTurnAndPlayer
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarEvent.WecTurnAndPlayer;

            /**
             * Decodes a WecTurnAndPlayer message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns WecTurnAndPlayer
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarEvent.WecTurnAndPlayer;

            /**
             * Verifies a WecTurnAndPlayer message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a WecTurnAndPlayer message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns WecTurnAndPlayer
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarEvent.WecTurnAndPlayer;

            /**
             * Creates a plain object from a WecTurnAndPlayer message. Also converts values to other types if specified.
             * @param message WecTurnAndPlayer
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarEvent.WecTurnAndPlayer, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this WecTurnAndPlayer to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a WecWeatherAndFog. */
        interface IWecWeatherAndFog {

            /** WecWeatherAndFog weatherTypeArray */
            weatherTypeArray?: (number[]|null);

            /** WecWeatherAndFog hasFogCurrently */
            hasFogCurrently?: (boolean|null);
        }

        /** Represents a WecWeatherAndFog. */
        class WecWeatherAndFog implements IWecWeatherAndFog {

            /**
             * Constructs a new WecWeatherAndFog.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarEvent.IWecWeatherAndFog);

            /** WecWeatherAndFog weatherTypeArray. */
            public weatherTypeArray: number[];

            /** WecWeatherAndFog hasFogCurrently. */
            public hasFogCurrently: boolean;

            /**
             * Creates a new WecWeatherAndFog instance using the specified properties.
             * @param [properties] Properties to set
             * @returns WecWeatherAndFog instance
             */
            public static create(properties?: CommonProto.WarEvent.IWecWeatherAndFog): CommonProto.WarEvent.WecWeatherAndFog;

            /**
             * Encodes the specified WecWeatherAndFog message. Does not implicitly {@link CommonProto.WarEvent.WecWeatherAndFog.verify|verify} messages.
             * @param message WecWeatherAndFog message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarEvent.IWecWeatherAndFog, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified WecWeatherAndFog message, length delimited. Does not implicitly {@link CommonProto.WarEvent.WecWeatherAndFog.verify|verify} messages.
             * @param message WecWeatherAndFog message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarEvent.IWecWeatherAndFog, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a WecWeatherAndFog message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns WecWeatherAndFog
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarEvent.WecWeatherAndFog;

            /**
             * Decodes a WecWeatherAndFog message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns WecWeatherAndFog
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarEvent.WecWeatherAndFog;

            /**
             * Verifies a WecWeatherAndFog message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a WecWeatherAndFog message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns WecWeatherAndFog
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarEvent.WecWeatherAndFog;

            /**
             * Creates a plain object from a WecWeatherAndFog message. Also converts values to other types if specified.
             * @param message WecWeatherAndFog
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarEvent.WecWeatherAndFog, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this WecWeatherAndFog to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a WecEventCalledCount. */
        interface IWecEventCalledCount {

            /** WecEventCalledCount eventIdArray */
            eventIdArray?: (number[]|null);

            /** WecEventCalledCount eventsCount */
            eventsCount?: (number|null);

            /** WecEventCalledCount eventsCountComparator */
            eventsCountComparator?: (number|null);

            /** WecEventCalledCount timesTotal */
            timesTotal?: (number|null);

            /** WecEventCalledCount timesTotalComparator */
            timesTotalComparator?: (number|null);

            /** WecEventCalledCount timesInTurn */
            timesInTurn?: (number|null);

            /** WecEventCalledCount timesInTurnComparator */
            timesInTurnComparator?: (number|null);
        }

        /** Represents a WecEventCalledCount. */
        class WecEventCalledCount implements IWecEventCalledCount {

            /**
             * Constructs a new WecEventCalledCount.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarEvent.IWecEventCalledCount);

            /** WecEventCalledCount eventIdArray. */
            public eventIdArray: number[];

            /** WecEventCalledCount eventsCount. */
            public eventsCount: number;

            /** WecEventCalledCount eventsCountComparator. */
            public eventsCountComparator: number;

            /** WecEventCalledCount timesTotal. */
            public timesTotal: number;

            /** WecEventCalledCount timesTotalComparator. */
            public timesTotalComparator: number;

            /** WecEventCalledCount timesInTurn. */
            public timesInTurn: number;

            /** WecEventCalledCount timesInTurnComparator. */
            public timesInTurnComparator: number;

            /**
             * Creates a new WecEventCalledCount instance using the specified properties.
             * @param [properties] Properties to set
             * @returns WecEventCalledCount instance
             */
            public static create(properties?: CommonProto.WarEvent.IWecEventCalledCount): CommonProto.WarEvent.WecEventCalledCount;

            /**
             * Encodes the specified WecEventCalledCount message. Does not implicitly {@link CommonProto.WarEvent.WecEventCalledCount.verify|verify} messages.
             * @param message WecEventCalledCount message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarEvent.IWecEventCalledCount, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified WecEventCalledCount message, length delimited. Does not implicitly {@link CommonProto.WarEvent.WecEventCalledCount.verify|verify} messages.
             * @param message WecEventCalledCount message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarEvent.IWecEventCalledCount, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a WecEventCalledCount message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns WecEventCalledCount
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarEvent.WecEventCalledCount;

            /**
             * Decodes a WecEventCalledCount message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns WecEventCalledCount
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarEvent.WecEventCalledCount;

            /**
             * Verifies a WecEventCalledCount message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a WecEventCalledCount message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns WecEventCalledCount
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarEvent.WecEventCalledCount;

            /**
             * Creates a plain object from a WecEventCalledCount message. Also converts values to other types if specified.
             * @param message WecEventCalledCount
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarEvent.WecEventCalledCount, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this WecEventCalledCount to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a WecPlayerPresence. */
        interface IWecPlayerPresence {

            /** WecPlayerPresence playersCount */
            playersCount?: (number|null);

            /** WecPlayerPresence playersCountComparator */
            playersCountComparator?: (number|null);

            /** WecPlayerPresence playerIndexArray */
            playerIndexArray?: (number[]|null);

            /** WecPlayerPresence aliveStateArray */
            aliveStateArray?: (number[]|null);

            /** WecPlayerPresence fund */
            fund?: (number|null);

            /** WecPlayerPresence fundComparator */
            fundComparator?: (number|null);

            /** WecPlayerPresence energyPercentage */
            energyPercentage?: (number|null);

            /** WecPlayerPresence energyPercentageComparator */
            energyPercentageComparator?: (number|null);

            /** WecPlayerPresence coUsingSkillTypeArray */
            coUsingSkillTypeArray?: (number[]|null);

            /** WecPlayerPresence coCategoryIdArray */
            coCategoryIdArray?: (number[]|null);
        }

        /** Represents a WecPlayerPresence. */
        class WecPlayerPresence implements IWecPlayerPresence {

            /**
             * Constructs a new WecPlayerPresence.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarEvent.IWecPlayerPresence);

            /** WecPlayerPresence playersCount. */
            public playersCount: number;

            /** WecPlayerPresence playersCountComparator. */
            public playersCountComparator: number;

            /** WecPlayerPresence playerIndexArray. */
            public playerIndexArray: number[];

            /** WecPlayerPresence aliveStateArray. */
            public aliveStateArray: number[];

            /** WecPlayerPresence fund. */
            public fund: number;

            /** WecPlayerPresence fundComparator. */
            public fundComparator: number;

            /** WecPlayerPresence energyPercentage. */
            public energyPercentage: number;

            /** WecPlayerPresence energyPercentageComparator. */
            public energyPercentageComparator: number;

            /** WecPlayerPresence coUsingSkillTypeArray. */
            public coUsingSkillTypeArray: number[];

            /** WecPlayerPresence coCategoryIdArray. */
            public coCategoryIdArray: number[];

            /**
             * Creates a new WecPlayerPresence instance using the specified properties.
             * @param [properties] Properties to set
             * @returns WecPlayerPresence instance
             */
            public static create(properties?: CommonProto.WarEvent.IWecPlayerPresence): CommonProto.WarEvent.WecPlayerPresence;

            /**
             * Encodes the specified WecPlayerPresence message. Does not implicitly {@link CommonProto.WarEvent.WecPlayerPresence.verify|verify} messages.
             * @param message WecPlayerPresence message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarEvent.IWecPlayerPresence, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified WecPlayerPresence message, length delimited. Does not implicitly {@link CommonProto.WarEvent.WecPlayerPresence.verify|verify} messages.
             * @param message WecPlayerPresence message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarEvent.IWecPlayerPresence, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a WecPlayerPresence message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns WecPlayerPresence
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarEvent.WecPlayerPresence;

            /**
             * Decodes a WecPlayerPresence message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns WecPlayerPresence
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarEvent.WecPlayerPresence;

            /**
             * Verifies a WecPlayerPresence message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a WecPlayerPresence message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns WecPlayerPresence
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarEvent.WecPlayerPresence;

            /**
             * Creates a plain object from a WecPlayerPresence message. Also converts values to other types if specified.
             * @param message WecPlayerPresence
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarEvent.WecPlayerPresence, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this WecPlayerPresence to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a WecTilePresence. */
        interface IWecTilePresence {

            /** WecTilePresence playerIndexArray */
            playerIndexArray?: (number[]|null);

            /** WecTilePresence teamIndexArray */
            teamIndexArray?: (number[]|null);

            /** WecTilePresence tilesCount */
            tilesCount?: (number|null);

            /** WecTilePresence tilesCountComparator */
            tilesCountComparator?: (number|null);

            /** WecTilePresence tileTypeArray */
            tileTypeArray?: (number[]|null);

            /** WecTilePresence locationIdArray */
            locationIdArray?: (number[]|null);

            /** WecTilePresence gridIndexArray */
            gridIndexArray?: (CommonProto.Structure.IGridIndex[]|null);
        }

        /** Represents a WecTilePresence. */
        class WecTilePresence implements IWecTilePresence {

            /**
             * Constructs a new WecTilePresence.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarEvent.IWecTilePresence);

            /** WecTilePresence playerIndexArray. */
            public playerIndexArray: number[];

            /** WecTilePresence teamIndexArray. */
            public teamIndexArray: number[];

            /** WecTilePresence tilesCount. */
            public tilesCount: number;

            /** WecTilePresence tilesCountComparator. */
            public tilesCountComparator: number;

            /** WecTilePresence tileTypeArray. */
            public tileTypeArray: number[];

            /** WecTilePresence locationIdArray. */
            public locationIdArray: number[];

            /** WecTilePresence gridIndexArray. */
            public gridIndexArray: CommonProto.Structure.IGridIndex[];

            /**
             * Creates a new WecTilePresence instance using the specified properties.
             * @param [properties] Properties to set
             * @returns WecTilePresence instance
             */
            public static create(properties?: CommonProto.WarEvent.IWecTilePresence): CommonProto.WarEvent.WecTilePresence;

            /**
             * Encodes the specified WecTilePresence message. Does not implicitly {@link CommonProto.WarEvent.WecTilePresence.verify|verify} messages.
             * @param message WecTilePresence message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarEvent.IWecTilePresence, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified WecTilePresence message, length delimited. Does not implicitly {@link CommonProto.WarEvent.WecTilePresence.verify|verify} messages.
             * @param message WecTilePresence message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarEvent.IWecTilePresence, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a WecTilePresence message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns WecTilePresence
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarEvent.WecTilePresence;

            /**
             * Decodes a WecTilePresence message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns WecTilePresence
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarEvent.WecTilePresence;

            /**
             * Verifies a WecTilePresence message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a WecTilePresence message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns WecTilePresence
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarEvent.WecTilePresence;

            /**
             * Creates a plain object from a WecTilePresence message. Also converts values to other types if specified.
             * @param message WecTilePresence
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarEvent.WecTilePresence, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this WecTilePresence to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a WecUnitPresence. */
        interface IWecUnitPresence {

            /** WecUnitPresence playerIndexArray */
            playerIndexArray?: (number[]|null);

            /** WecUnitPresence teamIndexArray */
            teamIndexArray?: (number[]|null);

            /** WecUnitPresence unitsCount */
            unitsCount?: (number|null);

            /** WecUnitPresence unitsCountComparator */
            unitsCountComparator?: (number|null);

            /** WecUnitPresence unitTypeArray */
            unitTypeArray?: (number[]|null);

            /** WecUnitPresence locationIdArray */
            locationIdArray?: (number[]|null);

            /** WecUnitPresence gridIndexArray */
            gridIndexArray?: (CommonProto.Structure.IGridIndex[]|null);

            /** WecUnitPresence actionStateArray */
            actionStateArray?: (number[]|null);

            /** WecUnitPresence hasLoadedCo */
            hasLoadedCo?: (boolean|null);

            /** WecUnitPresence hp */
            hp?: (number|null);

            /** WecUnitPresence hpComparator */
            hpComparator?: (number|null);

            /** WecUnitPresence fuelPct */
            fuelPct?: (number|null);

            /** WecUnitPresence fuelPctComparator */
            fuelPctComparator?: (number|null);

            /** WecUnitPresence priAmmoPct */
            priAmmoPct?: (number|null);

            /** WecUnitPresence priAmmoPctComparator */
            priAmmoPctComparator?: (number|null);

            /** WecUnitPresence promotion */
            promotion?: (number|null);

            /** WecUnitPresence promotionComparator */
            promotionComparator?: (number|null);
        }

        /** Represents a WecUnitPresence. */
        class WecUnitPresence implements IWecUnitPresence {

            /**
             * Constructs a new WecUnitPresence.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarEvent.IWecUnitPresence);

            /** WecUnitPresence playerIndexArray. */
            public playerIndexArray: number[];

            /** WecUnitPresence teamIndexArray. */
            public teamIndexArray: number[];

            /** WecUnitPresence unitsCount. */
            public unitsCount: number;

            /** WecUnitPresence unitsCountComparator. */
            public unitsCountComparator: number;

            /** WecUnitPresence unitTypeArray. */
            public unitTypeArray: number[];

            /** WecUnitPresence locationIdArray. */
            public locationIdArray: number[];

            /** WecUnitPresence gridIndexArray. */
            public gridIndexArray: CommonProto.Structure.IGridIndex[];

            /** WecUnitPresence actionStateArray. */
            public actionStateArray: number[];

            /** WecUnitPresence hasLoadedCo. */
            public hasLoadedCo: boolean;

            /** WecUnitPresence hp. */
            public hp: number;

            /** WecUnitPresence hpComparator. */
            public hpComparator: number;

            /** WecUnitPresence fuelPct. */
            public fuelPct: number;

            /** WecUnitPresence fuelPctComparator. */
            public fuelPctComparator: number;

            /** WecUnitPresence priAmmoPct. */
            public priAmmoPct: number;

            /** WecUnitPresence priAmmoPctComparator. */
            public priAmmoPctComparator: number;

            /** WecUnitPresence promotion. */
            public promotion: number;

            /** WecUnitPresence promotionComparator. */
            public promotionComparator: number;

            /**
             * Creates a new WecUnitPresence instance using the specified properties.
             * @param [properties] Properties to set
             * @returns WecUnitPresence instance
             */
            public static create(properties?: CommonProto.WarEvent.IWecUnitPresence): CommonProto.WarEvent.WecUnitPresence;

            /**
             * Encodes the specified WecUnitPresence message. Does not implicitly {@link CommonProto.WarEvent.WecUnitPresence.verify|verify} messages.
             * @param message WecUnitPresence message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarEvent.IWecUnitPresence, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified WecUnitPresence message, length delimited. Does not implicitly {@link CommonProto.WarEvent.WecUnitPresence.verify|verify} messages.
             * @param message WecUnitPresence message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarEvent.IWecUnitPresence, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a WecUnitPresence message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns WecUnitPresence
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarEvent.WecUnitPresence;

            /**
             * Decodes a WecUnitPresence message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns WecUnitPresence
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarEvent.WecUnitPresence;

            /**
             * Verifies a WecUnitPresence message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a WecUnitPresence message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns WecUnitPresence
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarEvent.WecUnitPresence;

            /**
             * Creates a plain object from a WecUnitPresence message. Also converts values to other types if specified.
             * @param message WecUnitPresence
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarEvent.WecUnitPresence, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this WecUnitPresence to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a WecCustomCounter. */
        interface IWecCustomCounter {

            /** WecCustomCounter counterIdArray */
            counterIdArray?: (number[]|null);

            /** WecCustomCounter counterCount */
            counterCount?: (number|null);

            /** WecCustomCounter counterCountComparator */
            counterCountComparator?: (number|null);

            /** WecCustomCounter value */
            value?: (number|null);

            /** WecCustomCounter valueComparator */
            valueComparator?: (number|null);

            /** WecCustomCounter valueDivider */
            valueDivider?: (number|null);

            /** WecCustomCounter valueRemainder */
            valueRemainder?: (number|null);

            /** WecCustomCounter valueRemainderComparator */
            valueRemainderComparator?: (number|null);
        }

        /** Represents a WecCustomCounter. */
        class WecCustomCounter implements IWecCustomCounter {

            /**
             * Constructs a new WecCustomCounter.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarEvent.IWecCustomCounter);

            /** WecCustomCounter counterIdArray. */
            public counterIdArray: number[];

            /** WecCustomCounter counterCount. */
            public counterCount: number;

            /** WecCustomCounter counterCountComparator. */
            public counterCountComparator: number;

            /** WecCustomCounter value. */
            public value: number;

            /** WecCustomCounter valueComparator. */
            public valueComparator: number;

            /** WecCustomCounter valueDivider. */
            public valueDivider: number;

            /** WecCustomCounter valueRemainder. */
            public valueRemainder: number;

            /** WecCustomCounter valueRemainderComparator. */
            public valueRemainderComparator: number;

            /**
             * Creates a new WecCustomCounter instance using the specified properties.
             * @param [properties] Properties to set
             * @returns WecCustomCounter instance
             */
            public static create(properties?: CommonProto.WarEvent.IWecCustomCounter): CommonProto.WarEvent.WecCustomCounter;

            /**
             * Encodes the specified WecCustomCounter message. Does not implicitly {@link CommonProto.WarEvent.WecCustomCounter.verify|verify} messages.
             * @param message WecCustomCounter message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarEvent.IWecCustomCounter, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified WecCustomCounter message, length delimited. Does not implicitly {@link CommonProto.WarEvent.WecCustomCounter.verify|verify} messages.
             * @param message WecCustomCounter message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarEvent.IWecCustomCounter, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a WecCustomCounter message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns WecCustomCounter
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarEvent.WecCustomCounter;

            /**
             * Decodes a WecCustomCounter message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns WecCustomCounter
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarEvent.WecCustomCounter;

            /**
             * Verifies a WecCustomCounter message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a WecCustomCounter message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns WecCustomCounter
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarEvent.WecCustomCounter;

            /**
             * Creates a plain object from a WecCustomCounter message. Also converts values to other types if specified.
             * @param message WecCustomCounter
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarEvent.WecCustomCounter, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this WecCustomCounter to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a WecOngoingPersistentActionPresence. */
        interface IWecOngoingPersistentActionPresence {

            /** WecOngoingPersistentActionPresence ongoingActionIdArray */
            ongoingActionIdArray?: (number[]|null);

            /** WecOngoingPersistentActionPresence ongoingActionsCount */
            ongoingActionsCount?: (number|null);

            /** WecOngoingPersistentActionPresence ongoingActionsCountComparator */
            ongoingActionsCountComparator?: (number|null);
        }

        /** Represents a WecOngoingPersistentActionPresence. */
        class WecOngoingPersistentActionPresence implements IWecOngoingPersistentActionPresence {

            /**
             * Constructs a new WecOngoingPersistentActionPresence.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarEvent.IWecOngoingPersistentActionPresence);

            /** WecOngoingPersistentActionPresence ongoingActionIdArray. */
            public ongoingActionIdArray: number[];

            /** WecOngoingPersistentActionPresence ongoingActionsCount. */
            public ongoingActionsCount: number;

            /** WecOngoingPersistentActionPresence ongoingActionsCountComparator. */
            public ongoingActionsCountComparator: number;

            /**
             * Creates a new WecOngoingPersistentActionPresence instance using the specified properties.
             * @param [properties] Properties to set
             * @returns WecOngoingPersistentActionPresence instance
             */
            public static create(properties?: CommonProto.WarEvent.IWecOngoingPersistentActionPresence): CommonProto.WarEvent.WecOngoingPersistentActionPresence;

            /**
             * Encodes the specified WecOngoingPersistentActionPresence message. Does not implicitly {@link CommonProto.WarEvent.WecOngoingPersistentActionPresence.verify|verify} messages.
             * @param message WecOngoingPersistentActionPresence message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarEvent.IWecOngoingPersistentActionPresence, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified WecOngoingPersistentActionPresence message, length delimited. Does not implicitly {@link CommonProto.WarEvent.WecOngoingPersistentActionPresence.verify|verify} messages.
             * @param message WecOngoingPersistentActionPresence message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarEvent.IWecOngoingPersistentActionPresence, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a WecOngoingPersistentActionPresence message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns WecOngoingPersistentActionPresence
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarEvent.WecOngoingPersistentActionPresence;

            /**
             * Decodes a WecOngoingPersistentActionPresence message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns WecOngoingPersistentActionPresence
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarEvent.WecOngoingPersistentActionPresence;

            /**
             * Verifies a WecOngoingPersistentActionPresence message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a WecOngoingPersistentActionPresence message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns WecOngoingPersistentActionPresence
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarEvent.WecOngoingPersistentActionPresence;

            /**
             * Creates a plain object from a WecOngoingPersistentActionPresence message. Also converts values to other types if specified.
             * @param message WecOngoingPersistentActionPresence
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarEvent.WecOngoingPersistentActionPresence, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this WecOngoingPersistentActionPresence to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a WarEventCondition. */
        interface IWarEventCondition {

            /** WarEventCondition WecCommonData */
            WecCommonData?: (CommonProto.WarEvent.IWecCommonData|null);

            /** WarEventCondition WecTurnAndPlayer */
            WecTurnAndPlayer?: (CommonProto.WarEvent.IWecTurnAndPlayer|null);

            /** WarEventCondition WecWeatherAndFog */
            WecWeatherAndFog?: (CommonProto.WarEvent.IWecWeatherAndFog|null);

            /** WarEventCondition WecEventCalledCount */
            WecEventCalledCount?: (CommonProto.WarEvent.IWecEventCalledCount|null);

            /** WarEventCondition WecPlayerPresence */
            WecPlayerPresence?: (CommonProto.WarEvent.IWecPlayerPresence|null);

            /** WarEventCondition WecTilePresence */
            WecTilePresence?: (CommonProto.WarEvent.IWecTilePresence|null);

            /** WarEventCondition WecUnitPresence */
            WecUnitPresence?: (CommonProto.WarEvent.IWecUnitPresence|null);

            /** WarEventCondition WecCustomCounter */
            WecCustomCounter?: (CommonProto.WarEvent.IWecCustomCounter|null);

            /** WarEventCondition WecOngoingPersistentActionPresence */
            WecOngoingPersistentActionPresence?: (CommonProto.WarEvent.IWecOngoingPersistentActionPresence|null);
        }

        /** Represents a WarEventCondition. */
        class WarEventCondition implements IWarEventCondition {

            /**
             * Constructs a new WarEventCondition.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarEvent.IWarEventCondition);

            /** WarEventCondition WecCommonData. */
            public WecCommonData?: (CommonProto.WarEvent.IWecCommonData|null);

            /** WarEventCondition WecTurnAndPlayer. */
            public WecTurnAndPlayer?: (CommonProto.WarEvent.IWecTurnAndPlayer|null);

            /** WarEventCondition WecWeatherAndFog. */
            public WecWeatherAndFog?: (CommonProto.WarEvent.IWecWeatherAndFog|null);

            /** WarEventCondition WecEventCalledCount. */
            public WecEventCalledCount?: (CommonProto.WarEvent.IWecEventCalledCount|null);

            /** WarEventCondition WecPlayerPresence. */
            public WecPlayerPresence?: (CommonProto.WarEvent.IWecPlayerPresence|null);

            /** WarEventCondition WecTilePresence. */
            public WecTilePresence?: (CommonProto.WarEvent.IWecTilePresence|null);

            /** WarEventCondition WecUnitPresence. */
            public WecUnitPresence?: (CommonProto.WarEvent.IWecUnitPresence|null);

            /** WarEventCondition WecCustomCounter. */
            public WecCustomCounter?: (CommonProto.WarEvent.IWecCustomCounter|null);

            /** WarEventCondition WecOngoingPersistentActionPresence. */
            public WecOngoingPersistentActionPresence?: (CommonProto.WarEvent.IWecOngoingPersistentActionPresence|null);

            /**
             * Creates a new WarEventCondition instance using the specified properties.
             * @param [properties] Properties to set
             * @returns WarEventCondition instance
             */
            public static create(properties?: CommonProto.WarEvent.IWarEventCondition): CommonProto.WarEvent.WarEventCondition;

            /**
             * Encodes the specified WarEventCondition message. Does not implicitly {@link CommonProto.WarEvent.WarEventCondition.verify|verify} messages.
             * @param message WarEventCondition message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarEvent.IWarEventCondition, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified WarEventCondition message, length delimited. Does not implicitly {@link CommonProto.WarEvent.WarEventCondition.verify|verify} messages.
             * @param message WarEventCondition message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarEvent.IWarEventCondition, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a WarEventCondition message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns WarEventCondition
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarEvent.WarEventCondition;

            /**
             * Decodes a WarEventCondition message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns WarEventCondition
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarEvent.WarEventCondition;

            /**
             * Verifies a WarEventCondition message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a WarEventCondition message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns WarEventCondition
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarEvent.WarEventCondition;

            /**
             * Creates a plain object from a WarEventCondition message. Also converts values to other types if specified.
             * @param message WarEventCondition
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarEvent.WarEventCondition, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this WarEventCondition to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a WarEventConditionNode. */
        interface IWarEventConditionNode {

            /** WarEventConditionNode nodeId */
            nodeId?: (number|null);

            /** WarEventConditionNode isAnd */
            isAnd?: (boolean|null);

            /** WarEventConditionNode subNodeIdArray */
            subNodeIdArray?: (number[]|null);

            /** WarEventConditionNode conditionIdArray */
            conditionIdArray?: (number[]|null);
        }

        /** Represents a WarEventConditionNode. */
        class WarEventConditionNode implements IWarEventConditionNode {

            /**
             * Constructs a new WarEventConditionNode.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarEvent.IWarEventConditionNode);

            /** WarEventConditionNode nodeId. */
            public nodeId: number;

            /** WarEventConditionNode isAnd. */
            public isAnd: boolean;

            /** WarEventConditionNode subNodeIdArray. */
            public subNodeIdArray: number[];

            /** WarEventConditionNode conditionIdArray. */
            public conditionIdArray: number[];

            /**
             * Creates a new WarEventConditionNode instance using the specified properties.
             * @param [properties] Properties to set
             * @returns WarEventConditionNode instance
             */
            public static create(properties?: CommonProto.WarEvent.IWarEventConditionNode): CommonProto.WarEvent.WarEventConditionNode;

            /**
             * Encodes the specified WarEventConditionNode message. Does not implicitly {@link CommonProto.WarEvent.WarEventConditionNode.verify|verify} messages.
             * @param message WarEventConditionNode message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarEvent.IWarEventConditionNode, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified WarEventConditionNode message, length delimited. Does not implicitly {@link CommonProto.WarEvent.WarEventConditionNode.verify|verify} messages.
             * @param message WarEventConditionNode message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarEvent.IWarEventConditionNode, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a WarEventConditionNode message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns WarEventConditionNode
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarEvent.WarEventConditionNode;

            /**
             * Decodes a WarEventConditionNode message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns WarEventConditionNode
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarEvent.WarEventConditionNode;

            /**
             * Verifies a WarEventConditionNode message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a WarEventConditionNode message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns WarEventConditionNode
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarEvent.WarEventConditionNode;

            /**
             * Creates a plain object from a WarEventConditionNode message. Also converts values to other types if specified.
             * @param message WarEventConditionNode
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarEvent.WarEventConditionNode, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this WarEventConditionNode to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a WeaCommonData. */
        interface IWeaCommonData {

            /** WeaCommonData actionId */
            actionId?: (number|null);
        }

        /** Represents a WeaCommonData. */
        class WeaCommonData implements IWeaCommonData {

            /**
             * Constructs a new WeaCommonData.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarEvent.IWeaCommonData);

            /** WeaCommonData actionId. */
            public actionId: number;

            /**
             * Creates a new WeaCommonData instance using the specified properties.
             * @param [properties] Properties to set
             * @returns WeaCommonData instance
             */
            public static create(properties?: CommonProto.WarEvent.IWeaCommonData): CommonProto.WarEvent.WeaCommonData;

            /**
             * Encodes the specified WeaCommonData message. Does not implicitly {@link CommonProto.WarEvent.WeaCommonData.verify|verify} messages.
             * @param message WeaCommonData message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarEvent.IWeaCommonData, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified WeaCommonData message, length delimited. Does not implicitly {@link CommonProto.WarEvent.WeaCommonData.verify|verify} messages.
             * @param message WeaCommonData message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarEvent.IWeaCommonData, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a WeaCommonData message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns WeaCommonData
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarEvent.WeaCommonData;

            /**
             * Decodes a WeaCommonData message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns WeaCommonData
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarEvent.WeaCommonData;

            /**
             * Verifies a WeaCommonData message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a WeaCommonData message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns WeaCommonData
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarEvent.WeaCommonData;

            /**
             * Creates a plain object from a WeaCommonData message. Also converts values to other types if specified.
             * @param message WeaCommonData
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarEvent.WeaCommonData, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this WeaCommonData to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a WeaAddUnit. */
        interface IWeaAddUnit {

            /** WeaAddUnit unitArray */
            unitArray?: (CommonProto.WarEvent.WeaAddUnit.IDataForAddUnit[]|null);
        }

        /** Represents a WeaAddUnit. */
        class WeaAddUnit implements IWeaAddUnit {

            /**
             * Constructs a new WeaAddUnit.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarEvent.IWeaAddUnit);

            /** WeaAddUnit unitArray. */
            public unitArray: CommonProto.WarEvent.WeaAddUnit.IDataForAddUnit[];

            /**
             * Creates a new WeaAddUnit instance using the specified properties.
             * @param [properties] Properties to set
             * @returns WeaAddUnit instance
             */
            public static create(properties?: CommonProto.WarEvent.IWeaAddUnit): CommonProto.WarEvent.WeaAddUnit;

            /**
             * Encodes the specified WeaAddUnit message. Does not implicitly {@link CommonProto.WarEvent.WeaAddUnit.verify|verify} messages.
             * @param message WeaAddUnit message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarEvent.IWeaAddUnit, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified WeaAddUnit message, length delimited. Does not implicitly {@link CommonProto.WarEvent.WeaAddUnit.verify|verify} messages.
             * @param message WeaAddUnit message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarEvent.IWeaAddUnit, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a WeaAddUnit message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns WeaAddUnit
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarEvent.WeaAddUnit;

            /**
             * Decodes a WeaAddUnit message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns WeaAddUnit
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarEvent.WeaAddUnit;

            /**
             * Verifies a WeaAddUnit message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a WeaAddUnit message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns WeaAddUnit
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarEvent.WeaAddUnit;

            /**
             * Creates a plain object from a WeaAddUnit message. Also converts values to other types if specified.
             * @param message WeaAddUnit
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarEvent.WeaAddUnit, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this WeaAddUnit to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace WeaAddUnit {

            /** Properties of a DataForAddUnit. */
            interface IDataForAddUnit {

                /** DataForAddUnit unitData */
                unitData?: (CommonProto.WarSerialization.ISerialUnit|null);

                /** DataForAddUnit canBeBlockedByUnit */
                canBeBlockedByUnit?: (boolean|null);

                /** DataForAddUnit needMovableTile */
                needMovableTile?: (boolean|null);
            }

            /** Represents a DataForAddUnit. */
            class DataForAddUnit implements IDataForAddUnit {

                /**
                 * Constructs a new DataForAddUnit.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.WarEvent.WeaAddUnit.IDataForAddUnit);

                /** DataForAddUnit unitData. */
                public unitData?: (CommonProto.WarSerialization.ISerialUnit|null);

                /** DataForAddUnit canBeBlockedByUnit. */
                public canBeBlockedByUnit: boolean;

                /** DataForAddUnit needMovableTile. */
                public needMovableTile: boolean;

                /**
                 * Creates a new DataForAddUnit instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns DataForAddUnit instance
                 */
                public static create(properties?: CommonProto.WarEvent.WeaAddUnit.IDataForAddUnit): CommonProto.WarEvent.WeaAddUnit.DataForAddUnit;

                /**
                 * Encodes the specified DataForAddUnit message. Does not implicitly {@link CommonProto.WarEvent.WeaAddUnit.DataForAddUnit.verify|verify} messages.
                 * @param message DataForAddUnit message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.WarEvent.WeaAddUnit.IDataForAddUnit, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified DataForAddUnit message, length delimited. Does not implicitly {@link CommonProto.WarEvent.WeaAddUnit.DataForAddUnit.verify|verify} messages.
                 * @param message DataForAddUnit message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.WarEvent.WeaAddUnit.IDataForAddUnit, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a DataForAddUnit message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DataForAddUnit
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarEvent.WeaAddUnit.DataForAddUnit;

                /**
                 * Decodes a DataForAddUnit message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DataForAddUnit
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarEvent.WeaAddUnit.DataForAddUnit;

                /**
                 * Verifies a DataForAddUnit message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DataForAddUnit message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DataForAddUnit
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.WarEvent.WeaAddUnit.DataForAddUnit;

                /**
                 * Creates a plain object from a DataForAddUnit message. Also converts values to other types if specified.
                 * @param message DataForAddUnit
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.WarEvent.WeaAddUnit.DataForAddUnit, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DataForAddUnit to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a WeaDialogue. */
        interface IWeaDialogue {

            /** WeaDialogue dataArray */
            dataArray?: (CommonProto.WarEvent.WeaDialogue.IDataForDialogue[]|null);

            /** WeaDialogue backgroundId */
            backgroundId?: (number|null);
        }

        /** Represents a WeaDialogue. */
        class WeaDialogue implements IWeaDialogue {

            /**
             * Constructs a new WeaDialogue.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarEvent.IWeaDialogue);

            /** WeaDialogue dataArray. */
            public dataArray: CommonProto.WarEvent.WeaDialogue.IDataForDialogue[];

            /** WeaDialogue backgroundId. */
            public backgroundId: number;

            /**
             * Creates a new WeaDialogue instance using the specified properties.
             * @param [properties] Properties to set
             * @returns WeaDialogue instance
             */
            public static create(properties?: CommonProto.WarEvent.IWeaDialogue): CommonProto.WarEvent.WeaDialogue;

            /**
             * Encodes the specified WeaDialogue message. Does not implicitly {@link CommonProto.WarEvent.WeaDialogue.verify|verify} messages.
             * @param message WeaDialogue message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarEvent.IWeaDialogue, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified WeaDialogue message, length delimited. Does not implicitly {@link CommonProto.WarEvent.WeaDialogue.verify|verify} messages.
             * @param message WeaDialogue message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarEvent.IWeaDialogue, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a WeaDialogue message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns WeaDialogue
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarEvent.WeaDialogue;

            /**
             * Decodes a WeaDialogue message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns WeaDialogue
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarEvent.WeaDialogue;

            /**
             * Verifies a WeaDialogue message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a WeaDialogue message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns WeaDialogue
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarEvent.WeaDialogue;

            /**
             * Creates a plain object from a WeaDialogue message. Also converts values to other types if specified.
             * @param message WeaDialogue
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarEvent.WeaDialogue, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this WeaDialogue to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace WeaDialogue {

            /** Properties of a DataForCoDialogue. */
            interface IDataForCoDialogue {

                /** DataForCoDialogue side */
                side?: (number|null);

                /** DataForCoDialogue coId */
                coId?: (number|null);

                /** DataForCoDialogue textArray */
                textArray?: (CommonProto.Structure.ILanguageText[]|null);

                /** DataForCoDialogue nameArray */
                nameArray?: (CommonProto.Structure.ILanguageText[]|null);
            }

            /** Represents a DataForCoDialogue. */
            class DataForCoDialogue implements IDataForCoDialogue {

                /**
                 * Constructs a new DataForCoDialogue.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.WarEvent.WeaDialogue.IDataForCoDialogue);

                /** DataForCoDialogue side. */
                public side: number;

                /** DataForCoDialogue coId. */
                public coId: number;

                /** DataForCoDialogue textArray. */
                public textArray: CommonProto.Structure.ILanguageText[];

                /** DataForCoDialogue nameArray. */
                public nameArray: CommonProto.Structure.ILanguageText[];

                /**
                 * Creates a new DataForCoDialogue instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns DataForCoDialogue instance
                 */
                public static create(properties?: CommonProto.WarEvent.WeaDialogue.IDataForCoDialogue): CommonProto.WarEvent.WeaDialogue.DataForCoDialogue;

                /**
                 * Encodes the specified DataForCoDialogue message. Does not implicitly {@link CommonProto.WarEvent.WeaDialogue.DataForCoDialogue.verify|verify} messages.
                 * @param message DataForCoDialogue message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.WarEvent.WeaDialogue.IDataForCoDialogue, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified DataForCoDialogue message, length delimited. Does not implicitly {@link CommonProto.WarEvent.WeaDialogue.DataForCoDialogue.verify|verify} messages.
                 * @param message DataForCoDialogue message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.WarEvent.WeaDialogue.IDataForCoDialogue, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a DataForCoDialogue message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DataForCoDialogue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarEvent.WeaDialogue.DataForCoDialogue;

                /**
                 * Decodes a DataForCoDialogue message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DataForCoDialogue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarEvent.WeaDialogue.DataForCoDialogue;

                /**
                 * Verifies a DataForCoDialogue message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DataForCoDialogue message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DataForCoDialogue
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.WarEvent.WeaDialogue.DataForCoDialogue;

                /**
                 * Creates a plain object from a DataForCoDialogue message. Also converts values to other types if specified.
                 * @param message DataForCoDialogue
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.WarEvent.WeaDialogue.DataForCoDialogue, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DataForCoDialogue to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a DataForAside. */
            interface IDataForAside {

                /** DataForAside textArray */
                textArray?: (CommonProto.Structure.ILanguageText[]|null);
            }

            /** Represents a DataForAside. */
            class DataForAside implements IDataForAside {

                /**
                 * Constructs a new DataForAside.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.WarEvent.WeaDialogue.IDataForAside);

                /** DataForAside textArray. */
                public textArray: CommonProto.Structure.ILanguageText[];

                /**
                 * Creates a new DataForAside instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns DataForAside instance
                 */
                public static create(properties?: CommonProto.WarEvent.WeaDialogue.IDataForAside): CommonProto.WarEvent.WeaDialogue.DataForAside;

                /**
                 * Encodes the specified DataForAside message. Does not implicitly {@link CommonProto.WarEvent.WeaDialogue.DataForAside.verify|verify} messages.
                 * @param message DataForAside message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.WarEvent.WeaDialogue.IDataForAside, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified DataForAside message, length delimited. Does not implicitly {@link CommonProto.WarEvent.WeaDialogue.DataForAside.verify|verify} messages.
                 * @param message DataForAside message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.WarEvent.WeaDialogue.IDataForAside, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a DataForAside message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DataForAside
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarEvent.WeaDialogue.DataForAside;

                /**
                 * Decodes a DataForAside message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DataForAside
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarEvent.WeaDialogue.DataForAside;

                /**
                 * Verifies a DataForAside message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DataForAside message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DataForAside
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.WarEvent.WeaDialogue.DataForAside;

                /**
                 * Creates a plain object from a DataForAside message. Also converts values to other types if specified.
                 * @param message DataForAside
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.WarEvent.WeaDialogue.DataForAside, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DataForAside to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a DataForDialogue. */
            interface IDataForDialogue {

                /** DataForDialogue dataForCoDialogue */
                dataForCoDialogue?: (CommonProto.WarEvent.WeaDialogue.IDataForCoDialogue|null);

                /** DataForDialogue dataForAside */
                dataForAside?: (CommonProto.WarEvent.WeaDialogue.IDataForAside|null);
            }

            /** Represents a DataForDialogue. */
            class DataForDialogue implements IDataForDialogue {

                /**
                 * Constructs a new DataForDialogue.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.WarEvent.WeaDialogue.IDataForDialogue);

                /** DataForDialogue dataForCoDialogue. */
                public dataForCoDialogue?: (CommonProto.WarEvent.WeaDialogue.IDataForCoDialogue|null);

                /** DataForDialogue dataForAside. */
                public dataForAside?: (CommonProto.WarEvent.WeaDialogue.IDataForAside|null);

                /**
                 * Creates a new DataForDialogue instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns DataForDialogue instance
                 */
                public static create(properties?: CommonProto.WarEvent.WeaDialogue.IDataForDialogue): CommonProto.WarEvent.WeaDialogue.DataForDialogue;

                /**
                 * Encodes the specified DataForDialogue message. Does not implicitly {@link CommonProto.WarEvent.WeaDialogue.DataForDialogue.verify|verify} messages.
                 * @param message DataForDialogue message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.WarEvent.WeaDialogue.IDataForDialogue, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified DataForDialogue message, length delimited. Does not implicitly {@link CommonProto.WarEvent.WeaDialogue.DataForDialogue.verify|verify} messages.
                 * @param message DataForDialogue message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.WarEvent.WeaDialogue.IDataForDialogue, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a DataForDialogue message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DataForDialogue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarEvent.WeaDialogue.DataForDialogue;

                /**
                 * Decodes a DataForDialogue message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DataForDialogue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarEvent.WeaDialogue.DataForDialogue;

                /**
                 * Verifies a DataForDialogue message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DataForDialogue message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DataForDialogue
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.WarEvent.WeaDialogue.DataForDialogue;

                /**
                 * Creates a plain object from a DataForDialogue message. Also converts values to other types if specified.
                 * @param message DataForDialogue
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.WarEvent.WeaDialogue.DataForDialogue, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DataForDialogue to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a WeaSimpleDialogue. */
        interface IWeaSimpleDialogue {

            /** WeaSimpleDialogue dataArray */
            dataArray?: (CommonProto.WarEvent.WeaSimpleDialogue.IDataForDialogue[]|null);
        }

        /** Represents a WeaSimpleDialogue. */
        class WeaSimpleDialogue implements IWeaSimpleDialogue {

            /**
             * Constructs a new WeaSimpleDialogue.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarEvent.IWeaSimpleDialogue);

            /** WeaSimpleDialogue dataArray. */
            public dataArray: CommonProto.WarEvent.WeaSimpleDialogue.IDataForDialogue[];

            /**
             * Creates a new WeaSimpleDialogue instance using the specified properties.
             * @param [properties] Properties to set
             * @returns WeaSimpleDialogue instance
             */
            public static create(properties?: CommonProto.WarEvent.IWeaSimpleDialogue): CommonProto.WarEvent.WeaSimpleDialogue;

            /**
             * Encodes the specified WeaSimpleDialogue message. Does not implicitly {@link CommonProto.WarEvent.WeaSimpleDialogue.verify|verify} messages.
             * @param message WeaSimpleDialogue message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarEvent.IWeaSimpleDialogue, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified WeaSimpleDialogue message, length delimited. Does not implicitly {@link CommonProto.WarEvent.WeaSimpleDialogue.verify|verify} messages.
             * @param message WeaSimpleDialogue message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarEvent.IWeaSimpleDialogue, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a WeaSimpleDialogue message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns WeaSimpleDialogue
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarEvent.WeaSimpleDialogue;

            /**
             * Decodes a WeaSimpleDialogue message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns WeaSimpleDialogue
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarEvent.WeaSimpleDialogue;

            /**
             * Verifies a WeaSimpleDialogue message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a WeaSimpleDialogue message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns WeaSimpleDialogue
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarEvent.WeaSimpleDialogue;

            /**
             * Creates a plain object from a WeaSimpleDialogue message. Also converts values to other types if specified.
             * @param message WeaSimpleDialogue
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarEvent.WeaSimpleDialogue, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this WeaSimpleDialogue to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace WeaSimpleDialogue {

            /** Properties of a DataForCoDialogue. */
            interface IDataForCoDialogue {

                /** DataForCoDialogue side */
                side?: (number|null);

                /** DataForCoDialogue coId */
                coId?: (number|null);

                /** DataForCoDialogue textArray */
                textArray?: (CommonProto.Structure.ILanguageText[]|null);

                /** DataForCoDialogue nameArray */
                nameArray?: (CommonProto.Structure.ILanguageText[]|null);
            }

            /** Represents a DataForCoDialogue. */
            class DataForCoDialogue implements IDataForCoDialogue {

                /**
                 * Constructs a new DataForCoDialogue.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.WarEvent.WeaSimpleDialogue.IDataForCoDialogue);

                /** DataForCoDialogue side. */
                public side: number;

                /** DataForCoDialogue coId. */
                public coId: number;

                /** DataForCoDialogue textArray. */
                public textArray: CommonProto.Structure.ILanguageText[];

                /** DataForCoDialogue nameArray. */
                public nameArray: CommonProto.Structure.ILanguageText[];

                /**
                 * Creates a new DataForCoDialogue instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns DataForCoDialogue instance
                 */
                public static create(properties?: CommonProto.WarEvent.WeaSimpleDialogue.IDataForCoDialogue): CommonProto.WarEvent.WeaSimpleDialogue.DataForCoDialogue;

                /**
                 * Encodes the specified DataForCoDialogue message. Does not implicitly {@link CommonProto.WarEvent.WeaSimpleDialogue.DataForCoDialogue.verify|verify} messages.
                 * @param message DataForCoDialogue message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.WarEvent.WeaSimpleDialogue.IDataForCoDialogue, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified DataForCoDialogue message, length delimited. Does not implicitly {@link CommonProto.WarEvent.WeaSimpleDialogue.DataForCoDialogue.verify|verify} messages.
                 * @param message DataForCoDialogue message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.WarEvent.WeaSimpleDialogue.IDataForCoDialogue, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a DataForCoDialogue message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DataForCoDialogue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarEvent.WeaSimpleDialogue.DataForCoDialogue;

                /**
                 * Decodes a DataForCoDialogue message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DataForCoDialogue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarEvent.WeaSimpleDialogue.DataForCoDialogue;

                /**
                 * Verifies a DataForCoDialogue message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DataForCoDialogue message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DataForCoDialogue
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.WarEvent.WeaSimpleDialogue.DataForCoDialogue;

                /**
                 * Creates a plain object from a DataForCoDialogue message. Also converts values to other types if specified.
                 * @param message DataForCoDialogue
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.WarEvent.WeaSimpleDialogue.DataForCoDialogue, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DataForCoDialogue to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a DataForDialogue. */
            interface IDataForDialogue {

                /** DataForDialogue dataForCoDialogue */
                dataForCoDialogue?: (CommonProto.WarEvent.WeaSimpleDialogue.IDataForCoDialogue|null);
            }

            /** Represents a DataForDialogue. */
            class DataForDialogue implements IDataForDialogue {

                /**
                 * Constructs a new DataForDialogue.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.WarEvent.WeaSimpleDialogue.IDataForDialogue);

                /** DataForDialogue dataForCoDialogue. */
                public dataForCoDialogue?: (CommonProto.WarEvent.WeaSimpleDialogue.IDataForCoDialogue|null);

                /**
                 * Creates a new DataForDialogue instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns DataForDialogue instance
                 */
                public static create(properties?: CommonProto.WarEvent.WeaSimpleDialogue.IDataForDialogue): CommonProto.WarEvent.WeaSimpleDialogue.DataForDialogue;

                /**
                 * Encodes the specified DataForDialogue message. Does not implicitly {@link CommonProto.WarEvent.WeaSimpleDialogue.DataForDialogue.verify|verify} messages.
                 * @param message DataForDialogue message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.WarEvent.WeaSimpleDialogue.IDataForDialogue, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified DataForDialogue message, length delimited. Does not implicitly {@link CommonProto.WarEvent.WeaSimpleDialogue.DataForDialogue.verify|verify} messages.
                 * @param message DataForDialogue message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.WarEvent.WeaSimpleDialogue.IDataForDialogue, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a DataForDialogue message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DataForDialogue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarEvent.WeaSimpleDialogue.DataForDialogue;

                /**
                 * Decodes a DataForDialogue message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DataForDialogue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarEvent.WeaSimpleDialogue.DataForDialogue;

                /**
                 * Verifies a DataForDialogue message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DataForDialogue message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DataForDialogue
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.WarEvent.WeaSimpleDialogue.DataForDialogue;

                /**
                 * Creates a plain object from a DataForDialogue message. Also converts values to other types if specified.
                 * @param message DataForDialogue
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.WarEvent.WeaSimpleDialogue.DataForDialogue, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DataForDialogue to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a WeaSetViewpoint. */
        interface IWeaSetViewpoint {

            /** WeaSetViewpoint gridIndex */
            gridIndex?: (CommonProto.Structure.IGridIndex|null);

            /** WeaSetViewpoint needFocusEffect */
            needFocusEffect?: (boolean|null);
        }

        /** Represents a WeaSetViewpoint. */
        class WeaSetViewpoint implements IWeaSetViewpoint {

            /**
             * Constructs a new WeaSetViewpoint.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarEvent.IWeaSetViewpoint);

            /** WeaSetViewpoint gridIndex. */
            public gridIndex?: (CommonProto.Structure.IGridIndex|null);

            /** WeaSetViewpoint needFocusEffect. */
            public needFocusEffect: boolean;

            /**
             * Creates a new WeaSetViewpoint instance using the specified properties.
             * @param [properties] Properties to set
             * @returns WeaSetViewpoint instance
             */
            public static create(properties?: CommonProto.WarEvent.IWeaSetViewpoint): CommonProto.WarEvent.WeaSetViewpoint;

            /**
             * Encodes the specified WeaSetViewpoint message. Does not implicitly {@link CommonProto.WarEvent.WeaSetViewpoint.verify|verify} messages.
             * @param message WeaSetViewpoint message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarEvent.IWeaSetViewpoint, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified WeaSetViewpoint message, length delimited. Does not implicitly {@link CommonProto.WarEvent.WeaSetViewpoint.verify|verify} messages.
             * @param message WeaSetViewpoint message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarEvent.IWeaSetViewpoint, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a WeaSetViewpoint message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns WeaSetViewpoint
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarEvent.WeaSetViewpoint;

            /**
             * Decodes a WeaSetViewpoint message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns WeaSetViewpoint
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarEvent.WeaSetViewpoint;

            /**
             * Verifies a WeaSetViewpoint message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a WeaSetViewpoint message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns WeaSetViewpoint
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarEvent.WeaSetViewpoint;

            /**
             * Creates a plain object from a WeaSetViewpoint message. Also converts values to other types if specified.
             * @param message WeaSetViewpoint
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarEvent.WeaSetViewpoint, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this WeaSetViewpoint to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a WeaSetWeather. */
        interface IWeaSetWeather {

            /** WeaSetWeather weatherType */
            weatherType?: (number|null);

            /** WeaSetWeather weatherTurnsCount */
            weatherTurnsCount?: (number|null);
        }

        /** Represents a WeaSetWeather. */
        class WeaSetWeather implements IWeaSetWeather {

            /**
             * Constructs a new WeaSetWeather.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarEvent.IWeaSetWeather);

            /** WeaSetWeather weatherType. */
            public weatherType: number;

            /** WeaSetWeather weatherTurnsCount. */
            public weatherTurnsCount: number;

            /**
             * Creates a new WeaSetWeather instance using the specified properties.
             * @param [properties] Properties to set
             * @returns WeaSetWeather instance
             */
            public static create(properties?: CommonProto.WarEvent.IWeaSetWeather): CommonProto.WarEvent.WeaSetWeather;

            /**
             * Encodes the specified WeaSetWeather message. Does not implicitly {@link CommonProto.WarEvent.WeaSetWeather.verify|verify} messages.
             * @param message WeaSetWeather message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarEvent.IWeaSetWeather, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified WeaSetWeather message, length delimited. Does not implicitly {@link CommonProto.WarEvent.WeaSetWeather.verify|verify} messages.
             * @param message WeaSetWeather message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarEvent.IWeaSetWeather, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a WeaSetWeather message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns WeaSetWeather
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarEvent.WeaSetWeather;

            /**
             * Decodes a WeaSetWeather message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns WeaSetWeather
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarEvent.WeaSetWeather;

            /**
             * Verifies a WeaSetWeather message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a WeaSetWeather message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns WeaSetWeather
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarEvent.WeaSetWeather;

            /**
             * Creates a plain object from a WeaSetWeather message. Also converts values to other types if specified.
             * @param message WeaSetWeather
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarEvent.WeaSetWeather, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this WeaSetWeather to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a WeaPlayBgm. */
        interface IWeaPlayBgm {

            /** WeaPlayBgm bgmCode */
            bgmCode?: (number|null);

            /** WeaPlayBgm useCoBgm */
            useCoBgm?: (boolean|null);
        }

        /** Represents a WeaPlayBgm. */
        class WeaPlayBgm implements IWeaPlayBgm {

            /**
             * Constructs a new WeaPlayBgm.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarEvent.IWeaPlayBgm);

            /** WeaPlayBgm bgmCode. */
            public bgmCode: number;

            /** WeaPlayBgm useCoBgm. */
            public useCoBgm: boolean;

            /**
             * Creates a new WeaPlayBgm instance using the specified properties.
             * @param [properties] Properties to set
             * @returns WeaPlayBgm instance
             */
            public static create(properties?: CommonProto.WarEvent.IWeaPlayBgm): CommonProto.WarEvent.WeaPlayBgm;

            /**
             * Encodes the specified WeaPlayBgm message. Does not implicitly {@link CommonProto.WarEvent.WeaPlayBgm.verify|verify} messages.
             * @param message WeaPlayBgm message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarEvent.IWeaPlayBgm, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified WeaPlayBgm message, length delimited. Does not implicitly {@link CommonProto.WarEvent.WeaPlayBgm.verify|verify} messages.
             * @param message WeaPlayBgm message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarEvent.IWeaPlayBgm, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a WeaPlayBgm message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns WeaPlayBgm
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarEvent.WeaPlayBgm;

            /**
             * Decodes a WeaPlayBgm message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns WeaPlayBgm
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarEvent.WeaPlayBgm;

            /**
             * Verifies a WeaPlayBgm message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a WeaPlayBgm message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns WeaPlayBgm
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarEvent.WeaPlayBgm;

            /**
             * Creates a plain object from a WeaPlayBgm message. Also converts values to other types if specified.
             * @param message WeaPlayBgm
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarEvent.WeaPlayBgm, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this WeaPlayBgm to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a WeaSetForceFogCode. */
        interface IWeaSetForceFogCode {

            /** WeaSetForceFogCode forceFogCode */
            forceFogCode?: (number|null);

            /** WeaSetForceFogCode turnsCount */
            turnsCount?: (number|null);
        }

        /** Represents a WeaSetForceFogCode. */
        class WeaSetForceFogCode implements IWeaSetForceFogCode {

            /**
             * Constructs a new WeaSetForceFogCode.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarEvent.IWeaSetForceFogCode);

            /** WeaSetForceFogCode forceFogCode. */
            public forceFogCode: number;

            /** WeaSetForceFogCode turnsCount. */
            public turnsCount: number;

            /**
             * Creates a new WeaSetForceFogCode instance using the specified properties.
             * @param [properties] Properties to set
             * @returns WeaSetForceFogCode instance
             */
            public static create(properties?: CommonProto.WarEvent.IWeaSetForceFogCode): CommonProto.WarEvent.WeaSetForceFogCode;

            /**
             * Encodes the specified WeaSetForceFogCode message. Does not implicitly {@link CommonProto.WarEvent.WeaSetForceFogCode.verify|verify} messages.
             * @param message WeaSetForceFogCode message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarEvent.IWeaSetForceFogCode, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified WeaSetForceFogCode message, length delimited. Does not implicitly {@link CommonProto.WarEvent.WeaSetForceFogCode.verify|verify} messages.
             * @param message WeaSetForceFogCode message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarEvent.IWeaSetForceFogCode, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a WeaSetForceFogCode message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns WeaSetForceFogCode
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarEvent.WeaSetForceFogCode;

            /**
             * Decodes a WeaSetForceFogCode message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns WeaSetForceFogCode
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarEvent.WeaSetForceFogCode;

            /**
             * Verifies a WeaSetForceFogCode message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a WeaSetForceFogCode message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns WeaSetForceFogCode
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarEvent.WeaSetForceFogCode;

            /**
             * Creates a plain object from a WeaSetForceFogCode message. Also converts values to other types if specified.
             * @param message WeaSetForceFogCode
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarEvent.WeaSetForceFogCode, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this WeaSetForceFogCode to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a WeaSetCustomCounter. */
        interface IWeaSetCustomCounter {

            /** WeaSetCustomCounter customCounterIdArray */
            customCounterIdArray?: (number[]|null);

            /** WeaSetCustomCounter multiplierPercentage */
            multiplierPercentage?: (number|null);

            /** WeaSetCustomCounter deltaValue */
            deltaValue?: (number|null);
        }

        /** Represents a WeaSetCustomCounter. */
        class WeaSetCustomCounter implements IWeaSetCustomCounter {

            /**
             * Constructs a new WeaSetCustomCounter.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarEvent.IWeaSetCustomCounter);

            /** WeaSetCustomCounter customCounterIdArray. */
            public customCounterIdArray: number[];

            /** WeaSetCustomCounter multiplierPercentage. */
            public multiplierPercentage: number;

            /** WeaSetCustomCounter deltaValue. */
            public deltaValue: number;

            /**
             * Creates a new WeaSetCustomCounter instance using the specified properties.
             * @param [properties] Properties to set
             * @returns WeaSetCustomCounter instance
             */
            public static create(properties?: CommonProto.WarEvent.IWeaSetCustomCounter): CommonProto.WarEvent.WeaSetCustomCounter;

            /**
             * Encodes the specified WeaSetCustomCounter message. Does not implicitly {@link CommonProto.WarEvent.WeaSetCustomCounter.verify|verify} messages.
             * @param message WeaSetCustomCounter message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarEvent.IWeaSetCustomCounter, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified WeaSetCustomCounter message, length delimited. Does not implicitly {@link CommonProto.WarEvent.WeaSetCustomCounter.verify|verify} messages.
             * @param message WeaSetCustomCounter message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarEvent.IWeaSetCustomCounter, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a WeaSetCustomCounter message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns WeaSetCustomCounter
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarEvent.WeaSetCustomCounter;

            /**
             * Decodes a WeaSetCustomCounter message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns WeaSetCustomCounter
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarEvent.WeaSetCustomCounter;

            /**
             * Verifies a WeaSetCustomCounter message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a WeaSetCustomCounter message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns WeaSetCustomCounter
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarEvent.WeaSetCustomCounter;

            /**
             * Creates a plain object from a WeaSetCustomCounter message. Also converts values to other types if specified.
             * @param message WeaSetCustomCounter
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarEvent.WeaSetCustomCounter, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this WeaSetCustomCounter to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a WeaStopPersistentAction. */
        interface IWeaStopPersistentAction {

            /** WeaStopPersistentAction actionIdArray */
            actionIdArray?: (number[]|null);
        }

        /** Represents a WeaStopPersistentAction. */
        class WeaStopPersistentAction implements IWeaStopPersistentAction {

            /**
             * Constructs a new WeaStopPersistentAction.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarEvent.IWeaStopPersistentAction);

            /** WeaStopPersistentAction actionIdArray. */
            public actionIdArray: number[];

            /**
             * Creates a new WeaStopPersistentAction instance using the specified properties.
             * @param [properties] Properties to set
             * @returns WeaStopPersistentAction instance
             */
            public static create(properties?: CommonProto.WarEvent.IWeaStopPersistentAction): CommonProto.WarEvent.WeaStopPersistentAction;

            /**
             * Encodes the specified WeaStopPersistentAction message. Does not implicitly {@link CommonProto.WarEvent.WeaStopPersistentAction.verify|verify} messages.
             * @param message WeaStopPersistentAction message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarEvent.IWeaStopPersistentAction, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified WeaStopPersistentAction message, length delimited. Does not implicitly {@link CommonProto.WarEvent.WeaStopPersistentAction.verify|verify} messages.
             * @param message WeaStopPersistentAction message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarEvent.IWeaStopPersistentAction, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a WeaStopPersistentAction message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns WeaStopPersistentAction
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarEvent.WeaStopPersistentAction;

            /**
             * Decodes a WeaStopPersistentAction message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns WeaStopPersistentAction
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarEvent.WeaStopPersistentAction;

            /**
             * Verifies a WeaStopPersistentAction message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a WeaStopPersistentAction message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns WeaStopPersistentAction
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarEvent.WeaStopPersistentAction;

            /**
             * Creates a plain object from a WeaStopPersistentAction message. Also converts values to other types if specified.
             * @param message WeaStopPersistentAction
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarEvent.WeaStopPersistentAction, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this WeaStopPersistentAction to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a WeaSetPlayerState. */
        interface IWeaSetPlayerState {

            /** WeaSetPlayerState conPlayerIndexArray */
            conPlayerIndexArray?: (number[]|null);

            /** WeaSetPlayerState actFundMultiplierPercentage */
            actFundMultiplierPercentage?: (number|null);

            /** WeaSetPlayerState actFundDeltaValue */
            actFundDeltaValue?: (number|null);

            /** WeaSetPlayerState actCoEnergyMultiplierPct */
            actCoEnergyMultiplierPct?: (number|null);

            /** WeaSetPlayerState actCoEnergyDeltaPct */
            actCoEnergyDeltaPct?: (number|null);

            /** WeaSetPlayerState actAliveState */
            actAliveState?: (number|null);

            /** WeaSetPlayerState conAliveStateArray */
            conAliveStateArray?: (number[]|null);

            /** WeaSetPlayerState conFund */
            conFund?: (number|null);

            /** WeaSetPlayerState conFundComparator */
            conFundComparator?: (number|null);

            /** WeaSetPlayerState conEnergyPercentage */
            conEnergyPercentage?: (number|null);

            /** WeaSetPlayerState conEnergyPercentageComparator */
            conEnergyPercentageComparator?: (number|null);

            /** WeaSetPlayerState conCoUsingSkillTypeArray */
            conCoUsingSkillTypeArray?: (number[]|null);
        }

        /** Represents a WeaSetPlayerState. */
        class WeaSetPlayerState implements IWeaSetPlayerState {

            /**
             * Constructs a new WeaSetPlayerState.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarEvent.IWeaSetPlayerState);

            /** WeaSetPlayerState conPlayerIndexArray. */
            public conPlayerIndexArray: number[];

            /** WeaSetPlayerState actFundMultiplierPercentage. */
            public actFundMultiplierPercentage: number;

            /** WeaSetPlayerState actFundDeltaValue. */
            public actFundDeltaValue: number;

            /** WeaSetPlayerState actCoEnergyMultiplierPct. */
            public actCoEnergyMultiplierPct: number;

            /** WeaSetPlayerState actCoEnergyDeltaPct. */
            public actCoEnergyDeltaPct: number;

            /** WeaSetPlayerState actAliveState. */
            public actAliveState: number;

            /** WeaSetPlayerState conAliveStateArray. */
            public conAliveStateArray: number[];

            /** WeaSetPlayerState conFund. */
            public conFund: number;

            /** WeaSetPlayerState conFundComparator. */
            public conFundComparator: number;

            /** WeaSetPlayerState conEnergyPercentage. */
            public conEnergyPercentage: number;

            /** WeaSetPlayerState conEnergyPercentageComparator. */
            public conEnergyPercentageComparator: number;

            /** WeaSetPlayerState conCoUsingSkillTypeArray. */
            public conCoUsingSkillTypeArray: number[];

            /**
             * Creates a new WeaSetPlayerState instance using the specified properties.
             * @param [properties] Properties to set
             * @returns WeaSetPlayerState instance
             */
            public static create(properties?: CommonProto.WarEvent.IWeaSetPlayerState): CommonProto.WarEvent.WeaSetPlayerState;

            /**
             * Encodes the specified WeaSetPlayerState message. Does not implicitly {@link CommonProto.WarEvent.WeaSetPlayerState.verify|verify} messages.
             * @param message WeaSetPlayerState message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarEvent.IWeaSetPlayerState, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified WeaSetPlayerState message, length delimited. Does not implicitly {@link CommonProto.WarEvent.WeaSetPlayerState.verify|verify} messages.
             * @param message WeaSetPlayerState message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarEvent.IWeaSetPlayerState, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a WeaSetPlayerState message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns WeaSetPlayerState
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarEvent.WeaSetPlayerState;

            /**
             * Decodes a WeaSetPlayerState message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns WeaSetPlayerState
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarEvent.WeaSetPlayerState;

            /**
             * Verifies a WeaSetPlayerState message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a WeaSetPlayerState message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns WeaSetPlayerState
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarEvent.WeaSetPlayerState;

            /**
             * Creates a plain object from a WeaSetPlayerState message. Also converts values to other types if specified.
             * @param message WeaSetPlayerState
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarEvent.WeaSetPlayerState, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this WeaSetPlayerState to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a WeaSetUnitState. */
        interface IWeaSetUnitState {

            /** WeaSetUnitState conPlayerIndexArray */
            conPlayerIndexArray?: (number[]|null);

            /** WeaSetUnitState conTeamIndexArray */
            conTeamIndexArray?: (number[]|null);

            /** WeaSetUnitState conUnitTypeArray */
            conUnitTypeArray?: (number[]|null);

            /** WeaSetUnitState conLocationIdArray */
            conLocationIdArray?: (number[]|null);

            /** WeaSetUnitState conGridIndexArray */
            conGridIndexArray?: (CommonProto.Structure.IGridIndex[]|null);

            /** WeaSetUnitState conActionStateArray */
            conActionStateArray?: (number[]|null);

            /** WeaSetUnitState conHasLoadedCo */
            conHasLoadedCo?: (boolean|null);

            /** WeaSetUnitState conHp */
            conHp?: (number|null);

            /** WeaSetUnitState conHpComparator */
            conHpComparator?: (number|null);

            /** WeaSetUnitState conFuelPct */
            conFuelPct?: (number|null);

            /** WeaSetUnitState conFuelPctComparator */
            conFuelPctComparator?: (number|null);

            /** WeaSetUnitState conPriAmmoPct */
            conPriAmmoPct?: (number|null);

            /** WeaSetUnitState conPriAmmoPctComparator */
            conPriAmmoPctComparator?: (number|null);

            /** WeaSetUnitState conPromotion */
            conPromotion?: (number|null);

            /** WeaSetUnitState conPromotionComparator */
            conPromotionComparator?: (number|null);

            /** WeaSetUnitState actHpMultiplierPercentage */
            actHpMultiplierPercentage?: (number|null);

            /** WeaSetUnitState actHpDeltaValue */
            actHpDeltaValue?: (number|null);

            /** WeaSetUnitState actFuelMultiplierPercentage */
            actFuelMultiplierPercentage?: (number|null);

            /** WeaSetUnitState actFuelDeltaValue */
            actFuelDeltaValue?: (number|null);

            /** WeaSetUnitState actPriAmmoMultiplierPercentage */
            actPriAmmoMultiplierPercentage?: (number|null);

            /** WeaSetUnitState actPriAmmoDeltaValue */
            actPriAmmoDeltaValue?: (number|null);

            /** WeaSetUnitState actPromotionMultiplierPercentage */
            actPromotionMultiplierPercentage?: (number|null);

            /** WeaSetUnitState actPromotionDeltaValue */
            actPromotionDeltaValue?: (number|null);

            /** WeaSetUnitState actDestroyUnit */
            actDestroyUnit?: (boolean|null);

            /** WeaSetUnitState actActionState */
            actActionState?: (number|null);

            /** WeaSetUnitState actHasLoadedCo */
            actHasLoadedCo?: (boolean|null);
        }

        /** Represents a WeaSetUnitState. */
        class WeaSetUnitState implements IWeaSetUnitState {

            /**
             * Constructs a new WeaSetUnitState.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarEvent.IWeaSetUnitState);

            /** WeaSetUnitState conPlayerIndexArray. */
            public conPlayerIndexArray: number[];

            /** WeaSetUnitState conTeamIndexArray. */
            public conTeamIndexArray: number[];

            /** WeaSetUnitState conUnitTypeArray. */
            public conUnitTypeArray: number[];

            /** WeaSetUnitState conLocationIdArray. */
            public conLocationIdArray: number[];

            /** WeaSetUnitState conGridIndexArray. */
            public conGridIndexArray: CommonProto.Structure.IGridIndex[];

            /** WeaSetUnitState conActionStateArray. */
            public conActionStateArray: number[];

            /** WeaSetUnitState conHasLoadedCo. */
            public conHasLoadedCo: boolean;

            /** WeaSetUnitState conHp. */
            public conHp: number;

            /** WeaSetUnitState conHpComparator. */
            public conHpComparator: number;

            /** WeaSetUnitState conFuelPct. */
            public conFuelPct: number;

            /** WeaSetUnitState conFuelPctComparator. */
            public conFuelPctComparator: number;

            /** WeaSetUnitState conPriAmmoPct. */
            public conPriAmmoPct: number;

            /** WeaSetUnitState conPriAmmoPctComparator. */
            public conPriAmmoPctComparator: number;

            /** WeaSetUnitState conPromotion. */
            public conPromotion: number;

            /** WeaSetUnitState conPromotionComparator. */
            public conPromotionComparator: number;

            /** WeaSetUnitState actHpMultiplierPercentage. */
            public actHpMultiplierPercentage: number;

            /** WeaSetUnitState actHpDeltaValue. */
            public actHpDeltaValue: number;

            /** WeaSetUnitState actFuelMultiplierPercentage. */
            public actFuelMultiplierPercentage: number;

            /** WeaSetUnitState actFuelDeltaValue. */
            public actFuelDeltaValue: number;

            /** WeaSetUnitState actPriAmmoMultiplierPercentage. */
            public actPriAmmoMultiplierPercentage: number;

            /** WeaSetUnitState actPriAmmoDeltaValue. */
            public actPriAmmoDeltaValue: number;

            /** WeaSetUnitState actPromotionMultiplierPercentage. */
            public actPromotionMultiplierPercentage: number;

            /** WeaSetUnitState actPromotionDeltaValue. */
            public actPromotionDeltaValue: number;

            /** WeaSetUnitState actDestroyUnit. */
            public actDestroyUnit: boolean;

            /** WeaSetUnitState actActionState. */
            public actActionState: number;

            /** WeaSetUnitState actHasLoadedCo. */
            public actHasLoadedCo: boolean;

            /**
             * Creates a new WeaSetUnitState instance using the specified properties.
             * @param [properties] Properties to set
             * @returns WeaSetUnitState instance
             */
            public static create(properties?: CommonProto.WarEvent.IWeaSetUnitState): CommonProto.WarEvent.WeaSetUnitState;

            /**
             * Encodes the specified WeaSetUnitState message. Does not implicitly {@link CommonProto.WarEvent.WeaSetUnitState.verify|verify} messages.
             * @param message WeaSetUnitState message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarEvent.IWeaSetUnitState, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified WeaSetUnitState message, length delimited. Does not implicitly {@link CommonProto.WarEvent.WeaSetUnitState.verify|verify} messages.
             * @param message WeaSetUnitState message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarEvent.IWeaSetUnitState, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a WeaSetUnitState message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns WeaSetUnitState
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarEvent.WeaSetUnitState;

            /**
             * Decodes a WeaSetUnitState message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns WeaSetUnitState
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarEvent.WeaSetUnitState;

            /**
             * Verifies a WeaSetUnitState message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a WeaSetUnitState message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns WeaSetUnitState
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarEvent.WeaSetUnitState;

            /**
             * Creates a plain object from a WeaSetUnitState message. Also converts values to other types if specified.
             * @param message WeaSetUnitState
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarEvent.WeaSetUnitState, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this WeaSetUnitState to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a WeaSetTileType. */
        interface IWeaSetTileType {

            /** WeaSetTileType conLocationIdArray */
            conLocationIdArray?: (number[]|null);

            /** WeaSetTileType conGridIndexArray */
            conGridIndexArray?: (CommonProto.Structure.IGridIndex[]|null);

            /** WeaSetTileType conIsHighlighted */
            conIsHighlighted?: (boolean|null);

            /** WeaSetTileType actTileData */
            actTileData?: (CommonProto.WarSerialization.ISerialTile|null);

            /** WeaSetTileType actDestroyUnit */
            actDestroyUnit?: (boolean|null);

            /** WeaSetTileType actIsModifyTileBase */
            actIsModifyTileBase?: (boolean|null);

            /** WeaSetTileType actIsModifyTileDecorator */
            actIsModifyTileDecorator?: (boolean|null);

            /** WeaSetTileType actIsModifyTileObject */
            actIsModifyTileObject?: (boolean|null);
        }

        /** Represents a WeaSetTileType. */
        class WeaSetTileType implements IWeaSetTileType {

            /**
             * Constructs a new WeaSetTileType.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarEvent.IWeaSetTileType);

            /** WeaSetTileType conLocationIdArray. */
            public conLocationIdArray: number[];

            /** WeaSetTileType conGridIndexArray. */
            public conGridIndexArray: CommonProto.Structure.IGridIndex[];

            /** WeaSetTileType conIsHighlighted. */
            public conIsHighlighted: boolean;

            /** WeaSetTileType actTileData. */
            public actTileData?: (CommonProto.WarSerialization.ISerialTile|null);

            /** WeaSetTileType actDestroyUnit. */
            public actDestroyUnit: boolean;

            /** WeaSetTileType actIsModifyTileBase. */
            public actIsModifyTileBase: boolean;

            /** WeaSetTileType actIsModifyTileDecorator. */
            public actIsModifyTileDecorator: boolean;

            /** WeaSetTileType actIsModifyTileObject. */
            public actIsModifyTileObject: boolean;

            /**
             * Creates a new WeaSetTileType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns WeaSetTileType instance
             */
            public static create(properties?: CommonProto.WarEvent.IWeaSetTileType): CommonProto.WarEvent.WeaSetTileType;

            /**
             * Encodes the specified WeaSetTileType message. Does not implicitly {@link CommonProto.WarEvent.WeaSetTileType.verify|verify} messages.
             * @param message WeaSetTileType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarEvent.IWeaSetTileType, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified WeaSetTileType message, length delimited. Does not implicitly {@link CommonProto.WarEvent.WeaSetTileType.verify|verify} messages.
             * @param message WeaSetTileType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarEvent.IWeaSetTileType, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a WeaSetTileType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns WeaSetTileType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarEvent.WeaSetTileType;

            /**
             * Decodes a WeaSetTileType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns WeaSetTileType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarEvent.WeaSetTileType;

            /**
             * Verifies a WeaSetTileType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a WeaSetTileType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns WeaSetTileType
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarEvent.WeaSetTileType;

            /**
             * Creates a plain object from a WeaSetTileType message. Also converts values to other types if specified.
             * @param message WeaSetTileType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarEvent.WeaSetTileType, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this WeaSetTileType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a WeaSetTileState. */
        interface IWeaSetTileState {

            /** WeaSetTileState conLocationIdArray */
            conLocationIdArray?: (number[]|null);

            /** WeaSetTileState conGridIndexArray */
            conGridIndexArray?: (CommonProto.Structure.IGridIndex[]|null);

            /** WeaSetTileState conIsHighlighted */
            conIsHighlighted?: (boolean|null);

            /** WeaSetTileState actHpMultiplierPercentage */
            actHpMultiplierPercentage?: (number|null);

            /** WeaSetTileState actHpDeltaValue */
            actHpDeltaValue?: (number|null);

            /** WeaSetTileState actBuildPointMultiplierPercentage */
            actBuildPointMultiplierPercentage?: (number|null);

            /** WeaSetTileState actBuildPointDeltaValue */
            actBuildPointDeltaValue?: (number|null);

            /** WeaSetTileState actCapturePointMultiplierPercentage */
            actCapturePointMultiplierPercentage?: (number|null);

            /** WeaSetTileState actCapturePointDeltaValue */
            actCapturePointDeltaValue?: (number|null);

            /** WeaSetTileState actAddLocationIdArray */
            actAddLocationIdArray?: (number[]|null);

            /** WeaSetTileState actDeleteLocationIdArray */
            actDeleteLocationIdArray?: (number[]|null);

            /** WeaSetTileState actIsHighlighted */
            actIsHighlighted?: (boolean|null);
        }

        /** Represents a WeaSetTileState. */
        class WeaSetTileState implements IWeaSetTileState {

            /**
             * Constructs a new WeaSetTileState.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarEvent.IWeaSetTileState);

            /** WeaSetTileState conLocationIdArray. */
            public conLocationIdArray: number[];

            /** WeaSetTileState conGridIndexArray. */
            public conGridIndexArray: CommonProto.Structure.IGridIndex[];

            /** WeaSetTileState conIsHighlighted. */
            public conIsHighlighted: boolean;

            /** WeaSetTileState actHpMultiplierPercentage. */
            public actHpMultiplierPercentage: number;

            /** WeaSetTileState actHpDeltaValue. */
            public actHpDeltaValue: number;

            /** WeaSetTileState actBuildPointMultiplierPercentage. */
            public actBuildPointMultiplierPercentage: number;

            /** WeaSetTileState actBuildPointDeltaValue. */
            public actBuildPointDeltaValue: number;

            /** WeaSetTileState actCapturePointMultiplierPercentage. */
            public actCapturePointMultiplierPercentage: number;

            /** WeaSetTileState actCapturePointDeltaValue. */
            public actCapturePointDeltaValue: number;

            /** WeaSetTileState actAddLocationIdArray. */
            public actAddLocationIdArray: number[];

            /** WeaSetTileState actDeleteLocationIdArray. */
            public actDeleteLocationIdArray: number[];

            /** WeaSetTileState actIsHighlighted. */
            public actIsHighlighted: boolean;

            /**
             * Creates a new WeaSetTileState instance using the specified properties.
             * @param [properties] Properties to set
             * @returns WeaSetTileState instance
             */
            public static create(properties?: CommonProto.WarEvent.IWeaSetTileState): CommonProto.WarEvent.WeaSetTileState;

            /**
             * Encodes the specified WeaSetTileState message. Does not implicitly {@link CommonProto.WarEvent.WeaSetTileState.verify|verify} messages.
             * @param message WeaSetTileState message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarEvent.IWeaSetTileState, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified WeaSetTileState message, length delimited. Does not implicitly {@link CommonProto.WarEvent.WeaSetTileState.verify|verify} messages.
             * @param message WeaSetTileState message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarEvent.IWeaSetTileState, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a WeaSetTileState message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns WeaSetTileState
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarEvent.WeaSetTileState;

            /**
             * Decodes a WeaSetTileState message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns WeaSetTileState
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarEvent.WeaSetTileState;

            /**
             * Verifies a WeaSetTileState message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a WeaSetTileState message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns WeaSetTileState
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarEvent.WeaSetTileState;

            /**
             * Creates a plain object from a WeaSetTileState message. Also converts values to other types if specified.
             * @param message WeaSetTileState
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarEvent.WeaSetTileState, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this WeaSetTileState to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a WeaPersistentShowText. */
        interface IWeaPersistentShowText {

            /** WeaPersistentShowText textArray */
            textArray?: (CommonProto.Structure.ILanguageText[]|null);
        }

        /** Represents a WeaPersistentShowText. */
        class WeaPersistentShowText implements IWeaPersistentShowText {

            /**
             * Constructs a new WeaPersistentShowText.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarEvent.IWeaPersistentShowText);

            /** WeaPersistentShowText textArray. */
            public textArray: CommonProto.Structure.ILanguageText[];

            /**
             * Creates a new WeaPersistentShowText instance using the specified properties.
             * @param [properties] Properties to set
             * @returns WeaPersistentShowText instance
             */
            public static create(properties?: CommonProto.WarEvent.IWeaPersistentShowText): CommonProto.WarEvent.WeaPersistentShowText;

            /**
             * Encodes the specified WeaPersistentShowText message. Does not implicitly {@link CommonProto.WarEvent.WeaPersistentShowText.verify|verify} messages.
             * @param message WeaPersistentShowText message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarEvent.IWeaPersistentShowText, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified WeaPersistentShowText message, length delimited. Does not implicitly {@link CommonProto.WarEvent.WeaPersistentShowText.verify|verify} messages.
             * @param message WeaPersistentShowText message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarEvent.IWeaPersistentShowText, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a WeaPersistentShowText message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns WeaPersistentShowText
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarEvent.WeaPersistentShowText;

            /**
             * Decodes a WeaPersistentShowText message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns WeaPersistentShowText
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarEvent.WeaPersistentShowText;

            /**
             * Verifies a WeaPersistentShowText message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a WeaPersistentShowText message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns WeaPersistentShowText
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarEvent.WeaPersistentShowText;

            /**
             * Creates a plain object from a WeaPersistentShowText message. Also converts values to other types if specified.
             * @param message WeaPersistentShowText
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarEvent.WeaPersistentShowText, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this WeaPersistentShowText to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a WeaPersistentModifyPlayerAttribute. */
        interface IWeaPersistentModifyPlayerAttribute {

            /** WeaPersistentModifyPlayerAttribute conPlayerIndexArray */
            conPlayerIndexArray?: (number[]|null);

            /** WeaPersistentModifyPlayerAttribute actBannedUnitTypeArray */
            actBannedUnitTypeArray?: (number[]|null);

            /** WeaPersistentModifyPlayerAttribute actCanActivateCoSkill */
            actCanActivateCoSkill?: (boolean|null);
        }

        /** Represents a WeaPersistentModifyPlayerAttribute. */
        class WeaPersistentModifyPlayerAttribute implements IWeaPersistentModifyPlayerAttribute {

            /**
             * Constructs a new WeaPersistentModifyPlayerAttribute.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarEvent.IWeaPersistentModifyPlayerAttribute);

            /** WeaPersistentModifyPlayerAttribute conPlayerIndexArray. */
            public conPlayerIndexArray: number[];

            /** WeaPersistentModifyPlayerAttribute actBannedUnitTypeArray. */
            public actBannedUnitTypeArray: number[];

            /** WeaPersistentModifyPlayerAttribute actCanActivateCoSkill. */
            public actCanActivateCoSkill: boolean;

            /**
             * Creates a new WeaPersistentModifyPlayerAttribute instance using the specified properties.
             * @param [properties] Properties to set
             * @returns WeaPersistentModifyPlayerAttribute instance
             */
            public static create(properties?: CommonProto.WarEvent.IWeaPersistentModifyPlayerAttribute): CommonProto.WarEvent.WeaPersistentModifyPlayerAttribute;

            /**
             * Encodes the specified WeaPersistentModifyPlayerAttribute message. Does not implicitly {@link CommonProto.WarEvent.WeaPersistentModifyPlayerAttribute.verify|verify} messages.
             * @param message WeaPersistentModifyPlayerAttribute message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarEvent.IWeaPersistentModifyPlayerAttribute, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified WeaPersistentModifyPlayerAttribute message, length delimited. Does not implicitly {@link CommonProto.WarEvent.WeaPersistentModifyPlayerAttribute.verify|verify} messages.
             * @param message WeaPersistentModifyPlayerAttribute message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarEvent.IWeaPersistentModifyPlayerAttribute, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a WeaPersistentModifyPlayerAttribute message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns WeaPersistentModifyPlayerAttribute
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarEvent.WeaPersistentModifyPlayerAttribute;

            /**
             * Decodes a WeaPersistentModifyPlayerAttribute message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns WeaPersistentModifyPlayerAttribute
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarEvent.WeaPersistentModifyPlayerAttribute;

            /**
             * Verifies a WeaPersistentModifyPlayerAttribute message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a WeaPersistentModifyPlayerAttribute message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns WeaPersistentModifyPlayerAttribute
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarEvent.WeaPersistentModifyPlayerAttribute;

            /**
             * Creates a plain object from a WeaPersistentModifyPlayerAttribute message. Also converts values to other types if specified.
             * @param message WeaPersistentModifyPlayerAttribute
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarEvent.WeaPersistentModifyPlayerAttribute, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this WeaPersistentModifyPlayerAttribute to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a WarEventAction. */
        interface IWarEventAction {

            /** WarEventAction WeaCommonData */
            WeaCommonData?: (CommonProto.WarEvent.IWeaCommonData|null);

            /** WarEventAction WeaAddUnit */
            WeaAddUnit?: (CommonProto.WarEvent.IWeaAddUnit|null);

            /** WarEventAction WeaDialogue */
            WeaDialogue?: (CommonProto.WarEvent.IWeaDialogue|null);

            /** WarEventAction WeaSetViewpoint */
            WeaSetViewpoint?: (CommonProto.WarEvent.IWeaSetViewpoint|null);

            /** WarEventAction WeaSetWeather */
            WeaSetWeather?: (CommonProto.WarEvent.IWeaSetWeather|null);

            /** WarEventAction WeaPlayBgm */
            WeaPlayBgm?: (CommonProto.WarEvent.IWeaPlayBgm|null);

            /** WarEventAction WeaSimpleDialogue */
            WeaSimpleDialogue?: (CommonProto.WarEvent.IWeaSimpleDialogue|null);

            /** WarEventAction WeaSetForceFogCode */
            WeaSetForceFogCode?: (CommonProto.WarEvent.IWeaSetForceFogCode|null);

            /** WarEventAction WeaSetCustomCounter */
            WeaSetCustomCounter?: (CommonProto.WarEvent.IWeaSetCustomCounter|null);

            /** WarEventAction WeaStopPersistentAction */
            WeaStopPersistentAction?: (CommonProto.WarEvent.IWeaStopPersistentAction|null);

            /** WarEventAction WeaSetPlayerState */
            WeaSetPlayerState?: (CommonProto.WarEvent.IWeaSetPlayerState|null);

            /** WarEventAction WeaSetUnitState */
            WeaSetUnitState?: (CommonProto.WarEvent.IWeaSetUnitState|null);

            /** WarEventAction WeaSetTileType */
            WeaSetTileType?: (CommonProto.WarEvent.IWeaSetTileType|null);

            /** WarEventAction WeaSetTileState */
            WeaSetTileState?: (CommonProto.WarEvent.IWeaSetTileState|null);

            /** WarEventAction WeaPersistentShowText */
            WeaPersistentShowText?: (CommonProto.WarEvent.IWeaPersistentShowText|null);

            /** WarEventAction WeaPersistentModifyPlayerAttribute */
            WeaPersistentModifyPlayerAttribute?: (CommonProto.WarEvent.IWeaPersistentModifyPlayerAttribute|null);
        }

        /** Represents a WarEventAction. */
        class WarEventAction implements IWarEventAction {

            /**
             * Constructs a new WarEventAction.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarEvent.IWarEventAction);

            /** WarEventAction WeaCommonData. */
            public WeaCommonData?: (CommonProto.WarEvent.IWeaCommonData|null);

            /** WarEventAction WeaAddUnit. */
            public WeaAddUnit?: (CommonProto.WarEvent.IWeaAddUnit|null);

            /** WarEventAction WeaDialogue. */
            public WeaDialogue?: (CommonProto.WarEvent.IWeaDialogue|null);

            /** WarEventAction WeaSetViewpoint. */
            public WeaSetViewpoint?: (CommonProto.WarEvent.IWeaSetViewpoint|null);

            /** WarEventAction WeaSetWeather. */
            public WeaSetWeather?: (CommonProto.WarEvent.IWeaSetWeather|null);

            /** WarEventAction WeaPlayBgm. */
            public WeaPlayBgm?: (CommonProto.WarEvent.IWeaPlayBgm|null);

            /** WarEventAction WeaSimpleDialogue. */
            public WeaSimpleDialogue?: (CommonProto.WarEvent.IWeaSimpleDialogue|null);

            /** WarEventAction WeaSetForceFogCode. */
            public WeaSetForceFogCode?: (CommonProto.WarEvent.IWeaSetForceFogCode|null);

            /** WarEventAction WeaSetCustomCounter. */
            public WeaSetCustomCounter?: (CommonProto.WarEvent.IWeaSetCustomCounter|null);

            /** WarEventAction WeaStopPersistentAction. */
            public WeaStopPersistentAction?: (CommonProto.WarEvent.IWeaStopPersistentAction|null);

            /** WarEventAction WeaSetPlayerState. */
            public WeaSetPlayerState?: (CommonProto.WarEvent.IWeaSetPlayerState|null);

            /** WarEventAction WeaSetUnitState. */
            public WeaSetUnitState?: (CommonProto.WarEvent.IWeaSetUnitState|null);

            /** WarEventAction WeaSetTileType. */
            public WeaSetTileType?: (CommonProto.WarEvent.IWeaSetTileType|null);

            /** WarEventAction WeaSetTileState. */
            public WeaSetTileState?: (CommonProto.WarEvent.IWeaSetTileState|null);

            /** WarEventAction WeaPersistentShowText. */
            public WeaPersistentShowText?: (CommonProto.WarEvent.IWeaPersistentShowText|null);

            /** WarEventAction WeaPersistentModifyPlayerAttribute. */
            public WeaPersistentModifyPlayerAttribute?: (CommonProto.WarEvent.IWeaPersistentModifyPlayerAttribute|null);

            /**
             * Creates a new WarEventAction instance using the specified properties.
             * @param [properties] Properties to set
             * @returns WarEventAction instance
             */
            public static create(properties?: CommonProto.WarEvent.IWarEventAction): CommonProto.WarEvent.WarEventAction;

            /**
             * Encodes the specified WarEventAction message. Does not implicitly {@link CommonProto.WarEvent.WarEventAction.verify|verify} messages.
             * @param message WarEventAction message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarEvent.IWarEventAction, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified WarEventAction message, length delimited. Does not implicitly {@link CommonProto.WarEvent.WarEventAction.verify|verify} messages.
             * @param message WarEventAction message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarEvent.IWarEventAction, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a WarEventAction message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns WarEventAction
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarEvent.WarEventAction;

            /**
             * Decodes a WarEventAction message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns WarEventAction
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarEvent.WarEventAction;

            /**
             * Verifies a WarEventAction message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a WarEventAction message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns WarEventAction
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarEvent.WarEventAction;

            /**
             * Creates a plain object from a WarEventAction message. Also converts values to other types if specified.
             * @param message WarEventAction
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarEvent.WarEventAction, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this WarEventAction to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a WarEvent. */
        interface IWarEvent {

            /** WarEvent eventId */
            eventId?: (number|null);

            /** WarEvent eventNameArray */
            eventNameArray?: (CommonProto.Structure.ILanguageText[]|null);

            /** WarEvent maxCallCountInPlayerTurn */
            maxCallCountInPlayerTurn?: (number|null);

            /** WarEvent maxCallCountTotal */
            maxCallCountTotal?: (number|null);

            /** WarEvent conditionNodeId */
            conditionNodeId?: (number|null);

            /** WarEvent actionIdArray */
            actionIdArray?: (number[]|null);
        }

        /** Represents a WarEvent. */
        class WarEvent implements IWarEvent {

            /**
             * Constructs a new WarEvent.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarEvent.IWarEvent);

            /** WarEvent eventId. */
            public eventId: number;

            /** WarEvent eventNameArray. */
            public eventNameArray: CommonProto.Structure.ILanguageText[];

            /** WarEvent maxCallCountInPlayerTurn. */
            public maxCallCountInPlayerTurn: number;

            /** WarEvent maxCallCountTotal. */
            public maxCallCountTotal: number;

            /** WarEvent conditionNodeId. */
            public conditionNodeId: number;

            /** WarEvent actionIdArray. */
            public actionIdArray: number[];

            /**
             * Creates a new WarEvent instance using the specified properties.
             * @param [properties] Properties to set
             * @returns WarEvent instance
             */
            public static create(properties?: CommonProto.WarEvent.IWarEvent): CommonProto.WarEvent.WarEvent;

            /**
             * Encodes the specified WarEvent message. Does not implicitly {@link CommonProto.WarEvent.WarEvent.verify|verify} messages.
             * @param message WarEvent message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarEvent.IWarEvent, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified WarEvent message, length delimited. Does not implicitly {@link CommonProto.WarEvent.WarEvent.verify|verify} messages.
             * @param message WarEvent message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarEvent.IWarEvent, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a WarEvent message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns WarEvent
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarEvent.WarEvent;

            /**
             * Decodes a WarEvent message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns WarEvent
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarEvent.WarEvent;

            /**
             * Verifies a WarEvent message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a WarEvent message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns WarEvent
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarEvent.WarEvent;

            /**
             * Creates a plain object from a WarEvent message. Also converts values to other types if specified.
             * @param message WarEvent
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarEvent.WarEvent, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this WarEvent to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a WarRule. */
    interface IWarRule {
    }

    /** Represents a WarRule. */
    class WarRule implements IWarRule {

        /**
         * Constructs a new WarRule.
         * @param [properties] Properties to set
         */
        constructor(properties?: CommonProto.IWarRule);

        /**
         * Creates a new WarRule instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WarRule instance
         */
        public static create(properties?: CommonProto.IWarRule): CommonProto.WarRule;

        /**
         * Encodes the specified WarRule message. Does not implicitly {@link CommonProto.WarRule.verify|verify} messages.
         * @param message WarRule message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: CommonProto.IWarRule, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WarRule message, length delimited. Does not implicitly {@link CommonProto.WarRule.verify|verify} messages.
         * @param message WarRule message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: CommonProto.IWarRule, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarRule message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarRule
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarRule;

        /**
         * Decodes a WarRule message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WarRule
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarRule;

        /**
         * Verifies a WarRule message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WarRule message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WarRule
         */
        public static fromObject(object: { [k: string]: any }): CommonProto.WarRule;

        /**
         * Creates a plain object from a WarRule message. Also converts values to other types if specified.
         * @param message WarRule
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: CommonProto.WarRule, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WarRule to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace WarRule {

        /** Properties of a DataForPlayerRule. */
        interface IDataForPlayerRule {

            /** DataForPlayerRule playerIndex */
            playerIndex?: (number|null);

            /** DataForPlayerRule teamIndex */
            teamIndex?: (number|null);

            /** DataForPlayerRule initialFund */
            initialFund?: (number|null);

            /** DataForPlayerRule incomeMultiplier */
            incomeMultiplier?: (number|null);

            /** DataForPlayerRule energyAddPctOnLoadCo */
            energyAddPctOnLoadCo?: (number|null);

            /** DataForPlayerRule energyGrowthMultiplier */
            energyGrowthMultiplier?: (number|null);

            /** DataForPlayerRule moveRangeModifier */
            moveRangeModifier?: (number|null);

            /** DataForPlayerRule attackPowerModifier */
            attackPowerModifier?: (number|null);

            /** DataForPlayerRule visionRangeModifier */
            visionRangeModifier?: (number|null);

            /** DataForPlayerRule luckLowerLimit */
            luckLowerLimit?: (number|null);

            /** DataForPlayerRule luckUpperLimit */
            luckUpperLimit?: (number|null);

            /** DataForPlayerRule bannedCoCategoryIdArray */
            bannedCoCategoryIdArray?: (number[]|null);

            /** DataForPlayerRule fixedCoIdInSrw */
            fixedCoIdInSrw?: (number|null);

            /** DataForPlayerRule fixedCoIdInCcw */
            fixedCoIdInCcw?: (number|null);

            /** DataForPlayerRule bannedUnitTypeArray */
            bannedUnitTypeArray?: (number[]|null);

            /** DataForPlayerRule canActivateCoSkill */
            canActivateCoSkill?: (boolean|null);
        }

        /** Represents a DataForPlayerRule. */
        class DataForPlayerRule implements IDataForPlayerRule {

            /**
             * Constructs a new DataForPlayerRule.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarRule.IDataForPlayerRule);

            /** DataForPlayerRule playerIndex. */
            public playerIndex: number;

            /** DataForPlayerRule teamIndex. */
            public teamIndex: number;

            /** DataForPlayerRule initialFund. */
            public initialFund: number;

            /** DataForPlayerRule incomeMultiplier. */
            public incomeMultiplier: number;

            /** DataForPlayerRule energyAddPctOnLoadCo. */
            public energyAddPctOnLoadCo: number;

            /** DataForPlayerRule energyGrowthMultiplier. */
            public energyGrowthMultiplier: number;

            /** DataForPlayerRule moveRangeModifier. */
            public moveRangeModifier: number;

            /** DataForPlayerRule attackPowerModifier. */
            public attackPowerModifier: number;

            /** DataForPlayerRule visionRangeModifier. */
            public visionRangeModifier: number;

            /** DataForPlayerRule luckLowerLimit. */
            public luckLowerLimit: number;

            /** DataForPlayerRule luckUpperLimit. */
            public luckUpperLimit: number;

            /** DataForPlayerRule bannedCoCategoryIdArray. */
            public bannedCoCategoryIdArray: number[];

            /** DataForPlayerRule fixedCoIdInSrw. */
            public fixedCoIdInSrw: number;

            /** DataForPlayerRule fixedCoIdInCcw. */
            public fixedCoIdInCcw: number;

            /** DataForPlayerRule bannedUnitTypeArray. */
            public bannedUnitTypeArray: number[];

            /** DataForPlayerRule canActivateCoSkill. */
            public canActivateCoSkill: boolean;

            /**
             * Creates a new DataForPlayerRule instance using the specified properties.
             * @param [properties] Properties to set
             * @returns DataForPlayerRule instance
             */
            public static create(properties?: CommonProto.WarRule.IDataForPlayerRule): CommonProto.WarRule.DataForPlayerRule;

            /**
             * Encodes the specified DataForPlayerRule message. Does not implicitly {@link CommonProto.WarRule.DataForPlayerRule.verify|verify} messages.
             * @param message DataForPlayerRule message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarRule.IDataForPlayerRule, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified DataForPlayerRule message, length delimited. Does not implicitly {@link CommonProto.WarRule.DataForPlayerRule.verify|verify} messages.
             * @param message DataForPlayerRule message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarRule.IDataForPlayerRule, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a DataForPlayerRule message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns DataForPlayerRule
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarRule.DataForPlayerRule;

            /**
             * Decodes a DataForPlayerRule message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns DataForPlayerRule
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarRule.DataForPlayerRule;

            /**
             * Verifies a DataForPlayerRule message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a DataForPlayerRule message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns DataForPlayerRule
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarRule.DataForPlayerRule;

            /**
             * Creates a plain object from a DataForPlayerRule message. Also converts values to other types if specified.
             * @param message DataForPlayerRule
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarRule.DataForPlayerRule, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this DataForPlayerRule to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a RuleAvailability. */
        interface IRuleAvailability {

            /** RuleAvailability canMcw */
            canMcw?: (boolean|null);

            /** RuleAvailability canScw */
            canScw?: (boolean|null);

            /** RuleAvailability canMrw */
            canMrw?: (boolean|null);

            /** RuleAvailability canSrw */
            canSrw?: (boolean|null);

            /** RuleAvailability canCcw */
            canCcw?: (boolean|null);
        }

        /** Represents a RuleAvailability. */
        class RuleAvailability implements IRuleAvailability {

            /**
             * Constructs a new RuleAvailability.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarRule.IRuleAvailability);

            /** RuleAvailability canMcw. */
            public canMcw: boolean;

            /** RuleAvailability canScw. */
            public canScw: boolean;

            /** RuleAvailability canMrw. */
            public canMrw: boolean;

            /** RuleAvailability canSrw. */
            public canSrw: boolean;

            /** RuleAvailability canCcw. */
            public canCcw: boolean;

            /**
             * Creates a new RuleAvailability instance using the specified properties.
             * @param [properties] Properties to set
             * @returns RuleAvailability instance
             */
            public static create(properties?: CommonProto.WarRule.IRuleAvailability): CommonProto.WarRule.RuleAvailability;

            /**
             * Encodes the specified RuleAvailability message. Does not implicitly {@link CommonProto.WarRule.RuleAvailability.verify|verify} messages.
             * @param message RuleAvailability message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarRule.IRuleAvailability, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified RuleAvailability message, length delimited. Does not implicitly {@link CommonProto.WarRule.RuleAvailability.verify|verify} messages.
             * @param message RuleAvailability message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarRule.IRuleAvailability, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a RuleAvailability message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns RuleAvailability
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarRule.RuleAvailability;

            /**
             * Decodes a RuleAvailability message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns RuleAvailability
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarRule.RuleAvailability;

            /**
             * Verifies a RuleAvailability message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a RuleAvailability message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns RuleAvailability
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarRule.RuleAvailability;

            /**
             * Creates a plain object from a RuleAvailability message. Also converts values to other types if specified.
             * @param message RuleAvailability
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarRule.RuleAvailability, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this RuleAvailability to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a RuleForPlayers. */
        interface IRuleForPlayers {

            /** RuleForPlayers playerRuleDataArray */
            playerRuleDataArray?: (CommonProto.WarRule.IDataForPlayerRule[]|null);
        }

        /** Represents a RuleForPlayers. */
        class RuleForPlayers implements IRuleForPlayers {

            /**
             * Constructs a new RuleForPlayers.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarRule.IRuleForPlayers);

            /** RuleForPlayers playerRuleDataArray. */
            public playerRuleDataArray: CommonProto.WarRule.IDataForPlayerRule[];

            /**
             * Creates a new RuleForPlayers instance using the specified properties.
             * @param [properties] Properties to set
             * @returns RuleForPlayers instance
             */
            public static create(properties?: CommonProto.WarRule.IRuleForPlayers): CommonProto.WarRule.RuleForPlayers;

            /**
             * Encodes the specified RuleForPlayers message. Does not implicitly {@link CommonProto.WarRule.RuleForPlayers.verify|verify} messages.
             * @param message RuleForPlayers message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarRule.IRuleForPlayers, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified RuleForPlayers message, length delimited. Does not implicitly {@link CommonProto.WarRule.RuleForPlayers.verify|verify} messages.
             * @param message RuleForPlayers message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarRule.IRuleForPlayers, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a RuleForPlayers message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns RuleForPlayers
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarRule.RuleForPlayers;

            /**
             * Decodes a RuleForPlayers message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns RuleForPlayers
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarRule.RuleForPlayers;

            /**
             * Verifies a RuleForPlayers message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a RuleForPlayers message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns RuleForPlayers
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarRule.RuleForPlayers;

            /**
             * Creates a plain object from a RuleForPlayers message. Also converts values to other types if specified.
             * @param message RuleForPlayers
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarRule.RuleForPlayers, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this RuleForPlayers to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a RuleForGlobalParams. */
        interface IRuleForGlobalParams {

            /** RuleForGlobalParams hasFogByDefault */
            hasFogByDefault?: (boolean|null);

            /** RuleForGlobalParams defaultWeatherType */
            defaultWeatherType?: (number|null);
        }

        /** Represents a RuleForGlobalParams. */
        class RuleForGlobalParams implements IRuleForGlobalParams {

            /**
             * Constructs a new RuleForGlobalParams.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarRule.IRuleForGlobalParams);

            /** RuleForGlobalParams hasFogByDefault. */
            public hasFogByDefault: boolean;

            /** RuleForGlobalParams defaultWeatherType. */
            public defaultWeatherType: number;

            /**
             * Creates a new RuleForGlobalParams instance using the specified properties.
             * @param [properties] Properties to set
             * @returns RuleForGlobalParams instance
             */
            public static create(properties?: CommonProto.WarRule.IRuleForGlobalParams): CommonProto.WarRule.RuleForGlobalParams;

            /**
             * Encodes the specified RuleForGlobalParams message. Does not implicitly {@link CommonProto.WarRule.RuleForGlobalParams.verify|verify} messages.
             * @param message RuleForGlobalParams message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarRule.IRuleForGlobalParams, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified RuleForGlobalParams message, length delimited. Does not implicitly {@link CommonProto.WarRule.RuleForGlobalParams.verify|verify} messages.
             * @param message RuleForGlobalParams message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarRule.IRuleForGlobalParams, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a RuleForGlobalParams message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns RuleForGlobalParams
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarRule.RuleForGlobalParams;

            /**
             * Decodes a RuleForGlobalParams message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns RuleForGlobalParams
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarRule.RuleForGlobalParams;

            /**
             * Verifies a RuleForGlobalParams message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a RuleForGlobalParams message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns RuleForGlobalParams
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarRule.RuleForGlobalParams;

            /**
             * Creates a plain object from a RuleForGlobalParams message. Also converts values to other types if specified.
             * @param message RuleForGlobalParams
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarRule.RuleForGlobalParams, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this RuleForGlobalParams to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a TemplateWarRule. */
        interface ITemplateWarRule {

            /** TemplateWarRule ruleId */
            ruleId?: (number|null);

            /** TemplateWarRule ruleNameArray */
            ruleNameArray?: (CommonProto.Structure.ILanguageText[]|null);

            /** TemplateWarRule ruleAvailability */
            ruleAvailability?: (CommonProto.WarRule.IRuleAvailability|null);

            /** TemplateWarRule ruleForGlobalParams */
            ruleForGlobalParams?: (CommonProto.WarRule.IRuleForGlobalParams|null);

            /** TemplateWarRule ruleForPlayers */
            ruleForPlayers?: (CommonProto.WarRule.IRuleForPlayers|null);

            /** TemplateWarRule warEventIdArray */
            warEventIdArray?: (number[]|null);
        }

        /** Represents a TemplateWarRule. */
        class TemplateWarRule implements ITemplateWarRule {

            /**
             * Constructs a new TemplateWarRule.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarRule.ITemplateWarRule);

            /** TemplateWarRule ruleId. */
            public ruleId: number;

            /** TemplateWarRule ruleNameArray. */
            public ruleNameArray: CommonProto.Structure.ILanguageText[];

            /** TemplateWarRule ruleAvailability. */
            public ruleAvailability?: (CommonProto.WarRule.IRuleAvailability|null);

            /** TemplateWarRule ruleForGlobalParams. */
            public ruleForGlobalParams?: (CommonProto.WarRule.IRuleForGlobalParams|null);

            /** TemplateWarRule ruleForPlayers. */
            public ruleForPlayers?: (CommonProto.WarRule.IRuleForPlayers|null);

            /** TemplateWarRule warEventIdArray. */
            public warEventIdArray: number[];

            /**
             * Creates a new TemplateWarRule instance using the specified properties.
             * @param [properties] Properties to set
             * @returns TemplateWarRule instance
             */
            public static create(properties?: CommonProto.WarRule.ITemplateWarRule): CommonProto.WarRule.TemplateWarRule;

            /**
             * Encodes the specified TemplateWarRule message. Does not implicitly {@link CommonProto.WarRule.TemplateWarRule.verify|verify} messages.
             * @param message TemplateWarRule message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarRule.ITemplateWarRule, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified TemplateWarRule message, length delimited. Does not implicitly {@link CommonProto.WarRule.TemplateWarRule.verify|verify} messages.
             * @param message TemplateWarRule message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarRule.ITemplateWarRule, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a TemplateWarRule message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns TemplateWarRule
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarRule.TemplateWarRule;

            /**
             * Decodes a TemplateWarRule message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns TemplateWarRule
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarRule.TemplateWarRule;

            /**
             * Verifies a TemplateWarRule message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a TemplateWarRule message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns TemplateWarRule
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarRule.TemplateWarRule;

            /**
             * Creates a plain object from a TemplateWarRule message. Also converts values to other types if specified.
             * @param message TemplateWarRule
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarRule.TemplateWarRule, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this TemplateWarRule to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an InstanceWarRule. */
        interface IInstanceWarRule {

            /** InstanceWarRule templateWarRuleId */
            templateWarRuleId?: (number|null);

            /** InstanceWarRule ruleNameArray */
            ruleNameArray?: (CommonProto.Structure.ILanguageText[]|null);

            /** InstanceWarRule ruleForGlobalParams */
            ruleForGlobalParams?: (CommonProto.WarRule.IRuleForGlobalParams|null);

            /** InstanceWarRule ruleForPlayers */
            ruleForPlayers?: (CommonProto.WarRule.IRuleForPlayers|null);

            /** InstanceWarRule warEventFullData */
            warEventFullData?: (CommonProto.Map.IWarEventFullData|null);
        }

        /** Represents an InstanceWarRule. */
        class InstanceWarRule implements IInstanceWarRule {

            /**
             * Constructs a new InstanceWarRule.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarRule.IInstanceWarRule);

            /** InstanceWarRule templateWarRuleId. */
            public templateWarRuleId: number;

            /** InstanceWarRule ruleNameArray. */
            public ruleNameArray: CommonProto.Structure.ILanguageText[];

            /** InstanceWarRule ruleForGlobalParams. */
            public ruleForGlobalParams?: (CommonProto.WarRule.IRuleForGlobalParams|null);

            /** InstanceWarRule ruleForPlayers. */
            public ruleForPlayers?: (CommonProto.WarRule.IRuleForPlayers|null);

            /** InstanceWarRule warEventFullData. */
            public warEventFullData?: (CommonProto.Map.IWarEventFullData|null);

            /**
             * Creates a new InstanceWarRule instance using the specified properties.
             * @param [properties] Properties to set
             * @returns InstanceWarRule instance
             */
            public static create(properties?: CommonProto.WarRule.IInstanceWarRule): CommonProto.WarRule.InstanceWarRule;

            /**
             * Encodes the specified InstanceWarRule message. Does not implicitly {@link CommonProto.WarRule.InstanceWarRule.verify|verify} messages.
             * @param message InstanceWarRule message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarRule.IInstanceWarRule, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified InstanceWarRule message, length delimited. Does not implicitly {@link CommonProto.WarRule.InstanceWarRule.verify|verify} messages.
             * @param message InstanceWarRule message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarRule.IInstanceWarRule, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an InstanceWarRule message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns InstanceWarRule
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarRule.InstanceWarRule;

            /**
             * Decodes an InstanceWarRule message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns InstanceWarRule
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarRule.InstanceWarRule;

            /**
             * Verifies an InstanceWarRule message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an InstanceWarRule message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns InstanceWarRule
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarRule.InstanceWarRule;

            /**
             * Creates a plain object from an InstanceWarRule message. Also converts values to other types if specified.
             * @param message InstanceWarRule
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarRule.InstanceWarRule, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this InstanceWarRule to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a WarSettings. */
    interface IWarSettings {
    }

    /** Represents a WarSettings. */
    class WarSettings implements IWarSettings {

        /**
         * Constructs a new WarSettings.
         * @param [properties] Properties to set
         */
        constructor(properties?: CommonProto.IWarSettings);

        /**
         * Creates a new WarSettings instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WarSettings instance
         */
        public static create(properties?: CommonProto.IWarSettings): CommonProto.WarSettings;

        /**
         * Encodes the specified WarSettings message. Does not implicitly {@link CommonProto.WarSettings.verify|verify} messages.
         * @param message WarSettings message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: CommonProto.IWarSettings, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WarSettings message, length delimited. Does not implicitly {@link CommonProto.WarSettings.verify|verify} messages.
         * @param message WarSettings message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: CommonProto.IWarSettings, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarSettings message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarSettings
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarSettings;

        /**
         * Decodes a WarSettings message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WarSettings
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarSettings;

        /**
         * Verifies a WarSettings message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WarSettings message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WarSettings
         */
        public static fromObject(object: { [k: string]: any }): CommonProto.WarSettings;

        /**
         * Creates a plain object from a WarSettings message. Also converts values to other types if specified.
         * @param message WarSettings
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: CommonProto.WarSettings, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WarSettings to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace WarSettings {

        /** Properties of a SettingsForCommon. */
        interface ISettingsForCommon {

            /** SettingsForCommon configVersion */
            configVersion?: (string|null);

            /** SettingsForCommon turnsLimit */
            turnsLimit?: (number|null);

            /** SettingsForCommon instanceWarRule */
            instanceWarRule?: (CommonProto.WarRule.IInstanceWarRule|null);
        }

        /** Represents a SettingsForCommon. */
        class SettingsForCommon implements ISettingsForCommon {

            /**
             * Constructs a new SettingsForCommon.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarSettings.ISettingsForCommon);

            /** SettingsForCommon configVersion. */
            public configVersion: string;

            /** SettingsForCommon turnsLimit. */
            public turnsLimit: number;

            /** SettingsForCommon instanceWarRule. */
            public instanceWarRule?: (CommonProto.WarRule.IInstanceWarRule|null);

            /**
             * Creates a new SettingsForCommon instance using the specified properties.
             * @param [properties] Properties to set
             * @returns SettingsForCommon instance
             */
            public static create(properties?: CommonProto.WarSettings.ISettingsForCommon): CommonProto.WarSettings.SettingsForCommon;

            /**
             * Encodes the specified SettingsForCommon message. Does not implicitly {@link CommonProto.WarSettings.SettingsForCommon.verify|verify} messages.
             * @param message SettingsForCommon message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarSettings.ISettingsForCommon, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified SettingsForCommon message, length delimited. Does not implicitly {@link CommonProto.WarSettings.SettingsForCommon.verify|verify} messages.
             * @param message SettingsForCommon message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarSettings.ISettingsForCommon, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a SettingsForCommon message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SettingsForCommon
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarSettings.SettingsForCommon;

            /**
             * Decodes a SettingsForCommon message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SettingsForCommon
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarSettings.SettingsForCommon;

            /**
             * Verifies a SettingsForCommon message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SettingsForCommon message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SettingsForCommon
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarSettings.SettingsForCommon;

            /**
             * Creates a plain object from a SettingsForCommon message. Also converts values to other types if specified.
             * @param message SettingsForCommon
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarSettings.SettingsForCommon, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SettingsForCommon to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a SettingsForMcw. */
        interface ISettingsForMcw {

            /** SettingsForMcw mapId */
            mapId?: (number|null);

            /** SettingsForMcw warName */
            warName?: (string|null);

            /** SettingsForMcw warPassword */
            warPassword?: (string|null);

            /** SettingsForMcw warComment */
            warComment?: (string|null);

            /** SettingsForMcw bootTimerParams */
            bootTimerParams?: (number[]|null);
        }

        /** Represents a SettingsForMcw. */
        class SettingsForMcw implements ISettingsForMcw {

            /**
             * Constructs a new SettingsForMcw.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarSettings.ISettingsForMcw);

            /** SettingsForMcw mapId. */
            public mapId: number;

            /** SettingsForMcw warName. */
            public warName: string;

            /** SettingsForMcw warPassword. */
            public warPassword: string;

            /** SettingsForMcw warComment. */
            public warComment: string;

            /** SettingsForMcw bootTimerParams. */
            public bootTimerParams: number[];

            /**
             * Creates a new SettingsForMcw instance using the specified properties.
             * @param [properties] Properties to set
             * @returns SettingsForMcw instance
             */
            public static create(properties?: CommonProto.WarSettings.ISettingsForMcw): CommonProto.WarSettings.SettingsForMcw;

            /**
             * Encodes the specified SettingsForMcw message. Does not implicitly {@link CommonProto.WarSettings.SettingsForMcw.verify|verify} messages.
             * @param message SettingsForMcw message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarSettings.ISettingsForMcw, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified SettingsForMcw message, length delimited. Does not implicitly {@link CommonProto.WarSettings.SettingsForMcw.verify|verify} messages.
             * @param message SettingsForMcw message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarSettings.ISettingsForMcw, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a SettingsForMcw message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SettingsForMcw
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarSettings.SettingsForMcw;

            /**
             * Decodes a SettingsForMcw message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SettingsForMcw
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarSettings.SettingsForMcw;

            /**
             * Verifies a SettingsForMcw message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SettingsForMcw message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SettingsForMcw
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarSettings.SettingsForMcw;

            /**
             * Creates a plain object from a SettingsForMcw message. Also converts values to other types if specified.
             * @param message SettingsForMcw
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarSettings.SettingsForMcw, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SettingsForMcw to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a SettingsForMfw. */
        interface ISettingsForMfw {

            /** SettingsForMfw initialWarData */
            initialWarData?: (CommonProto.WarSerialization.ISerialWar|null);

            /** SettingsForMfw warName */
            warName?: (string|null);

            /** SettingsForMfw warPassword */
            warPassword?: (string|null);

            /** SettingsForMfw warComment */
            warComment?: (string|null);

            /** SettingsForMfw bootTimerParams */
            bootTimerParams?: (number[]|null);
        }

        /** Represents a SettingsForMfw. */
        class SettingsForMfw implements ISettingsForMfw {

            /**
             * Constructs a new SettingsForMfw.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarSettings.ISettingsForMfw);

            /** SettingsForMfw initialWarData. */
            public initialWarData?: (CommonProto.WarSerialization.ISerialWar|null);

            /** SettingsForMfw warName. */
            public warName: string;

            /** SettingsForMfw warPassword. */
            public warPassword: string;

            /** SettingsForMfw warComment. */
            public warComment: string;

            /** SettingsForMfw bootTimerParams. */
            public bootTimerParams: number[];

            /**
             * Creates a new SettingsForMfw instance using the specified properties.
             * @param [properties] Properties to set
             * @returns SettingsForMfw instance
             */
            public static create(properties?: CommonProto.WarSettings.ISettingsForMfw): CommonProto.WarSettings.SettingsForMfw;

            /**
             * Encodes the specified SettingsForMfw message. Does not implicitly {@link CommonProto.WarSettings.SettingsForMfw.verify|verify} messages.
             * @param message SettingsForMfw message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarSettings.ISettingsForMfw, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified SettingsForMfw message, length delimited. Does not implicitly {@link CommonProto.WarSettings.SettingsForMfw.verify|verify} messages.
             * @param message SettingsForMfw message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarSettings.ISettingsForMfw, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a SettingsForMfw message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SettingsForMfw
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarSettings.SettingsForMfw;

            /**
             * Decodes a SettingsForMfw message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SettingsForMfw
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarSettings.SettingsForMfw;

            /**
             * Verifies a SettingsForMfw message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SettingsForMfw message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SettingsForMfw
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarSettings.SettingsForMfw;

            /**
             * Creates a plain object from a SettingsForMfw message. Also converts values to other types if specified.
             * @param message SettingsForMfw
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarSettings.SettingsForMfw, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SettingsForMfw to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a SettingsForMrw. */
        interface ISettingsForMrw {

            /** SettingsForMrw mapId */
            mapId?: (number|null);

            /** SettingsForMrw dataArrayForBanCo */
            dataArrayForBanCo?: (CommonProto.Structure.IDataForPlayerBanCo[]|null);
        }

        /** Represents a SettingsForMrw. */
        class SettingsForMrw implements ISettingsForMrw {

            /**
             * Constructs a new SettingsForMrw.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarSettings.ISettingsForMrw);

            /** SettingsForMrw mapId. */
            public mapId: number;

            /** SettingsForMrw dataArrayForBanCo. */
            public dataArrayForBanCo: CommonProto.Structure.IDataForPlayerBanCo[];

            /**
             * Creates a new SettingsForMrw instance using the specified properties.
             * @param [properties] Properties to set
             * @returns SettingsForMrw instance
             */
            public static create(properties?: CommonProto.WarSettings.ISettingsForMrw): CommonProto.WarSettings.SettingsForMrw;

            /**
             * Encodes the specified SettingsForMrw message. Does not implicitly {@link CommonProto.WarSettings.SettingsForMrw.verify|verify} messages.
             * @param message SettingsForMrw message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarSettings.ISettingsForMrw, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified SettingsForMrw message, length delimited. Does not implicitly {@link CommonProto.WarSettings.SettingsForMrw.verify|verify} messages.
             * @param message SettingsForMrw message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarSettings.ISettingsForMrw, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a SettingsForMrw message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SettingsForMrw
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarSettings.SettingsForMrw;

            /**
             * Decodes a SettingsForMrw message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SettingsForMrw
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarSettings.SettingsForMrw;

            /**
             * Verifies a SettingsForMrw message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SettingsForMrw message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SettingsForMrw
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarSettings.SettingsForMrw;

            /**
             * Creates a plain object from a SettingsForMrw message. Also converts values to other types if specified.
             * @param message SettingsForMrw
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarSettings.SettingsForMrw, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SettingsForMrw to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a SettingsForScw. */
        interface ISettingsForScw {

            /** SettingsForScw mapId */
            mapId?: (number|null);

            /** SettingsForScw isCheating */
            isCheating?: (boolean|null);
        }

        /** Represents a SettingsForScw. */
        class SettingsForScw implements ISettingsForScw {

            /**
             * Constructs a new SettingsForScw.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarSettings.ISettingsForScw);

            /** SettingsForScw mapId. */
            public mapId: number;

            /** SettingsForScw isCheating. */
            public isCheating: boolean;

            /**
             * Creates a new SettingsForScw instance using the specified properties.
             * @param [properties] Properties to set
             * @returns SettingsForScw instance
             */
            public static create(properties?: CommonProto.WarSettings.ISettingsForScw): CommonProto.WarSettings.SettingsForScw;

            /**
             * Encodes the specified SettingsForScw message. Does not implicitly {@link CommonProto.WarSettings.SettingsForScw.verify|verify} messages.
             * @param message SettingsForScw message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarSettings.ISettingsForScw, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified SettingsForScw message, length delimited. Does not implicitly {@link CommonProto.WarSettings.SettingsForScw.verify|verify} messages.
             * @param message SettingsForScw message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarSettings.ISettingsForScw, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a SettingsForScw message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SettingsForScw
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarSettings.SettingsForScw;

            /**
             * Decodes a SettingsForScw message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SettingsForScw
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarSettings.SettingsForScw;

            /**
             * Verifies a SettingsForScw message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SettingsForScw message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SettingsForScw
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarSettings.SettingsForScw;

            /**
             * Creates a plain object from a SettingsForScw message. Also converts values to other types if specified.
             * @param message SettingsForScw
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarSettings.SettingsForScw, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SettingsForScw to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a SettingsForSfw. */
        interface ISettingsForSfw {

            /** SettingsForSfw initialWarData */
            initialWarData?: (CommonProto.WarSerialization.ISerialWar|null);
        }

        /** Represents a SettingsForSfw. */
        class SettingsForSfw implements ISettingsForSfw {

            /**
             * Constructs a new SettingsForSfw.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarSettings.ISettingsForSfw);

            /** SettingsForSfw initialWarData. */
            public initialWarData?: (CommonProto.WarSerialization.ISerialWar|null);

            /**
             * Creates a new SettingsForSfw instance using the specified properties.
             * @param [properties] Properties to set
             * @returns SettingsForSfw instance
             */
            public static create(properties?: CommonProto.WarSettings.ISettingsForSfw): CommonProto.WarSettings.SettingsForSfw;

            /**
             * Encodes the specified SettingsForSfw message. Does not implicitly {@link CommonProto.WarSettings.SettingsForSfw.verify|verify} messages.
             * @param message SettingsForSfw message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarSettings.ISettingsForSfw, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified SettingsForSfw message, length delimited. Does not implicitly {@link CommonProto.WarSettings.SettingsForSfw.verify|verify} messages.
             * @param message SettingsForSfw message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarSettings.ISettingsForSfw, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a SettingsForSfw message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SettingsForSfw
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarSettings.SettingsForSfw;

            /**
             * Decodes a SettingsForSfw message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SettingsForSfw
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarSettings.SettingsForSfw;

            /**
             * Verifies a SettingsForSfw message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SettingsForSfw message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SettingsForSfw
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarSettings.SettingsForSfw;

            /**
             * Creates a plain object from a SettingsForSfw message. Also converts values to other types if specified.
             * @param message SettingsForSfw
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarSettings.SettingsForSfw, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SettingsForSfw to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a SettingsForSrw. */
        interface ISettingsForSrw {

            /** SettingsForSrw mapId */
            mapId?: (number|null);

            /** SettingsForSrw warSignature */
            warSignature?: (string|null);

            /** SettingsForSrw totalScore */
            totalScore?: (number|null);
        }

        /** Represents a SettingsForSrw. */
        class SettingsForSrw implements ISettingsForSrw {

            /**
             * Constructs a new SettingsForSrw.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarSettings.ISettingsForSrw);

            /** SettingsForSrw mapId. */
            public mapId: number;

            /** SettingsForSrw warSignature. */
            public warSignature: string;

            /** SettingsForSrw totalScore. */
            public totalScore: number;

            /**
             * Creates a new SettingsForSrw instance using the specified properties.
             * @param [properties] Properties to set
             * @returns SettingsForSrw instance
             */
            public static create(properties?: CommonProto.WarSettings.ISettingsForSrw): CommonProto.WarSettings.SettingsForSrw;

            /**
             * Encodes the specified SettingsForSrw message. Does not implicitly {@link CommonProto.WarSettings.SettingsForSrw.verify|verify} messages.
             * @param message SettingsForSrw message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarSettings.ISettingsForSrw, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified SettingsForSrw message, length delimited. Does not implicitly {@link CommonProto.WarSettings.SettingsForSrw.verify|verify} messages.
             * @param message SettingsForSrw message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarSettings.ISettingsForSrw, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a SettingsForSrw message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SettingsForSrw
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarSettings.SettingsForSrw;

            /**
             * Decodes a SettingsForSrw message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SettingsForSrw
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarSettings.SettingsForSrw;

            /**
             * Verifies a SettingsForSrw message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SettingsForSrw message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SettingsForSrw
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarSettings.SettingsForSrw;

            /**
             * Creates a plain object from a SettingsForSrw message. Also converts values to other types if specified.
             * @param message SettingsForSrw
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarSettings.SettingsForSrw, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SettingsForSrw to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a SettingsForCcw. */
        interface ISettingsForCcw {

            /** SettingsForCcw mapId */
            mapId?: (number|null);

            /** SettingsForCcw warName */
            warName?: (string|null);

            /** SettingsForCcw warPassword */
            warPassword?: (string|null);

            /** SettingsForCcw warComment */
            warComment?: (string|null);

            /** SettingsForCcw bootTimerParams */
            bootTimerParams?: (number[]|null);
        }

        /** Represents a SettingsForCcw. */
        class SettingsForCcw implements ISettingsForCcw {

            /**
             * Constructs a new SettingsForCcw.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarSettings.ISettingsForCcw);

            /** SettingsForCcw mapId. */
            public mapId: number;

            /** SettingsForCcw warName. */
            public warName: string;

            /** SettingsForCcw warPassword. */
            public warPassword: string;

            /** SettingsForCcw warComment. */
            public warComment: string;

            /** SettingsForCcw bootTimerParams. */
            public bootTimerParams: number[];

            /**
             * Creates a new SettingsForCcw instance using the specified properties.
             * @param [properties] Properties to set
             * @returns SettingsForCcw instance
             */
            public static create(properties?: CommonProto.WarSettings.ISettingsForCcw): CommonProto.WarSettings.SettingsForCcw;

            /**
             * Encodes the specified SettingsForCcw message. Does not implicitly {@link CommonProto.WarSettings.SettingsForCcw.verify|verify} messages.
             * @param message SettingsForCcw message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarSettings.ISettingsForCcw, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified SettingsForCcw message, length delimited. Does not implicitly {@link CommonProto.WarSettings.SettingsForCcw.verify|verify} messages.
             * @param message SettingsForCcw message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarSettings.ISettingsForCcw, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a SettingsForCcw message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SettingsForCcw
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarSettings.SettingsForCcw;

            /**
             * Decodes a SettingsForCcw message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SettingsForCcw
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarSettings.SettingsForCcw;

            /**
             * Verifies a SettingsForCcw message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SettingsForCcw message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SettingsForCcw
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarSettings.SettingsForCcw;

            /**
             * Creates a plain object from a SettingsForCcw message. Also converts values to other types if specified.
             * @param message SettingsForCcw
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarSettings.SettingsForCcw, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SettingsForCcw to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a WarSerialization. */
    interface IWarSerialization {
    }

    /** Represents a WarSerialization. */
    class WarSerialization implements IWarSerialization {

        /**
         * Constructs a new WarSerialization.
         * @param [properties] Properties to set
         */
        constructor(properties?: CommonProto.IWarSerialization);

        /**
         * Creates a new WarSerialization instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WarSerialization instance
         */
        public static create(properties?: CommonProto.IWarSerialization): CommonProto.WarSerialization;

        /**
         * Encodes the specified WarSerialization message. Does not implicitly {@link CommonProto.WarSerialization.verify|verify} messages.
         * @param message WarSerialization message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: CommonProto.IWarSerialization, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WarSerialization message, length delimited. Does not implicitly {@link CommonProto.WarSerialization.verify|verify} messages.
         * @param message WarSerialization message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: CommonProto.IWarSerialization, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarSerialization message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarSerialization
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarSerialization;

        /**
         * Decodes a WarSerialization message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WarSerialization
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarSerialization;

        /**
         * Verifies a WarSerialization message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WarSerialization message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WarSerialization
         */
        public static fromObject(object: { [k: string]: any }): CommonProto.WarSerialization;

        /**
         * Creates a plain object from a WarSerialization message. Also converts values to other types if specified.
         * @param message WarSerialization
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: CommonProto.WarSerialization, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WarSerialization to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace WarSerialization {

        /** Properties of a DataForFogMapFromPath. */
        interface IDataForFogMapFromPath {

            /** DataForFogMapFromPath playerIndex */
            playerIndex?: (number|null);

            /** DataForFogMapFromPath visibilityArray */
            visibilityArray?: (number[]|null);
        }

        /** Represents a DataForFogMapFromPath. */
        class DataForFogMapFromPath implements IDataForFogMapFromPath {

            /**
             * Constructs a new DataForFogMapFromPath.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarSerialization.IDataForFogMapFromPath);

            /** DataForFogMapFromPath playerIndex. */
            public playerIndex: number;

            /** DataForFogMapFromPath visibilityArray. */
            public visibilityArray: number[];

            /**
             * Creates a new DataForFogMapFromPath instance using the specified properties.
             * @param [properties] Properties to set
             * @returns DataForFogMapFromPath instance
             */
            public static create(properties?: CommonProto.WarSerialization.IDataForFogMapFromPath): CommonProto.WarSerialization.DataForFogMapFromPath;

            /**
             * Encodes the specified DataForFogMapFromPath message. Does not implicitly {@link CommonProto.WarSerialization.DataForFogMapFromPath.verify|verify} messages.
             * @param message DataForFogMapFromPath message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarSerialization.IDataForFogMapFromPath, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified DataForFogMapFromPath message, length delimited. Does not implicitly {@link CommonProto.WarSerialization.DataForFogMapFromPath.verify|verify} messages.
             * @param message DataForFogMapFromPath message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarSerialization.IDataForFogMapFromPath, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a DataForFogMapFromPath message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns DataForFogMapFromPath
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarSerialization.DataForFogMapFromPath;

            /**
             * Decodes a DataForFogMapFromPath message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns DataForFogMapFromPath
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarSerialization.DataForFogMapFromPath;

            /**
             * Verifies a DataForFogMapFromPath message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a DataForFogMapFromPath message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns DataForFogMapFromPath
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarSerialization.DataForFogMapFromPath;

            /**
             * Creates a plain object from a DataForFogMapFromPath message. Also converts values to other types if specified.
             * @param message DataForFogMapFromPath
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarSerialization.DataForFogMapFromPath, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this DataForFogMapFromPath to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a DataForWarEventCalledCount. */
        interface IDataForWarEventCalledCount {

            /** DataForWarEventCalledCount eventId */
            eventId?: (number|null);

            /** DataForWarEventCalledCount calledCountTotal */
            calledCountTotal?: (number|null);

            /** DataForWarEventCalledCount calledCountInPlayerTurn */
            calledCountInPlayerTurn?: (number|null);
        }

        /** Represents a DataForWarEventCalledCount. */
        class DataForWarEventCalledCount implements IDataForWarEventCalledCount {

            /**
             * Constructs a new DataForWarEventCalledCount.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarSerialization.IDataForWarEventCalledCount);

            /** DataForWarEventCalledCount eventId. */
            public eventId: number;

            /** DataForWarEventCalledCount calledCountTotal. */
            public calledCountTotal: number;

            /** DataForWarEventCalledCount calledCountInPlayerTurn. */
            public calledCountInPlayerTurn: number;

            /**
             * Creates a new DataForWarEventCalledCount instance using the specified properties.
             * @param [properties] Properties to set
             * @returns DataForWarEventCalledCount instance
             */
            public static create(properties?: CommonProto.WarSerialization.IDataForWarEventCalledCount): CommonProto.WarSerialization.DataForWarEventCalledCount;

            /**
             * Encodes the specified DataForWarEventCalledCount message. Does not implicitly {@link CommonProto.WarSerialization.DataForWarEventCalledCount.verify|verify} messages.
             * @param message DataForWarEventCalledCount message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarSerialization.IDataForWarEventCalledCount, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified DataForWarEventCalledCount message, length delimited. Does not implicitly {@link CommonProto.WarSerialization.DataForWarEventCalledCount.verify|verify} messages.
             * @param message DataForWarEventCalledCount message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarSerialization.IDataForWarEventCalledCount, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a DataForWarEventCalledCount message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns DataForWarEventCalledCount
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarSerialization.DataForWarEventCalledCount;

            /**
             * Decodes a DataForWarEventCalledCount message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns DataForWarEventCalledCount
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarSerialization.DataForWarEventCalledCount;

            /**
             * Verifies a DataForWarEventCalledCount message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a DataForWarEventCalledCount message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns DataForWarEventCalledCount
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarSerialization.DataForWarEventCalledCount;

            /**
             * Creates a plain object from a DataForWarEventCalledCount message. Also converts values to other types if specified.
             * @param message DataForWarEventCalledCount
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarSerialization.DataForWarEventCalledCount, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this DataForWarEventCalledCount to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a CustomCounter. */
        interface ICustomCounter {

            /** CustomCounter customCounterId */
            customCounterId?: (number|null);

            /** CustomCounter customCounterValue */
            customCounterValue?: (number|null);
        }

        /** Represents a CustomCounter. */
        class CustomCounter implements ICustomCounter {

            /**
             * Constructs a new CustomCounter.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarSerialization.ICustomCounter);

            /** CustomCounter customCounterId. */
            public customCounterId: number;

            /** CustomCounter customCounterValue. */
            public customCounterValue: number;

            /**
             * Creates a new CustomCounter instance using the specified properties.
             * @param [properties] Properties to set
             * @returns CustomCounter instance
             */
            public static create(properties?: CommonProto.WarSerialization.ICustomCounter): CommonProto.WarSerialization.CustomCounter;

            /**
             * Encodes the specified CustomCounter message. Does not implicitly {@link CommonProto.WarSerialization.CustomCounter.verify|verify} messages.
             * @param message CustomCounter message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarSerialization.ICustomCounter, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified CustomCounter message, length delimited. Does not implicitly {@link CommonProto.WarSerialization.CustomCounter.verify|verify} messages.
             * @param message CustomCounter message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarSerialization.ICustomCounter, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CustomCounter message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CustomCounter
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarSerialization.CustomCounter;

            /**
             * Decodes a CustomCounter message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns CustomCounter
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarSerialization.CustomCounter;

            /**
             * Verifies a CustomCounter message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a CustomCounter message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns CustomCounter
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarSerialization.CustomCounter;

            /**
             * Creates a plain object from a CustomCounter message. Also converts values to other types if specified.
             * @param message CustomCounter
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarSerialization.CustomCounter, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this CustomCounter to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a HalfwayReplayAction. */
        interface IHalfwayReplayAction {

            /** HalfwayReplayAction teamIndex */
            teamIndex?: (number|null);

            /** HalfwayReplayAction actionArray */
            actionArray?: (CommonProto.WarAction.IWarActionContainer[]|null);
        }

        /** Represents a HalfwayReplayAction. */
        class HalfwayReplayAction implements IHalfwayReplayAction {

            /**
             * Constructs a new HalfwayReplayAction.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarSerialization.IHalfwayReplayAction);

            /** HalfwayReplayAction teamIndex. */
            public teamIndex: number;

            /** HalfwayReplayAction actionArray. */
            public actionArray: CommonProto.WarAction.IWarActionContainer[];

            /**
             * Creates a new HalfwayReplayAction instance using the specified properties.
             * @param [properties] Properties to set
             * @returns HalfwayReplayAction instance
             */
            public static create(properties?: CommonProto.WarSerialization.IHalfwayReplayAction): CommonProto.WarSerialization.HalfwayReplayAction;

            /**
             * Encodes the specified HalfwayReplayAction message. Does not implicitly {@link CommonProto.WarSerialization.HalfwayReplayAction.verify|verify} messages.
             * @param message HalfwayReplayAction message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarSerialization.IHalfwayReplayAction, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified HalfwayReplayAction message, length delimited. Does not implicitly {@link CommonProto.WarSerialization.HalfwayReplayAction.verify|verify} messages.
             * @param message HalfwayReplayAction message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarSerialization.IHalfwayReplayAction, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a HalfwayReplayAction message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns HalfwayReplayAction
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarSerialization.HalfwayReplayAction;

            /**
             * Decodes a HalfwayReplayAction message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns HalfwayReplayAction
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarSerialization.HalfwayReplayAction;

            /**
             * Verifies a HalfwayReplayAction message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a HalfwayReplayAction message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns HalfwayReplayAction
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarSerialization.HalfwayReplayAction;

            /**
             * Creates a plain object from a HalfwayReplayAction message. Also converts values to other types if specified.
             * @param message HalfwayReplayAction
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarSerialization.HalfwayReplayAction, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this HalfwayReplayAction to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a TileCustomCrystalData. */
        interface ITileCustomCrystalData {

            /** TileCustomCrystalData radius */
            radius?: (number|null);

            /** TileCustomCrystalData priority */
            priority?: (number|null);

            /** TileCustomCrystalData canAffectSelf */
            canAffectSelf?: (boolean|null);

            /** TileCustomCrystalData canAffectAlly */
            canAffectAlly?: (boolean|null);

            /** TileCustomCrystalData canAffectEnemy */
            canAffectEnemy?: (boolean|null);

            /** TileCustomCrystalData deltaFund */
            deltaFund?: (number|null);

            /** TileCustomCrystalData deltaEnergyPercentage */
            deltaEnergyPercentage?: (number|null);

            /** TileCustomCrystalData deltaHp */
            deltaHp?: (number|null);

            /** TileCustomCrystalData deltaFuelPercentage */
            deltaFuelPercentage?: (number|null);

            /** TileCustomCrystalData deltaPrimaryAmmoPercentage */
            deltaPrimaryAmmoPercentage?: (number|null);
        }

        /** Represents a TileCustomCrystalData. */
        class TileCustomCrystalData implements ITileCustomCrystalData {

            /**
             * Constructs a new TileCustomCrystalData.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarSerialization.ITileCustomCrystalData);

            /** TileCustomCrystalData radius. */
            public radius: number;

            /** TileCustomCrystalData priority. */
            public priority: number;

            /** TileCustomCrystalData canAffectSelf. */
            public canAffectSelf: boolean;

            /** TileCustomCrystalData canAffectAlly. */
            public canAffectAlly: boolean;

            /** TileCustomCrystalData canAffectEnemy. */
            public canAffectEnemy: boolean;

            /** TileCustomCrystalData deltaFund. */
            public deltaFund: number;

            /** TileCustomCrystalData deltaEnergyPercentage. */
            public deltaEnergyPercentage: number;

            /** TileCustomCrystalData deltaHp. */
            public deltaHp: number;

            /** TileCustomCrystalData deltaFuelPercentage. */
            public deltaFuelPercentage: number;

            /** TileCustomCrystalData deltaPrimaryAmmoPercentage. */
            public deltaPrimaryAmmoPercentage: number;

            /**
             * Creates a new TileCustomCrystalData instance using the specified properties.
             * @param [properties] Properties to set
             * @returns TileCustomCrystalData instance
             */
            public static create(properties?: CommonProto.WarSerialization.ITileCustomCrystalData): CommonProto.WarSerialization.TileCustomCrystalData;

            /**
             * Encodes the specified TileCustomCrystalData message. Does not implicitly {@link CommonProto.WarSerialization.TileCustomCrystalData.verify|verify} messages.
             * @param message TileCustomCrystalData message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarSerialization.ITileCustomCrystalData, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified TileCustomCrystalData message, length delimited. Does not implicitly {@link CommonProto.WarSerialization.TileCustomCrystalData.verify|verify} messages.
             * @param message TileCustomCrystalData message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarSerialization.ITileCustomCrystalData, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a TileCustomCrystalData message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns TileCustomCrystalData
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarSerialization.TileCustomCrystalData;

            /**
             * Decodes a TileCustomCrystalData message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns TileCustomCrystalData
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarSerialization.TileCustomCrystalData;

            /**
             * Verifies a TileCustomCrystalData message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a TileCustomCrystalData message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns TileCustomCrystalData
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarSerialization.TileCustomCrystalData;

            /**
             * Creates a plain object from a TileCustomCrystalData message. Also converts values to other types if specified.
             * @param message TileCustomCrystalData
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarSerialization.TileCustomCrystalData, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this TileCustomCrystalData to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a TileCustomCannonData. */
        interface ITileCustomCannonData {

            /** TileCustomCannonData rangeForUp */
            rangeForUp?: (number|null);

            /** TileCustomCannonData rangeForDown */
            rangeForDown?: (number|null);

            /** TileCustomCannonData rangeForLeft */
            rangeForLeft?: (number|null);

            /** TileCustomCannonData rangeForRight */
            rangeForRight?: (number|null);

            /** TileCustomCannonData priority */
            priority?: (number|null);

            /** TileCustomCannonData canAffectSelf */
            canAffectSelf?: (boolean|null);

            /** TileCustomCannonData canAffectAlly */
            canAffectAlly?: (boolean|null);

            /** TileCustomCannonData canAffectEnemy */
            canAffectEnemy?: (boolean|null);

            /** TileCustomCannonData maxTargetCount */
            maxTargetCount?: (number|null);

            /** TileCustomCannonData deltaHp */
            deltaHp?: (number|null);

            /** TileCustomCannonData deltaFuelPercentage */
            deltaFuelPercentage?: (number|null);

            /** TileCustomCannonData deltaPrimaryAmmoPercentage */
            deltaPrimaryAmmoPercentage?: (number|null);
        }

        /** Represents a TileCustomCannonData. */
        class TileCustomCannonData implements ITileCustomCannonData {

            /**
             * Constructs a new TileCustomCannonData.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarSerialization.ITileCustomCannonData);

            /** TileCustomCannonData rangeForUp. */
            public rangeForUp: number;

            /** TileCustomCannonData rangeForDown. */
            public rangeForDown: number;

            /** TileCustomCannonData rangeForLeft. */
            public rangeForLeft: number;

            /** TileCustomCannonData rangeForRight. */
            public rangeForRight: number;

            /** TileCustomCannonData priority. */
            public priority: number;

            /** TileCustomCannonData canAffectSelf. */
            public canAffectSelf: boolean;

            /** TileCustomCannonData canAffectAlly. */
            public canAffectAlly: boolean;

            /** TileCustomCannonData canAffectEnemy. */
            public canAffectEnemy: boolean;

            /** TileCustomCannonData maxTargetCount. */
            public maxTargetCount: number;

            /** TileCustomCannonData deltaHp. */
            public deltaHp: number;

            /** TileCustomCannonData deltaFuelPercentage. */
            public deltaFuelPercentage: number;

            /** TileCustomCannonData deltaPrimaryAmmoPercentage. */
            public deltaPrimaryAmmoPercentage: number;

            /**
             * Creates a new TileCustomCannonData instance using the specified properties.
             * @param [properties] Properties to set
             * @returns TileCustomCannonData instance
             */
            public static create(properties?: CommonProto.WarSerialization.ITileCustomCannonData): CommonProto.WarSerialization.TileCustomCannonData;

            /**
             * Encodes the specified TileCustomCannonData message. Does not implicitly {@link CommonProto.WarSerialization.TileCustomCannonData.verify|verify} messages.
             * @param message TileCustomCannonData message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarSerialization.ITileCustomCannonData, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified TileCustomCannonData message, length delimited. Does not implicitly {@link CommonProto.WarSerialization.TileCustomCannonData.verify|verify} messages.
             * @param message TileCustomCannonData message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarSerialization.ITileCustomCannonData, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a TileCustomCannonData message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns TileCustomCannonData
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarSerialization.TileCustomCannonData;

            /**
             * Decodes a TileCustomCannonData message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns TileCustomCannonData
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarSerialization.TileCustomCannonData;

            /**
             * Verifies a TileCustomCannonData message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a TileCustomCannonData message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns TileCustomCannonData
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarSerialization.TileCustomCannonData;

            /**
             * Creates a plain object from a TileCustomCannonData message. Also converts values to other types if specified.
             * @param message TileCustomCannonData
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarSerialization.TileCustomCannonData, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this TileCustomCannonData to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a TileCustomLaserTurretData. */
        interface ITileCustomLaserTurretData {

            /** TileCustomLaserTurretData rangeForUp */
            rangeForUp?: (number|null);

            /** TileCustomLaserTurretData rangeForDown */
            rangeForDown?: (number|null);

            /** TileCustomLaserTurretData rangeForLeft */
            rangeForLeft?: (number|null);

            /** TileCustomLaserTurretData rangeForRight */
            rangeForRight?: (number|null);

            /** TileCustomLaserTurretData priority */
            priority?: (number|null);

            /** TileCustomLaserTurretData canAffectSelf */
            canAffectSelf?: (boolean|null);

            /** TileCustomLaserTurretData canAffectAlly */
            canAffectAlly?: (boolean|null);

            /** TileCustomLaserTurretData canAffectEnemy */
            canAffectEnemy?: (boolean|null);

            /** TileCustomLaserTurretData deltaHp */
            deltaHp?: (number|null);

            /** TileCustomLaserTurretData deltaFuelPercentage */
            deltaFuelPercentage?: (number|null);

            /** TileCustomLaserTurretData deltaPrimaryAmmoPercentage */
            deltaPrimaryAmmoPercentage?: (number|null);
        }

        /** Represents a TileCustomLaserTurretData. */
        class TileCustomLaserTurretData implements ITileCustomLaserTurretData {

            /**
             * Constructs a new TileCustomLaserTurretData.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarSerialization.ITileCustomLaserTurretData);

            /** TileCustomLaserTurretData rangeForUp. */
            public rangeForUp: number;

            /** TileCustomLaserTurretData rangeForDown. */
            public rangeForDown: number;

            /** TileCustomLaserTurretData rangeForLeft. */
            public rangeForLeft: number;

            /** TileCustomLaserTurretData rangeForRight. */
            public rangeForRight: number;

            /** TileCustomLaserTurretData priority. */
            public priority: number;

            /** TileCustomLaserTurretData canAffectSelf. */
            public canAffectSelf: boolean;

            /** TileCustomLaserTurretData canAffectAlly. */
            public canAffectAlly: boolean;

            /** TileCustomLaserTurretData canAffectEnemy. */
            public canAffectEnemy: boolean;

            /** TileCustomLaserTurretData deltaHp. */
            public deltaHp: number;

            /** TileCustomLaserTurretData deltaFuelPercentage. */
            public deltaFuelPercentage: number;

            /** TileCustomLaserTurretData deltaPrimaryAmmoPercentage. */
            public deltaPrimaryAmmoPercentage: number;

            /**
             * Creates a new TileCustomLaserTurretData instance using the specified properties.
             * @param [properties] Properties to set
             * @returns TileCustomLaserTurretData instance
             */
            public static create(properties?: CommonProto.WarSerialization.ITileCustomLaserTurretData): CommonProto.WarSerialization.TileCustomLaserTurretData;

            /**
             * Encodes the specified TileCustomLaserTurretData message. Does not implicitly {@link CommonProto.WarSerialization.TileCustomLaserTurretData.verify|verify} messages.
             * @param message TileCustomLaserTurretData message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarSerialization.ITileCustomLaserTurretData, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified TileCustomLaserTurretData message, length delimited. Does not implicitly {@link CommonProto.WarSerialization.TileCustomLaserTurretData.verify|verify} messages.
             * @param message TileCustomLaserTurretData message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarSerialization.ITileCustomLaserTurretData, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a TileCustomLaserTurretData message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns TileCustomLaserTurretData
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarSerialization.TileCustomLaserTurretData;

            /**
             * Decodes a TileCustomLaserTurretData message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns TileCustomLaserTurretData
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarSerialization.TileCustomLaserTurretData;

            /**
             * Verifies a TileCustomLaserTurretData message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a TileCustomLaserTurretData message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns TileCustomLaserTurretData
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarSerialization.TileCustomLaserTurretData;

            /**
             * Creates a plain object from a TileCustomLaserTurretData message. Also converts values to other types if specified.
             * @param message TileCustomLaserTurretData
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarSerialization.TileCustomLaserTurretData, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this TileCustomLaserTurretData to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a SerialTile. */
        interface ISerialTile {

            /** SerialTile gridIndex */
            gridIndex?: (CommonProto.Structure.IGridIndex|null);

            /** SerialTile playerIndex */
            playerIndex?: (number|null);

            /** SerialTile baseType */
            baseType?: (number|null);

            /** SerialTile objectType */
            objectType?: (number|null);

            /** SerialTile baseShapeId */
            baseShapeId?: (number|null);

            /** SerialTile objectShapeId */
            objectShapeId?: (number|null);

            /** SerialTile currentHp */
            currentHp?: (number|null);

            /** SerialTile currentBuildPoint */
            currentBuildPoint?: (number|null);

            /** SerialTile currentCapturePoint */
            currentCapturePoint?: (number|null);

            /** SerialTile decoratorType */
            decoratorType?: (number|null);

            /** SerialTile decoratorShapeId */
            decoratorShapeId?: (number|null);

            /** SerialTile locationFlags */
            locationFlags?: (number|null);

            /** SerialTile isHighlighted */
            isHighlighted?: (boolean|null);

            /** SerialTile customCrystalData */
            customCrystalData?: (CommonProto.WarSerialization.ITileCustomCrystalData|null);

            /** SerialTile customCannonData */
            customCannonData?: (CommonProto.WarSerialization.ITileCustomCannonData|null);

            /** SerialTile customLaserTurretData */
            customLaserTurretData?: (CommonProto.WarSerialization.ITileCustomLaserTurretData|null);
        }

        /** Represents a SerialTile. */
        class SerialTile implements ISerialTile {

            /**
             * Constructs a new SerialTile.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarSerialization.ISerialTile);

            /** SerialTile gridIndex. */
            public gridIndex?: (CommonProto.Structure.IGridIndex|null);

            /** SerialTile playerIndex. */
            public playerIndex: number;

            /** SerialTile baseType. */
            public baseType: number;

            /** SerialTile objectType. */
            public objectType: number;

            /** SerialTile baseShapeId. */
            public baseShapeId: number;

            /** SerialTile objectShapeId. */
            public objectShapeId: number;

            /** SerialTile currentHp. */
            public currentHp: number;

            /** SerialTile currentBuildPoint. */
            public currentBuildPoint: number;

            /** SerialTile currentCapturePoint. */
            public currentCapturePoint: number;

            /** SerialTile decoratorType. */
            public decoratorType: number;

            /** SerialTile decoratorShapeId. */
            public decoratorShapeId: number;

            /** SerialTile locationFlags. */
            public locationFlags: number;

            /** SerialTile isHighlighted. */
            public isHighlighted: boolean;

            /** SerialTile customCrystalData. */
            public customCrystalData?: (CommonProto.WarSerialization.ITileCustomCrystalData|null);

            /** SerialTile customCannonData. */
            public customCannonData?: (CommonProto.WarSerialization.ITileCustomCannonData|null);

            /** SerialTile customLaserTurretData. */
            public customLaserTurretData?: (CommonProto.WarSerialization.ITileCustomLaserTurretData|null);

            /**
             * Creates a new SerialTile instance using the specified properties.
             * @param [properties] Properties to set
             * @returns SerialTile instance
             */
            public static create(properties?: CommonProto.WarSerialization.ISerialTile): CommonProto.WarSerialization.SerialTile;

            /**
             * Encodes the specified SerialTile message. Does not implicitly {@link CommonProto.WarSerialization.SerialTile.verify|verify} messages.
             * @param message SerialTile message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarSerialization.ISerialTile, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified SerialTile message, length delimited. Does not implicitly {@link CommonProto.WarSerialization.SerialTile.verify|verify} messages.
             * @param message SerialTile message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarSerialization.ISerialTile, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a SerialTile message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SerialTile
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarSerialization.SerialTile;

            /**
             * Decodes a SerialTile message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SerialTile
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarSerialization.SerialTile;

            /**
             * Verifies a SerialTile message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SerialTile message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SerialTile
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarSerialization.SerialTile;

            /**
             * Creates a plain object from a SerialTile message. Also converts values to other types if specified.
             * @param message SerialTile
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarSerialization.SerialTile, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SerialTile to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a SerialUnit. */
        interface ISerialUnit {

            /** SerialUnit gridIndex */
            gridIndex?: (CommonProto.Structure.IGridIndex|null);

            /** SerialUnit playerIndex */
            playerIndex?: (number|null);

            /** SerialUnit unitType */
            unitType?: (number|null);

            /** SerialUnit unitId */
            unitId?: (number|null);

            /** SerialUnit actionState */
            actionState?: (number|null);

            /** SerialUnit primaryWeaponCurrentAmmo */
            primaryWeaponCurrentAmmo?: (number|null);

            /** SerialUnit currentHp */
            currentHp?: (number|null);

            /** SerialUnit isCapturingTile */
            isCapturingTile?: (boolean|null);

            /** SerialUnit isDiving */
            isDiving?: (boolean|null);

            /** SerialUnit flareCurrentAmmo */
            flareCurrentAmmo?: (number|null);

            /** SerialUnit currentFuel */
            currentFuel?: (number|null);

            /** SerialUnit currentBuildMaterial */
            currentBuildMaterial?: (number|null);

            /** SerialUnit currentProduceMaterial */
            currentProduceMaterial?: (number|null);

            /** SerialUnit currentPromotion */
            currentPromotion?: (number|null);

            /** SerialUnit isBuildingTile */
            isBuildingTile?: (boolean|null);

            /** SerialUnit loaderUnitId */
            loaderUnitId?: (number|null);

            /** SerialUnit hasLoadedCo */
            hasLoadedCo?: (boolean|null);

            /** SerialUnit aiMode */
            aiMode?: (number|null);
        }

        /** Represents a SerialUnit. */
        class SerialUnit implements ISerialUnit {

            /**
             * Constructs a new SerialUnit.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarSerialization.ISerialUnit);

            /** SerialUnit gridIndex. */
            public gridIndex?: (CommonProto.Structure.IGridIndex|null);

            /** SerialUnit playerIndex. */
            public playerIndex: number;

            /** SerialUnit unitType. */
            public unitType: number;

            /** SerialUnit unitId. */
            public unitId: number;

            /** SerialUnit actionState. */
            public actionState: number;

            /** SerialUnit primaryWeaponCurrentAmmo. */
            public primaryWeaponCurrentAmmo: number;

            /** SerialUnit currentHp. */
            public currentHp: number;

            /** SerialUnit isCapturingTile. */
            public isCapturingTile: boolean;

            /** SerialUnit isDiving. */
            public isDiving: boolean;

            /** SerialUnit flareCurrentAmmo. */
            public flareCurrentAmmo: number;

            /** SerialUnit currentFuel. */
            public currentFuel: number;

            /** SerialUnit currentBuildMaterial. */
            public currentBuildMaterial: number;

            /** SerialUnit currentProduceMaterial. */
            public currentProduceMaterial: number;

            /** SerialUnit currentPromotion. */
            public currentPromotion: number;

            /** SerialUnit isBuildingTile. */
            public isBuildingTile: boolean;

            /** SerialUnit loaderUnitId. */
            public loaderUnitId: number;

            /** SerialUnit hasLoadedCo. */
            public hasLoadedCo: boolean;

            /** SerialUnit aiMode. */
            public aiMode: number;

            /**
             * Creates a new SerialUnit instance using the specified properties.
             * @param [properties] Properties to set
             * @returns SerialUnit instance
             */
            public static create(properties?: CommonProto.WarSerialization.ISerialUnit): CommonProto.WarSerialization.SerialUnit;

            /**
             * Encodes the specified SerialUnit message. Does not implicitly {@link CommonProto.WarSerialization.SerialUnit.verify|verify} messages.
             * @param message SerialUnit message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarSerialization.ISerialUnit, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified SerialUnit message, length delimited. Does not implicitly {@link CommonProto.WarSerialization.SerialUnit.verify|verify} messages.
             * @param message SerialUnit message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarSerialization.ISerialUnit, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a SerialUnit message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SerialUnit
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarSerialization.SerialUnit;

            /**
             * Decodes a SerialUnit message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SerialUnit
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarSerialization.SerialUnit;

            /**
             * Verifies a SerialUnit message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SerialUnit message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SerialUnit
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarSerialization.SerialUnit;

            /**
             * Creates a plain object from a SerialUnit message. Also converts values to other types if specified.
             * @param message SerialUnit
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarSerialization.SerialUnit, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SerialUnit to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a SerialPlayer. */
        interface ISerialPlayer {

            /** SerialPlayer fund */
            fund?: (number|null);

            /** SerialPlayer hasVotedForDraw */
            hasVotedForDraw?: (boolean|null);

            /** SerialPlayer aliveState */
            aliveState?: (number|null);

            /** SerialPlayer playerIndex */
            playerIndex?: (number|null);

            /** SerialPlayer userId */
            userId?: (number|null);

            /** SerialPlayer coId */
            coId?: (number|null);

            /** SerialPlayer coCurrentEnergy */
            coCurrentEnergy?: (number|null);

            /** SerialPlayer coUsingSkillType */
            coUsingSkillType?: (number|null);

            /** SerialPlayer coIsDestroyedInTurn */
            coIsDestroyedInTurn?: (boolean|null);

            /** SerialPlayer watchOngoingSrcUserIdArray */
            watchOngoingSrcUserIdArray?: (number[]|null);

            /** SerialPlayer watchRequestSrcUserIdArray */
            watchRequestSrcUserIdArray?: (number[]|null);

            /** SerialPlayer restTimeToBoot */
            restTimeToBoot?: (number|null);

            /** SerialPlayer unitAndTileSkinId */
            unitAndTileSkinId?: (number|null);

            /** SerialPlayer coPowerActivatedCount */
            coPowerActivatedCount?: (number|null);

            /** SerialPlayer hasTakenManualAction */
            hasTakenManualAction?: (boolean|null);

            /** SerialPlayer markedGridIdArray */
            markedGridIdArray?: (number[]|null);
        }

        /** Represents a SerialPlayer. */
        class SerialPlayer implements ISerialPlayer {

            /**
             * Constructs a new SerialPlayer.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarSerialization.ISerialPlayer);

            /** SerialPlayer fund. */
            public fund: number;

            /** SerialPlayer hasVotedForDraw. */
            public hasVotedForDraw: boolean;

            /** SerialPlayer aliveState. */
            public aliveState: number;

            /** SerialPlayer playerIndex. */
            public playerIndex: number;

            /** SerialPlayer userId. */
            public userId: number;

            /** SerialPlayer coId. */
            public coId: number;

            /** SerialPlayer coCurrentEnergy. */
            public coCurrentEnergy: number;

            /** SerialPlayer coUsingSkillType. */
            public coUsingSkillType: number;

            /** SerialPlayer coIsDestroyedInTurn. */
            public coIsDestroyedInTurn: boolean;

            /** SerialPlayer watchOngoingSrcUserIdArray. */
            public watchOngoingSrcUserIdArray: number[];

            /** SerialPlayer watchRequestSrcUserIdArray. */
            public watchRequestSrcUserIdArray: number[];

            /** SerialPlayer restTimeToBoot. */
            public restTimeToBoot: number;

            /** SerialPlayer unitAndTileSkinId. */
            public unitAndTileSkinId: number;

            /** SerialPlayer coPowerActivatedCount. */
            public coPowerActivatedCount: number;

            /** SerialPlayer hasTakenManualAction. */
            public hasTakenManualAction: boolean;

            /** SerialPlayer markedGridIdArray. */
            public markedGridIdArray: number[];

            /**
             * Creates a new SerialPlayer instance using the specified properties.
             * @param [properties] Properties to set
             * @returns SerialPlayer instance
             */
            public static create(properties?: CommonProto.WarSerialization.ISerialPlayer): CommonProto.WarSerialization.SerialPlayer;

            /**
             * Encodes the specified SerialPlayer message. Does not implicitly {@link CommonProto.WarSerialization.SerialPlayer.verify|verify} messages.
             * @param message SerialPlayer message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarSerialization.ISerialPlayer, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified SerialPlayer message, length delimited. Does not implicitly {@link CommonProto.WarSerialization.SerialPlayer.verify|verify} messages.
             * @param message SerialPlayer message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarSerialization.ISerialPlayer, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a SerialPlayer message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SerialPlayer
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarSerialization.SerialPlayer;

            /**
             * Decodes a SerialPlayer message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SerialPlayer
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarSerialization.SerialPlayer;

            /**
             * Verifies a SerialPlayer message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SerialPlayer message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SerialPlayer
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarSerialization.SerialPlayer;

            /**
             * Creates a plain object from a SerialPlayer message. Also converts values to other types if specified.
             * @param message SerialPlayer
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarSerialization.SerialPlayer, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SerialPlayer to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a SerialPlayerManager. */
        interface ISerialPlayerManager {

            /** SerialPlayerManager players */
            players?: (CommonProto.WarSerialization.ISerialPlayer[]|null);
        }

        /** Represents a SerialPlayerManager. */
        class SerialPlayerManager implements ISerialPlayerManager {

            /**
             * Constructs a new SerialPlayerManager.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarSerialization.ISerialPlayerManager);

            /** SerialPlayerManager players. */
            public players: CommonProto.WarSerialization.ISerialPlayer[];

            /**
             * Creates a new SerialPlayerManager instance using the specified properties.
             * @param [properties] Properties to set
             * @returns SerialPlayerManager instance
             */
            public static create(properties?: CommonProto.WarSerialization.ISerialPlayerManager): CommonProto.WarSerialization.SerialPlayerManager;

            /**
             * Encodes the specified SerialPlayerManager message. Does not implicitly {@link CommonProto.WarSerialization.SerialPlayerManager.verify|verify} messages.
             * @param message SerialPlayerManager message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarSerialization.ISerialPlayerManager, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified SerialPlayerManager message, length delimited. Does not implicitly {@link CommonProto.WarSerialization.SerialPlayerManager.verify|verify} messages.
             * @param message SerialPlayerManager message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarSerialization.ISerialPlayerManager, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a SerialPlayerManager message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SerialPlayerManager
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarSerialization.SerialPlayerManager;

            /**
             * Decodes a SerialPlayerManager message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SerialPlayerManager
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarSerialization.SerialPlayerManager;

            /**
             * Verifies a SerialPlayerManager message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SerialPlayerManager message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SerialPlayerManager
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarSerialization.SerialPlayerManager;

            /**
             * Creates a plain object from a SerialPlayerManager message. Also converts values to other types if specified.
             * @param message SerialPlayerManager
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarSerialization.SerialPlayerManager, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SerialPlayerManager to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a SerialTurnManager. */
        interface ISerialTurnManager {

            /** SerialTurnManager turnIndex */
            turnIndex?: (number|null);

            /** SerialTurnManager playerIndex */
            playerIndex?: (number|null);

            /** SerialTurnManager turnPhaseCode */
            turnPhaseCode?: (number|null);

            /** SerialTurnManager enterTurnTime */
            enterTurnTime?: (number|null);
        }

        /** Represents a SerialTurnManager. */
        class SerialTurnManager implements ISerialTurnManager {

            /**
             * Constructs a new SerialTurnManager.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarSerialization.ISerialTurnManager);

            /** SerialTurnManager turnIndex. */
            public turnIndex: number;

            /** SerialTurnManager playerIndex. */
            public playerIndex: number;

            /** SerialTurnManager turnPhaseCode. */
            public turnPhaseCode: number;

            /** SerialTurnManager enterTurnTime. */
            public enterTurnTime: number;

            /**
             * Creates a new SerialTurnManager instance using the specified properties.
             * @param [properties] Properties to set
             * @returns SerialTurnManager instance
             */
            public static create(properties?: CommonProto.WarSerialization.ISerialTurnManager): CommonProto.WarSerialization.SerialTurnManager;

            /**
             * Encodes the specified SerialTurnManager message. Does not implicitly {@link CommonProto.WarSerialization.SerialTurnManager.verify|verify} messages.
             * @param message SerialTurnManager message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarSerialization.ISerialTurnManager, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified SerialTurnManager message, length delimited. Does not implicitly {@link CommonProto.WarSerialization.SerialTurnManager.verify|verify} messages.
             * @param message SerialTurnManager message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarSerialization.ISerialTurnManager, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a SerialTurnManager message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SerialTurnManager
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarSerialization.SerialTurnManager;

            /**
             * Decodes a SerialTurnManager message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SerialTurnManager
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarSerialization.SerialTurnManager;

            /**
             * Verifies a SerialTurnManager message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SerialTurnManager message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SerialTurnManager
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarSerialization.SerialTurnManager;

            /**
             * Creates a plain object from a SerialTurnManager message. Also converts values to other types if specified.
             * @param message SerialTurnManager
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarSerialization.SerialTurnManager, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SerialTurnManager to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a SerialTileMap. */
        interface ISerialTileMap {

            /** SerialTileMap tiles */
            tiles?: (CommonProto.WarSerialization.ISerialTile[]|null);
        }

        /** Represents a SerialTileMap. */
        class SerialTileMap implements ISerialTileMap {

            /**
             * Constructs a new SerialTileMap.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarSerialization.ISerialTileMap);

            /** SerialTileMap tiles. */
            public tiles: CommonProto.WarSerialization.ISerialTile[];

            /**
             * Creates a new SerialTileMap instance using the specified properties.
             * @param [properties] Properties to set
             * @returns SerialTileMap instance
             */
            public static create(properties?: CommonProto.WarSerialization.ISerialTileMap): CommonProto.WarSerialization.SerialTileMap;

            /**
             * Encodes the specified SerialTileMap message. Does not implicitly {@link CommonProto.WarSerialization.SerialTileMap.verify|verify} messages.
             * @param message SerialTileMap message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarSerialization.ISerialTileMap, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified SerialTileMap message, length delimited. Does not implicitly {@link CommonProto.WarSerialization.SerialTileMap.verify|verify} messages.
             * @param message SerialTileMap message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarSerialization.ISerialTileMap, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a SerialTileMap message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SerialTileMap
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarSerialization.SerialTileMap;

            /**
             * Decodes a SerialTileMap message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SerialTileMap
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarSerialization.SerialTileMap;

            /**
             * Verifies a SerialTileMap message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SerialTileMap message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SerialTileMap
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarSerialization.SerialTileMap;

            /**
             * Creates a plain object from a SerialTileMap message. Also converts values to other types if specified.
             * @param message SerialTileMap
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarSerialization.SerialTileMap, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SerialTileMap to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a SerialUnitMap. */
        interface ISerialUnitMap {

            /** SerialUnitMap nextUnitId */
            nextUnitId?: (number|null);

            /** SerialUnitMap units */
            units?: (CommonProto.WarSerialization.ISerialUnit[]|null);
        }

        /** Represents a SerialUnitMap. */
        class SerialUnitMap implements ISerialUnitMap {

            /**
             * Constructs a new SerialUnitMap.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarSerialization.ISerialUnitMap);

            /** SerialUnitMap nextUnitId. */
            public nextUnitId: number;

            /** SerialUnitMap units. */
            public units: CommonProto.WarSerialization.ISerialUnit[];

            /**
             * Creates a new SerialUnitMap instance using the specified properties.
             * @param [properties] Properties to set
             * @returns SerialUnitMap instance
             */
            public static create(properties?: CommonProto.WarSerialization.ISerialUnitMap): CommonProto.WarSerialization.SerialUnitMap;

            /**
             * Encodes the specified SerialUnitMap message. Does not implicitly {@link CommonProto.WarSerialization.SerialUnitMap.verify|verify} messages.
             * @param message SerialUnitMap message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarSerialization.ISerialUnitMap, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified SerialUnitMap message, length delimited. Does not implicitly {@link CommonProto.WarSerialization.SerialUnitMap.verify|verify} messages.
             * @param message SerialUnitMap message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarSerialization.ISerialUnitMap, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a SerialUnitMap message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SerialUnitMap
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarSerialization.SerialUnitMap;

            /**
             * Decodes a SerialUnitMap message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SerialUnitMap
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarSerialization.SerialUnitMap;

            /**
             * Verifies a SerialUnitMap message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SerialUnitMap message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SerialUnitMap
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarSerialization.SerialUnitMap;

            /**
             * Creates a plain object from a SerialUnitMap message. Also converts values to other types if specified.
             * @param message SerialUnitMap
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarSerialization.SerialUnitMap, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SerialUnitMap to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a SerialFogMap. */
        interface ISerialFogMap {

            /** SerialFogMap forceFogCode */
            forceFogCode?: (number|null);

            /** SerialFogMap forceExpirePlayerIndex */
            forceExpirePlayerIndex?: (number|null);

            /** SerialFogMap forceExpireTurnIndex */
            forceExpireTurnIndex?: (number|null);

            /** SerialFogMap mapsFromPath */
            mapsFromPath?: (CommonProto.WarSerialization.IDataForFogMapFromPath[]|null);
        }

        /** Represents a SerialFogMap. */
        class SerialFogMap implements ISerialFogMap {

            /**
             * Constructs a new SerialFogMap.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarSerialization.ISerialFogMap);

            /** SerialFogMap forceFogCode. */
            public forceFogCode: number;

            /** SerialFogMap forceExpirePlayerIndex. */
            public forceExpirePlayerIndex: number;

            /** SerialFogMap forceExpireTurnIndex. */
            public forceExpireTurnIndex: number;

            /** SerialFogMap mapsFromPath. */
            public mapsFromPath: CommonProto.WarSerialization.IDataForFogMapFromPath[];

            /**
             * Creates a new SerialFogMap instance using the specified properties.
             * @param [properties] Properties to set
             * @returns SerialFogMap instance
             */
            public static create(properties?: CommonProto.WarSerialization.ISerialFogMap): CommonProto.WarSerialization.SerialFogMap;

            /**
             * Encodes the specified SerialFogMap message. Does not implicitly {@link CommonProto.WarSerialization.SerialFogMap.verify|verify} messages.
             * @param message SerialFogMap message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarSerialization.ISerialFogMap, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified SerialFogMap message, length delimited. Does not implicitly {@link CommonProto.WarSerialization.SerialFogMap.verify|verify} messages.
             * @param message SerialFogMap message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarSerialization.ISerialFogMap, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a SerialFogMap message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SerialFogMap
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarSerialization.SerialFogMap;

            /**
             * Decodes a SerialFogMap message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SerialFogMap
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarSerialization.SerialFogMap;

            /**
             * Verifies a SerialFogMap message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SerialFogMap message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SerialFogMap
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarSerialization.SerialFogMap;

            /**
             * Creates a plain object from a SerialFogMap message. Also converts values to other types if specified.
             * @param message SerialFogMap
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarSerialization.SerialFogMap, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SerialFogMap to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a SerialField. */
        interface ISerialField {

            /** SerialField fogMap */
            fogMap?: (CommonProto.WarSerialization.ISerialFogMap|null);

            /** SerialField tileMap */
            tileMap?: (CommonProto.WarSerialization.ISerialTileMap|null);

            /** SerialField unitMap */
            unitMap?: (CommonProto.WarSerialization.ISerialUnitMap|null);
        }

        /** Represents a SerialField. */
        class SerialField implements ISerialField {

            /**
             * Constructs a new SerialField.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarSerialization.ISerialField);

            /** SerialField fogMap. */
            public fogMap?: (CommonProto.WarSerialization.ISerialFogMap|null);

            /** SerialField tileMap. */
            public tileMap?: (CommonProto.WarSerialization.ISerialTileMap|null);

            /** SerialField unitMap. */
            public unitMap?: (CommonProto.WarSerialization.ISerialUnitMap|null);

            /**
             * Creates a new SerialField instance using the specified properties.
             * @param [properties] Properties to set
             * @returns SerialField instance
             */
            public static create(properties?: CommonProto.WarSerialization.ISerialField): CommonProto.WarSerialization.SerialField;

            /**
             * Encodes the specified SerialField message. Does not implicitly {@link CommonProto.WarSerialization.SerialField.verify|verify} messages.
             * @param message SerialField message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarSerialization.ISerialField, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified SerialField message, length delimited. Does not implicitly {@link CommonProto.WarSerialization.SerialField.verify|verify} messages.
             * @param message SerialField message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarSerialization.ISerialField, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a SerialField message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SerialField
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarSerialization.SerialField;

            /**
             * Decodes a SerialField message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SerialField
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarSerialization.SerialField;

            /**
             * Verifies a SerialField message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SerialField message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SerialField
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarSerialization.SerialField;

            /**
             * Creates a plain object from a SerialField message. Also converts values to other types if specified.
             * @param message SerialField
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarSerialization.SerialField, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SerialField to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a SerialWarEventManager. */
        interface ISerialWarEventManager {

            /** SerialWarEventManager calledCountList */
            calledCountList?: (CommonProto.WarSerialization.IDataForWarEventCalledCount[]|null);

            /** SerialWarEventManager customCounterArray */
            customCounterArray?: (CommonProto.WarSerialization.ICustomCounter[]|null);

            /** SerialWarEventManager ongoingPersistentActionIdArray */
            ongoingPersistentActionIdArray?: (number[]|null);
        }

        /** Represents a SerialWarEventManager. */
        class SerialWarEventManager implements ISerialWarEventManager {

            /**
             * Constructs a new SerialWarEventManager.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarSerialization.ISerialWarEventManager);

            /** SerialWarEventManager calledCountList. */
            public calledCountList: CommonProto.WarSerialization.IDataForWarEventCalledCount[];

            /** SerialWarEventManager customCounterArray. */
            public customCounterArray: CommonProto.WarSerialization.ICustomCounter[];

            /** SerialWarEventManager ongoingPersistentActionIdArray. */
            public ongoingPersistentActionIdArray: number[];

            /**
             * Creates a new SerialWarEventManager instance using the specified properties.
             * @param [properties] Properties to set
             * @returns SerialWarEventManager instance
             */
            public static create(properties?: CommonProto.WarSerialization.ISerialWarEventManager): CommonProto.WarSerialization.SerialWarEventManager;

            /**
             * Encodes the specified SerialWarEventManager message. Does not implicitly {@link CommonProto.WarSerialization.SerialWarEventManager.verify|verify} messages.
             * @param message SerialWarEventManager message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarSerialization.ISerialWarEventManager, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified SerialWarEventManager message, length delimited. Does not implicitly {@link CommonProto.WarSerialization.SerialWarEventManager.verify|verify} messages.
             * @param message SerialWarEventManager message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarSerialization.ISerialWarEventManager, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a SerialWarEventManager message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SerialWarEventManager
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarSerialization.SerialWarEventManager;

            /**
             * Decodes a SerialWarEventManager message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SerialWarEventManager
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarSerialization.SerialWarEventManager;

            /**
             * Verifies a SerialWarEventManager message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SerialWarEventManager message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SerialWarEventManager
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarSerialization.SerialWarEventManager;

            /**
             * Creates a plain object from a SerialWarEventManager message. Also converts values to other types if specified.
             * @param message SerialWarEventManager
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarSerialization.SerialWarEventManager, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SerialWarEventManager to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a SerialWeatherManager. */
        interface ISerialWeatherManager {

            /** SerialWeatherManager forceWeatherType */
            forceWeatherType?: (number|null);

            /** SerialWeatherManager expireTurnIndex */
            expireTurnIndex?: (number|null);

            /** SerialWeatherManager expirePlayerIndex */
            expirePlayerIndex?: (number|null);
        }

        /** Represents a SerialWeatherManager. */
        class SerialWeatherManager implements ISerialWeatherManager {

            /**
             * Constructs a new SerialWeatherManager.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarSerialization.ISerialWeatherManager);

            /** SerialWeatherManager forceWeatherType. */
            public forceWeatherType: number;

            /** SerialWeatherManager expireTurnIndex. */
            public expireTurnIndex: number;

            /** SerialWeatherManager expirePlayerIndex. */
            public expirePlayerIndex: number;

            /**
             * Creates a new SerialWeatherManager instance using the specified properties.
             * @param [properties] Properties to set
             * @returns SerialWeatherManager instance
             */
            public static create(properties?: CommonProto.WarSerialization.ISerialWeatherManager): CommonProto.WarSerialization.SerialWeatherManager;

            /**
             * Encodes the specified SerialWeatherManager message. Does not implicitly {@link CommonProto.WarSerialization.SerialWeatherManager.verify|verify} messages.
             * @param message SerialWeatherManager message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarSerialization.ISerialWeatherManager, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified SerialWeatherManager message, length delimited. Does not implicitly {@link CommonProto.WarSerialization.SerialWeatherManager.verify|verify} messages.
             * @param message SerialWeatherManager message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarSerialization.ISerialWeatherManager, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a SerialWeatherManager message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SerialWeatherManager
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarSerialization.SerialWeatherManager;

            /**
             * Decodes a SerialWeatherManager message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SerialWeatherManager
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarSerialization.SerialWeatherManager;

            /**
             * Verifies a SerialWeatherManager message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SerialWeatherManager message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SerialWeatherManager
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarSerialization.SerialWeatherManager;

            /**
             * Creates a plain object from a SerialWeatherManager message. Also converts values to other types if specified.
             * @param message SerialWeatherManager
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarSerialization.SerialWeatherManager, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SerialWeatherManager to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a SerialExecutedActionManager. */
        interface ISerialExecutedActionManager {

            /** SerialExecutedActionManager executedActionsCount */
            executedActionsCount?: (number|null);

            /** SerialExecutedActionManager executedActionArray */
            executedActionArray?: (CommonProto.WarAction.IWarActionContainer[]|null);

            /** SerialExecutedActionManager halfwayReplayActionArray */
            halfwayReplayActionArray?: (CommonProto.WarSerialization.IHalfwayReplayAction[]|null);
        }

        /** Represents a SerialExecutedActionManager. */
        class SerialExecutedActionManager implements ISerialExecutedActionManager {

            /**
             * Constructs a new SerialExecutedActionManager.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarSerialization.ISerialExecutedActionManager);

            /** SerialExecutedActionManager executedActionsCount. */
            public executedActionsCount: number;

            /** SerialExecutedActionManager executedActionArray. */
            public executedActionArray: CommonProto.WarAction.IWarActionContainer[];

            /** SerialExecutedActionManager halfwayReplayActionArray. */
            public halfwayReplayActionArray: CommonProto.WarSerialization.IHalfwayReplayAction[];

            /**
             * Creates a new SerialExecutedActionManager instance using the specified properties.
             * @param [properties] Properties to set
             * @returns SerialExecutedActionManager instance
             */
            public static create(properties?: CommonProto.WarSerialization.ISerialExecutedActionManager): CommonProto.WarSerialization.SerialExecutedActionManager;

            /**
             * Encodes the specified SerialExecutedActionManager message. Does not implicitly {@link CommonProto.WarSerialization.SerialExecutedActionManager.verify|verify} messages.
             * @param message SerialExecutedActionManager message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarSerialization.ISerialExecutedActionManager, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified SerialExecutedActionManager message, length delimited. Does not implicitly {@link CommonProto.WarSerialization.SerialExecutedActionManager.verify|verify} messages.
             * @param message SerialExecutedActionManager message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarSerialization.ISerialExecutedActionManager, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a SerialExecutedActionManager message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SerialExecutedActionManager
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarSerialization.SerialExecutedActionManager;

            /**
             * Decodes a SerialExecutedActionManager message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SerialExecutedActionManager
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarSerialization.SerialExecutedActionManager;

            /**
             * Verifies a SerialExecutedActionManager message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SerialExecutedActionManager message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SerialExecutedActionManager
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarSerialization.SerialExecutedActionManager;

            /**
             * Creates a plain object from a SerialExecutedActionManager message. Also converts values to other types if specified.
             * @param message SerialExecutedActionManager
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarSerialization.SerialExecutedActionManager, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SerialExecutedActionManager to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a SerialWar. */
        interface ISerialWar {

            /** SerialWar settingsForCommon */
            settingsForCommon?: (CommonProto.WarSettings.ISettingsForCommon|null);

            /** SerialWar settingsForMcw */
            settingsForMcw?: (CommonProto.WarSettings.ISettingsForMcw|null);

            /** SerialWar settingsForScw */
            settingsForScw?: (CommonProto.WarSettings.ISettingsForScw|null);

            /** SerialWar settingsForMrw */
            settingsForMrw?: (CommonProto.WarSettings.ISettingsForMrw|null);

            /** SerialWar settingsForMfw */
            settingsForMfw?: (CommonProto.WarSettings.ISettingsForMfw|null);

            /** SerialWar settingsForSfw */
            settingsForSfw?: (CommonProto.WarSettings.ISettingsForSfw|null);

            /** SerialWar settingsForSrw */
            settingsForSrw?: (CommonProto.WarSettings.ISettingsForSrw|null);

            /** SerialWar settingsForCcw */
            settingsForCcw?: (CommonProto.WarSettings.ISettingsForCcw|null);

            /** SerialWar warId */
            warId?: (number|null);

            /** SerialWar seedRandomInitialState */
            seedRandomInitialState?: (CommonProto.Structure.ISeedRandomState|null);

            /** SerialWar seedRandomCurrentState */
            seedRandomCurrentState?: (CommonProto.Structure.ISeedRandomState|null);

            /** SerialWar remainingVotesForDraw */
            remainingVotesForDraw?: (number|null);

            /** SerialWar playerManager */
            playerManager?: (CommonProto.WarSerialization.ISerialPlayerManager|null);

            /** SerialWar turnManager */
            turnManager?: (CommonProto.WarSerialization.ISerialTurnManager|null);

            /** SerialWar field */
            field?: (CommonProto.WarSerialization.ISerialField|null);

            /** SerialWar warEventManager */
            warEventManager?: (CommonProto.WarSerialization.ISerialWarEventManager|null);

            /** SerialWar weatherManager */
            weatherManager?: (CommonProto.WarSerialization.ISerialWeatherManager|null);

            /** SerialWar isEnded */
            isEnded?: (boolean|null);

            /** SerialWar executedActionManager */
            executedActionManager?: (CommonProto.WarSerialization.ISerialExecutedActionManager|null);
        }

        /** Represents a SerialWar. */
        class SerialWar implements ISerialWar {

            /**
             * Constructs a new SerialWar.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarSerialization.ISerialWar);

            /** SerialWar settingsForCommon. */
            public settingsForCommon?: (CommonProto.WarSettings.ISettingsForCommon|null);

            /** SerialWar settingsForMcw. */
            public settingsForMcw?: (CommonProto.WarSettings.ISettingsForMcw|null);

            /** SerialWar settingsForScw. */
            public settingsForScw?: (CommonProto.WarSettings.ISettingsForScw|null);

            /** SerialWar settingsForMrw. */
            public settingsForMrw?: (CommonProto.WarSettings.ISettingsForMrw|null);

            /** SerialWar settingsForMfw. */
            public settingsForMfw?: (CommonProto.WarSettings.ISettingsForMfw|null);

            /** SerialWar settingsForSfw. */
            public settingsForSfw?: (CommonProto.WarSettings.ISettingsForSfw|null);

            /** SerialWar settingsForSrw. */
            public settingsForSrw?: (CommonProto.WarSettings.ISettingsForSrw|null);

            /** SerialWar settingsForCcw. */
            public settingsForCcw?: (CommonProto.WarSettings.ISettingsForCcw|null);

            /** SerialWar warId. */
            public warId: number;

            /** SerialWar seedRandomInitialState. */
            public seedRandomInitialState?: (CommonProto.Structure.ISeedRandomState|null);

            /** SerialWar seedRandomCurrentState. */
            public seedRandomCurrentState?: (CommonProto.Structure.ISeedRandomState|null);

            /** SerialWar remainingVotesForDraw. */
            public remainingVotesForDraw: number;

            /** SerialWar playerManager. */
            public playerManager?: (CommonProto.WarSerialization.ISerialPlayerManager|null);

            /** SerialWar turnManager. */
            public turnManager?: (CommonProto.WarSerialization.ISerialTurnManager|null);

            /** SerialWar field. */
            public field?: (CommonProto.WarSerialization.ISerialField|null);

            /** SerialWar warEventManager. */
            public warEventManager?: (CommonProto.WarSerialization.ISerialWarEventManager|null);

            /** SerialWar weatherManager. */
            public weatherManager?: (CommonProto.WarSerialization.ISerialWeatherManager|null);

            /** SerialWar isEnded. */
            public isEnded: boolean;

            /** SerialWar executedActionManager. */
            public executedActionManager?: (CommonProto.WarSerialization.ISerialExecutedActionManager|null);

            /**
             * Creates a new SerialWar instance using the specified properties.
             * @param [properties] Properties to set
             * @returns SerialWar instance
             */
            public static create(properties?: CommonProto.WarSerialization.ISerialWar): CommonProto.WarSerialization.SerialWar;

            /**
             * Encodes the specified SerialWar message. Does not implicitly {@link CommonProto.WarSerialization.SerialWar.verify|verify} messages.
             * @param message SerialWar message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarSerialization.ISerialWar, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified SerialWar message, length delimited. Does not implicitly {@link CommonProto.WarSerialization.SerialWar.verify|verify} messages.
             * @param message SerialWar message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarSerialization.ISerialWar, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a SerialWar message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SerialWar
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarSerialization.SerialWar;

            /**
             * Decodes a SerialWar message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SerialWar
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarSerialization.SerialWar;

            /**
             * Verifies a SerialWar message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SerialWar message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SerialWar
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarSerialization.SerialWar;

            /**
             * Creates a plain object from a SerialWar message. Also converts values to other types if specified.
             * @param message SerialWar
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarSerialization.SerialWar, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SerialWar to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a WarAction. */
    interface IWarAction {
    }

    /** Represents a WarAction. */
    class WarAction implements IWarAction {

        /**
         * Constructs a new WarAction.
         * @param [properties] Properties to set
         */
        constructor(properties?: CommonProto.IWarAction);

        /**
         * Creates a new WarAction instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WarAction instance
         */
        public static create(properties?: CommonProto.IWarAction): CommonProto.WarAction;

        /**
         * Encodes the specified WarAction message. Does not implicitly {@link CommonProto.WarAction.verify|verify} messages.
         * @param message WarAction message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: CommonProto.IWarAction, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WarAction message, length delimited. Does not implicitly {@link CommonProto.WarAction.verify|verify} messages.
         * @param message WarAction message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: CommonProto.IWarAction, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarAction message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarAction
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarAction;

        /**
         * Decodes a WarAction message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WarAction
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarAction;

        /**
         * Verifies a WarAction message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WarAction message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WarAction
         */
        public static fromObject(object: { [k: string]: any }): CommonProto.WarAction;

        /**
         * Creates a plain object from a WarAction message. Also converts values to other types if specified.
         * @param message WarAction
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: CommonProto.WarAction, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WarAction to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace WarAction {

        /** Properties of a WarActionSystemBeginTurn. */
        interface IWarActionSystemBeginTurn {

            /** WarActionSystemBeginTurn extraData */
            extraData?: (CommonProto.WarAction.WarActionSystemBeginTurn.IExtraDataForSystemBeginTurn|null);
        }

        /** Represents a WarActionSystemBeginTurn. */
        class WarActionSystemBeginTurn implements IWarActionSystemBeginTurn {

            /**
             * Constructs a new WarActionSystemBeginTurn.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarAction.IWarActionSystemBeginTurn);

            /** WarActionSystemBeginTurn extraData. */
            public extraData?: (CommonProto.WarAction.WarActionSystemBeginTurn.IExtraDataForSystemBeginTurn|null);

            /**
             * Creates a new WarActionSystemBeginTurn instance using the specified properties.
             * @param [properties] Properties to set
             * @returns WarActionSystemBeginTurn instance
             */
            public static create(properties?: CommonProto.WarAction.IWarActionSystemBeginTurn): CommonProto.WarAction.WarActionSystemBeginTurn;

            /**
             * Encodes the specified WarActionSystemBeginTurn message. Does not implicitly {@link CommonProto.WarAction.WarActionSystemBeginTurn.verify|verify} messages.
             * @param message WarActionSystemBeginTurn message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarAction.IWarActionSystemBeginTurn, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified WarActionSystemBeginTurn message, length delimited. Does not implicitly {@link CommonProto.WarAction.WarActionSystemBeginTurn.verify|verify} messages.
             * @param message WarActionSystemBeginTurn message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarAction.IWarActionSystemBeginTurn, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a WarActionSystemBeginTurn message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns WarActionSystemBeginTurn
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarAction.WarActionSystemBeginTurn;

            /**
             * Decodes a WarActionSystemBeginTurn message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns WarActionSystemBeginTurn
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarAction.WarActionSystemBeginTurn;

            /**
             * Verifies a WarActionSystemBeginTurn message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a WarActionSystemBeginTurn message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns WarActionSystemBeginTurn
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarAction.WarActionSystemBeginTurn;

            /**
             * Creates a plain object from a WarActionSystemBeginTurn message. Also converts values to other types if specified.
             * @param message WarActionSystemBeginTurn
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarAction.WarActionSystemBeginTurn, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this WarActionSystemBeginTurn to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace WarActionSystemBeginTurn {

            /** Properties of an ExtraDataForSystemBeginTurn. */
            interface IExtraDataForSystemBeginTurn {

                /** ExtraDataForSystemBeginTurn commonExtraData */
                commonExtraData?: (CommonProto.Structure.ICommonExtraDataForWarAction|null);
            }

            /** Represents an ExtraDataForSystemBeginTurn. */
            class ExtraDataForSystemBeginTurn implements IExtraDataForSystemBeginTurn {

                /**
                 * Constructs a new ExtraDataForSystemBeginTurn.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.WarAction.WarActionSystemBeginTurn.IExtraDataForSystemBeginTurn);

                /** ExtraDataForSystemBeginTurn commonExtraData. */
                public commonExtraData?: (CommonProto.Structure.ICommonExtraDataForWarAction|null);

                /**
                 * Creates a new ExtraDataForSystemBeginTurn instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ExtraDataForSystemBeginTurn instance
                 */
                public static create(properties?: CommonProto.WarAction.WarActionSystemBeginTurn.IExtraDataForSystemBeginTurn): CommonProto.WarAction.WarActionSystemBeginTurn.ExtraDataForSystemBeginTurn;

                /**
                 * Encodes the specified ExtraDataForSystemBeginTurn message. Does not implicitly {@link CommonProto.WarAction.WarActionSystemBeginTurn.ExtraDataForSystemBeginTurn.verify|verify} messages.
                 * @param message ExtraDataForSystemBeginTurn message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.WarAction.WarActionSystemBeginTurn.IExtraDataForSystemBeginTurn, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified ExtraDataForSystemBeginTurn message, length delimited. Does not implicitly {@link CommonProto.WarAction.WarActionSystemBeginTurn.ExtraDataForSystemBeginTurn.verify|verify} messages.
                 * @param message ExtraDataForSystemBeginTurn message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.WarAction.WarActionSystemBeginTurn.IExtraDataForSystemBeginTurn, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes an ExtraDataForSystemBeginTurn message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ExtraDataForSystemBeginTurn
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarAction.WarActionSystemBeginTurn.ExtraDataForSystemBeginTurn;

                /**
                 * Decodes an ExtraDataForSystemBeginTurn message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ExtraDataForSystemBeginTurn
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarAction.WarActionSystemBeginTurn.ExtraDataForSystemBeginTurn;

                /**
                 * Verifies an ExtraDataForSystemBeginTurn message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an ExtraDataForSystemBeginTurn message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ExtraDataForSystemBeginTurn
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.WarAction.WarActionSystemBeginTurn.ExtraDataForSystemBeginTurn;

                /**
                 * Creates a plain object from an ExtraDataForSystemBeginTurn message. Also converts values to other types if specified.
                 * @param message ExtraDataForSystemBeginTurn
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.WarAction.WarActionSystemBeginTurn.ExtraDataForSystemBeginTurn, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ExtraDataForSystemBeginTurn to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a WarActionSystemCallWarEvent. */
        interface IWarActionSystemCallWarEvent {

            /** WarActionSystemCallWarEvent warEventId */
            warEventId?: (number|null);

            /** WarActionSystemCallWarEvent extraData */
            extraData?: (CommonProto.WarAction.WarActionSystemCallWarEvent.IExtraDataForSystemCallWarEvent|null);
        }

        /** Represents a WarActionSystemCallWarEvent. */
        class WarActionSystemCallWarEvent implements IWarActionSystemCallWarEvent {

            /**
             * Constructs a new WarActionSystemCallWarEvent.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarAction.IWarActionSystemCallWarEvent);

            /** WarActionSystemCallWarEvent warEventId. */
            public warEventId: number;

            /** WarActionSystemCallWarEvent extraData. */
            public extraData?: (CommonProto.WarAction.WarActionSystemCallWarEvent.IExtraDataForSystemCallWarEvent|null);

            /**
             * Creates a new WarActionSystemCallWarEvent instance using the specified properties.
             * @param [properties] Properties to set
             * @returns WarActionSystemCallWarEvent instance
             */
            public static create(properties?: CommonProto.WarAction.IWarActionSystemCallWarEvent): CommonProto.WarAction.WarActionSystemCallWarEvent;

            /**
             * Encodes the specified WarActionSystemCallWarEvent message. Does not implicitly {@link CommonProto.WarAction.WarActionSystemCallWarEvent.verify|verify} messages.
             * @param message WarActionSystemCallWarEvent message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarAction.IWarActionSystemCallWarEvent, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified WarActionSystemCallWarEvent message, length delimited. Does not implicitly {@link CommonProto.WarAction.WarActionSystemCallWarEvent.verify|verify} messages.
             * @param message WarActionSystemCallWarEvent message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarAction.IWarActionSystemCallWarEvent, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a WarActionSystemCallWarEvent message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns WarActionSystemCallWarEvent
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarAction.WarActionSystemCallWarEvent;

            /**
             * Decodes a WarActionSystemCallWarEvent message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns WarActionSystemCallWarEvent
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarAction.WarActionSystemCallWarEvent;

            /**
             * Verifies a WarActionSystemCallWarEvent message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a WarActionSystemCallWarEvent message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns WarActionSystemCallWarEvent
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarAction.WarActionSystemCallWarEvent;

            /**
             * Creates a plain object from a WarActionSystemCallWarEvent message. Also converts values to other types if specified.
             * @param message WarActionSystemCallWarEvent
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarAction.WarActionSystemCallWarEvent, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this WarActionSystemCallWarEvent to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace WarActionSystemCallWarEvent {

            /** Properties of an ExtraDataForSystemCallWarEvent. */
            interface IExtraDataForSystemCallWarEvent {

                /** ExtraDataForSystemCallWarEvent commonExtraData */
                commonExtraData?: (CommonProto.Structure.ICommonExtraDataForWarAction|null);

                /** ExtraDataForSystemCallWarEvent warEventId */
                warEventId?: (number|null);
            }

            /** Represents an ExtraDataForSystemCallWarEvent. */
            class ExtraDataForSystemCallWarEvent implements IExtraDataForSystemCallWarEvent {

                /**
                 * Constructs a new ExtraDataForSystemCallWarEvent.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.WarAction.WarActionSystemCallWarEvent.IExtraDataForSystemCallWarEvent);

                /** ExtraDataForSystemCallWarEvent commonExtraData. */
                public commonExtraData?: (CommonProto.Structure.ICommonExtraDataForWarAction|null);

                /** ExtraDataForSystemCallWarEvent warEventId. */
                public warEventId: number;

                /**
                 * Creates a new ExtraDataForSystemCallWarEvent instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ExtraDataForSystemCallWarEvent instance
                 */
                public static create(properties?: CommonProto.WarAction.WarActionSystemCallWarEvent.IExtraDataForSystemCallWarEvent): CommonProto.WarAction.WarActionSystemCallWarEvent.ExtraDataForSystemCallWarEvent;

                /**
                 * Encodes the specified ExtraDataForSystemCallWarEvent message. Does not implicitly {@link CommonProto.WarAction.WarActionSystemCallWarEvent.ExtraDataForSystemCallWarEvent.verify|verify} messages.
                 * @param message ExtraDataForSystemCallWarEvent message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.WarAction.WarActionSystemCallWarEvent.IExtraDataForSystemCallWarEvent, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified ExtraDataForSystemCallWarEvent message, length delimited. Does not implicitly {@link CommonProto.WarAction.WarActionSystemCallWarEvent.ExtraDataForSystemCallWarEvent.verify|verify} messages.
                 * @param message ExtraDataForSystemCallWarEvent message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.WarAction.WarActionSystemCallWarEvent.IExtraDataForSystemCallWarEvent, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes an ExtraDataForSystemCallWarEvent message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ExtraDataForSystemCallWarEvent
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarAction.WarActionSystemCallWarEvent.ExtraDataForSystemCallWarEvent;

                /**
                 * Decodes an ExtraDataForSystemCallWarEvent message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ExtraDataForSystemCallWarEvent
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarAction.WarActionSystemCallWarEvent.ExtraDataForSystemCallWarEvent;

                /**
                 * Verifies an ExtraDataForSystemCallWarEvent message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an ExtraDataForSystemCallWarEvent message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ExtraDataForSystemCallWarEvent
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.WarAction.WarActionSystemCallWarEvent.ExtraDataForSystemCallWarEvent;

                /**
                 * Creates a plain object from an ExtraDataForSystemCallWarEvent message. Also converts values to other types if specified.
                 * @param message ExtraDataForSystemCallWarEvent
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.WarAction.WarActionSystemCallWarEvent.ExtraDataForSystemCallWarEvent, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ExtraDataForSystemCallWarEvent to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a WarActionSystemDestroyPlayerForce. */
        interface IWarActionSystemDestroyPlayerForce {

            /** WarActionSystemDestroyPlayerForce targetPlayerIndex */
            targetPlayerIndex?: (number|null);

            /** WarActionSystemDestroyPlayerForce extraData */
            extraData?: (CommonProto.WarAction.WarActionSystemDestroyPlayerForce.IExtraDataForSystemDestroyPlayerForce|null);
        }

        /** Represents a WarActionSystemDestroyPlayerForce. */
        class WarActionSystemDestroyPlayerForce implements IWarActionSystemDestroyPlayerForce {

            /**
             * Constructs a new WarActionSystemDestroyPlayerForce.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarAction.IWarActionSystemDestroyPlayerForce);

            /** WarActionSystemDestroyPlayerForce targetPlayerIndex. */
            public targetPlayerIndex: number;

            /** WarActionSystemDestroyPlayerForce extraData. */
            public extraData?: (CommonProto.WarAction.WarActionSystemDestroyPlayerForce.IExtraDataForSystemDestroyPlayerForce|null);

            /**
             * Creates a new WarActionSystemDestroyPlayerForce instance using the specified properties.
             * @param [properties] Properties to set
             * @returns WarActionSystemDestroyPlayerForce instance
             */
            public static create(properties?: CommonProto.WarAction.IWarActionSystemDestroyPlayerForce): CommonProto.WarAction.WarActionSystemDestroyPlayerForce;

            /**
             * Encodes the specified WarActionSystemDestroyPlayerForce message. Does not implicitly {@link CommonProto.WarAction.WarActionSystemDestroyPlayerForce.verify|verify} messages.
             * @param message WarActionSystemDestroyPlayerForce message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarAction.IWarActionSystemDestroyPlayerForce, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified WarActionSystemDestroyPlayerForce message, length delimited. Does not implicitly {@link CommonProto.WarAction.WarActionSystemDestroyPlayerForce.verify|verify} messages.
             * @param message WarActionSystemDestroyPlayerForce message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarAction.IWarActionSystemDestroyPlayerForce, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a WarActionSystemDestroyPlayerForce message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns WarActionSystemDestroyPlayerForce
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarAction.WarActionSystemDestroyPlayerForce;

            /**
             * Decodes a WarActionSystemDestroyPlayerForce message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns WarActionSystemDestroyPlayerForce
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarAction.WarActionSystemDestroyPlayerForce;

            /**
             * Verifies a WarActionSystemDestroyPlayerForce message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a WarActionSystemDestroyPlayerForce message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns WarActionSystemDestroyPlayerForce
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarAction.WarActionSystemDestroyPlayerForce;

            /**
             * Creates a plain object from a WarActionSystemDestroyPlayerForce message. Also converts values to other types if specified.
             * @param message WarActionSystemDestroyPlayerForce
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarAction.WarActionSystemDestroyPlayerForce, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this WarActionSystemDestroyPlayerForce to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace WarActionSystemDestroyPlayerForce {

            /** Properties of an ExtraDataForSystemDestroyPlayerForce. */
            interface IExtraDataForSystemDestroyPlayerForce {

                /** ExtraDataForSystemDestroyPlayerForce commonExtraData */
                commonExtraData?: (CommonProto.Structure.ICommonExtraDataForWarAction|null);

                /** ExtraDataForSystemDestroyPlayerForce targetPlayerIndex */
                targetPlayerIndex?: (number|null);
            }

            /** Represents an ExtraDataForSystemDestroyPlayerForce. */
            class ExtraDataForSystemDestroyPlayerForce implements IExtraDataForSystemDestroyPlayerForce {

                /**
                 * Constructs a new ExtraDataForSystemDestroyPlayerForce.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.WarAction.WarActionSystemDestroyPlayerForce.IExtraDataForSystemDestroyPlayerForce);

                /** ExtraDataForSystemDestroyPlayerForce commonExtraData. */
                public commonExtraData?: (CommonProto.Structure.ICommonExtraDataForWarAction|null);

                /** ExtraDataForSystemDestroyPlayerForce targetPlayerIndex. */
                public targetPlayerIndex: number;

                /**
                 * Creates a new ExtraDataForSystemDestroyPlayerForce instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ExtraDataForSystemDestroyPlayerForce instance
                 */
                public static create(properties?: CommonProto.WarAction.WarActionSystemDestroyPlayerForce.IExtraDataForSystemDestroyPlayerForce): CommonProto.WarAction.WarActionSystemDestroyPlayerForce.ExtraDataForSystemDestroyPlayerForce;

                /**
                 * Encodes the specified ExtraDataForSystemDestroyPlayerForce message. Does not implicitly {@link CommonProto.WarAction.WarActionSystemDestroyPlayerForce.ExtraDataForSystemDestroyPlayerForce.verify|verify} messages.
                 * @param message ExtraDataForSystemDestroyPlayerForce message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.WarAction.WarActionSystemDestroyPlayerForce.IExtraDataForSystemDestroyPlayerForce, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified ExtraDataForSystemDestroyPlayerForce message, length delimited. Does not implicitly {@link CommonProto.WarAction.WarActionSystemDestroyPlayerForce.ExtraDataForSystemDestroyPlayerForce.verify|verify} messages.
                 * @param message ExtraDataForSystemDestroyPlayerForce message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.WarAction.WarActionSystemDestroyPlayerForce.IExtraDataForSystemDestroyPlayerForce, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes an ExtraDataForSystemDestroyPlayerForce message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ExtraDataForSystemDestroyPlayerForce
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarAction.WarActionSystemDestroyPlayerForce.ExtraDataForSystemDestroyPlayerForce;

                /**
                 * Decodes an ExtraDataForSystemDestroyPlayerForce message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ExtraDataForSystemDestroyPlayerForce
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarAction.WarActionSystemDestroyPlayerForce.ExtraDataForSystemDestroyPlayerForce;

                /**
                 * Verifies an ExtraDataForSystemDestroyPlayerForce message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an ExtraDataForSystemDestroyPlayerForce message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ExtraDataForSystemDestroyPlayerForce
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.WarAction.WarActionSystemDestroyPlayerForce.ExtraDataForSystemDestroyPlayerForce;

                /**
                 * Creates a plain object from an ExtraDataForSystemDestroyPlayerForce message. Also converts values to other types if specified.
                 * @param message ExtraDataForSystemDestroyPlayerForce
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.WarAction.WarActionSystemDestroyPlayerForce.ExtraDataForSystemDestroyPlayerForce, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ExtraDataForSystemDestroyPlayerForce to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a WarActionSystemEndWar. */
        interface IWarActionSystemEndWar {

            /** WarActionSystemEndWar extraData */
            extraData?: (CommonProto.WarAction.WarActionSystemEndWar.IExtraDataForSystemEndWar|null);
        }

        /** Represents a WarActionSystemEndWar. */
        class WarActionSystemEndWar implements IWarActionSystemEndWar {

            /**
             * Constructs a new WarActionSystemEndWar.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarAction.IWarActionSystemEndWar);

            /** WarActionSystemEndWar extraData. */
            public extraData?: (CommonProto.WarAction.WarActionSystemEndWar.IExtraDataForSystemEndWar|null);

            /**
             * Creates a new WarActionSystemEndWar instance using the specified properties.
             * @param [properties] Properties to set
             * @returns WarActionSystemEndWar instance
             */
            public static create(properties?: CommonProto.WarAction.IWarActionSystemEndWar): CommonProto.WarAction.WarActionSystemEndWar;

            /**
             * Encodes the specified WarActionSystemEndWar message. Does not implicitly {@link CommonProto.WarAction.WarActionSystemEndWar.verify|verify} messages.
             * @param message WarActionSystemEndWar message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarAction.IWarActionSystemEndWar, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified WarActionSystemEndWar message, length delimited. Does not implicitly {@link CommonProto.WarAction.WarActionSystemEndWar.verify|verify} messages.
             * @param message WarActionSystemEndWar message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarAction.IWarActionSystemEndWar, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a WarActionSystemEndWar message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns WarActionSystemEndWar
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarAction.WarActionSystemEndWar;

            /**
             * Decodes a WarActionSystemEndWar message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns WarActionSystemEndWar
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarAction.WarActionSystemEndWar;

            /**
             * Verifies a WarActionSystemEndWar message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a WarActionSystemEndWar message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns WarActionSystemEndWar
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarAction.WarActionSystemEndWar;

            /**
             * Creates a plain object from a WarActionSystemEndWar message. Also converts values to other types if specified.
             * @param message WarActionSystemEndWar
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarAction.WarActionSystemEndWar, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this WarActionSystemEndWar to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace WarActionSystemEndWar {

            /** Properties of an ExtraDataForSystemEndWar. */
            interface IExtraDataForSystemEndWar {

                /** ExtraDataForSystemEndWar commonExtraData */
                commonExtraData?: (CommonProto.Structure.ICommonExtraDataForWarAction|null);
            }

            /** Represents an ExtraDataForSystemEndWar. */
            class ExtraDataForSystemEndWar implements IExtraDataForSystemEndWar {

                /**
                 * Constructs a new ExtraDataForSystemEndWar.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.WarAction.WarActionSystemEndWar.IExtraDataForSystemEndWar);

                /** ExtraDataForSystemEndWar commonExtraData. */
                public commonExtraData?: (CommonProto.Structure.ICommonExtraDataForWarAction|null);

                /**
                 * Creates a new ExtraDataForSystemEndWar instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ExtraDataForSystemEndWar instance
                 */
                public static create(properties?: CommonProto.WarAction.WarActionSystemEndWar.IExtraDataForSystemEndWar): CommonProto.WarAction.WarActionSystemEndWar.ExtraDataForSystemEndWar;

                /**
                 * Encodes the specified ExtraDataForSystemEndWar message. Does not implicitly {@link CommonProto.WarAction.WarActionSystemEndWar.ExtraDataForSystemEndWar.verify|verify} messages.
                 * @param message ExtraDataForSystemEndWar message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.WarAction.WarActionSystemEndWar.IExtraDataForSystemEndWar, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified ExtraDataForSystemEndWar message, length delimited. Does not implicitly {@link CommonProto.WarAction.WarActionSystemEndWar.ExtraDataForSystemEndWar.verify|verify} messages.
                 * @param message ExtraDataForSystemEndWar message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.WarAction.WarActionSystemEndWar.IExtraDataForSystemEndWar, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes an ExtraDataForSystemEndWar message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ExtraDataForSystemEndWar
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarAction.WarActionSystemEndWar.ExtraDataForSystemEndWar;

                /**
                 * Decodes an ExtraDataForSystemEndWar message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ExtraDataForSystemEndWar
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarAction.WarActionSystemEndWar.ExtraDataForSystemEndWar;

                /**
                 * Verifies an ExtraDataForSystemEndWar message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an ExtraDataForSystemEndWar message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ExtraDataForSystemEndWar
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.WarAction.WarActionSystemEndWar.ExtraDataForSystemEndWar;

                /**
                 * Creates a plain object from an ExtraDataForSystemEndWar message. Also converts values to other types if specified.
                 * @param message ExtraDataForSystemEndWar
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.WarAction.WarActionSystemEndWar.ExtraDataForSystemEndWar, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ExtraDataForSystemEndWar to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a WarActionSystemEndTurn. */
        interface IWarActionSystemEndTurn {

            /** WarActionSystemEndTurn extraData */
            extraData?: (CommonProto.WarAction.WarActionSystemEndTurn.IExtraDataForSystemEndTurn|null);
        }

        /** Represents a WarActionSystemEndTurn. */
        class WarActionSystemEndTurn implements IWarActionSystemEndTurn {

            /**
             * Constructs a new WarActionSystemEndTurn.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarAction.IWarActionSystemEndTurn);

            /** WarActionSystemEndTurn extraData. */
            public extraData?: (CommonProto.WarAction.WarActionSystemEndTurn.IExtraDataForSystemEndTurn|null);

            /**
             * Creates a new WarActionSystemEndTurn instance using the specified properties.
             * @param [properties] Properties to set
             * @returns WarActionSystemEndTurn instance
             */
            public static create(properties?: CommonProto.WarAction.IWarActionSystemEndTurn): CommonProto.WarAction.WarActionSystemEndTurn;

            /**
             * Encodes the specified WarActionSystemEndTurn message. Does not implicitly {@link CommonProto.WarAction.WarActionSystemEndTurn.verify|verify} messages.
             * @param message WarActionSystemEndTurn message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarAction.IWarActionSystemEndTurn, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified WarActionSystemEndTurn message, length delimited. Does not implicitly {@link CommonProto.WarAction.WarActionSystemEndTurn.verify|verify} messages.
             * @param message WarActionSystemEndTurn message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarAction.IWarActionSystemEndTurn, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a WarActionSystemEndTurn message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns WarActionSystemEndTurn
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarAction.WarActionSystemEndTurn;

            /**
             * Decodes a WarActionSystemEndTurn message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns WarActionSystemEndTurn
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarAction.WarActionSystemEndTurn;

            /**
             * Verifies a WarActionSystemEndTurn message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a WarActionSystemEndTurn message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns WarActionSystemEndTurn
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarAction.WarActionSystemEndTurn;

            /**
             * Creates a plain object from a WarActionSystemEndTurn message. Also converts values to other types if specified.
             * @param message WarActionSystemEndTurn
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarAction.WarActionSystemEndTurn, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this WarActionSystemEndTurn to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace WarActionSystemEndTurn {

            /** Properties of an ExtraDataForSystemEndTurn. */
            interface IExtraDataForSystemEndTurn {

                /** ExtraDataForSystemEndTurn commonExtraData */
                commonExtraData?: (CommonProto.Structure.ICommonExtraDataForWarAction|null);
            }

            /** Represents an ExtraDataForSystemEndTurn. */
            class ExtraDataForSystemEndTurn implements IExtraDataForSystemEndTurn {

                /**
                 * Constructs a new ExtraDataForSystemEndTurn.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.WarAction.WarActionSystemEndTurn.IExtraDataForSystemEndTurn);

                /** ExtraDataForSystemEndTurn commonExtraData. */
                public commonExtraData?: (CommonProto.Structure.ICommonExtraDataForWarAction|null);

                /**
                 * Creates a new ExtraDataForSystemEndTurn instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ExtraDataForSystemEndTurn instance
                 */
                public static create(properties?: CommonProto.WarAction.WarActionSystemEndTurn.IExtraDataForSystemEndTurn): CommonProto.WarAction.WarActionSystemEndTurn.ExtraDataForSystemEndTurn;

                /**
                 * Encodes the specified ExtraDataForSystemEndTurn message. Does not implicitly {@link CommonProto.WarAction.WarActionSystemEndTurn.ExtraDataForSystemEndTurn.verify|verify} messages.
                 * @param message ExtraDataForSystemEndTurn message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.WarAction.WarActionSystemEndTurn.IExtraDataForSystemEndTurn, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified ExtraDataForSystemEndTurn message, length delimited. Does not implicitly {@link CommonProto.WarAction.WarActionSystemEndTurn.ExtraDataForSystemEndTurn.verify|verify} messages.
                 * @param message ExtraDataForSystemEndTurn message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.WarAction.WarActionSystemEndTurn.IExtraDataForSystemEndTurn, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes an ExtraDataForSystemEndTurn message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ExtraDataForSystemEndTurn
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarAction.WarActionSystemEndTurn.ExtraDataForSystemEndTurn;

                /**
                 * Decodes an ExtraDataForSystemEndTurn message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ExtraDataForSystemEndTurn
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarAction.WarActionSystemEndTurn.ExtraDataForSystemEndTurn;

                /**
                 * Verifies an ExtraDataForSystemEndTurn message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an ExtraDataForSystemEndTurn message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ExtraDataForSystemEndTurn
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.WarAction.WarActionSystemEndTurn.ExtraDataForSystemEndTurn;

                /**
                 * Creates a plain object from an ExtraDataForSystemEndTurn message. Also converts values to other types if specified.
                 * @param message ExtraDataForSystemEndTurn
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.WarAction.WarActionSystemEndTurn.ExtraDataForSystemEndTurn, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ExtraDataForSystemEndTurn to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a WarActionSystemHandleBootPlayer. */
        interface IWarActionSystemHandleBootPlayer {

            /** WarActionSystemHandleBootPlayer extraData */
            extraData?: (CommonProto.WarAction.WarActionSystemHandleBootPlayer.IExtraDataForSystemHandleBootPlayer|null);
        }

        /** Represents a WarActionSystemHandleBootPlayer. */
        class WarActionSystemHandleBootPlayer implements IWarActionSystemHandleBootPlayer {

            /**
             * Constructs a new WarActionSystemHandleBootPlayer.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarAction.IWarActionSystemHandleBootPlayer);

            /** WarActionSystemHandleBootPlayer extraData. */
            public extraData?: (CommonProto.WarAction.WarActionSystemHandleBootPlayer.IExtraDataForSystemHandleBootPlayer|null);

            /**
             * Creates a new WarActionSystemHandleBootPlayer instance using the specified properties.
             * @param [properties] Properties to set
             * @returns WarActionSystemHandleBootPlayer instance
             */
            public static create(properties?: CommonProto.WarAction.IWarActionSystemHandleBootPlayer): CommonProto.WarAction.WarActionSystemHandleBootPlayer;

            /**
             * Encodes the specified WarActionSystemHandleBootPlayer message. Does not implicitly {@link CommonProto.WarAction.WarActionSystemHandleBootPlayer.verify|verify} messages.
             * @param message WarActionSystemHandleBootPlayer message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarAction.IWarActionSystemHandleBootPlayer, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified WarActionSystemHandleBootPlayer message, length delimited. Does not implicitly {@link CommonProto.WarAction.WarActionSystemHandleBootPlayer.verify|verify} messages.
             * @param message WarActionSystemHandleBootPlayer message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarAction.IWarActionSystemHandleBootPlayer, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a WarActionSystemHandleBootPlayer message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns WarActionSystemHandleBootPlayer
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarAction.WarActionSystemHandleBootPlayer;

            /**
             * Decodes a WarActionSystemHandleBootPlayer message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns WarActionSystemHandleBootPlayer
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarAction.WarActionSystemHandleBootPlayer;

            /**
             * Verifies a WarActionSystemHandleBootPlayer message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a WarActionSystemHandleBootPlayer message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns WarActionSystemHandleBootPlayer
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarAction.WarActionSystemHandleBootPlayer;

            /**
             * Creates a plain object from a WarActionSystemHandleBootPlayer message. Also converts values to other types if specified.
             * @param message WarActionSystemHandleBootPlayer
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarAction.WarActionSystemHandleBootPlayer, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this WarActionSystemHandleBootPlayer to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace WarActionSystemHandleBootPlayer {

            /** Properties of an ExtraDataForSystemHandleBootPlayer. */
            interface IExtraDataForSystemHandleBootPlayer {

                /** ExtraDataForSystemHandleBootPlayer commonExtraData */
                commonExtraData?: (CommonProto.Structure.ICommonExtraDataForWarAction|null);
            }

            /** Represents an ExtraDataForSystemHandleBootPlayer. */
            class ExtraDataForSystemHandleBootPlayer implements IExtraDataForSystemHandleBootPlayer {

                /**
                 * Constructs a new ExtraDataForSystemHandleBootPlayer.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.WarAction.WarActionSystemHandleBootPlayer.IExtraDataForSystemHandleBootPlayer);

                /** ExtraDataForSystemHandleBootPlayer commonExtraData. */
                public commonExtraData?: (CommonProto.Structure.ICommonExtraDataForWarAction|null);

                /**
                 * Creates a new ExtraDataForSystemHandleBootPlayer instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ExtraDataForSystemHandleBootPlayer instance
                 */
                public static create(properties?: CommonProto.WarAction.WarActionSystemHandleBootPlayer.IExtraDataForSystemHandleBootPlayer): CommonProto.WarAction.WarActionSystemHandleBootPlayer.ExtraDataForSystemHandleBootPlayer;

                /**
                 * Encodes the specified ExtraDataForSystemHandleBootPlayer message. Does not implicitly {@link CommonProto.WarAction.WarActionSystemHandleBootPlayer.ExtraDataForSystemHandleBootPlayer.verify|verify} messages.
                 * @param message ExtraDataForSystemHandleBootPlayer message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.WarAction.WarActionSystemHandleBootPlayer.IExtraDataForSystemHandleBootPlayer, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified ExtraDataForSystemHandleBootPlayer message, length delimited. Does not implicitly {@link CommonProto.WarAction.WarActionSystemHandleBootPlayer.ExtraDataForSystemHandleBootPlayer.verify|verify} messages.
                 * @param message ExtraDataForSystemHandleBootPlayer message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.WarAction.WarActionSystemHandleBootPlayer.IExtraDataForSystemHandleBootPlayer, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes an ExtraDataForSystemHandleBootPlayer message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ExtraDataForSystemHandleBootPlayer
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarAction.WarActionSystemHandleBootPlayer.ExtraDataForSystemHandleBootPlayer;

                /**
                 * Decodes an ExtraDataForSystemHandleBootPlayer message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ExtraDataForSystemHandleBootPlayer
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarAction.WarActionSystemHandleBootPlayer.ExtraDataForSystemHandleBootPlayer;

                /**
                 * Verifies an ExtraDataForSystemHandleBootPlayer message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an ExtraDataForSystemHandleBootPlayer message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ExtraDataForSystemHandleBootPlayer
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.WarAction.WarActionSystemHandleBootPlayer.ExtraDataForSystemHandleBootPlayer;

                /**
                 * Creates a plain object from an ExtraDataForSystemHandleBootPlayer message. Also converts values to other types if specified.
                 * @param message ExtraDataForSystemHandleBootPlayer
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.WarAction.WarActionSystemHandleBootPlayer.ExtraDataForSystemHandleBootPlayer, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ExtraDataForSystemHandleBootPlayer to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a WarActionSystemVoteForDraw. */
        interface IWarActionSystemVoteForDraw {

            /** WarActionSystemVoteForDraw isAgree */
            isAgree?: (boolean|null);

            /** WarActionSystemVoteForDraw extraData */
            extraData?: (CommonProto.WarAction.WarActionSystemVoteForDraw.IExtraDataForSystemVoteForDraw|null);
        }

        /** Represents a WarActionSystemVoteForDraw. */
        class WarActionSystemVoteForDraw implements IWarActionSystemVoteForDraw {

            /**
             * Constructs a new WarActionSystemVoteForDraw.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarAction.IWarActionSystemVoteForDraw);

            /** WarActionSystemVoteForDraw isAgree. */
            public isAgree: boolean;

            /** WarActionSystemVoteForDraw extraData. */
            public extraData?: (CommonProto.WarAction.WarActionSystemVoteForDraw.IExtraDataForSystemVoteForDraw|null);

            /**
             * Creates a new WarActionSystemVoteForDraw instance using the specified properties.
             * @param [properties] Properties to set
             * @returns WarActionSystemVoteForDraw instance
             */
            public static create(properties?: CommonProto.WarAction.IWarActionSystemVoteForDraw): CommonProto.WarAction.WarActionSystemVoteForDraw;

            /**
             * Encodes the specified WarActionSystemVoteForDraw message. Does not implicitly {@link CommonProto.WarAction.WarActionSystemVoteForDraw.verify|verify} messages.
             * @param message WarActionSystemVoteForDraw message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarAction.IWarActionSystemVoteForDraw, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified WarActionSystemVoteForDraw message, length delimited. Does not implicitly {@link CommonProto.WarAction.WarActionSystemVoteForDraw.verify|verify} messages.
             * @param message WarActionSystemVoteForDraw message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarAction.IWarActionSystemVoteForDraw, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a WarActionSystemVoteForDraw message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns WarActionSystemVoteForDraw
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarAction.WarActionSystemVoteForDraw;

            /**
             * Decodes a WarActionSystemVoteForDraw message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns WarActionSystemVoteForDraw
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarAction.WarActionSystemVoteForDraw;

            /**
             * Verifies a WarActionSystemVoteForDraw message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a WarActionSystemVoteForDraw message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns WarActionSystemVoteForDraw
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarAction.WarActionSystemVoteForDraw;

            /**
             * Creates a plain object from a WarActionSystemVoteForDraw message. Also converts values to other types if specified.
             * @param message WarActionSystemVoteForDraw
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarAction.WarActionSystemVoteForDraw, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this WarActionSystemVoteForDraw to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace WarActionSystemVoteForDraw {

            /** Properties of an ExtraDataForSystemVoteForDraw. */
            interface IExtraDataForSystemVoteForDraw {

                /** ExtraDataForSystemVoteForDraw commonExtraData */
                commonExtraData?: (CommonProto.Structure.ICommonExtraDataForWarAction|null);

                /** ExtraDataForSystemVoteForDraw isAgree */
                isAgree?: (boolean|null);
            }

            /** Represents an ExtraDataForSystemVoteForDraw. */
            class ExtraDataForSystemVoteForDraw implements IExtraDataForSystemVoteForDraw {

                /**
                 * Constructs a new ExtraDataForSystemVoteForDraw.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.WarAction.WarActionSystemVoteForDraw.IExtraDataForSystemVoteForDraw);

                /** ExtraDataForSystemVoteForDraw commonExtraData. */
                public commonExtraData?: (CommonProto.Structure.ICommonExtraDataForWarAction|null);

                /** ExtraDataForSystemVoteForDraw isAgree. */
                public isAgree: boolean;

                /**
                 * Creates a new ExtraDataForSystemVoteForDraw instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ExtraDataForSystemVoteForDraw instance
                 */
                public static create(properties?: CommonProto.WarAction.WarActionSystemVoteForDraw.IExtraDataForSystemVoteForDraw): CommonProto.WarAction.WarActionSystemVoteForDraw.ExtraDataForSystemVoteForDraw;

                /**
                 * Encodes the specified ExtraDataForSystemVoteForDraw message. Does not implicitly {@link CommonProto.WarAction.WarActionSystemVoteForDraw.ExtraDataForSystemVoteForDraw.verify|verify} messages.
                 * @param message ExtraDataForSystemVoteForDraw message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.WarAction.WarActionSystemVoteForDraw.IExtraDataForSystemVoteForDraw, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified ExtraDataForSystemVoteForDraw message, length delimited. Does not implicitly {@link CommonProto.WarAction.WarActionSystemVoteForDraw.ExtraDataForSystemVoteForDraw.verify|verify} messages.
                 * @param message ExtraDataForSystemVoteForDraw message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.WarAction.WarActionSystemVoteForDraw.IExtraDataForSystemVoteForDraw, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes an ExtraDataForSystemVoteForDraw message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ExtraDataForSystemVoteForDraw
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarAction.WarActionSystemVoteForDraw.ExtraDataForSystemVoteForDraw;

                /**
                 * Decodes an ExtraDataForSystemVoteForDraw message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ExtraDataForSystemVoteForDraw
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarAction.WarActionSystemVoteForDraw.ExtraDataForSystemVoteForDraw;

                /**
                 * Verifies an ExtraDataForSystemVoteForDraw message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an ExtraDataForSystemVoteForDraw message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ExtraDataForSystemVoteForDraw
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.WarAction.WarActionSystemVoteForDraw.ExtraDataForSystemVoteForDraw;

                /**
                 * Creates a plain object from an ExtraDataForSystemVoteForDraw message. Also converts values to other types if specified.
                 * @param message ExtraDataForSystemVoteForDraw
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.WarAction.WarActionSystemVoteForDraw.ExtraDataForSystemVoteForDraw, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ExtraDataForSystemVoteForDraw to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a WarActionPlayerEndTurn. */
        interface IWarActionPlayerEndTurn {

            /** WarActionPlayerEndTurn extraData */
            extraData?: (CommonProto.WarAction.WarActionPlayerEndTurn.IExtraDataForPlayerEndTurn|null);
        }

        /** Represents a WarActionPlayerEndTurn. */
        class WarActionPlayerEndTurn implements IWarActionPlayerEndTurn {

            /**
             * Constructs a new WarActionPlayerEndTurn.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarAction.IWarActionPlayerEndTurn);

            /** WarActionPlayerEndTurn extraData. */
            public extraData?: (CommonProto.WarAction.WarActionPlayerEndTurn.IExtraDataForPlayerEndTurn|null);

            /**
             * Creates a new WarActionPlayerEndTurn instance using the specified properties.
             * @param [properties] Properties to set
             * @returns WarActionPlayerEndTurn instance
             */
            public static create(properties?: CommonProto.WarAction.IWarActionPlayerEndTurn): CommonProto.WarAction.WarActionPlayerEndTurn;

            /**
             * Encodes the specified WarActionPlayerEndTurn message. Does not implicitly {@link CommonProto.WarAction.WarActionPlayerEndTurn.verify|verify} messages.
             * @param message WarActionPlayerEndTurn message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarAction.IWarActionPlayerEndTurn, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified WarActionPlayerEndTurn message, length delimited. Does not implicitly {@link CommonProto.WarAction.WarActionPlayerEndTurn.verify|verify} messages.
             * @param message WarActionPlayerEndTurn message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarAction.IWarActionPlayerEndTurn, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a WarActionPlayerEndTurn message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns WarActionPlayerEndTurn
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarAction.WarActionPlayerEndTurn;

            /**
             * Decodes a WarActionPlayerEndTurn message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns WarActionPlayerEndTurn
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarAction.WarActionPlayerEndTurn;

            /**
             * Verifies a WarActionPlayerEndTurn message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a WarActionPlayerEndTurn message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns WarActionPlayerEndTurn
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarAction.WarActionPlayerEndTurn;

            /**
             * Creates a plain object from a WarActionPlayerEndTurn message. Also converts values to other types if specified.
             * @param message WarActionPlayerEndTurn
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarAction.WarActionPlayerEndTurn, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this WarActionPlayerEndTurn to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace WarActionPlayerEndTurn {

            /** Properties of an ExtraDataForPlayerEndTurn. */
            interface IExtraDataForPlayerEndTurn {

                /** ExtraDataForPlayerEndTurn commonExtraData */
                commonExtraData?: (CommonProto.Structure.ICommonExtraDataForWarAction|null);
            }

            /** Represents an ExtraDataForPlayerEndTurn. */
            class ExtraDataForPlayerEndTurn implements IExtraDataForPlayerEndTurn {

                /**
                 * Constructs a new ExtraDataForPlayerEndTurn.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.WarAction.WarActionPlayerEndTurn.IExtraDataForPlayerEndTurn);

                /** ExtraDataForPlayerEndTurn commonExtraData. */
                public commonExtraData?: (CommonProto.Structure.ICommonExtraDataForWarAction|null);

                /**
                 * Creates a new ExtraDataForPlayerEndTurn instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ExtraDataForPlayerEndTurn instance
                 */
                public static create(properties?: CommonProto.WarAction.WarActionPlayerEndTurn.IExtraDataForPlayerEndTurn): CommonProto.WarAction.WarActionPlayerEndTurn.ExtraDataForPlayerEndTurn;

                /**
                 * Encodes the specified ExtraDataForPlayerEndTurn message. Does not implicitly {@link CommonProto.WarAction.WarActionPlayerEndTurn.ExtraDataForPlayerEndTurn.verify|verify} messages.
                 * @param message ExtraDataForPlayerEndTurn message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.WarAction.WarActionPlayerEndTurn.IExtraDataForPlayerEndTurn, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified ExtraDataForPlayerEndTurn message, length delimited. Does not implicitly {@link CommonProto.WarAction.WarActionPlayerEndTurn.ExtraDataForPlayerEndTurn.verify|verify} messages.
                 * @param message ExtraDataForPlayerEndTurn message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.WarAction.WarActionPlayerEndTurn.IExtraDataForPlayerEndTurn, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes an ExtraDataForPlayerEndTurn message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ExtraDataForPlayerEndTurn
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarAction.WarActionPlayerEndTurn.ExtraDataForPlayerEndTurn;

                /**
                 * Decodes an ExtraDataForPlayerEndTurn message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ExtraDataForPlayerEndTurn
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarAction.WarActionPlayerEndTurn.ExtraDataForPlayerEndTurn;

                /**
                 * Verifies an ExtraDataForPlayerEndTurn message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an ExtraDataForPlayerEndTurn message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ExtraDataForPlayerEndTurn
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.WarAction.WarActionPlayerEndTurn.ExtraDataForPlayerEndTurn;

                /**
                 * Creates a plain object from an ExtraDataForPlayerEndTurn message. Also converts values to other types if specified.
                 * @param message ExtraDataForPlayerEndTurn
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.WarAction.WarActionPlayerEndTurn.ExtraDataForPlayerEndTurn, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ExtraDataForPlayerEndTurn to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a WarActionPlayerSurrender. */
        interface IWarActionPlayerSurrender {

            /** WarActionPlayerSurrender deprecatedIsBoot */
            deprecatedIsBoot?: (boolean|null);

            /** WarActionPlayerSurrender extraData */
            extraData?: (CommonProto.WarAction.WarActionPlayerSurrender.IExtraDataForPlayerSurrender|null);
        }

        /** Represents a WarActionPlayerSurrender. */
        class WarActionPlayerSurrender implements IWarActionPlayerSurrender {

            /**
             * Constructs a new WarActionPlayerSurrender.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarAction.IWarActionPlayerSurrender);

            /** WarActionPlayerSurrender deprecatedIsBoot. */
            public deprecatedIsBoot: boolean;

            /** WarActionPlayerSurrender extraData. */
            public extraData?: (CommonProto.WarAction.WarActionPlayerSurrender.IExtraDataForPlayerSurrender|null);

            /**
             * Creates a new WarActionPlayerSurrender instance using the specified properties.
             * @param [properties] Properties to set
             * @returns WarActionPlayerSurrender instance
             */
            public static create(properties?: CommonProto.WarAction.IWarActionPlayerSurrender): CommonProto.WarAction.WarActionPlayerSurrender;

            /**
             * Encodes the specified WarActionPlayerSurrender message. Does not implicitly {@link CommonProto.WarAction.WarActionPlayerSurrender.verify|verify} messages.
             * @param message WarActionPlayerSurrender message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarAction.IWarActionPlayerSurrender, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified WarActionPlayerSurrender message, length delimited. Does not implicitly {@link CommonProto.WarAction.WarActionPlayerSurrender.verify|verify} messages.
             * @param message WarActionPlayerSurrender message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarAction.IWarActionPlayerSurrender, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a WarActionPlayerSurrender message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns WarActionPlayerSurrender
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarAction.WarActionPlayerSurrender;

            /**
             * Decodes a WarActionPlayerSurrender message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns WarActionPlayerSurrender
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarAction.WarActionPlayerSurrender;

            /**
             * Verifies a WarActionPlayerSurrender message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a WarActionPlayerSurrender message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns WarActionPlayerSurrender
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarAction.WarActionPlayerSurrender;

            /**
             * Creates a plain object from a WarActionPlayerSurrender message. Also converts values to other types if specified.
             * @param message WarActionPlayerSurrender
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarAction.WarActionPlayerSurrender, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this WarActionPlayerSurrender to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace WarActionPlayerSurrender {

            /** Properties of an ExtraDataForPlayerSurrender. */
            interface IExtraDataForPlayerSurrender {

                /** ExtraDataForPlayerSurrender commonExtraData */
                commonExtraData?: (CommonProto.Structure.ICommonExtraDataForWarAction|null);
            }

            /** Represents an ExtraDataForPlayerSurrender. */
            class ExtraDataForPlayerSurrender implements IExtraDataForPlayerSurrender {

                /**
                 * Constructs a new ExtraDataForPlayerSurrender.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.WarAction.WarActionPlayerSurrender.IExtraDataForPlayerSurrender);

                /** ExtraDataForPlayerSurrender commonExtraData. */
                public commonExtraData?: (CommonProto.Structure.ICommonExtraDataForWarAction|null);

                /**
                 * Creates a new ExtraDataForPlayerSurrender instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ExtraDataForPlayerSurrender instance
                 */
                public static create(properties?: CommonProto.WarAction.WarActionPlayerSurrender.IExtraDataForPlayerSurrender): CommonProto.WarAction.WarActionPlayerSurrender.ExtraDataForPlayerSurrender;

                /**
                 * Encodes the specified ExtraDataForPlayerSurrender message. Does not implicitly {@link CommonProto.WarAction.WarActionPlayerSurrender.ExtraDataForPlayerSurrender.verify|verify} messages.
                 * @param message ExtraDataForPlayerSurrender message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.WarAction.WarActionPlayerSurrender.IExtraDataForPlayerSurrender, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified ExtraDataForPlayerSurrender message, length delimited. Does not implicitly {@link CommonProto.WarAction.WarActionPlayerSurrender.ExtraDataForPlayerSurrender.verify|verify} messages.
                 * @param message ExtraDataForPlayerSurrender message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.WarAction.WarActionPlayerSurrender.IExtraDataForPlayerSurrender, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes an ExtraDataForPlayerSurrender message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ExtraDataForPlayerSurrender
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarAction.WarActionPlayerSurrender.ExtraDataForPlayerSurrender;

                /**
                 * Decodes an ExtraDataForPlayerSurrender message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ExtraDataForPlayerSurrender
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarAction.WarActionPlayerSurrender.ExtraDataForPlayerSurrender;

                /**
                 * Verifies an ExtraDataForPlayerSurrender message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an ExtraDataForPlayerSurrender message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ExtraDataForPlayerSurrender
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.WarAction.WarActionPlayerSurrender.ExtraDataForPlayerSurrender;

                /**
                 * Creates a plain object from an ExtraDataForPlayerSurrender message. Also converts values to other types if specified.
                 * @param message ExtraDataForPlayerSurrender
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.WarAction.WarActionPlayerSurrender.ExtraDataForPlayerSurrender, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ExtraDataForPlayerSurrender to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a WarActionPlayerProduceUnit. */
        interface IWarActionPlayerProduceUnit {

            /** WarActionPlayerProduceUnit gridIndex */
            gridIndex?: (CommonProto.Structure.IGridIndex|null);

            /** WarActionPlayerProduceUnit unitType */
            unitType?: (number|null);

            /** WarActionPlayerProduceUnit unitHp */
            unitHp?: (number|null);

            /** WarActionPlayerProduceUnit extraData */
            extraData?: (CommonProto.WarAction.WarActionPlayerProduceUnit.IExtraDataForPlayerProduceUnit|null);
        }

        /** Represents a WarActionPlayerProduceUnit. */
        class WarActionPlayerProduceUnit implements IWarActionPlayerProduceUnit {

            /**
             * Constructs a new WarActionPlayerProduceUnit.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarAction.IWarActionPlayerProduceUnit);

            /** WarActionPlayerProduceUnit gridIndex. */
            public gridIndex?: (CommonProto.Structure.IGridIndex|null);

            /** WarActionPlayerProduceUnit unitType. */
            public unitType: number;

            /** WarActionPlayerProduceUnit unitHp. */
            public unitHp: number;

            /** WarActionPlayerProduceUnit extraData. */
            public extraData?: (CommonProto.WarAction.WarActionPlayerProduceUnit.IExtraDataForPlayerProduceUnit|null);

            /**
             * Creates a new WarActionPlayerProduceUnit instance using the specified properties.
             * @param [properties] Properties to set
             * @returns WarActionPlayerProduceUnit instance
             */
            public static create(properties?: CommonProto.WarAction.IWarActionPlayerProduceUnit): CommonProto.WarAction.WarActionPlayerProduceUnit;

            /**
             * Encodes the specified WarActionPlayerProduceUnit message. Does not implicitly {@link CommonProto.WarAction.WarActionPlayerProduceUnit.verify|verify} messages.
             * @param message WarActionPlayerProduceUnit message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarAction.IWarActionPlayerProduceUnit, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified WarActionPlayerProduceUnit message, length delimited. Does not implicitly {@link CommonProto.WarAction.WarActionPlayerProduceUnit.verify|verify} messages.
             * @param message WarActionPlayerProduceUnit message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarAction.IWarActionPlayerProduceUnit, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a WarActionPlayerProduceUnit message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns WarActionPlayerProduceUnit
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarAction.WarActionPlayerProduceUnit;

            /**
             * Decodes a WarActionPlayerProduceUnit message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns WarActionPlayerProduceUnit
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarAction.WarActionPlayerProduceUnit;

            /**
             * Verifies a WarActionPlayerProduceUnit message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a WarActionPlayerProduceUnit message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns WarActionPlayerProduceUnit
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarAction.WarActionPlayerProduceUnit;

            /**
             * Creates a plain object from a WarActionPlayerProduceUnit message. Also converts values to other types if specified.
             * @param message WarActionPlayerProduceUnit
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarAction.WarActionPlayerProduceUnit, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this WarActionPlayerProduceUnit to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace WarActionPlayerProduceUnit {

            /** Properties of an ExtraDataForPlayerProduceUnit. */
            interface IExtraDataForPlayerProduceUnit {

                /** ExtraDataForPlayerProduceUnit commonExtraData */
                commonExtraData?: (CommonProto.Structure.ICommonExtraDataForWarAction|null);
            }

            /** Represents an ExtraDataForPlayerProduceUnit. */
            class ExtraDataForPlayerProduceUnit implements IExtraDataForPlayerProduceUnit {

                /**
                 * Constructs a new ExtraDataForPlayerProduceUnit.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.WarAction.WarActionPlayerProduceUnit.IExtraDataForPlayerProduceUnit);

                /** ExtraDataForPlayerProduceUnit commonExtraData. */
                public commonExtraData?: (CommonProto.Structure.ICommonExtraDataForWarAction|null);

                /**
                 * Creates a new ExtraDataForPlayerProduceUnit instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ExtraDataForPlayerProduceUnit instance
                 */
                public static create(properties?: CommonProto.WarAction.WarActionPlayerProduceUnit.IExtraDataForPlayerProduceUnit): CommonProto.WarAction.WarActionPlayerProduceUnit.ExtraDataForPlayerProduceUnit;

                /**
                 * Encodes the specified ExtraDataForPlayerProduceUnit message. Does not implicitly {@link CommonProto.WarAction.WarActionPlayerProduceUnit.ExtraDataForPlayerProduceUnit.verify|verify} messages.
                 * @param message ExtraDataForPlayerProduceUnit message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.WarAction.WarActionPlayerProduceUnit.IExtraDataForPlayerProduceUnit, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified ExtraDataForPlayerProduceUnit message, length delimited. Does not implicitly {@link CommonProto.WarAction.WarActionPlayerProduceUnit.ExtraDataForPlayerProduceUnit.verify|verify} messages.
                 * @param message ExtraDataForPlayerProduceUnit message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.WarAction.WarActionPlayerProduceUnit.IExtraDataForPlayerProduceUnit, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes an ExtraDataForPlayerProduceUnit message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ExtraDataForPlayerProduceUnit
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarAction.WarActionPlayerProduceUnit.ExtraDataForPlayerProduceUnit;

                /**
                 * Decodes an ExtraDataForPlayerProduceUnit message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ExtraDataForPlayerProduceUnit
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarAction.WarActionPlayerProduceUnit.ExtraDataForPlayerProduceUnit;

                /**
                 * Verifies an ExtraDataForPlayerProduceUnit message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an ExtraDataForPlayerProduceUnit message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ExtraDataForPlayerProduceUnit
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.WarAction.WarActionPlayerProduceUnit.ExtraDataForPlayerProduceUnit;

                /**
                 * Creates a plain object from an ExtraDataForPlayerProduceUnit message. Also converts values to other types if specified.
                 * @param message ExtraDataForPlayerProduceUnit
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.WarAction.WarActionPlayerProduceUnit.ExtraDataForPlayerProduceUnit, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ExtraDataForPlayerProduceUnit to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a WarActionPlayerDeleteUnit. */
        interface IWarActionPlayerDeleteUnit {

            /** WarActionPlayerDeleteUnit gridIndex */
            gridIndex?: (CommonProto.Structure.IGridIndex|null);

            /** WarActionPlayerDeleteUnit extraData */
            extraData?: (CommonProto.WarAction.WarActionPlayerDeleteUnit.IExtraDataForPlayerDeleteUnit|null);
        }

        /** Represents a WarActionPlayerDeleteUnit. */
        class WarActionPlayerDeleteUnit implements IWarActionPlayerDeleteUnit {

            /**
             * Constructs a new WarActionPlayerDeleteUnit.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarAction.IWarActionPlayerDeleteUnit);

            /** WarActionPlayerDeleteUnit gridIndex. */
            public gridIndex?: (CommonProto.Structure.IGridIndex|null);

            /** WarActionPlayerDeleteUnit extraData. */
            public extraData?: (CommonProto.WarAction.WarActionPlayerDeleteUnit.IExtraDataForPlayerDeleteUnit|null);

            /**
             * Creates a new WarActionPlayerDeleteUnit instance using the specified properties.
             * @param [properties] Properties to set
             * @returns WarActionPlayerDeleteUnit instance
             */
            public static create(properties?: CommonProto.WarAction.IWarActionPlayerDeleteUnit): CommonProto.WarAction.WarActionPlayerDeleteUnit;

            /**
             * Encodes the specified WarActionPlayerDeleteUnit message. Does not implicitly {@link CommonProto.WarAction.WarActionPlayerDeleteUnit.verify|verify} messages.
             * @param message WarActionPlayerDeleteUnit message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarAction.IWarActionPlayerDeleteUnit, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified WarActionPlayerDeleteUnit message, length delimited. Does not implicitly {@link CommonProto.WarAction.WarActionPlayerDeleteUnit.verify|verify} messages.
             * @param message WarActionPlayerDeleteUnit message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarAction.IWarActionPlayerDeleteUnit, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a WarActionPlayerDeleteUnit message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns WarActionPlayerDeleteUnit
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarAction.WarActionPlayerDeleteUnit;

            /**
             * Decodes a WarActionPlayerDeleteUnit message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns WarActionPlayerDeleteUnit
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarAction.WarActionPlayerDeleteUnit;

            /**
             * Verifies a WarActionPlayerDeleteUnit message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a WarActionPlayerDeleteUnit message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns WarActionPlayerDeleteUnit
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarAction.WarActionPlayerDeleteUnit;

            /**
             * Creates a plain object from a WarActionPlayerDeleteUnit message. Also converts values to other types if specified.
             * @param message WarActionPlayerDeleteUnit
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarAction.WarActionPlayerDeleteUnit, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this WarActionPlayerDeleteUnit to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace WarActionPlayerDeleteUnit {

            /** Properties of an ExtraDataForPlayerDeleteUnit. */
            interface IExtraDataForPlayerDeleteUnit {

                /** ExtraDataForPlayerDeleteUnit commonExtraData */
                commonExtraData?: (CommonProto.Structure.ICommonExtraDataForWarAction|null);
            }

            /** Represents an ExtraDataForPlayerDeleteUnit. */
            class ExtraDataForPlayerDeleteUnit implements IExtraDataForPlayerDeleteUnit {

                /**
                 * Constructs a new ExtraDataForPlayerDeleteUnit.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.WarAction.WarActionPlayerDeleteUnit.IExtraDataForPlayerDeleteUnit);

                /** ExtraDataForPlayerDeleteUnit commonExtraData. */
                public commonExtraData?: (CommonProto.Structure.ICommonExtraDataForWarAction|null);

                /**
                 * Creates a new ExtraDataForPlayerDeleteUnit instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ExtraDataForPlayerDeleteUnit instance
                 */
                public static create(properties?: CommonProto.WarAction.WarActionPlayerDeleteUnit.IExtraDataForPlayerDeleteUnit): CommonProto.WarAction.WarActionPlayerDeleteUnit.ExtraDataForPlayerDeleteUnit;

                /**
                 * Encodes the specified ExtraDataForPlayerDeleteUnit message. Does not implicitly {@link CommonProto.WarAction.WarActionPlayerDeleteUnit.ExtraDataForPlayerDeleteUnit.verify|verify} messages.
                 * @param message ExtraDataForPlayerDeleteUnit message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.WarAction.WarActionPlayerDeleteUnit.IExtraDataForPlayerDeleteUnit, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified ExtraDataForPlayerDeleteUnit message, length delimited. Does not implicitly {@link CommonProto.WarAction.WarActionPlayerDeleteUnit.ExtraDataForPlayerDeleteUnit.verify|verify} messages.
                 * @param message ExtraDataForPlayerDeleteUnit message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.WarAction.WarActionPlayerDeleteUnit.IExtraDataForPlayerDeleteUnit, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes an ExtraDataForPlayerDeleteUnit message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ExtraDataForPlayerDeleteUnit
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarAction.WarActionPlayerDeleteUnit.ExtraDataForPlayerDeleteUnit;

                /**
                 * Decodes an ExtraDataForPlayerDeleteUnit message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ExtraDataForPlayerDeleteUnit
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarAction.WarActionPlayerDeleteUnit.ExtraDataForPlayerDeleteUnit;

                /**
                 * Verifies an ExtraDataForPlayerDeleteUnit message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an ExtraDataForPlayerDeleteUnit message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ExtraDataForPlayerDeleteUnit
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.WarAction.WarActionPlayerDeleteUnit.ExtraDataForPlayerDeleteUnit;

                /**
                 * Creates a plain object from an ExtraDataForPlayerDeleteUnit message. Also converts values to other types if specified.
                 * @param message ExtraDataForPlayerDeleteUnit
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.WarAction.WarActionPlayerDeleteUnit.ExtraDataForPlayerDeleteUnit, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ExtraDataForPlayerDeleteUnit to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a WarActionPlayerVoteForDraw. */
        interface IWarActionPlayerVoteForDraw {

            /** WarActionPlayerVoteForDraw isAgree */
            isAgree?: (boolean|null);

            /** WarActionPlayerVoteForDraw extraData */
            extraData?: (CommonProto.WarAction.WarActionPlayerVoteForDraw.IExtraDataForPlayerVoteForDraw|null);
        }

        /** Represents a WarActionPlayerVoteForDraw. */
        class WarActionPlayerVoteForDraw implements IWarActionPlayerVoteForDraw {

            /**
             * Constructs a new WarActionPlayerVoteForDraw.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarAction.IWarActionPlayerVoteForDraw);

            /** WarActionPlayerVoteForDraw isAgree. */
            public isAgree: boolean;

            /** WarActionPlayerVoteForDraw extraData. */
            public extraData?: (CommonProto.WarAction.WarActionPlayerVoteForDraw.IExtraDataForPlayerVoteForDraw|null);

            /**
             * Creates a new WarActionPlayerVoteForDraw instance using the specified properties.
             * @param [properties] Properties to set
             * @returns WarActionPlayerVoteForDraw instance
             */
            public static create(properties?: CommonProto.WarAction.IWarActionPlayerVoteForDraw): CommonProto.WarAction.WarActionPlayerVoteForDraw;

            /**
             * Encodes the specified WarActionPlayerVoteForDraw message. Does not implicitly {@link CommonProto.WarAction.WarActionPlayerVoteForDraw.verify|verify} messages.
             * @param message WarActionPlayerVoteForDraw message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarAction.IWarActionPlayerVoteForDraw, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified WarActionPlayerVoteForDraw message, length delimited. Does not implicitly {@link CommonProto.WarAction.WarActionPlayerVoteForDraw.verify|verify} messages.
             * @param message WarActionPlayerVoteForDraw message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarAction.IWarActionPlayerVoteForDraw, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a WarActionPlayerVoteForDraw message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns WarActionPlayerVoteForDraw
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarAction.WarActionPlayerVoteForDraw;

            /**
             * Decodes a WarActionPlayerVoteForDraw message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns WarActionPlayerVoteForDraw
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarAction.WarActionPlayerVoteForDraw;

            /**
             * Verifies a WarActionPlayerVoteForDraw message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a WarActionPlayerVoteForDraw message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns WarActionPlayerVoteForDraw
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarAction.WarActionPlayerVoteForDraw;

            /**
             * Creates a plain object from a WarActionPlayerVoteForDraw message. Also converts values to other types if specified.
             * @param message WarActionPlayerVoteForDraw
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarAction.WarActionPlayerVoteForDraw, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this WarActionPlayerVoteForDraw to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace WarActionPlayerVoteForDraw {

            /** Properties of an ExtraDataForPlayerVoteForDraw. */
            interface IExtraDataForPlayerVoteForDraw {

                /** ExtraDataForPlayerVoteForDraw commonExtraData */
                commonExtraData?: (CommonProto.Structure.ICommonExtraDataForWarAction|null);

                /** ExtraDataForPlayerVoteForDraw isAgree */
                isAgree?: (boolean|null);
            }

            /** Represents an ExtraDataForPlayerVoteForDraw. */
            class ExtraDataForPlayerVoteForDraw implements IExtraDataForPlayerVoteForDraw {

                /**
                 * Constructs a new ExtraDataForPlayerVoteForDraw.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.WarAction.WarActionPlayerVoteForDraw.IExtraDataForPlayerVoteForDraw);

                /** ExtraDataForPlayerVoteForDraw commonExtraData. */
                public commonExtraData?: (CommonProto.Structure.ICommonExtraDataForWarAction|null);

                /** ExtraDataForPlayerVoteForDraw isAgree. */
                public isAgree: boolean;

                /**
                 * Creates a new ExtraDataForPlayerVoteForDraw instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ExtraDataForPlayerVoteForDraw instance
                 */
                public static create(properties?: CommonProto.WarAction.WarActionPlayerVoteForDraw.IExtraDataForPlayerVoteForDraw): CommonProto.WarAction.WarActionPlayerVoteForDraw.ExtraDataForPlayerVoteForDraw;

                /**
                 * Encodes the specified ExtraDataForPlayerVoteForDraw message. Does not implicitly {@link CommonProto.WarAction.WarActionPlayerVoteForDraw.ExtraDataForPlayerVoteForDraw.verify|verify} messages.
                 * @param message ExtraDataForPlayerVoteForDraw message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.WarAction.WarActionPlayerVoteForDraw.IExtraDataForPlayerVoteForDraw, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified ExtraDataForPlayerVoteForDraw message, length delimited. Does not implicitly {@link CommonProto.WarAction.WarActionPlayerVoteForDraw.ExtraDataForPlayerVoteForDraw.verify|verify} messages.
                 * @param message ExtraDataForPlayerVoteForDraw message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.WarAction.WarActionPlayerVoteForDraw.IExtraDataForPlayerVoteForDraw, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes an ExtraDataForPlayerVoteForDraw message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ExtraDataForPlayerVoteForDraw
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarAction.WarActionPlayerVoteForDraw.ExtraDataForPlayerVoteForDraw;

                /**
                 * Decodes an ExtraDataForPlayerVoteForDraw message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ExtraDataForPlayerVoteForDraw
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarAction.WarActionPlayerVoteForDraw.ExtraDataForPlayerVoteForDraw;

                /**
                 * Verifies an ExtraDataForPlayerVoteForDraw message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an ExtraDataForPlayerVoteForDraw message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ExtraDataForPlayerVoteForDraw
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.WarAction.WarActionPlayerVoteForDraw.ExtraDataForPlayerVoteForDraw;

                /**
                 * Creates a plain object from an ExtraDataForPlayerVoteForDraw message. Also converts values to other types if specified.
                 * @param message ExtraDataForPlayerVoteForDraw
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.WarAction.WarActionPlayerVoteForDraw.ExtraDataForPlayerVoteForDraw, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ExtraDataForPlayerVoteForDraw to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a WarActionPlayerUseCoSkill. */
        interface IWarActionPlayerUseCoSkill {

            /** WarActionPlayerUseCoSkill skillType */
            skillType?: (number|null);

            /** WarActionPlayerUseCoSkill extraData */
            extraData?: (CommonProto.WarAction.WarActionPlayerUseCoSkill.IExtraDataForPlayerUseCoSkill|null);
        }

        /** Represents a WarActionPlayerUseCoSkill. */
        class WarActionPlayerUseCoSkill implements IWarActionPlayerUseCoSkill {

            /**
             * Constructs a new WarActionPlayerUseCoSkill.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarAction.IWarActionPlayerUseCoSkill);

            /** WarActionPlayerUseCoSkill skillType. */
            public skillType: number;

            /** WarActionPlayerUseCoSkill extraData. */
            public extraData?: (CommonProto.WarAction.WarActionPlayerUseCoSkill.IExtraDataForPlayerUseCoSkill|null);

            /**
             * Creates a new WarActionPlayerUseCoSkill instance using the specified properties.
             * @param [properties] Properties to set
             * @returns WarActionPlayerUseCoSkill instance
             */
            public static create(properties?: CommonProto.WarAction.IWarActionPlayerUseCoSkill): CommonProto.WarAction.WarActionPlayerUseCoSkill;

            /**
             * Encodes the specified WarActionPlayerUseCoSkill message. Does not implicitly {@link CommonProto.WarAction.WarActionPlayerUseCoSkill.verify|verify} messages.
             * @param message WarActionPlayerUseCoSkill message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarAction.IWarActionPlayerUseCoSkill, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified WarActionPlayerUseCoSkill message, length delimited. Does not implicitly {@link CommonProto.WarAction.WarActionPlayerUseCoSkill.verify|verify} messages.
             * @param message WarActionPlayerUseCoSkill message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarAction.IWarActionPlayerUseCoSkill, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a WarActionPlayerUseCoSkill message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns WarActionPlayerUseCoSkill
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarAction.WarActionPlayerUseCoSkill;

            /**
             * Decodes a WarActionPlayerUseCoSkill message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns WarActionPlayerUseCoSkill
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarAction.WarActionPlayerUseCoSkill;

            /**
             * Verifies a WarActionPlayerUseCoSkill message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a WarActionPlayerUseCoSkill message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns WarActionPlayerUseCoSkill
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarAction.WarActionPlayerUseCoSkill;

            /**
             * Creates a plain object from a WarActionPlayerUseCoSkill message. Also converts values to other types if specified.
             * @param message WarActionPlayerUseCoSkill
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarAction.WarActionPlayerUseCoSkill, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this WarActionPlayerUseCoSkill to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace WarActionPlayerUseCoSkill {

            /** Properties of an ExtraDataForPlayerUseCoSkill. */
            interface IExtraDataForPlayerUseCoSkill {

                /** ExtraDataForPlayerUseCoSkill commonExtraData */
                commonExtraData?: (CommonProto.Structure.ICommonExtraDataForWarAction|null);

                /** ExtraDataForPlayerUseCoSkill skillType */
                skillType?: (number|null);

                /** ExtraDataForPlayerUseCoSkill skillDataArray */
                skillDataArray?: (CommonProto.Structure.IDataForUseCoSkill[]|null);
            }

            /** Represents an ExtraDataForPlayerUseCoSkill. */
            class ExtraDataForPlayerUseCoSkill implements IExtraDataForPlayerUseCoSkill {

                /**
                 * Constructs a new ExtraDataForPlayerUseCoSkill.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.WarAction.WarActionPlayerUseCoSkill.IExtraDataForPlayerUseCoSkill);

                /** ExtraDataForPlayerUseCoSkill commonExtraData. */
                public commonExtraData?: (CommonProto.Structure.ICommonExtraDataForWarAction|null);

                /** ExtraDataForPlayerUseCoSkill skillType. */
                public skillType: number;

                /** ExtraDataForPlayerUseCoSkill skillDataArray. */
                public skillDataArray: CommonProto.Structure.IDataForUseCoSkill[];

                /**
                 * Creates a new ExtraDataForPlayerUseCoSkill instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ExtraDataForPlayerUseCoSkill instance
                 */
                public static create(properties?: CommonProto.WarAction.WarActionPlayerUseCoSkill.IExtraDataForPlayerUseCoSkill): CommonProto.WarAction.WarActionPlayerUseCoSkill.ExtraDataForPlayerUseCoSkill;

                /**
                 * Encodes the specified ExtraDataForPlayerUseCoSkill message. Does not implicitly {@link CommonProto.WarAction.WarActionPlayerUseCoSkill.ExtraDataForPlayerUseCoSkill.verify|verify} messages.
                 * @param message ExtraDataForPlayerUseCoSkill message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.WarAction.WarActionPlayerUseCoSkill.IExtraDataForPlayerUseCoSkill, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified ExtraDataForPlayerUseCoSkill message, length delimited. Does not implicitly {@link CommonProto.WarAction.WarActionPlayerUseCoSkill.ExtraDataForPlayerUseCoSkill.verify|verify} messages.
                 * @param message ExtraDataForPlayerUseCoSkill message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.WarAction.WarActionPlayerUseCoSkill.IExtraDataForPlayerUseCoSkill, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes an ExtraDataForPlayerUseCoSkill message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ExtraDataForPlayerUseCoSkill
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarAction.WarActionPlayerUseCoSkill.ExtraDataForPlayerUseCoSkill;

                /**
                 * Decodes an ExtraDataForPlayerUseCoSkill message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ExtraDataForPlayerUseCoSkill
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarAction.WarActionPlayerUseCoSkill.ExtraDataForPlayerUseCoSkill;

                /**
                 * Verifies an ExtraDataForPlayerUseCoSkill message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an ExtraDataForPlayerUseCoSkill message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ExtraDataForPlayerUseCoSkill
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.WarAction.WarActionPlayerUseCoSkill.ExtraDataForPlayerUseCoSkill;

                /**
                 * Creates a plain object from an ExtraDataForPlayerUseCoSkill message. Also converts values to other types if specified.
                 * @param message ExtraDataForPlayerUseCoSkill
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.WarAction.WarActionPlayerUseCoSkill.ExtraDataForPlayerUseCoSkill, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ExtraDataForPlayerUseCoSkill to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a WarActionUnitWait. */
        interface IWarActionUnitWait {

            /** WarActionUnitWait path */
            path?: (CommonProto.Structure.IMovePath|null);

            /** WarActionUnitWait launchUnitId */
            launchUnitId?: (number|null);

            /** WarActionUnitWait extraData */
            extraData?: (CommonProto.WarAction.WarActionUnitWait.IExtraDataForUnitWait|null);
        }

        /** Represents a WarActionUnitWait. */
        class WarActionUnitWait implements IWarActionUnitWait {

            /**
             * Constructs a new WarActionUnitWait.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarAction.IWarActionUnitWait);

            /** WarActionUnitWait path. */
            public path?: (CommonProto.Structure.IMovePath|null);

            /** WarActionUnitWait launchUnitId. */
            public launchUnitId: number;

            /** WarActionUnitWait extraData. */
            public extraData?: (CommonProto.WarAction.WarActionUnitWait.IExtraDataForUnitWait|null);

            /**
             * Creates a new WarActionUnitWait instance using the specified properties.
             * @param [properties] Properties to set
             * @returns WarActionUnitWait instance
             */
            public static create(properties?: CommonProto.WarAction.IWarActionUnitWait): CommonProto.WarAction.WarActionUnitWait;

            /**
             * Encodes the specified WarActionUnitWait message. Does not implicitly {@link CommonProto.WarAction.WarActionUnitWait.verify|verify} messages.
             * @param message WarActionUnitWait message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarAction.IWarActionUnitWait, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified WarActionUnitWait message, length delimited. Does not implicitly {@link CommonProto.WarAction.WarActionUnitWait.verify|verify} messages.
             * @param message WarActionUnitWait message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarAction.IWarActionUnitWait, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a WarActionUnitWait message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns WarActionUnitWait
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarAction.WarActionUnitWait;

            /**
             * Decodes a WarActionUnitWait message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns WarActionUnitWait
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarAction.WarActionUnitWait;

            /**
             * Verifies a WarActionUnitWait message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a WarActionUnitWait message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns WarActionUnitWait
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarAction.WarActionUnitWait;

            /**
             * Creates a plain object from a WarActionUnitWait message. Also converts values to other types if specified.
             * @param message WarActionUnitWait
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarAction.WarActionUnitWait, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this WarActionUnitWait to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace WarActionUnitWait {

            /** Properties of an ExtraDataForUnitWait. */
            interface IExtraDataForUnitWait {

                /** ExtraDataForUnitWait commonExtraData */
                commonExtraData?: (CommonProto.Structure.ICommonExtraDataForWarAction|null);
            }

            /** Represents an ExtraDataForUnitWait. */
            class ExtraDataForUnitWait implements IExtraDataForUnitWait {

                /**
                 * Constructs a new ExtraDataForUnitWait.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.WarAction.WarActionUnitWait.IExtraDataForUnitWait);

                /** ExtraDataForUnitWait commonExtraData. */
                public commonExtraData?: (CommonProto.Structure.ICommonExtraDataForWarAction|null);

                /**
                 * Creates a new ExtraDataForUnitWait instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ExtraDataForUnitWait instance
                 */
                public static create(properties?: CommonProto.WarAction.WarActionUnitWait.IExtraDataForUnitWait): CommonProto.WarAction.WarActionUnitWait.ExtraDataForUnitWait;

                /**
                 * Encodes the specified ExtraDataForUnitWait message. Does not implicitly {@link CommonProto.WarAction.WarActionUnitWait.ExtraDataForUnitWait.verify|verify} messages.
                 * @param message ExtraDataForUnitWait message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.WarAction.WarActionUnitWait.IExtraDataForUnitWait, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified ExtraDataForUnitWait message, length delimited. Does not implicitly {@link CommonProto.WarAction.WarActionUnitWait.ExtraDataForUnitWait.verify|verify} messages.
                 * @param message ExtraDataForUnitWait message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.WarAction.WarActionUnitWait.IExtraDataForUnitWait, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes an ExtraDataForUnitWait message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ExtraDataForUnitWait
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarAction.WarActionUnitWait.ExtraDataForUnitWait;

                /**
                 * Decodes an ExtraDataForUnitWait message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ExtraDataForUnitWait
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarAction.WarActionUnitWait.ExtraDataForUnitWait;

                /**
                 * Verifies an ExtraDataForUnitWait message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an ExtraDataForUnitWait message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ExtraDataForUnitWait
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.WarAction.WarActionUnitWait.ExtraDataForUnitWait;

                /**
                 * Creates a plain object from an ExtraDataForUnitWait message. Also converts values to other types if specified.
                 * @param message ExtraDataForUnitWait
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.WarAction.WarActionUnitWait.ExtraDataForUnitWait, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ExtraDataForUnitWait to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a WarActionUnitBeLoaded. */
        interface IWarActionUnitBeLoaded {

            /** WarActionUnitBeLoaded path */
            path?: (CommonProto.Structure.IMovePath|null);

            /** WarActionUnitBeLoaded launchUnitId */
            launchUnitId?: (number|null);

            /** WarActionUnitBeLoaded extraData */
            extraData?: (CommonProto.WarAction.WarActionUnitBeLoaded.IExtraDataForUnitBeLoaded|null);
        }

        /** Represents a WarActionUnitBeLoaded. */
        class WarActionUnitBeLoaded implements IWarActionUnitBeLoaded {

            /**
             * Constructs a new WarActionUnitBeLoaded.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarAction.IWarActionUnitBeLoaded);

            /** WarActionUnitBeLoaded path. */
            public path?: (CommonProto.Structure.IMovePath|null);

            /** WarActionUnitBeLoaded launchUnitId. */
            public launchUnitId: number;

            /** WarActionUnitBeLoaded extraData. */
            public extraData?: (CommonProto.WarAction.WarActionUnitBeLoaded.IExtraDataForUnitBeLoaded|null);

            /**
             * Creates a new WarActionUnitBeLoaded instance using the specified properties.
             * @param [properties] Properties to set
             * @returns WarActionUnitBeLoaded instance
             */
            public static create(properties?: CommonProto.WarAction.IWarActionUnitBeLoaded): CommonProto.WarAction.WarActionUnitBeLoaded;

            /**
             * Encodes the specified WarActionUnitBeLoaded message. Does not implicitly {@link CommonProto.WarAction.WarActionUnitBeLoaded.verify|verify} messages.
             * @param message WarActionUnitBeLoaded message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarAction.IWarActionUnitBeLoaded, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified WarActionUnitBeLoaded message, length delimited. Does not implicitly {@link CommonProto.WarAction.WarActionUnitBeLoaded.verify|verify} messages.
             * @param message WarActionUnitBeLoaded message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarAction.IWarActionUnitBeLoaded, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a WarActionUnitBeLoaded message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns WarActionUnitBeLoaded
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarAction.WarActionUnitBeLoaded;

            /**
             * Decodes a WarActionUnitBeLoaded message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns WarActionUnitBeLoaded
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarAction.WarActionUnitBeLoaded;

            /**
             * Verifies a WarActionUnitBeLoaded message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a WarActionUnitBeLoaded message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns WarActionUnitBeLoaded
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarAction.WarActionUnitBeLoaded;

            /**
             * Creates a plain object from a WarActionUnitBeLoaded message. Also converts values to other types if specified.
             * @param message WarActionUnitBeLoaded
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarAction.WarActionUnitBeLoaded, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this WarActionUnitBeLoaded to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace WarActionUnitBeLoaded {

            /** Properties of an ExtraDataForUnitBeLoaded. */
            interface IExtraDataForUnitBeLoaded {

                /** ExtraDataForUnitBeLoaded commonExtraData */
                commonExtraData?: (CommonProto.Structure.ICommonExtraDataForWarAction|null);
            }

            /** Represents an ExtraDataForUnitBeLoaded. */
            class ExtraDataForUnitBeLoaded implements IExtraDataForUnitBeLoaded {

                /**
                 * Constructs a new ExtraDataForUnitBeLoaded.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.WarAction.WarActionUnitBeLoaded.IExtraDataForUnitBeLoaded);

                /** ExtraDataForUnitBeLoaded commonExtraData. */
                public commonExtraData?: (CommonProto.Structure.ICommonExtraDataForWarAction|null);

                /**
                 * Creates a new ExtraDataForUnitBeLoaded instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ExtraDataForUnitBeLoaded instance
                 */
                public static create(properties?: CommonProto.WarAction.WarActionUnitBeLoaded.IExtraDataForUnitBeLoaded): CommonProto.WarAction.WarActionUnitBeLoaded.ExtraDataForUnitBeLoaded;

                /**
                 * Encodes the specified ExtraDataForUnitBeLoaded message. Does not implicitly {@link CommonProto.WarAction.WarActionUnitBeLoaded.ExtraDataForUnitBeLoaded.verify|verify} messages.
                 * @param message ExtraDataForUnitBeLoaded message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.WarAction.WarActionUnitBeLoaded.IExtraDataForUnitBeLoaded, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified ExtraDataForUnitBeLoaded message, length delimited. Does not implicitly {@link CommonProto.WarAction.WarActionUnitBeLoaded.ExtraDataForUnitBeLoaded.verify|verify} messages.
                 * @param message ExtraDataForUnitBeLoaded message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.WarAction.WarActionUnitBeLoaded.IExtraDataForUnitBeLoaded, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes an ExtraDataForUnitBeLoaded message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ExtraDataForUnitBeLoaded
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarAction.WarActionUnitBeLoaded.ExtraDataForUnitBeLoaded;

                /**
                 * Decodes an ExtraDataForUnitBeLoaded message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ExtraDataForUnitBeLoaded
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarAction.WarActionUnitBeLoaded.ExtraDataForUnitBeLoaded;

                /**
                 * Verifies an ExtraDataForUnitBeLoaded message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an ExtraDataForUnitBeLoaded message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ExtraDataForUnitBeLoaded
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.WarAction.WarActionUnitBeLoaded.ExtraDataForUnitBeLoaded;

                /**
                 * Creates a plain object from an ExtraDataForUnitBeLoaded message. Also converts values to other types if specified.
                 * @param message ExtraDataForUnitBeLoaded
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.WarAction.WarActionUnitBeLoaded.ExtraDataForUnitBeLoaded, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ExtraDataForUnitBeLoaded to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a WarActionUnitCaptureTile. */
        interface IWarActionUnitCaptureTile {

            /** WarActionUnitCaptureTile path */
            path?: (CommonProto.Structure.IMovePath|null);

            /** WarActionUnitCaptureTile launchUnitId */
            launchUnitId?: (number|null);

            /** WarActionUnitCaptureTile extraData */
            extraData?: (CommonProto.WarAction.WarActionUnitCaptureTile.IExtraDataForUnitCaptureTile|null);
        }

        /** Represents a WarActionUnitCaptureTile. */
        class WarActionUnitCaptureTile implements IWarActionUnitCaptureTile {

            /**
             * Constructs a new WarActionUnitCaptureTile.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarAction.IWarActionUnitCaptureTile);

            /** WarActionUnitCaptureTile path. */
            public path?: (CommonProto.Structure.IMovePath|null);

            /** WarActionUnitCaptureTile launchUnitId. */
            public launchUnitId: number;

            /** WarActionUnitCaptureTile extraData. */
            public extraData?: (CommonProto.WarAction.WarActionUnitCaptureTile.IExtraDataForUnitCaptureTile|null);

            /**
             * Creates a new WarActionUnitCaptureTile instance using the specified properties.
             * @param [properties] Properties to set
             * @returns WarActionUnitCaptureTile instance
             */
            public static create(properties?: CommonProto.WarAction.IWarActionUnitCaptureTile): CommonProto.WarAction.WarActionUnitCaptureTile;

            /**
             * Encodes the specified WarActionUnitCaptureTile message. Does not implicitly {@link CommonProto.WarAction.WarActionUnitCaptureTile.verify|verify} messages.
             * @param message WarActionUnitCaptureTile message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarAction.IWarActionUnitCaptureTile, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified WarActionUnitCaptureTile message, length delimited. Does not implicitly {@link CommonProto.WarAction.WarActionUnitCaptureTile.verify|verify} messages.
             * @param message WarActionUnitCaptureTile message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarAction.IWarActionUnitCaptureTile, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a WarActionUnitCaptureTile message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns WarActionUnitCaptureTile
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarAction.WarActionUnitCaptureTile;

            /**
             * Decodes a WarActionUnitCaptureTile message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns WarActionUnitCaptureTile
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarAction.WarActionUnitCaptureTile;

            /**
             * Verifies a WarActionUnitCaptureTile message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a WarActionUnitCaptureTile message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns WarActionUnitCaptureTile
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarAction.WarActionUnitCaptureTile;

            /**
             * Creates a plain object from a WarActionUnitCaptureTile message. Also converts values to other types if specified.
             * @param message WarActionUnitCaptureTile
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarAction.WarActionUnitCaptureTile, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this WarActionUnitCaptureTile to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace WarActionUnitCaptureTile {

            /** Properties of an ExtraDataForUnitCaptureTile. */
            interface IExtraDataForUnitCaptureTile {

                /** ExtraDataForUnitCaptureTile commonExtraData */
                commonExtraData?: (CommonProto.Structure.ICommonExtraDataForWarAction|null);
            }

            /** Represents an ExtraDataForUnitCaptureTile. */
            class ExtraDataForUnitCaptureTile implements IExtraDataForUnitCaptureTile {

                /**
                 * Constructs a new ExtraDataForUnitCaptureTile.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.WarAction.WarActionUnitCaptureTile.IExtraDataForUnitCaptureTile);

                /** ExtraDataForUnitCaptureTile commonExtraData. */
                public commonExtraData?: (CommonProto.Structure.ICommonExtraDataForWarAction|null);

                /**
                 * Creates a new ExtraDataForUnitCaptureTile instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ExtraDataForUnitCaptureTile instance
                 */
                public static create(properties?: CommonProto.WarAction.WarActionUnitCaptureTile.IExtraDataForUnitCaptureTile): CommonProto.WarAction.WarActionUnitCaptureTile.ExtraDataForUnitCaptureTile;

                /**
                 * Encodes the specified ExtraDataForUnitCaptureTile message. Does not implicitly {@link CommonProto.WarAction.WarActionUnitCaptureTile.ExtraDataForUnitCaptureTile.verify|verify} messages.
                 * @param message ExtraDataForUnitCaptureTile message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.WarAction.WarActionUnitCaptureTile.IExtraDataForUnitCaptureTile, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified ExtraDataForUnitCaptureTile message, length delimited. Does not implicitly {@link CommonProto.WarAction.WarActionUnitCaptureTile.ExtraDataForUnitCaptureTile.verify|verify} messages.
                 * @param message ExtraDataForUnitCaptureTile message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.WarAction.WarActionUnitCaptureTile.IExtraDataForUnitCaptureTile, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes an ExtraDataForUnitCaptureTile message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ExtraDataForUnitCaptureTile
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarAction.WarActionUnitCaptureTile.ExtraDataForUnitCaptureTile;

                /**
                 * Decodes an ExtraDataForUnitCaptureTile message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ExtraDataForUnitCaptureTile
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarAction.WarActionUnitCaptureTile.ExtraDataForUnitCaptureTile;

                /**
                 * Verifies an ExtraDataForUnitCaptureTile message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an ExtraDataForUnitCaptureTile message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ExtraDataForUnitCaptureTile
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.WarAction.WarActionUnitCaptureTile.ExtraDataForUnitCaptureTile;

                /**
                 * Creates a plain object from an ExtraDataForUnitCaptureTile message. Also converts values to other types if specified.
                 * @param message ExtraDataForUnitCaptureTile
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.WarAction.WarActionUnitCaptureTile.ExtraDataForUnitCaptureTile, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ExtraDataForUnitCaptureTile to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a WarActionUnitAttackTile. */
        interface IWarActionUnitAttackTile {

            /** WarActionUnitAttackTile path */
            path?: (CommonProto.Structure.IMovePath|null);

            /** WarActionUnitAttackTile launchUnitId */
            launchUnitId?: (number|null);

            /** WarActionUnitAttackTile targetGridIndex */
            targetGridIndex?: (CommonProto.Structure.IGridIndex|null);

            /** WarActionUnitAttackTile extraData */
            extraData?: (CommonProto.WarAction.WarActionUnitAttackTile.IExtraDataForUnitAttackTile|null);
        }

        /** Represents a WarActionUnitAttackTile. */
        class WarActionUnitAttackTile implements IWarActionUnitAttackTile {

            /**
             * Constructs a new WarActionUnitAttackTile.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarAction.IWarActionUnitAttackTile);

            /** WarActionUnitAttackTile path. */
            public path?: (CommonProto.Structure.IMovePath|null);

            /** WarActionUnitAttackTile launchUnitId. */
            public launchUnitId: number;

            /** WarActionUnitAttackTile targetGridIndex. */
            public targetGridIndex?: (CommonProto.Structure.IGridIndex|null);

            /** WarActionUnitAttackTile extraData. */
            public extraData?: (CommonProto.WarAction.WarActionUnitAttackTile.IExtraDataForUnitAttackTile|null);

            /**
             * Creates a new WarActionUnitAttackTile instance using the specified properties.
             * @param [properties] Properties to set
             * @returns WarActionUnitAttackTile instance
             */
            public static create(properties?: CommonProto.WarAction.IWarActionUnitAttackTile): CommonProto.WarAction.WarActionUnitAttackTile;

            /**
             * Encodes the specified WarActionUnitAttackTile message. Does not implicitly {@link CommonProto.WarAction.WarActionUnitAttackTile.verify|verify} messages.
             * @param message WarActionUnitAttackTile message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarAction.IWarActionUnitAttackTile, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified WarActionUnitAttackTile message, length delimited. Does not implicitly {@link CommonProto.WarAction.WarActionUnitAttackTile.verify|verify} messages.
             * @param message WarActionUnitAttackTile message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarAction.IWarActionUnitAttackTile, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a WarActionUnitAttackTile message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns WarActionUnitAttackTile
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarAction.WarActionUnitAttackTile;

            /**
             * Decodes a WarActionUnitAttackTile message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns WarActionUnitAttackTile
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarAction.WarActionUnitAttackTile;

            /**
             * Verifies a WarActionUnitAttackTile message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a WarActionUnitAttackTile message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns WarActionUnitAttackTile
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarAction.WarActionUnitAttackTile;

            /**
             * Creates a plain object from a WarActionUnitAttackTile message. Also converts values to other types if specified.
             * @param message WarActionUnitAttackTile
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarAction.WarActionUnitAttackTile, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this WarActionUnitAttackTile to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace WarActionUnitAttackTile {

            /** Properties of an ExtraDataForUnitAttackTile. */
            interface IExtraDataForUnitAttackTile {

                /** ExtraDataForUnitAttackTile commonExtraData */
                commonExtraData?: (CommonProto.Structure.ICommonExtraDataForWarAction|null);

                /** ExtraDataForUnitAttackTile targetGridIndex */
                targetGridIndex?: (CommonProto.Structure.IGridIndex|null);
            }

            /** Represents an ExtraDataForUnitAttackTile. */
            class ExtraDataForUnitAttackTile implements IExtraDataForUnitAttackTile {

                /**
                 * Constructs a new ExtraDataForUnitAttackTile.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.WarAction.WarActionUnitAttackTile.IExtraDataForUnitAttackTile);

                /** ExtraDataForUnitAttackTile commonExtraData. */
                public commonExtraData?: (CommonProto.Structure.ICommonExtraDataForWarAction|null);

                /** ExtraDataForUnitAttackTile targetGridIndex. */
                public targetGridIndex?: (CommonProto.Structure.IGridIndex|null);

                /**
                 * Creates a new ExtraDataForUnitAttackTile instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ExtraDataForUnitAttackTile instance
                 */
                public static create(properties?: CommonProto.WarAction.WarActionUnitAttackTile.IExtraDataForUnitAttackTile): CommonProto.WarAction.WarActionUnitAttackTile.ExtraDataForUnitAttackTile;

                /**
                 * Encodes the specified ExtraDataForUnitAttackTile message. Does not implicitly {@link CommonProto.WarAction.WarActionUnitAttackTile.ExtraDataForUnitAttackTile.verify|verify} messages.
                 * @param message ExtraDataForUnitAttackTile message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.WarAction.WarActionUnitAttackTile.IExtraDataForUnitAttackTile, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified ExtraDataForUnitAttackTile message, length delimited. Does not implicitly {@link CommonProto.WarAction.WarActionUnitAttackTile.ExtraDataForUnitAttackTile.verify|verify} messages.
                 * @param message ExtraDataForUnitAttackTile message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.WarAction.WarActionUnitAttackTile.IExtraDataForUnitAttackTile, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes an ExtraDataForUnitAttackTile message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ExtraDataForUnitAttackTile
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarAction.WarActionUnitAttackTile.ExtraDataForUnitAttackTile;

                /**
                 * Decodes an ExtraDataForUnitAttackTile message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ExtraDataForUnitAttackTile
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarAction.WarActionUnitAttackTile.ExtraDataForUnitAttackTile;

                /**
                 * Verifies an ExtraDataForUnitAttackTile message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an ExtraDataForUnitAttackTile message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ExtraDataForUnitAttackTile
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.WarAction.WarActionUnitAttackTile.ExtraDataForUnitAttackTile;

                /**
                 * Creates a plain object from an ExtraDataForUnitAttackTile message. Also converts values to other types if specified.
                 * @param message ExtraDataForUnitAttackTile
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.WarAction.WarActionUnitAttackTile.ExtraDataForUnitAttackTile, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ExtraDataForUnitAttackTile to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a WarActionUnitAttackUnit. */
        interface IWarActionUnitAttackUnit {

            /** WarActionUnitAttackUnit path */
            path?: (CommonProto.Structure.IMovePath|null);

            /** WarActionUnitAttackUnit launchUnitId */
            launchUnitId?: (number|null);

            /** WarActionUnitAttackUnit targetGridIndex */
            targetGridIndex?: (CommonProto.Structure.IGridIndex|null);

            /** WarActionUnitAttackUnit extraData */
            extraData?: (CommonProto.WarAction.WarActionUnitAttackUnit.IExtraDataForUnitAttackUnit|null);
        }

        /** Represents a WarActionUnitAttackUnit. */
        class WarActionUnitAttackUnit implements IWarActionUnitAttackUnit {

            /**
             * Constructs a new WarActionUnitAttackUnit.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarAction.IWarActionUnitAttackUnit);

            /** WarActionUnitAttackUnit path. */
            public path?: (CommonProto.Structure.IMovePath|null);

            /** WarActionUnitAttackUnit launchUnitId. */
            public launchUnitId: number;

            /** WarActionUnitAttackUnit targetGridIndex. */
            public targetGridIndex?: (CommonProto.Structure.IGridIndex|null);

            /** WarActionUnitAttackUnit extraData. */
            public extraData?: (CommonProto.WarAction.WarActionUnitAttackUnit.IExtraDataForUnitAttackUnit|null);

            /**
             * Creates a new WarActionUnitAttackUnit instance using the specified properties.
             * @param [properties] Properties to set
             * @returns WarActionUnitAttackUnit instance
             */
            public static create(properties?: CommonProto.WarAction.IWarActionUnitAttackUnit): CommonProto.WarAction.WarActionUnitAttackUnit;

            /**
             * Encodes the specified WarActionUnitAttackUnit message. Does not implicitly {@link CommonProto.WarAction.WarActionUnitAttackUnit.verify|verify} messages.
             * @param message WarActionUnitAttackUnit message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarAction.IWarActionUnitAttackUnit, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified WarActionUnitAttackUnit message, length delimited. Does not implicitly {@link CommonProto.WarAction.WarActionUnitAttackUnit.verify|verify} messages.
             * @param message WarActionUnitAttackUnit message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarAction.IWarActionUnitAttackUnit, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a WarActionUnitAttackUnit message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns WarActionUnitAttackUnit
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarAction.WarActionUnitAttackUnit;

            /**
             * Decodes a WarActionUnitAttackUnit message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns WarActionUnitAttackUnit
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarAction.WarActionUnitAttackUnit;

            /**
             * Verifies a WarActionUnitAttackUnit message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a WarActionUnitAttackUnit message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns WarActionUnitAttackUnit
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarAction.WarActionUnitAttackUnit;

            /**
             * Creates a plain object from a WarActionUnitAttackUnit message. Also converts values to other types if specified.
             * @param message WarActionUnitAttackUnit
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarAction.WarActionUnitAttackUnit, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this WarActionUnitAttackUnit to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace WarActionUnitAttackUnit {

            /** Properties of an ExtraDataForUnitAttackUnit. */
            interface IExtraDataForUnitAttackUnit {

                /** ExtraDataForUnitAttackUnit commonExtraData */
                commonExtraData?: (CommonProto.Structure.ICommonExtraDataForWarAction|null);

                /** ExtraDataForUnitAttackUnit targetGridIndex */
                targetGridIndex?: (CommonProto.Structure.IGridIndex|null);
            }

            /** Represents an ExtraDataForUnitAttackUnit. */
            class ExtraDataForUnitAttackUnit implements IExtraDataForUnitAttackUnit {

                /**
                 * Constructs a new ExtraDataForUnitAttackUnit.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.WarAction.WarActionUnitAttackUnit.IExtraDataForUnitAttackUnit);

                /** ExtraDataForUnitAttackUnit commonExtraData. */
                public commonExtraData?: (CommonProto.Structure.ICommonExtraDataForWarAction|null);

                /** ExtraDataForUnitAttackUnit targetGridIndex. */
                public targetGridIndex?: (CommonProto.Structure.IGridIndex|null);

                /**
                 * Creates a new ExtraDataForUnitAttackUnit instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ExtraDataForUnitAttackUnit instance
                 */
                public static create(properties?: CommonProto.WarAction.WarActionUnitAttackUnit.IExtraDataForUnitAttackUnit): CommonProto.WarAction.WarActionUnitAttackUnit.ExtraDataForUnitAttackUnit;

                /**
                 * Encodes the specified ExtraDataForUnitAttackUnit message. Does not implicitly {@link CommonProto.WarAction.WarActionUnitAttackUnit.ExtraDataForUnitAttackUnit.verify|verify} messages.
                 * @param message ExtraDataForUnitAttackUnit message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.WarAction.WarActionUnitAttackUnit.IExtraDataForUnitAttackUnit, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified ExtraDataForUnitAttackUnit message, length delimited. Does not implicitly {@link CommonProto.WarAction.WarActionUnitAttackUnit.ExtraDataForUnitAttackUnit.verify|verify} messages.
                 * @param message ExtraDataForUnitAttackUnit message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.WarAction.WarActionUnitAttackUnit.IExtraDataForUnitAttackUnit, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes an ExtraDataForUnitAttackUnit message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ExtraDataForUnitAttackUnit
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarAction.WarActionUnitAttackUnit.ExtraDataForUnitAttackUnit;

                /**
                 * Decodes an ExtraDataForUnitAttackUnit message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ExtraDataForUnitAttackUnit
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarAction.WarActionUnitAttackUnit.ExtraDataForUnitAttackUnit;

                /**
                 * Verifies an ExtraDataForUnitAttackUnit message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an ExtraDataForUnitAttackUnit message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ExtraDataForUnitAttackUnit
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.WarAction.WarActionUnitAttackUnit.ExtraDataForUnitAttackUnit;

                /**
                 * Creates a plain object from an ExtraDataForUnitAttackUnit message. Also converts values to other types if specified.
                 * @param message ExtraDataForUnitAttackUnit
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.WarAction.WarActionUnitAttackUnit.ExtraDataForUnitAttackUnit, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ExtraDataForUnitAttackUnit to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a WarActionUnitDropUnit. */
        interface IWarActionUnitDropUnit {

            /** WarActionUnitDropUnit path */
            path?: (CommonProto.Structure.IMovePath|null);

            /** WarActionUnitDropUnit launchUnitId */
            launchUnitId?: (number|null);

            /** WarActionUnitDropUnit dropDestinations */
            dropDestinations?: (CommonProto.Structure.IDropDestination[]|null);

            /** WarActionUnitDropUnit isDropBlocked */
            isDropBlocked?: (boolean|null);

            /** WarActionUnitDropUnit extraData */
            extraData?: (CommonProto.WarAction.WarActionUnitDropUnit.IExtraDataForUnitDropUnit|null);
        }

        /** Represents a WarActionUnitDropUnit. */
        class WarActionUnitDropUnit implements IWarActionUnitDropUnit {

            /**
             * Constructs a new WarActionUnitDropUnit.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarAction.IWarActionUnitDropUnit);

            /** WarActionUnitDropUnit path. */
            public path?: (CommonProto.Structure.IMovePath|null);

            /** WarActionUnitDropUnit launchUnitId. */
            public launchUnitId: number;

            /** WarActionUnitDropUnit dropDestinations. */
            public dropDestinations: CommonProto.Structure.IDropDestination[];

            /** WarActionUnitDropUnit isDropBlocked. */
            public isDropBlocked: boolean;

            /** WarActionUnitDropUnit extraData. */
            public extraData?: (CommonProto.WarAction.WarActionUnitDropUnit.IExtraDataForUnitDropUnit|null);

            /**
             * Creates a new WarActionUnitDropUnit instance using the specified properties.
             * @param [properties] Properties to set
             * @returns WarActionUnitDropUnit instance
             */
            public static create(properties?: CommonProto.WarAction.IWarActionUnitDropUnit): CommonProto.WarAction.WarActionUnitDropUnit;

            /**
             * Encodes the specified WarActionUnitDropUnit message. Does not implicitly {@link CommonProto.WarAction.WarActionUnitDropUnit.verify|verify} messages.
             * @param message WarActionUnitDropUnit message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarAction.IWarActionUnitDropUnit, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified WarActionUnitDropUnit message, length delimited. Does not implicitly {@link CommonProto.WarAction.WarActionUnitDropUnit.verify|verify} messages.
             * @param message WarActionUnitDropUnit message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarAction.IWarActionUnitDropUnit, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a WarActionUnitDropUnit message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns WarActionUnitDropUnit
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarAction.WarActionUnitDropUnit;

            /**
             * Decodes a WarActionUnitDropUnit message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns WarActionUnitDropUnit
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarAction.WarActionUnitDropUnit;

            /**
             * Verifies a WarActionUnitDropUnit message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a WarActionUnitDropUnit message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns WarActionUnitDropUnit
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarAction.WarActionUnitDropUnit;

            /**
             * Creates a plain object from a WarActionUnitDropUnit message. Also converts values to other types if specified.
             * @param message WarActionUnitDropUnit
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarAction.WarActionUnitDropUnit, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this WarActionUnitDropUnit to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace WarActionUnitDropUnit {

            /** Properties of an ExtraDataForUnitDropUnit. */
            interface IExtraDataForUnitDropUnit {

                /** ExtraDataForUnitDropUnit commonExtraData */
                commonExtraData?: (CommonProto.Structure.ICommonExtraDataForWarAction|null);

                /** ExtraDataForUnitDropUnit isDropBlocked */
                isDropBlocked?: (boolean|null);

                /** ExtraDataForUnitDropUnit droppingUnitAndPathArray */
                droppingUnitAndPathArray?: (CommonProto.Structure.IMovingUnitAndPath[]|null);
            }

            /** Represents an ExtraDataForUnitDropUnit. */
            class ExtraDataForUnitDropUnit implements IExtraDataForUnitDropUnit {

                /**
                 * Constructs a new ExtraDataForUnitDropUnit.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.WarAction.WarActionUnitDropUnit.IExtraDataForUnitDropUnit);

                /** ExtraDataForUnitDropUnit commonExtraData. */
                public commonExtraData?: (CommonProto.Structure.ICommonExtraDataForWarAction|null);

                /** ExtraDataForUnitDropUnit isDropBlocked. */
                public isDropBlocked: boolean;

                /** ExtraDataForUnitDropUnit droppingUnitAndPathArray. */
                public droppingUnitAndPathArray: CommonProto.Structure.IMovingUnitAndPath[];

                /**
                 * Creates a new ExtraDataForUnitDropUnit instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ExtraDataForUnitDropUnit instance
                 */
                public static create(properties?: CommonProto.WarAction.WarActionUnitDropUnit.IExtraDataForUnitDropUnit): CommonProto.WarAction.WarActionUnitDropUnit.ExtraDataForUnitDropUnit;

                /**
                 * Encodes the specified ExtraDataForUnitDropUnit message. Does not implicitly {@link CommonProto.WarAction.WarActionUnitDropUnit.ExtraDataForUnitDropUnit.verify|verify} messages.
                 * @param message ExtraDataForUnitDropUnit message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.WarAction.WarActionUnitDropUnit.IExtraDataForUnitDropUnit, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified ExtraDataForUnitDropUnit message, length delimited. Does not implicitly {@link CommonProto.WarAction.WarActionUnitDropUnit.ExtraDataForUnitDropUnit.verify|verify} messages.
                 * @param message ExtraDataForUnitDropUnit message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.WarAction.WarActionUnitDropUnit.IExtraDataForUnitDropUnit, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes an ExtraDataForUnitDropUnit message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ExtraDataForUnitDropUnit
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarAction.WarActionUnitDropUnit.ExtraDataForUnitDropUnit;

                /**
                 * Decodes an ExtraDataForUnitDropUnit message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ExtraDataForUnitDropUnit
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarAction.WarActionUnitDropUnit.ExtraDataForUnitDropUnit;

                /**
                 * Verifies an ExtraDataForUnitDropUnit message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an ExtraDataForUnitDropUnit message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ExtraDataForUnitDropUnit
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.WarAction.WarActionUnitDropUnit.ExtraDataForUnitDropUnit;

                /**
                 * Creates a plain object from an ExtraDataForUnitDropUnit message. Also converts values to other types if specified.
                 * @param message ExtraDataForUnitDropUnit
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.WarAction.WarActionUnitDropUnit.ExtraDataForUnitDropUnit, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ExtraDataForUnitDropUnit to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a WarActionUnitBuildTile. */
        interface IWarActionUnitBuildTile {

            /** WarActionUnitBuildTile path */
            path?: (CommonProto.Structure.IMovePath|null);

            /** WarActionUnitBuildTile launchUnitId */
            launchUnitId?: (number|null);

            /** WarActionUnitBuildTile extraData */
            extraData?: (CommonProto.WarAction.WarActionUnitBuildTile.IExtraDataForUnitBuildTile|null);
        }

        /** Represents a WarActionUnitBuildTile. */
        class WarActionUnitBuildTile implements IWarActionUnitBuildTile {

            /**
             * Constructs a new WarActionUnitBuildTile.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarAction.IWarActionUnitBuildTile);

            /** WarActionUnitBuildTile path. */
            public path?: (CommonProto.Structure.IMovePath|null);

            /** WarActionUnitBuildTile launchUnitId. */
            public launchUnitId: number;

            /** WarActionUnitBuildTile extraData. */
            public extraData?: (CommonProto.WarAction.WarActionUnitBuildTile.IExtraDataForUnitBuildTile|null);

            /**
             * Creates a new WarActionUnitBuildTile instance using the specified properties.
             * @param [properties] Properties to set
             * @returns WarActionUnitBuildTile instance
             */
            public static create(properties?: CommonProto.WarAction.IWarActionUnitBuildTile): CommonProto.WarAction.WarActionUnitBuildTile;

            /**
             * Encodes the specified WarActionUnitBuildTile message. Does not implicitly {@link CommonProto.WarAction.WarActionUnitBuildTile.verify|verify} messages.
             * @param message WarActionUnitBuildTile message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarAction.IWarActionUnitBuildTile, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified WarActionUnitBuildTile message, length delimited. Does not implicitly {@link CommonProto.WarAction.WarActionUnitBuildTile.verify|verify} messages.
             * @param message WarActionUnitBuildTile message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarAction.IWarActionUnitBuildTile, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a WarActionUnitBuildTile message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns WarActionUnitBuildTile
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarAction.WarActionUnitBuildTile;

            /**
             * Decodes a WarActionUnitBuildTile message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns WarActionUnitBuildTile
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarAction.WarActionUnitBuildTile;

            /**
             * Verifies a WarActionUnitBuildTile message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a WarActionUnitBuildTile message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns WarActionUnitBuildTile
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarAction.WarActionUnitBuildTile;

            /**
             * Creates a plain object from a WarActionUnitBuildTile message. Also converts values to other types if specified.
             * @param message WarActionUnitBuildTile
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarAction.WarActionUnitBuildTile, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this WarActionUnitBuildTile to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace WarActionUnitBuildTile {

            /** Properties of an ExtraDataForUnitBuildTile. */
            interface IExtraDataForUnitBuildTile {

                /** ExtraDataForUnitBuildTile commonExtraData */
                commonExtraData?: (CommonProto.Structure.ICommonExtraDataForWarAction|null);
            }

            /** Represents an ExtraDataForUnitBuildTile. */
            class ExtraDataForUnitBuildTile implements IExtraDataForUnitBuildTile {

                /**
                 * Constructs a new ExtraDataForUnitBuildTile.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.WarAction.WarActionUnitBuildTile.IExtraDataForUnitBuildTile);

                /** ExtraDataForUnitBuildTile commonExtraData. */
                public commonExtraData?: (CommonProto.Structure.ICommonExtraDataForWarAction|null);

                /**
                 * Creates a new ExtraDataForUnitBuildTile instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ExtraDataForUnitBuildTile instance
                 */
                public static create(properties?: CommonProto.WarAction.WarActionUnitBuildTile.IExtraDataForUnitBuildTile): CommonProto.WarAction.WarActionUnitBuildTile.ExtraDataForUnitBuildTile;

                /**
                 * Encodes the specified ExtraDataForUnitBuildTile message. Does not implicitly {@link CommonProto.WarAction.WarActionUnitBuildTile.ExtraDataForUnitBuildTile.verify|verify} messages.
                 * @param message ExtraDataForUnitBuildTile message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.WarAction.WarActionUnitBuildTile.IExtraDataForUnitBuildTile, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified ExtraDataForUnitBuildTile message, length delimited. Does not implicitly {@link CommonProto.WarAction.WarActionUnitBuildTile.ExtraDataForUnitBuildTile.verify|verify} messages.
                 * @param message ExtraDataForUnitBuildTile message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.WarAction.WarActionUnitBuildTile.IExtraDataForUnitBuildTile, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes an ExtraDataForUnitBuildTile message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ExtraDataForUnitBuildTile
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarAction.WarActionUnitBuildTile.ExtraDataForUnitBuildTile;

                /**
                 * Decodes an ExtraDataForUnitBuildTile message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ExtraDataForUnitBuildTile
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarAction.WarActionUnitBuildTile.ExtraDataForUnitBuildTile;

                /**
                 * Verifies an ExtraDataForUnitBuildTile message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an ExtraDataForUnitBuildTile message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ExtraDataForUnitBuildTile
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.WarAction.WarActionUnitBuildTile.ExtraDataForUnitBuildTile;

                /**
                 * Creates a plain object from an ExtraDataForUnitBuildTile message. Also converts values to other types if specified.
                 * @param message ExtraDataForUnitBuildTile
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.WarAction.WarActionUnitBuildTile.ExtraDataForUnitBuildTile, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ExtraDataForUnitBuildTile to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a WarActionUnitDive. */
        interface IWarActionUnitDive {

            /** WarActionUnitDive path */
            path?: (CommonProto.Structure.IMovePath|null);

            /** WarActionUnitDive launchUnitId */
            launchUnitId?: (number|null);

            /** WarActionUnitDive extraData */
            extraData?: (CommonProto.WarAction.WarActionUnitDive.IExtraDataForUnitDive|null);
        }

        /** Represents a WarActionUnitDive. */
        class WarActionUnitDive implements IWarActionUnitDive {

            /**
             * Constructs a new WarActionUnitDive.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarAction.IWarActionUnitDive);

            /** WarActionUnitDive path. */
            public path?: (CommonProto.Structure.IMovePath|null);

            /** WarActionUnitDive launchUnitId. */
            public launchUnitId: number;

            /** WarActionUnitDive extraData. */
            public extraData?: (CommonProto.WarAction.WarActionUnitDive.IExtraDataForUnitDive|null);

            /**
             * Creates a new WarActionUnitDive instance using the specified properties.
             * @param [properties] Properties to set
             * @returns WarActionUnitDive instance
             */
            public static create(properties?: CommonProto.WarAction.IWarActionUnitDive): CommonProto.WarAction.WarActionUnitDive;

            /**
             * Encodes the specified WarActionUnitDive message. Does not implicitly {@link CommonProto.WarAction.WarActionUnitDive.verify|verify} messages.
             * @param message WarActionUnitDive message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarAction.IWarActionUnitDive, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified WarActionUnitDive message, length delimited. Does not implicitly {@link CommonProto.WarAction.WarActionUnitDive.verify|verify} messages.
             * @param message WarActionUnitDive message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarAction.IWarActionUnitDive, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a WarActionUnitDive message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns WarActionUnitDive
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarAction.WarActionUnitDive;

            /**
             * Decodes a WarActionUnitDive message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns WarActionUnitDive
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarAction.WarActionUnitDive;

            /**
             * Verifies a WarActionUnitDive message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a WarActionUnitDive message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns WarActionUnitDive
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarAction.WarActionUnitDive;

            /**
             * Creates a plain object from a WarActionUnitDive message. Also converts values to other types if specified.
             * @param message WarActionUnitDive
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarAction.WarActionUnitDive, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this WarActionUnitDive to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace WarActionUnitDive {

            /** Properties of an ExtraDataForUnitDive. */
            interface IExtraDataForUnitDive {

                /** ExtraDataForUnitDive commonExtraData */
                commonExtraData?: (CommonProto.Structure.ICommonExtraDataForWarAction|null);
            }

            /** Represents an ExtraDataForUnitDive. */
            class ExtraDataForUnitDive implements IExtraDataForUnitDive {

                /**
                 * Constructs a new ExtraDataForUnitDive.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.WarAction.WarActionUnitDive.IExtraDataForUnitDive);

                /** ExtraDataForUnitDive commonExtraData. */
                public commonExtraData?: (CommonProto.Structure.ICommonExtraDataForWarAction|null);

                /**
                 * Creates a new ExtraDataForUnitDive instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ExtraDataForUnitDive instance
                 */
                public static create(properties?: CommonProto.WarAction.WarActionUnitDive.IExtraDataForUnitDive): CommonProto.WarAction.WarActionUnitDive.ExtraDataForUnitDive;

                /**
                 * Encodes the specified ExtraDataForUnitDive message. Does not implicitly {@link CommonProto.WarAction.WarActionUnitDive.ExtraDataForUnitDive.verify|verify} messages.
                 * @param message ExtraDataForUnitDive message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.WarAction.WarActionUnitDive.IExtraDataForUnitDive, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified ExtraDataForUnitDive message, length delimited. Does not implicitly {@link CommonProto.WarAction.WarActionUnitDive.ExtraDataForUnitDive.verify|verify} messages.
                 * @param message ExtraDataForUnitDive message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.WarAction.WarActionUnitDive.IExtraDataForUnitDive, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes an ExtraDataForUnitDive message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ExtraDataForUnitDive
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarAction.WarActionUnitDive.ExtraDataForUnitDive;

                /**
                 * Decodes an ExtraDataForUnitDive message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ExtraDataForUnitDive
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarAction.WarActionUnitDive.ExtraDataForUnitDive;

                /**
                 * Verifies an ExtraDataForUnitDive message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an ExtraDataForUnitDive message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ExtraDataForUnitDive
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.WarAction.WarActionUnitDive.ExtraDataForUnitDive;

                /**
                 * Creates a plain object from an ExtraDataForUnitDive message. Also converts values to other types if specified.
                 * @param message ExtraDataForUnitDive
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.WarAction.WarActionUnitDive.ExtraDataForUnitDive, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ExtraDataForUnitDive to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a WarActionUnitSurface. */
        interface IWarActionUnitSurface {

            /** WarActionUnitSurface path */
            path?: (CommonProto.Structure.IMovePath|null);

            /** WarActionUnitSurface launchUnitId */
            launchUnitId?: (number|null);

            /** WarActionUnitSurface extraData */
            extraData?: (CommonProto.WarAction.WarActionUnitSurface.IExtraDataForUnitSurface|null);
        }

        /** Represents a WarActionUnitSurface. */
        class WarActionUnitSurface implements IWarActionUnitSurface {

            /**
             * Constructs a new WarActionUnitSurface.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarAction.IWarActionUnitSurface);

            /** WarActionUnitSurface path. */
            public path?: (CommonProto.Structure.IMovePath|null);

            /** WarActionUnitSurface launchUnitId. */
            public launchUnitId: number;

            /** WarActionUnitSurface extraData. */
            public extraData?: (CommonProto.WarAction.WarActionUnitSurface.IExtraDataForUnitSurface|null);

            /**
             * Creates a new WarActionUnitSurface instance using the specified properties.
             * @param [properties] Properties to set
             * @returns WarActionUnitSurface instance
             */
            public static create(properties?: CommonProto.WarAction.IWarActionUnitSurface): CommonProto.WarAction.WarActionUnitSurface;

            /**
             * Encodes the specified WarActionUnitSurface message. Does not implicitly {@link CommonProto.WarAction.WarActionUnitSurface.verify|verify} messages.
             * @param message WarActionUnitSurface message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarAction.IWarActionUnitSurface, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified WarActionUnitSurface message, length delimited. Does not implicitly {@link CommonProto.WarAction.WarActionUnitSurface.verify|verify} messages.
             * @param message WarActionUnitSurface message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarAction.IWarActionUnitSurface, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a WarActionUnitSurface message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns WarActionUnitSurface
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarAction.WarActionUnitSurface;

            /**
             * Decodes a WarActionUnitSurface message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns WarActionUnitSurface
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarAction.WarActionUnitSurface;

            /**
             * Verifies a WarActionUnitSurface message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a WarActionUnitSurface message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns WarActionUnitSurface
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarAction.WarActionUnitSurface;

            /**
             * Creates a plain object from a WarActionUnitSurface message. Also converts values to other types if specified.
             * @param message WarActionUnitSurface
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarAction.WarActionUnitSurface, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this WarActionUnitSurface to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace WarActionUnitSurface {

            /** Properties of an ExtraDataForUnitSurface. */
            interface IExtraDataForUnitSurface {

                /** ExtraDataForUnitSurface commonExtraData */
                commonExtraData?: (CommonProto.Structure.ICommonExtraDataForWarAction|null);
            }

            /** Represents an ExtraDataForUnitSurface. */
            class ExtraDataForUnitSurface implements IExtraDataForUnitSurface {

                /**
                 * Constructs a new ExtraDataForUnitSurface.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.WarAction.WarActionUnitSurface.IExtraDataForUnitSurface);

                /** ExtraDataForUnitSurface commonExtraData. */
                public commonExtraData?: (CommonProto.Structure.ICommonExtraDataForWarAction|null);

                /**
                 * Creates a new ExtraDataForUnitSurface instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ExtraDataForUnitSurface instance
                 */
                public static create(properties?: CommonProto.WarAction.WarActionUnitSurface.IExtraDataForUnitSurface): CommonProto.WarAction.WarActionUnitSurface.ExtraDataForUnitSurface;

                /**
                 * Encodes the specified ExtraDataForUnitSurface message. Does not implicitly {@link CommonProto.WarAction.WarActionUnitSurface.ExtraDataForUnitSurface.verify|verify} messages.
                 * @param message ExtraDataForUnitSurface message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.WarAction.WarActionUnitSurface.IExtraDataForUnitSurface, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified ExtraDataForUnitSurface message, length delimited. Does not implicitly {@link CommonProto.WarAction.WarActionUnitSurface.ExtraDataForUnitSurface.verify|verify} messages.
                 * @param message ExtraDataForUnitSurface message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.WarAction.WarActionUnitSurface.IExtraDataForUnitSurface, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes an ExtraDataForUnitSurface message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ExtraDataForUnitSurface
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarAction.WarActionUnitSurface.ExtraDataForUnitSurface;

                /**
                 * Decodes an ExtraDataForUnitSurface message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ExtraDataForUnitSurface
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarAction.WarActionUnitSurface.ExtraDataForUnitSurface;

                /**
                 * Verifies an ExtraDataForUnitSurface message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an ExtraDataForUnitSurface message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ExtraDataForUnitSurface
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.WarAction.WarActionUnitSurface.ExtraDataForUnitSurface;

                /**
                 * Creates a plain object from an ExtraDataForUnitSurface message. Also converts values to other types if specified.
                 * @param message ExtraDataForUnitSurface
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.WarAction.WarActionUnitSurface.ExtraDataForUnitSurface, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ExtraDataForUnitSurface to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a WarActionUnitJoinUnit. */
        interface IWarActionUnitJoinUnit {

            /** WarActionUnitJoinUnit path */
            path?: (CommonProto.Structure.IMovePath|null);

            /** WarActionUnitJoinUnit launchUnitId */
            launchUnitId?: (number|null);

            /** WarActionUnitJoinUnit extraData */
            extraData?: (CommonProto.WarAction.WarActionUnitJoinUnit.IExtraDataForUnitJoinUnit|null);
        }

        /** Represents a WarActionUnitJoinUnit. */
        class WarActionUnitJoinUnit implements IWarActionUnitJoinUnit {

            /**
             * Constructs a new WarActionUnitJoinUnit.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarAction.IWarActionUnitJoinUnit);

            /** WarActionUnitJoinUnit path. */
            public path?: (CommonProto.Structure.IMovePath|null);

            /** WarActionUnitJoinUnit launchUnitId. */
            public launchUnitId: number;

            /** WarActionUnitJoinUnit extraData. */
            public extraData?: (CommonProto.WarAction.WarActionUnitJoinUnit.IExtraDataForUnitJoinUnit|null);

            /**
             * Creates a new WarActionUnitJoinUnit instance using the specified properties.
             * @param [properties] Properties to set
             * @returns WarActionUnitJoinUnit instance
             */
            public static create(properties?: CommonProto.WarAction.IWarActionUnitJoinUnit): CommonProto.WarAction.WarActionUnitJoinUnit;

            /**
             * Encodes the specified WarActionUnitJoinUnit message. Does not implicitly {@link CommonProto.WarAction.WarActionUnitJoinUnit.verify|verify} messages.
             * @param message WarActionUnitJoinUnit message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarAction.IWarActionUnitJoinUnit, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified WarActionUnitJoinUnit message, length delimited. Does not implicitly {@link CommonProto.WarAction.WarActionUnitJoinUnit.verify|verify} messages.
             * @param message WarActionUnitJoinUnit message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarAction.IWarActionUnitJoinUnit, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a WarActionUnitJoinUnit message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns WarActionUnitJoinUnit
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarAction.WarActionUnitJoinUnit;

            /**
             * Decodes a WarActionUnitJoinUnit message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns WarActionUnitJoinUnit
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarAction.WarActionUnitJoinUnit;

            /**
             * Verifies a WarActionUnitJoinUnit message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a WarActionUnitJoinUnit message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns WarActionUnitJoinUnit
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarAction.WarActionUnitJoinUnit;

            /**
             * Creates a plain object from a WarActionUnitJoinUnit message. Also converts values to other types if specified.
             * @param message WarActionUnitJoinUnit
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarAction.WarActionUnitJoinUnit, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this WarActionUnitJoinUnit to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace WarActionUnitJoinUnit {

            /** Properties of an ExtraDataForUnitJoinUnit. */
            interface IExtraDataForUnitJoinUnit {

                /** ExtraDataForUnitJoinUnit commonExtraData */
                commonExtraData?: (CommonProto.Structure.ICommonExtraDataForWarAction|null);
            }

            /** Represents an ExtraDataForUnitJoinUnit. */
            class ExtraDataForUnitJoinUnit implements IExtraDataForUnitJoinUnit {

                /**
                 * Constructs a new ExtraDataForUnitJoinUnit.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.WarAction.WarActionUnitJoinUnit.IExtraDataForUnitJoinUnit);

                /** ExtraDataForUnitJoinUnit commonExtraData. */
                public commonExtraData?: (CommonProto.Structure.ICommonExtraDataForWarAction|null);

                /**
                 * Creates a new ExtraDataForUnitJoinUnit instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ExtraDataForUnitJoinUnit instance
                 */
                public static create(properties?: CommonProto.WarAction.WarActionUnitJoinUnit.IExtraDataForUnitJoinUnit): CommonProto.WarAction.WarActionUnitJoinUnit.ExtraDataForUnitJoinUnit;

                /**
                 * Encodes the specified ExtraDataForUnitJoinUnit message. Does not implicitly {@link CommonProto.WarAction.WarActionUnitJoinUnit.ExtraDataForUnitJoinUnit.verify|verify} messages.
                 * @param message ExtraDataForUnitJoinUnit message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.WarAction.WarActionUnitJoinUnit.IExtraDataForUnitJoinUnit, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified ExtraDataForUnitJoinUnit message, length delimited. Does not implicitly {@link CommonProto.WarAction.WarActionUnitJoinUnit.ExtraDataForUnitJoinUnit.verify|verify} messages.
                 * @param message ExtraDataForUnitJoinUnit message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.WarAction.WarActionUnitJoinUnit.IExtraDataForUnitJoinUnit, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes an ExtraDataForUnitJoinUnit message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ExtraDataForUnitJoinUnit
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarAction.WarActionUnitJoinUnit.ExtraDataForUnitJoinUnit;

                /**
                 * Decodes an ExtraDataForUnitJoinUnit message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ExtraDataForUnitJoinUnit
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarAction.WarActionUnitJoinUnit.ExtraDataForUnitJoinUnit;

                /**
                 * Verifies an ExtraDataForUnitJoinUnit message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an ExtraDataForUnitJoinUnit message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ExtraDataForUnitJoinUnit
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.WarAction.WarActionUnitJoinUnit.ExtraDataForUnitJoinUnit;

                /**
                 * Creates a plain object from an ExtraDataForUnitJoinUnit message. Also converts values to other types if specified.
                 * @param message ExtraDataForUnitJoinUnit
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.WarAction.WarActionUnitJoinUnit.ExtraDataForUnitJoinUnit, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ExtraDataForUnitJoinUnit to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a WarActionUnitLaunchFlare. */
        interface IWarActionUnitLaunchFlare {

            /** WarActionUnitLaunchFlare path */
            path?: (CommonProto.Structure.IMovePath|null);

            /** WarActionUnitLaunchFlare launchUnitId */
            launchUnitId?: (number|null);

            /** WarActionUnitLaunchFlare targetGridIndex */
            targetGridIndex?: (CommonProto.Structure.IGridIndex|null);

            /** WarActionUnitLaunchFlare extraData */
            extraData?: (CommonProto.WarAction.WarActionUnitLaunchFlare.IExtraDataForUnitLaunchFlare|null);
        }

        /** Represents a WarActionUnitLaunchFlare. */
        class WarActionUnitLaunchFlare implements IWarActionUnitLaunchFlare {

            /**
             * Constructs a new WarActionUnitLaunchFlare.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarAction.IWarActionUnitLaunchFlare);

            /** WarActionUnitLaunchFlare path. */
            public path?: (CommonProto.Structure.IMovePath|null);

            /** WarActionUnitLaunchFlare launchUnitId. */
            public launchUnitId: number;

            /** WarActionUnitLaunchFlare targetGridIndex. */
            public targetGridIndex?: (CommonProto.Structure.IGridIndex|null);

            /** WarActionUnitLaunchFlare extraData. */
            public extraData?: (CommonProto.WarAction.WarActionUnitLaunchFlare.IExtraDataForUnitLaunchFlare|null);

            /**
             * Creates a new WarActionUnitLaunchFlare instance using the specified properties.
             * @param [properties] Properties to set
             * @returns WarActionUnitLaunchFlare instance
             */
            public static create(properties?: CommonProto.WarAction.IWarActionUnitLaunchFlare): CommonProto.WarAction.WarActionUnitLaunchFlare;

            /**
             * Encodes the specified WarActionUnitLaunchFlare message. Does not implicitly {@link CommonProto.WarAction.WarActionUnitLaunchFlare.verify|verify} messages.
             * @param message WarActionUnitLaunchFlare message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarAction.IWarActionUnitLaunchFlare, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified WarActionUnitLaunchFlare message, length delimited. Does not implicitly {@link CommonProto.WarAction.WarActionUnitLaunchFlare.verify|verify} messages.
             * @param message WarActionUnitLaunchFlare message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarAction.IWarActionUnitLaunchFlare, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a WarActionUnitLaunchFlare message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns WarActionUnitLaunchFlare
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarAction.WarActionUnitLaunchFlare;

            /**
             * Decodes a WarActionUnitLaunchFlare message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns WarActionUnitLaunchFlare
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarAction.WarActionUnitLaunchFlare;

            /**
             * Verifies a WarActionUnitLaunchFlare message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a WarActionUnitLaunchFlare message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns WarActionUnitLaunchFlare
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarAction.WarActionUnitLaunchFlare;

            /**
             * Creates a plain object from a WarActionUnitLaunchFlare message. Also converts values to other types if specified.
             * @param message WarActionUnitLaunchFlare
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarAction.WarActionUnitLaunchFlare, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this WarActionUnitLaunchFlare to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace WarActionUnitLaunchFlare {

            /** Properties of an ExtraDataForUnitLaunchFlare. */
            interface IExtraDataForUnitLaunchFlare {

                /** ExtraDataForUnitLaunchFlare commonExtraData */
                commonExtraData?: (CommonProto.Structure.ICommonExtraDataForWarAction|null);

                /** ExtraDataForUnitLaunchFlare targetGridIndex */
                targetGridIndex?: (CommonProto.Structure.IGridIndex|null);

                /** ExtraDataForUnitLaunchFlare flareRadius */
                flareRadius?: (number|null);
            }

            /** Represents an ExtraDataForUnitLaunchFlare. */
            class ExtraDataForUnitLaunchFlare implements IExtraDataForUnitLaunchFlare {

                /**
                 * Constructs a new ExtraDataForUnitLaunchFlare.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.WarAction.WarActionUnitLaunchFlare.IExtraDataForUnitLaunchFlare);

                /** ExtraDataForUnitLaunchFlare commonExtraData. */
                public commonExtraData?: (CommonProto.Structure.ICommonExtraDataForWarAction|null);

                /** ExtraDataForUnitLaunchFlare targetGridIndex. */
                public targetGridIndex?: (CommonProto.Structure.IGridIndex|null);

                /** ExtraDataForUnitLaunchFlare flareRadius. */
                public flareRadius: number;

                /**
                 * Creates a new ExtraDataForUnitLaunchFlare instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ExtraDataForUnitLaunchFlare instance
                 */
                public static create(properties?: CommonProto.WarAction.WarActionUnitLaunchFlare.IExtraDataForUnitLaunchFlare): CommonProto.WarAction.WarActionUnitLaunchFlare.ExtraDataForUnitLaunchFlare;

                /**
                 * Encodes the specified ExtraDataForUnitLaunchFlare message. Does not implicitly {@link CommonProto.WarAction.WarActionUnitLaunchFlare.ExtraDataForUnitLaunchFlare.verify|verify} messages.
                 * @param message ExtraDataForUnitLaunchFlare message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.WarAction.WarActionUnitLaunchFlare.IExtraDataForUnitLaunchFlare, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified ExtraDataForUnitLaunchFlare message, length delimited. Does not implicitly {@link CommonProto.WarAction.WarActionUnitLaunchFlare.ExtraDataForUnitLaunchFlare.verify|verify} messages.
                 * @param message ExtraDataForUnitLaunchFlare message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.WarAction.WarActionUnitLaunchFlare.IExtraDataForUnitLaunchFlare, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes an ExtraDataForUnitLaunchFlare message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ExtraDataForUnitLaunchFlare
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarAction.WarActionUnitLaunchFlare.ExtraDataForUnitLaunchFlare;

                /**
                 * Decodes an ExtraDataForUnitLaunchFlare message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ExtraDataForUnitLaunchFlare
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarAction.WarActionUnitLaunchFlare.ExtraDataForUnitLaunchFlare;

                /**
                 * Verifies an ExtraDataForUnitLaunchFlare message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an ExtraDataForUnitLaunchFlare message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ExtraDataForUnitLaunchFlare
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.WarAction.WarActionUnitLaunchFlare.ExtraDataForUnitLaunchFlare;

                /**
                 * Creates a plain object from an ExtraDataForUnitLaunchFlare message. Also converts values to other types if specified.
                 * @param message ExtraDataForUnitLaunchFlare
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.WarAction.WarActionUnitLaunchFlare.ExtraDataForUnitLaunchFlare, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ExtraDataForUnitLaunchFlare to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a WarActionUnitLaunchSilo. */
        interface IWarActionUnitLaunchSilo {

            /** WarActionUnitLaunchSilo path */
            path?: (CommonProto.Structure.IMovePath|null);

            /** WarActionUnitLaunchSilo launchUnitId */
            launchUnitId?: (number|null);

            /** WarActionUnitLaunchSilo targetGridIndex */
            targetGridIndex?: (CommonProto.Structure.IGridIndex|null);

            /** WarActionUnitLaunchSilo extraData */
            extraData?: (CommonProto.WarAction.WarActionUnitLaunchSilo.IExtraDataForUnitLaunchSilo|null);
        }

        /** Represents a WarActionUnitLaunchSilo. */
        class WarActionUnitLaunchSilo implements IWarActionUnitLaunchSilo {

            /**
             * Constructs a new WarActionUnitLaunchSilo.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarAction.IWarActionUnitLaunchSilo);

            /** WarActionUnitLaunchSilo path. */
            public path?: (CommonProto.Structure.IMovePath|null);

            /** WarActionUnitLaunchSilo launchUnitId. */
            public launchUnitId: number;

            /** WarActionUnitLaunchSilo targetGridIndex. */
            public targetGridIndex?: (CommonProto.Structure.IGridIndex|null);

            /** WarActionUnitLaunchSilo extraData. */
            public extraData?: (CommonProto.WarAction.WarActionUnitLaunchSilo.IExtraDataForUnitLaunchSilo|null);

            /**
             * Creates a new WarActionUnitLaunchSilo instance using the specified properties.
             * @param [properties] Properties to set
             * @returns WarActionUnitLaunchSilo instance
             */
            public static create(properties?: CommonProto.WarAction.IWarActionUnitLaunchSilo): CommonProto.WarAction.WarActionUnitLaunchSilo;

            /**
             * Encodes the specified WarActionUnitLaunchSilo message. Does not implicitly {@link CommonProto.WarAction.WarActionUnitLaunchSilo.verify|verify} messages.
             * @param message WarActionUnitLaunchSilo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarAction.IWarActionUnitLaunchSilo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified WarActionUnitLaunchSilo message, length delimited. Does not implicitly {@link CommonProto.WarAction.WarActionUnitLaunchSilo.verify|verify} messages.
             * @param message WarActionUnitLaunchSilo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarAction.IWarActionUnitLaunchSilo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a WarActionUnitLaunchSilo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns WarActionUnitLaunchSilo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarAction.WarActionUnitLaunchSilo;

            /**
             * Decodes a WarActionUnitLaunchSilo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns WarActionUnitLaunchSilo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarAction.WarActionUnitLaunchSilo;

            /**
             * Verifies a WarActionUnitLaunchSilo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a WarActionUnitLaunchSilo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns WarActionUnitLaunchSilo
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarAction.WarActionUnitLaunchSilo;

            /**
             * Creates a plain object from a WarActionUnitLaunchSilo message. Also converts values to other types if specified.
             * @param message WarActionUnitLaunchSilo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarAction.WarActionUnitLaunchSilo, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this WarActionUnitLaunchSilo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace WarActionUnitLaunchSilo {

            /** Properties of an ExtraDataForUnitLaunchSilo. */
            interface IExtraDataForUnitLaunchSilo {

                /** ExtraDataForUnitLaunchSilo commonExtraData */
                commonExtraData?: (CommonProto.Structure.ICommonExtraDataForWarAction|null);

                /** ExtraDataForUnitLaunchSilo targetGridIndex */
                targetGridIndex?: (CommonProto.Structure.IGridIndex|null);
            }

            /** Represents an ExtraDataForUnitLaunchSilo. */
            class ExtraDataForUnitLaunchSilo implements IExtraDataForUnitLaunchSilo {

                /**
                 * Constructs a new ExtraDataForUnitLaunchSilo.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.WarAction.WarActionUnitLaunchSilo.IExtraDataForUnitLaunchSilo);

                /** ExtraDataForUnitLaunchSilo commonExtraData. */
                public commonExtraData?: (CommonProto.Structure.ICommonExtraDataForWarAction|null);

                /** ExtraDataForUnitLaunchSilo targetGridIndex. */
                public targetGridIndex?: (CommonProto.Structure.IGridIndex|null);

                /**
                 * Creates a new ExtraDataForUnitLaunchSilo instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ExtraDataForUnitLaunchSilo instance
                 */
                public static create(properties?: CommonProto.WarAction.WarActionUnitLaunchSilo.IExtraDataForUnitLaunchSilo): CommonProto.WarAction.WarActionUnitLaunchSilo.ExtraDataForUnitLaunchSilo;

                /**
                 * Encodes the specified ExtraDataForUnitLaunchSilo message. Does not implicitly {@link CommonProto.WarAction.WarActionUnitLaunchSilo.ExtraDataForUnitLaunchSilo.verify|verify} messages.
                 * @param message ExtraDataForUnitLaunchSilo message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.WarAction.WarActionUnitLaunchSilo.IExtraDataForUnitLaunchSilo, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified ExtraDataForUnitLaunchSilo message, length delimited. Does not implicitly {@link CommonProto.WarAction.WarActionUnitLaunchSilo.ExtraDataForUnitLaunchSilo.verify|verify} messages.
                 * @param message ExtraDataForUnitLaunchSilo message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.WarAction.WarActionUnitLaunchSilo.IExtraDataForUnitLaunchSilo, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes an ExtraDataForUnitLaunchSilo message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ExtraDataForUnitLaunchSilo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarAction.WarActionUnitLaunchSilo.ExtraDataForUnitLaunchSilo;

                /**
                 * Decodes an ExtraDataForUnitLaunchSilo message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ExtraDataForUnitLaunchSilo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarAction.WarActionUnitLaunchSilo.ExtraDataForUnitLaunchSilo;

                /**
                 * Verifies an ExtraDataForUnitLaunchSilo message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an ExtraDataForUnitLaunchSilo message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ExtraDataForUnitLaunchSilo
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.WarAction.WarActionUnitLaunchSilo.ExtraDataForUnitLaunchSilo;

                /**
                 * Creates a plain object from an ExtraDataForUnitLaunchSilo message. Also converts values to other types if specified.
                 * @param message ExtraDataForUnitLaunchSilo
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.WarAction.WarActionUnitLaunchSilo.ExtraDataForUnitLaunchSilo, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ExtraDataForUnitLaunchSilo to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a WarActionUnitProduceUnit. */
        interface IWarActionUnitProduceUnit {

            /** WarActionUnitProduceUnit path */
            path?: (CommonProto.Structure.IMovePath|null);

            /** WarActionUnitProduceUnit launchUnitId */
            launchUnitId?: (number|null);

            /** WarActionUnitProduceUnit extraData */
            extraData?: (CommonProto.WarAction.WarActionUnitProduceUnit.IExtraDataForUnitProduceUnit|null);
        }

        /** Represents a WarActionUnitProduceUnit. */
        class WarActionUnitProduceUnit implements IWarActionUnitProduceUnit {

            /**
             * Constructs a new WarActionUnitProduceUnit.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarAction.IWarActionUnitProduceUnit);

            /** WarActionUnitProduceUnit path. */
            public path?: (CommonProto.Structure.IMovePath|null);

            /** WarActionUnitProduceUnit launchUnitId. */
            public launchUnitId: number;

            /** WarActionUnitProduceUnit extraData. */
            public extraData?: (CommonProto.WarAction.WarActionUnitProduceUnit.IExtraDataForUnitProduceUnit|null);

            /**
             * Creates a new WarActionUnitProduceUnit instance using the specified properties.
             * @param [properties] Properties to set
             * @returns WarActionUnitProduceUnit instance
             */
            public static create(properties?: CommonProto.WarAction.IWarActionUnitProduceUnit): CommonProto.WarAction.WarActionUnitProduceUnit;

            /**
             * Encodes the specified WarActionUnitProduceUnit message. Does not implicitly {@link CommonProto.WarAction.WarActionUnitProduceUnit.verify|verify} messages.
             * @param message WarActionUnitProduceUnit message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarAction.IWarActionUnitProduceUnit, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified WarActionUnitProduceUnit message, length delimited. Does not implicitly {@link CommonProto.WarAction.WarActionUnitProduceUnit.verify|verify} messages.
             * @param message WarActionUnitProduceUnit message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarAction.IWarActionUnitProduceUnit, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a WarActionUnitProduceUnit message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns WarActionUnitProduceUnit
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarAction.WarActionUnitProduceUnit;

            /**
             * Decodes a WarActionUnitProduceUnit message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns WarActionUnitProduceUnit
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarAction.WarActionUnitProduceUnit;

            /**
             * Verifies a WarActionUnitProduceUnit message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a WarActionUnitProduceUnit message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns WarActionUnitProduceUnit
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarAction.WarActionUnitProduceUnit;

            /**
             * Creates a plain object from a WarActionUnitProduceUnit message. Also converts values to other types if specified.
             * @param message WarActionUnitProduceUnit
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarAction.WarActionUnitProduceUnit, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this WarActionUnitProduceUnit to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace WarActionUnitProduceUnit {

            /** Properties of an ExtraDataForUnitProduceUnit. */
            interface IExtraDataForUnitProduceUnit {

                /** ExtraDataForUnitProduceUnit commonExtraData */
                commonExtraData?: (CommonProto.Structure.ICommonExtraDataForWarAction|null);
            }

            /** Represents an ExtraDataForUnitProduceUnit. */
            class ExtraDataForUnitProduceUnit implements IExtraDataForUnitProduceUnit {

                /**
                 * Constructs a new ExtraDataForUnitProduceUnit.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.WarAction.WarActionUnitProduceUnit.IExtraDataForUnitProduceUnit);

                /** ExtraDataForUnitProduceUnit commonExtraData. */
                public commonExtraData?: (CommonProto.Structure.ICommonExtraDataForWarAction|null);

                /**
                 * Creates a new ExtraDataForUnitProduceUnit instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ExtraDataForUnitProduceUnit instance
                 */
                public static create(properties?: CommonProto.WarAction.WarActionUnitProduceUnit.IExtraDataForUnitProduceUnit): CommonProto.WarAction.WarActionUnitProduceUnit.ExtraDataForUnitProduceUnit;

                /**
                 * Encodes the specified ExtraDataForUnitProduceUnit message. Does not implicitly {@link CommonProto.WarAction.WarActionUnitProduceUnit.ExtraDataForUnitProduceUnit.verify|verify} messages.
                 * @param message ExtraDataForUnitProduceUnit message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.WarAction.WarActionUnitProduceUnit.IExtraDataForUnitProduceUnit, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified ExtraDataForUnitProduceUnit message, length delimited. Does not implicitly {@link CommonProto.WarAction.WarActionUnitProduceUnit.ExtraDataForUnitProduceUnit.verify|verify} messages.
                 * @param message ExtraDataForUnitProduceUnit message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.WarAction.WarActionUnitProduceUnit.IExtraDataForUnitProduceUnit, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes an ExtraDataForUnitProduceUnit message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ExtraDataForUnitProduceUnit
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarAction.WarActionUnitProduceUnit.ExtraDataForUnitProduceUnit;

                /**
                 * Decodes an ExtraDataForUnitProduceUnit message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ExtraDataForUnitProduceUnit
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarAction.WarActionUnitProduceUnit.ExtraDataForUnitProduceUnit;

                /**
                 * Verifies an ExtraDataForUnitProduceUnit message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an ExtraDataForUnitProduceUnit message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ExtraDataForUnitProduceUnit
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.WarAction.WarActionUnitProduceUnit.ExtraDataForUnitProduceUnit;

                /**
                 * Creates a plain object from an ExtraDataForUnitProduceUnit message. Also converts values to other types if specified.
                 * @param message ExtraDataForUnitProduceUnit
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.WarAction.WarActionUnitProduceUnit.ExtraDataForUnitProduceUnit, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ExtraDataForUnitProduceUnit to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a WarActionUnitSupplyUnit. */
        interface IWarActionUnitSupplyUnit {

            /** WarActionUnitSupplyUnit path */
            path?: (CommonProto.Structure.IMovePath|null);

            /** WarActionUnitSupplyUnit launchUnitId */
            launchUnitId?: (number|null);

            /** WarActionUnitSupplyUnit extraData */
            extraData?: (CommonProto.WarAction.WarActionUnitSupplyUnit.IExtraDataForUnitSupplyUnit|null);
        }

        /** Represents a WarActionUnitSupplyUnit. */
        class WarActionUnitSupplyUnit implements IWarActionUnitSupplyUnit {

            /**
             * Constructs a new WarActionUnitSupplyUnit.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarAction.IWarActionUnitSupplyUnit);

            /** WarActionUnitSupplyUnit path. */
            public path?: (CommonProto.Structure.IMovePath|null);

            /** WarActionUnitSupplyUnit launchUnitId. */
            public launchUnitId: number;

            /** WarActionUnitSupplyUnit extraData. */
            public extraData?: (CommonProto.WarAction.WarActionUnitSupplyUnit.IExtraDataForUnitSupplyUnit|null);

            /**
             * Creates a new WarActionUnitSupplyUnit instance using the specified properties.
             * @param [properties] Properties to set
             * @returns WarActionUnitSupplyUnit instance
             */
            public static create(properties?: CommonProto.WarAction.IWarActionUnitSupplyUnit): CommonProto.WarAction.WarActionUnitSupplyUnit;

            /**
             * Encodes the specified WarActionUnitSupplyUnit message. Does not implicitly {@link CommonProto.WarAction.WarActionUnitSupplyUnit.verify|verify} messages.
             * @param message WarActionUnitSupplyUnit message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarAction.IWarActionUnitSupplyUnit, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified WarActionUnitSupplyUnit message, length delimited. Does not implicitly {@link CommonProto.WarAction.WarActionUnitSupplyUnit.verify|verify} messages.
             * @param message WarActionUnitSupplyUnit message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarAction.IWarActionUnitSupplyUnit, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a WarActionUnitSupplyUnit message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns WarActionUnitSupplyUnit
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarAction.WarActionUnitSupplyUnit;

            /**
             * Decodes a WarActionUnitSupplyUnit message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns WarActionUnitSupplyUnit
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarAction.WarActionUnitSupplyUnit;

            /**
             * Verifies a WarActionUnitSupplyUnit message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a WarActionUnitSupplyUnit message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns WarActionUnitSupplyUnit
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarAction.WarActionUnitSupplyUnit;

            /**
             * Creates a plain object from a WarActionUnitSupplyUnit message. Also converts values to other types if specified.
             * @param message WarActionUnitSupplyUnit
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarAction.WarActionUnitSupplyUnit, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this WarActionUnitSupplyUnit to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace WarActionUnitSupplyUnit {

            /** Properties of an ExtraDataForUnitSupplyUnit. */
            interface IExtraDataForUnitSupplyUnit {

                /** ExtraDataForUnitSupplyUnit commonExtraData */
                commonExtraData?: (CommonProto.Structure.ICommonExtraDataForWarAction|null);
            }

            /** Represents an ExtraDataForUnitSupplyUnit. */
            class ExtraDataForUnitSupplyUnit implements IExtraDataForUnitSupplyUnit {

                /**
                 * Constructs a new ExtraDataForUnitSupplyUnit.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.WarAction.WarActionUnitSupplyUnit.IExtraDataForUnitSupplyUnit);

                /** ExtraDataForUnitSupplyUnit commonExtraData. */
                public commonExtraData?: (CommonProto.Structure.ICommonExtraDataForWarAction|null);

                /**
                 * Creates a new ExtraDataForUnitSupplyUnit instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ExtraDataForUnitSupplyUnit instance
                 */
                public static create(properties?: CommonProto.WarAction.WarActionUnitSupplyUnit.IExtraDataForUnitSupplyUnit): CommonProto.WarAction.WarActionUnitSupplyUnit.ExtraDataForUnitSupplyUnit;

                /**
                 * Encodes the specified ExtraDataForUnitSupplyUnit message. Does not implicitly {@link CommonProto.WarAction.WarActionUnitSupplyUnit.ExtraDataForUnitSupplyUnit.verify|verify} messages.
                 * @param message ExtraDataForUnitSupplyUnit message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.WarAction.WarActionUnitSupplyUnit.IExtraDataForUnitSupplyUnit, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified ExtraDataForUnitSupplyUnit message, length delimited. Does not implicitly {@link CommonProto.WarAction.WarActionUnitSupplyUnit.ExtraDataForUnitSupplyUnit.verify|verify} messages.
                 * @param message ExtraDataForUnitSupplyUnit message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.WarAction.WarActionUnitSupplyUnit.IExtraDataForUnitSupplyUnit, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes an ExtraDataForUnitSupplyUnit message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ExtraDataForUnitSupplyUnit
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarAction.WarActionUnitSupplyUnit.ExtraDataForUnitSupplyUnit;

                /**
                 * Decodes an ExtraDataForUnitSupplyUnit message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ExtraDataForUnitSupplyUnit
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarAction.WarActionUnitSupplyUnit.ExtraDataForUnitSupplyUnit;

                /**
                 * Verifies an ExtraDataForUnitSupplyUnit message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an ExtraDataForUnitSupplyUnit message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ExtraDataForUnitSupplyUnit
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.WarAction.WarActionUnitSupplyUnit.ExtraDataForUnitSupplyUnit;

                /**
                 * Creates a plain object from an ExtraDataForUnitSupplyUnit message. Also converts values to other types if specified.
                 * @param message ExtraDataForUnitSupplyUnit
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.WarAction.WarActionUnitSupplyUnit.ExtraDataForUnitSupplyUnit, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ExtraDataForUnitSupplyUnit to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a WarActionUnitLoadCo. */
        interface IWarActionUnitLoadCo {

            /** WarActionUnitLoadCo path */
            path?: (CommonProto.Structure.IMovePath|null);

            /** WarActionUnitLoadCo launchUnitId */
            launchUnitId?: (number|null);

            /** WarActionUnitLoadCo extraData */
            extraData?: (CommonProto.WarAction.WarActionUnitLoadCo.IExtraDataForUnitLoadCo|null);
        }

        /** Represents a WarActionUnitLoadCo. */
        class WarActionUnitLoadCo implements IWarActionUnitLoadCo {

            /**
             * Constructs a new WarActionUnitLoadCo.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarAction.IWarActionUnitLoadCo);

            /** WarActionUnitLoadCo path. */
            public path?: (CommonProto.Structure.IMovePath|null);

            /** WarActionUnitLoadCo launchUnitId. */
            public launchUnitId: number;

            /** WarActionUnitLoadCo extraData. */
            public extraData?: (CommonProto.WarAction.WarActionUnitLoadCo.IExtraDataForUnitLoadCo|null);

            /**
             * Creates a new WarActionUnitLoadCo instance using the specified properties.
             * @param [properties] Properties to set
             * @returns WarActionUnitLoadCo instance
             */
            public static create(properties?: CommonProto.WarAction.IWarActionUnitLoadCo): CommonProto.WarAction.WarActionUnitLoadCo;

            /**
             * Encodes the specified WarActionUnitLoadCo message. Does not implicitly {@link CommonProto.WarAction.WarActionUnitLoadCo.verify|verify} messages.
             * @param message WarActionUnitLoadCo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarAction.IWarActionUnitLoadCo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified WarActionUnitLoadCo message, length delimited. Does not implicitly {@link CommonProto.WarAction.WarActionUnitLoadCo.verify|verify} messages.
             * @param message WarActionUnitLoadCo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarAction.IWarActionUnitLoadCo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a WarActionUnitLoadCo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns WarActionUnitLoadCo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarAction.WarActionUnitLoadCo;

            /**
             * Decodes a WarActionUnitLoadCo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns WarActionUnitLoadCo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarAction.WarActionUnitLoadCo;

            /**
             * Verifies a WarActionUnitLoadCo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a WarActionUnitLoadCo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns WarActionUnitLoadCo
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarAction.WarActionUnitLoadCo;

            /**
             * Creates a plain object from a WarActionUnitLoadCo message. Also converts values to other types if specified.
             * @param message WarActionUnitLoadCo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarAction.WarActionUnitLoadCo, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this WarActionUnitLoadCo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace WarActionUnitLoadCo {

            /** Properties of an ExtraDataForUnitLoadCo. */
            interface IExtraDataForUnitLoadCo {

                /** ExtraDataForUnitLoadCo commonExtraData */
                commonExtraData?: (CommonProto.Structure.ICommonExtraDataForWarAction|null);
            }

            /** Represents an ExtraDataForUnitLoadCo. */
            class ExtraDataForUnitLoadCo implements IExtraDataForUnitLoadCo {

                /**
                 * Constructs a new ExtraDataForUnitLoadCo.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.WarAction.WarActionUnitLoadCo.IExtraDataForUnitLoadCo);

                /** ExtraDataForUnitLoadCo commonExtraData. */
                public commonExtraData?: (CommonProto.Structure.ICommonExtraDataForWarAction|null);

                /**
                 * Creates a new ExtraDataForUnitLoadCo instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ExtraDataForUnitLoadCo instance
                 */
                public static create(properties?: CommonProto.WarAction.WarActionUnitLoadCo.IExtraDataForUnitLoadCo): CommonProto.WarAction.WarActionUnitLoadCo.ExtraDataForUnitLoadCo;

                /**
                 * Encodes the specified ExtraDataForUnitLoadCo message. Does not implicitly {@link CommonProto.WarAction.WarActionUnitLoadCo.ExtraDataForUnitLoadCo.verify|verify} messages.
                 * @param message ExtraDataForUnitLoadCo message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.WarAction.WarActionUnitLoadCo.IExtraDataForUnitLoadCo, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified ExtraDataForUnitLoadCo message, length delimited. Does not implicitly {@link CommonProto.WarAction.WarActionUnitLoadCo.ExtraDataForUnitLoadCo.verify|verify} messages.
                 * @param message ExtraDataForUnitLoadCo message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.WarAction.WarActionUnitLoadCo.IExtraDataForUnitLoadCo, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes an ExtraDataForUnitLoadCo message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ExtraDataForUnitLoadCo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarAction.WarActionUnitLoadCo.ExtraDataForUnitLoadCo;

                /**
                 * Decodes an ExtraDataForUnitLoadCo message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ExtraDataForUnitLoadCo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarAction.WarActionUnitLoadCo.ExtraDataForUnitLoadCo;

                /**
                 * Verifies an ExtraDataForUnitLoadCo message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an ExtraDataForUnitLoadCo message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ExtraDataForUnitLoadCo
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.WarAction.WarActionUnitLoadCo.ExtraDataForUnitLoadCo;

                /**
                 * Creates a plain object from an ExtraDataForUnitLoadCo message. Also converts values to other types if specified.
                 * @param message ExtraDataForUnitLoadCo
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.WarAction.WarActionUnitLoadCo.ExtraDataForUnitLoadCo, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ExtraDataForUnitLoadCo to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a WarActionUnitUseCoSkill. */
        interface IWarActionUnitUseCoSkill {

            /** WarActionUnitUseCoSkill path */
            path?: (CommonProto.Structure.IMovePath|null);

            /** WarActionUnitUseCoSkill launchUnitId */
            launchUnitId?: (number|null);

            /** WarActionUnitUseCoSkill skillType */
            skillType?: (number|null);

            /** WarActionUnitUseCoSkill extraData */
            extraData?: (CommonProto.WarAction.WarActionUnitUseCoSkill.IExtraDataForUnitUseCoSkill|null);
        }

        /** Represents a WarActionUnitUseCoSkill. */
        class WarActionUnitUseCoSkill implements IWarActionUnitUseCoSkill {

            /**
             * Constructs a new WarActionUnitUseCoSkill.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarAction.IWarActionUnitUseCoSkill);

            /** WarActionUnitUseCoSkill path. */
            public path?: (CommonProto.Structure.IMovePath|null);

            /** WarActionUnitUseCoSkill launchUnitId. */
            public launchUnitId: number;

            /** WarActionUnitUseCoSkill skillType. */
            public skillType: number;

            /** WarActionUnitUseCoSkill extraData. */
            public extraData?: (CommonProto.WarAction.WarActionUnitUseCoSkill.IExtraDataForUnitUseCoSkill|null);

            /**
             * Creates a new WarActionUnitUseCoSkill instance using the specified properties.
             * @param [properties] Properties to set
             * @returns WarActionUnitUseCoSkill instance
             */
            public static create(properties?: CommonProto.WarAction.IWarActionUnitUseCoSkill): CommonProto.WarAction.WarActionUnitUseCoSkill;

            /**
             * Encodes the specified WarActionUnitUseCoSkill message. Does not implicitly {@link CommonProto.WarAction.WarActionUnitUseCoSkill.verify|verify} messages.
             * @param message WarActionUnitUseCoSkill message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarAction.IWarActionUnitUseCoSkill, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified WarActionUnitUseCoSkill message, length delimited. Does not implicitly {@link CommonProto.WarAction.WarActionUnitUseCoSkill.verify|verify} messages.
             * @param message WarActionUnitUseCoSkill message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarAction.IWarActionUnitUseCoSkill, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a WarActionUnitUseCoSkill message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns WarActionUnitUseCoSkill
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarAction.WarActionUnitUseCoSkill;

            /**
             * Decodes a WarActionUnitUseCoSkill message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns WarActionUnitUseCoSkill
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarAction.WarActionUnitUseCoSkill;

            /**
             * Verifies a WarActionUnitUseCoSkill message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a WarActionUnitUseCoSkill message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns WarActionUnitUseCoSkill
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarAction.WarActionUnitUseCoSkill;

            /**
             * Creates a plain object from a WarActionUnitUseCoSkill message. Also converts values to other types if specified.
             * @param message WarActionUnitUseCoSkill
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarAction.WarActionUnitUseCoSkill, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this WarActionUnitUseCoSkill to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace WarActionUnitUseCoSkill {

            /** Properties of an ExtraDataForUnitUseCoSkill. */
            interface IExtraDataForUnitUseCoSkill {

                /** ExtraDataForUnitUseCoSkill commonExtraData */
                commonExtraData?: (CommonProto.Structure.ICommonExtraDataForWarAction|null);

                /** ExtraDataForUnitUseCoSkill skillType */
                skillType?: (number|null);

                /** ExtraDataForUnitUseCoSkill skillDataArray */
                skillDataArray?: (CommonProto.Structure.IDataForUseCoSkill[]|null);
            }

            /** Represents an ExtraDataForUnitUseCoSkill. */
            class ExtraDataForUnitUseCoSkill implements IExtraDataForUnitUseCoSkill {

                /**
                 * Constructs a new ExtraDataForUnitUseCoSkill.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.WarAction.WarActionUnitUseCoSkill.IExtraDataForUnitUseCoSkill);

                /** ExtraDataForUnitUseCoSkill commonExtraData. */
                public commonExtraData?: (CommonProto.Structure.ICommonExtraDataForWarAction|null);

                /** ExtraDataForUnitUseCoSkill skillType. */
                public skillType: number;

                /** ExtraDataForUnitUseCoSkill skillDataArray. */
                public skillDataArray: CommonProto.Structure.IDataForUseCoSkill[];

                /**
                 * Creates a new ExtraDataForUnitUseCoSkill instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ExtraDataForUnitUseCoSkill instance
                 */
                public static create(properties?: CommonProto.WarAction.WarActionUnitUseCoSkill.IExtraDataForUnitUseCoSkill): CommonProto.WarAction.WarActionUnitUseCoSkill.ExtraDataForUnitUseCoSkill;

                /**
                 * Encodes the specified ExtraDataForUnitUseCoSkill message. Does not implicitly {@link CommonProto.WarAction.WarActionUnitUseCoSkill.ExtraDataForUnitUseCoSkill.verify|verify} messages.
                 * @param message ExtraDataForUnitUseCoSkill message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.WarAction.WarActionUnitUseCoSkill.IExtraDataForUnitUseCoSkill, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified ExtraDataForUnitUseCoSkill message, length delimited. Does not implicitly {@link CommonProto.WarAction.WarActionUnitUseCoSkill.ExtraDataForUnitUseCoSkill.verify|verify} messages.
                 * @param message ExtraDataForUnitUseCoSkill message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.WarAction.WarActionUnitUseCoSkill.IExtraDataForUnitUseCoSkill, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes an ExtraDataForUnitUseCoSkill message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ExtraDataForUnitUseCoSkill
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarAction.WarActionUnitUseCoSkill.ExtraDataForUnitUseCoSkill;

                /**
                 * Decodes an ExtraDataForUnitUseCoSkill message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ExtraDataForUnitUseCoSkill
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarAction.WarActionUnitUseCoSkill.ExtraDataForUnitUseCoSkill;

                /**
                 * Verifies an ExtraDataForUnitUseCoSkill message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an ExtraDataForUnitUseCoSkill message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ExtraDataForUnitUseCoSkill
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.WarAction.WarActionUnitUseCoSkill.ExtraDataForUnitUseCoSkill;

                /**
                 * Creates a plain object from an ExtraDataForUnitUseCoSkill message. Also converts values to other types if specified.
                 * @param message ExtraDataForUnitUseCoSkill
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.WarAction.WarActionUnitUseCoSkill.ExtraDataForUnitUseCoSkill, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ExtraDataForUnitUseCoSkill to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a WarActionContainer. */
        interface IWarActionContainer {

            /** WarActionContainer actionId */
            actionId?: (number|null);

            /** WarActionContainer WarActionSystemBeginTurn */
            WarActionSystemBeginTurn?: (CommonProto.WarAction.IWarActionSystemBeginTurn|null);

            /** WarActionContainer WarActionSystemCallWarEvent */
            WarActionSystemCallWarEvent?: (CommonProto.WarAction.IWarActionSystemCallWarEvent|null);

            /** WarActionContainer WarActionSystemDestroyPlayerForce */
            WarActionSystemDestroyPlayerForce?: (CommonProto.WarAction.IWarActionSystemDestroyPlayerForce|null);

            /** WarActionContainer WarActionSystemEndWar */
            WarActionSystemEndWar?: (CommonProto.WarAction.IWarActionSystemEndWar|null);

            /** WarActionContainer WarActionSystemEndTurn */
            WarActionSystemEndTurn?: (CommonProto.WarAction.IWarActionSystemEndTurn|null);

            /** WarActionContainer WarActionSystemHandleBootPlayer */
            WarActionSystemHandleBootPlayer?: (CommonProto.WarAction.IWarActionSystemHandleBootPlayer|null);

            /** WarActionContainer WarActionSystemVoteForDraw */
            WarActionSystemVoteForDraw?: (CommonProto.WarAction.IWarActionSystemVoteForDraw|null);

            /** WarActionContainer WarActionPlayerEndTurn */
            WarActionPlayerEndTurn?: (CommonProto.WarAction.IWarActionPlayerEndTurn|null);

            /** WarActionContainer WarActionPlayerSurrender */
            WarActionPlayerSurrender?: (CommonProto.WarAction.IWarActionPlayerSurrender|null);

            /** WarActionContainer WarActionPlayerProduceUnit */
            WarActionPlayerProduceUnit?: (CommonProto.WarAction.IWarActionPlayerProduceUnit|null);

            /** WarActionContainer WarActionPlayerDeleteUnit */
            WarActionPlayerDeleteUnit?: (CommonProto.WarAction.IWarActionPlayerDeleteUnit|null);

            /** WarActionContainer WarActionPlayerVoteForDraw */
            WarActionPlayerVoteForDraw?: (CommonProto.WarAction.IWarActionPlayerVoteForDraw|null);

            /** WarActionContainer WarActionPlayerUseCoSkill */
            WarActionPlayerUseCoSkill?: (CommonProto.WarAction.IWarActionPlayerUseCoSkill|null);

            /** WarActionContainer WarActionUnitWait */
            WarActionUnitWait?: (CommonProto.WarAction.IWarActionUnitWait|null);

            /** WarActionContainer WarActionUnitBeLoaded */
            WarActionUnitBeLoaded?: (CommonProto.WarAction.IWarActionUnitBeLoaded|null);

            /** WarActionContainer WarActionUnitCaptureTile */
            WarActionUnitCaptureTile?: (CommonProto.WarAction.IWarActionUnitCaptureTile|null);

            /** WarActionContainer WarActionUnitAttackTile */
            WarActionUnitAttackTile?: (CommonProto.WarAction.IWarActionUnitAttackTile|null);

            /** WarActionContainer WarActionUnitAttackUnit */
            WarActionUnitAttackUnit?: (CommonProto.WarAction.IWarActionUnitAttackUnit|null);

            /** WarActionContainer WarActionUnitDropUnit */
            WarActionUnitDropUnit?: (CommonProto.WarAction.IWarActionUnitDropUnit|null);

            /** WarActionContainer WarActionUnitBuildTile */
            WarActionUnitBuildTile?: (CommonProto.WarAction.IWarActionUnitBuildTile|null);

            /** WarActionContainer WarActionUnitDive */
            WarActionUnitDive?: (CommonProto.WarAction.IWarActionUnitDive|null);

            /** WarActionContainer WarActionUnitSurface */
            WarActionUnitSurface?: (CommonProto.WarAction.IWarActionUnitSurface|null);

            /** WarActionContainer WarActionUnitJoinUnit */
            WarActionUnitJoinUnit?: (CommonProto.WarAction.IWarActionUnitJoinUnit|null);

            /** WarActionContainer WarActionUnitLaunchFlare */
            WarActionUnitLaunchFlare?: (CommonProto.WarAction.IWarActionUnitLaunchFlare|null);

            /** WarActionContainer WarActionUnitLaunchSilo */
            WarActionUnitLaunchSilo?: (CommonProto.WarAction.IWarActionUnitLaunchSilo|null);

            /** WarActionContainer WarActionUnitProduceUnit */
            WarActionUnitProduceUnit?: (CommonProto.WarAction.IWarActionUnitProduceUnit|null);

            /** WarActionContainer WarActionUnitSupplyUnit */
            WarActionUnitSupplyUnit?: (CommonProto.WarAction.IWarActionUnitSupplyUnit|null);

            /** WarActionContainer WarActionUnitLoadCo */
            WarActionUnitLoadCo?: (CommonProto.WarAction.IWarActionUnitLoadCo|null);

            /** WarActionContainer WarActionUnitUseCoSkill */
            WarActionUnitUseCoSkill?: (CommonProto.WarAction.IWarActionUnitUseCoSkill|null);
        }

        /** Represents a WarActionContainer. */
        class WarActionContainer implements IWarActionContainer {

            /**
             * Constructs a new WarActionContainer.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.WarAction.IWarActionContainer);

            /** WarActionContainer actionId. */
            public actionId: number;

            /** WarActionContainer WarActionSystemBeginTurn. */
            public WarActionSystemBeginTurn?: (CommonProto.WarAction.IWarActionSystemBeginTurn|null);

            /** WarActionContainer WarActionSystemCallWarEvent. */
            public WarActionSystemCallWarEvent?: (CommonProto.WarAction.IWarActionSystemCallWarEvent|null);

            /** WarActionContainer WarActionSystemDestroyPlayerForce. */
            public WarActionSystemDestroyPlayerForce?: (CommonProto.WarAction.IWarActionSystemDestroyPlayerForce|null);

            /** WarActionContainer WarActionSystemEndWar. */
            public WarActionSystemEndWar?: (CommonProto.WarAction.IWarActionSystemEndWar|null);

            /** WarActionContainer WarActionSystemEndTurn. */
            public WarActionSystemEndTurn?: (CommonProto.WarAction.IWarActionSystemEndTurn|null);

            /** WarActionContainer WarActionSystemHandleBootPlayer. */
            public WarActionSystemHandleBootPlayer?: (CommonProto.WarAction.IWarActionSystemHandleBootPlayer|null);

            /** WarActionContainer WarActionSystemVoteForDraw. */
            public WarActionSystemVoteForDraw?: (CommonProto.WarAction.IWarActionSystemVoteForDraw|null);

            /** WarActionContainer WarActionPlayerEndTurn. */
            public WarActionPlayerEndTurn?: (CommonProto.WarAction.IWarActionPlayerEndTurn|null);

            /** WarActionContainer WarActionPlayerSurrender. */
            public WarActionPlayerSurrender?: (CommonProto.WarAction.IWarActionPlayerSurrender|null);

            /** WarActionContainer WarActionPlayerProduceUnit. */
            public WarActionPlayerProduceUnit?: (CommonProto.WarAction.IWarActionPlayerProduceUnit|null);

            /** WarActionContainer WarActionPlayerDeleteUnit. */
            public WarActionPlayerDeleteUnit?: (CommonProto.WarAction.IWarActionPlayerDeleteUnit|null);

            /** WarActionContainer WarActionPlayerVoteForDraw. */
            public WarActionPlayerVoteForDraw?: (CommonProto.WarAction.IWarActionPlayerVoteForDraw|null);

            /** WarActionContainer WarActionPlayerUseCoSkill. */
            public WarActionPlayerUseCoSkill?: (CommonProto.WarAction.IWarActionPlayerUseCoSkill|null);

            /** WarActionContainer WarActionUnitWait. */
            public WarActionUnitWait?: (CommonProto.WarAction.IWarActionUnitWait|null);

            /** WarActionContainer WarActionUnitBeLoaded. */
            public WarActionUnitBeLoaded?: (CommonProto.WarAction.IWarActionUnitBeLoaded|null);

            /** WarActionContainer WarActionUnitCaptureTile. */
            public WarActionUnitCaptureTile?: (CommonProto.WarAction.IWarActionUnitCaptureTile|null);

            /** WarActionContainer WarActionUnitAttackTile. */
            public WarActionUnitAttackTile?: (CommonProto.WarAction.IWarActionUnitAttackTile|null);

            /** WarActionContainer WarActionUnitAttackUnit. */
            public WarActionUnitAttackUnit?: (CommonProto.WarAction.IWarActionUnitAttackUnit|null);

            /** WarActionContainer WarActionUnitDropUnit. */
            public WarActionUnitDropUnit?: (CommonProto.WarAction.IWarActionUnitDropUnit|null);

            /** WarActionContainer WarActionUnitBuildTile. */
            public WarActionUnitBuildTile?: (CommonProto.WarAction.IWarActionUnitBuildTile|null);

            /** WarActionContainer WarActionUnitDive. */
            public WarActionUnitDive?: (CommonProto.WarAction.IWarActionUnitDive|null);

            /** WarActionContainer WarActionUnitSurface. */
            public WarActionUnitSurface?: (CommonProto.WarAction.IWarActionUnitSurface|null);

            /** WarActionContainer WarActionUnitJoinUnit. */
            public WarActionUnitJoinUnit?: (CommonProto.WarAction.IWarActionUnitJoinUnit|null);

            /** WarActionContainer WarActionUnitLaunchFlare. */
            public WarActionUnitLaunchFlare?: (CommonProto.WarAction.IWarActionUnitLaunchFlare|null);

            /** WarActionContainer WarActionUnitLaunchSilo. */
            public WarActionUnitLaunchSilo?: (CommonProto.WarAction.IWarActionUnitLaunchSilo|null);

            /** WarActionContainer WarActionUnitProduceUnit. */
            public WarActionUnitProduceUnit?: (CommonProto.WarAction.IWarActionUnitProduceUnit|null);

            /** WarActionContainer WarActionUnitSupplyUnit. */
            public WarActionUnitSupplyUnit?: (CommonProto.WarAction.IWarActionUnitSupplyUnit|null);

            /** WarActionContainer WarActionUnitLoadCo. */
            public WarActionUnitLoadCo?: (CommonProto.WarAction.IWarActionUnitLoadCo|null);

            /** WarActionContainer WarActionUnitUseCoSkill. */
            public WarActionUnitUseCoSkill?: (CommonProto.WarAction.IWarActionUnitUseCoSkill|null);

            /**
             * Creates a new WarActionContainer instance using the specified properties.
             * @param [properties] Properties to set
             * @returns WarActionContainer instance
             */
            public static create(properties?: CommonProto.WarAction.IWarActionContainer): CommonProto.WarAction.WarActionContainer;

            /**
             * Encodes the specified WarActionContainer message. Does not implicitly {@link CommonProto.WarAction.WarActionContainer.verify|verify} messages.
             * @param message WarActionContainer message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.WarAction.IWarActionContainer, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified WarActionContainer message, length delimited. Does not implicitly {@link CommonProto.WarAction.WarActionContainer.verify|verify} messages.
             * @param message WarActionContainer message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.WarAction.IWarActionContainer, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a WarActionContainer message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns WarActionContainer
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.WarAction.WarActionContainer;

            /**
             * Decodes a WarActionContainer message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns WarActionContainer
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.WarAction.WarActionContainer;

            /**
             * Verifies a WarActionContainer message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a WarActionContainer message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns WarActionContainer
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.WarAction.WarActionContainer;

            /**
             * Creates a plain object from a WarActionContainer message. Also converts values to other types if specified.
             * @param message WarActionContainer
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.WarAction.WarActionContainer, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this WarActionContainer to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a Broadcast. */
    interface IBroadcast {
    }

    /** Represents a Broadcast. */
    class Broadcast implements IBroadcast {

        /**
         * Constructs a new Broadcast.
         * @param [properties] Properties to set
         */
        constructor(properties?: CommonProto.IBroadcast);

        /**
         * Creates a new Broadcast instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Broadcast instance
         */
        public static create(properties?: CommonProto.IBroadcast): CommonProto.Broadcast;

        /**
         * Encodes the specified Broadcast message. Does not implicitly {@link CommonProto.Broadcast.verify|verify} messages.
         * @param message Broadcast message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: CommonProto.IBroadcast, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified Broadcast message, length delimited. Does not implicitly {@link CommonProto.Broadcast.verify|verify} messages.
         * @param message Broadcast message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: CommonProto.IBroadcast, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a Broadcast message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Broadcast
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.Broadcast;

        /**
         * Decodes a Broadcast message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Broadcast
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.Broadcast;

        /**
         * Verifies a Broadcast message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Broadcast message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Broadcast
         */
        public static fromObject(object: { [k: string]: any }): CommonProto.Broadcast;

        /**
         * Creates a plain object from a Broadcast message. Also converts values to other types if specified.
         * @param message Broadcast
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: CommonProto.Broadcast, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Broadcast to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace Broadcast {

        /** Properties of a BroadcastMessage. */
        interface IBroadcastMessage {

            /** BroadcastMessage messageId */
            messageId?: (number|null);

            /** BroadcastMessage textList */
            textList?: (CommonProto.Structure.ILanguageText[]|null);

            /** BroadcastMessage startTime */
            startTime?: (number|null);

            /** BroadcastMessage endTime */
            endTime?: (number|null);
        }

        /** Represents a BroadcastMessage. */
        class BroadcastMessage implements IBroadcastMessage {

            /**
             * Constructs a new BroadcastMessage.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.Broadcast.IBroadcastMessage);

            /** BroadcastMessage messageId. */
            public messageId: number;

            /** BroadcastMessage textList. */
            public textList: CommonProto.Structure.ILanguageText[];

            /** BroadcastMessage startTime. */
            public startTime: number;

            /** BroadcastMessage endTime. */
            public endTime: number;

            /**
             * Creates a new BroadcastMessage instance using the specified properties.
             * @param [properties] Properties to set
             * @returns BroadcastMessage instance
             */
            public static create(properties?: CommonProto.Broadcast.IBroadcastMessage): CommonProto.Broadcast.BroadcastMessage;

            /**
             * Encodes the specified BroadcastMessage message. Does not implicitly {@link CommonProto.Broadcast.BroadcastMessage.verify|verify} messages.
             * @param message BroadcastMessage message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.Broadcast.IBroadcastMessage, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified BroadcastMessage message, length delimited. Does not implicitly {@link CommonProto.Broadcast.BroadcastMessage.verify|verify} messages.
             * @param message BroadcastMessage message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.Broadcast.IBroadcastMessage, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a BroadcastMessage message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns BroadcastMessage
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.Broadcast.BroadcastMessage;

            /**
             * Decodes a BroadcastMessage message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns BroadcastMessage
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.Broadcast.BroadcastMessage;

            /**
             * Verifies a BroadcastMessage message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a BroadcastMessage message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns BroadcastMessage
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.Broadcast.BroadcastMessage;

            /**
             * Creates a plain object from a BroadcastMessage message. Also converts values to other types if specified.
             * @param message BroadcastMessage
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.Broadcast.BroadcastMessage, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this BroadcastMessage to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a BroadcastInfo. */
        interface IBroadcastInfo {

            /** BroadcastInfo messageList */
            messageList?: (CommonProto.Broadcast.IBroadcastMessage[]|null);
        }

        /** Represents a BroadcastInfo. */
        class BroadcastInfo implements IBroadcastInfo {

            /**
             * Constructs a new BroadcastInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.Broadcast.IBroadcastInfo);

            /** BroadcastInfo messageList. */
            public messageList: CommonProto.Broadcast.IBroadcastMessage[];

            /**
             * Creates a new BroadcastInfo instance using the specified properties.
             * @param [properties] Properties to set
             * @returns BroadcastInfo instance
             */
            public static create(properties?: CommonProto.Broadcast.IBroadcastInfo): CommonProto.Broadcast.BroadcastInfo;

            /**
             * Encodes the specified BroadcastInfo message. Does not implicitly {@link CommonProto.Broadcast.BroadcastInfo.verify|verify} messages.
             * @param message BroadcastInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.Broadcast.IBroadcastInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified BroadcastInfo message, length delimited. Does not implicitly {@link CommonProto.Broadcast.BroadcastInfo.verify|verify} messages.
             * @param message BroadcastInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.Broadcast.IBroadcastInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a BroadcastInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns BroadcastInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.Broadcast.BroadcastInfo;

            /**
             * Decodes a BroadcastInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns BroadcastInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.Broadcast.BroadcastInfo;

            /**
             * Verifies a BroadcastInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a BroadcastInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns BroadcastInfo
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.Broadcast.BroadcastInfo;

            /**
             * Creates a plain object from a BroadcastInfo message. Also converts values to other types if specified.
             * @param message BroadcastInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.Broadcast.BroadcastInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this BroadcastInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a ChangeLog. */
    interface IChangeLog {
    }

    /** Represents a ChangeLog. */
    class ChangeLog implements IChangeLog {

        /**
         * Constructs a new ChangeLog.
         * @param [properties] Properties to set
         */
        constructor(properties?: CommonProto.IChangeLog);

        /**
         * Creates a new ChangeLog instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ChangeLog instance
         */
        public static create(properties?: CommonProto.IChangeLog): CommonProto.ChangeLog;

        /**
         * Encodes the specified ChangeLog message. Does not implicitly {@link CommonProto.ChangeLog.verify|verify} messages.
         * @param message ChangeLog message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: CommonProto.IChangeLog, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified ChangeLog message, length delimited. Does not implicitly {@link CommonProto.ChangeLog.verify|verify} messages.
         * @param message ChangeLog message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: CommonProto.IChangeLog, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a ChangeLog message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ChangeLog
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.ChangeLog;

        /**
         * Decodes a ChangeLog message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ChangeLog
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.ChangeLog;

        /**
         * Verifies a ChangeLog message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ChangeLog message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ChangeLog
         */
        public static fromObject(object: { [k: string]: any }): CommonProto.ChangeLog;

        /**
         * Creates a plain object from a ChangeLog message. Also converts values to other types if specified.
         * @param message ChangeLog
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: CommonProto.ChangeLog, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ChangeLog to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace ChangeLog {

        /** Properties of a ChangeLogMessage. */
        interface IChangeLogMessage {

            /** ChangeLogMessage messageId */
            messageId?: (number|null);

            /** ChangeLogMessage textList */
            textList?: (CommonProto.Structure.ILanguageText[]|null);

            /** ChangeLogMessage createTimestamp */
            createTimestamp?: (number|null);
        }

        /** Represents a ChangeLogMessage. */
        class ChangeLogMessage implements IChangeLogMessage {

            /**
             * Constructs a new ChangeLogMessage.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.ChangeLog.IChangeLogMessage);

            /** ChangeLogMessage messageId. */
            public messageId: number;

            /** ChangeLogMessage textList. */
            public textList: CommonProto.Structure.ILanguageText[];

            /** ChangeLogMessage createTimestamp. */
            public createTimestamp: number;

            /**
             * Creates a new ChangeLogMessage instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ChangeLogMessage instance
             */
            public static create(properties?: CommonProto.ChangeLog.IChangeLogMessage): CommonProto.ChangeLog.ChangeLogMessage;

            /**
             * Encodes the specified ChangeLogMessage message. Does not implicitly {@link CommonProto.ChangeLog.ChangeLogMessage.verify|verify} messages.
             * @param message ChangeLogMessage message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.ChangeLog.IChangeLogMessage, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified ChangeLogMessage message, length delimited. Does not implicitly {@link CommonProto.ChangeLog.ChangeLogMessage.verify|verify} messages.
             * @param message ChangeLogMessage message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.ChangeLog.IChangeLogMessage, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a ChangeLogMessage message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ChangeLogMessage
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.ChangeLog.ChangeLogMessage;

            /**
             * Decodes a ChangeLogMessage message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ChangeLogMessage
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.ChangeLog.ChangeLogMessage;

            /**
             * Verifies a ChangeLogMessage message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ChangeLogMessage message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ChangeLogMessage
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.ChangeLog.ChangeLogMessage;

            /**
             * Creates a plain object from a ChangeLogMessage message. Also converts values to other types if specified.
             * @param message ChangeLogMessage
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.ChangeLog.ChangeLogMessage, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ChangeLogMessage to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a ChangeLogInfo. */
        interface IChangeLogInfo {

            /** ChangeLogInfo messageList */
            messageList?: (CommonProto.ChangeLog.IChangeLogMessage[]|null);
        }

        /** Represents a ChangeLogInfo. */
        class ChangeLogInfo implements IChangeLogInfo {

            /**
             * Constructs a new ChangeLogInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.ChangeLog.IChangeLogInfo);

            /** ChangeLogInfo messageList. */
            public messageList: CommonProto.ChangeLog.IChangeLogMessage[];

            /**
             * Creates a new ChangeLogInfo instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ChangeLogInfo instance
             */
            public static create(properties?: CommonProto.ChangeLog.IChangeLogInfo): CommonProto.ChangeLog.ChangeLogInfo;

            /**
             * Encodes the specified ChangeLogInfo message. Does not implicitly {@link CommonProto.ChangeLog.ChangeLogInfo.verify|verify} messages.
             * @param message ChangeLogInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.ChangeLog.IChangeLogInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified ChangeLogInfo message, length delimited. Does not implicitly {@link CommonProto.ChangeLog.ChangeLogInfo.verify|verify} messages.
             * @param message ChangeLogInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.ChangeLog.IChangeLogInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a ChangeLogInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ChangeLogInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.ChangeLog.ChangeLogInfo;

            /**
             * Decodes a ChangeLogInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ChangeLogInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.ChangeLog.ChangeLogInfo;

            /**
             * Verifies a ChangeLogInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ChangeLogInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ChangeLogInfo
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.ChangeLog.ChangeLogInfo;

            /**
             * Creates a plain object from a ChangeLogInfo message. Also converts values to other types if specified.
             * @param message ChangeLogInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.ChangeLog.ChangeLogInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ChangeLogInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a Structure. */
    interface IStructure {
    }

    /** Represents a Structure. */
    class Structure implements IStructure {

        /**
         * Constructs a new Structure.
         * @param [properties] Properties to set
         */
        constructor(properties?: CommonProto.IStructure);

        /**
         * Creates a new Structure instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Structure instance
         */
        public static create(properties?: CommonProto.IStructure): CommonProto.Structure;

        /**
         * Encodes the specified Structure message. Does not implicitly {@link CommonProto.Structure.verify|verify} messages.
         * @param message Structure message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: CommonProto.IStructure, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified Structure message, length delimited. Does not implicitly {@link CommonProto.Structure.verify|verify} messages.
         * @param message Structure message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: CommonProto.IStructure, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a Structure message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Structure
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.Structure;

        /**
         * Decodes a Structure message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Structure
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.Structure;

        /**
         * Verifies a Structure message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Structure message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Structure
         */
        public static fromObject(object: { [k: string]: any }): CommonProto.Structure;

        /**
         * Creates a plain object from a Structure message. Also converts values to other types if specified.
         * @param message Structure
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: CommonProto.Structure, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Structure to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace Structure {

        /** Properties of a GridIndex. */
        interface IGridIndex {

            /** GridIndex x */
            x?: (number|null);

            /** GridIndex y */
            y?: (number|null);
        }

        /** Represents a GridIndex. */
        class GridIndex implements IGridIndex {

            /**
             * Constructs a new GridIndex.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.Structure.IGridIndex);

            /** GridIndex x. */
            public x: number;

            /** GridIndex y. */
            public y: number;

            /**
             * Creates a new GridIndex instance using the specified properties.
             * @param [properties] Properties to set
             * @returns GridIndex instance
             */
            public static create(properties?: CommonProto.Structure.IGridIndex): CommonProto.Structure.GridIndex;

            /**
             * Encodes the specified GridIndex message. Does not implicitly {@link CommonProto.Structure.GridIndex.verify|verify} messages.
             * @param message GridIndex message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.Structure.IGridIndex, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified GridIndex message, length delimited. Does not implicitly {@link CommonProto.Structure.GridIndex.verify|verify} messages.
             * @param message GridIndex message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.Structure.IGridIndex, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a GridIndex message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GridIndex
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.Structure.GridIndex;

            /**
             * Decodes a GridIndex message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns GridIndex
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.Structure.GridIndex;

            /**
             * Verifies a GridIndex message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a GridIndex message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns GridIndex
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.Structure.GridIndex;

            /**
             * Creates a plain object from a GridIndex message. Also converts values to other types if specified.
             * @param message GridIndex
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.Structure.GridIndex, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this GridIndex to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a GridIndexAndPathInfo. */
        interface IGridIndexAndPathInfo {

            /** GridIndexAndPathInfo gridIndex */
            gridIndex?: (CommonProto.Structure.IGridIndex|null);

            /** GridIndexAndPathInfo isVisible */
            isVisible?: (boolean|null);

            /** GridIndexAndPathInfo isBlocked */
            isBlocked?: (boolean|null);
        }

        /** Represents a GridIndexAndPathInfo. */
        class GridIndexAndPathInfo implements IGridIndexAndPathInfo {

            /**
             * Constructs a new GridIndexAndPathInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.Structure.IGridIndexAndPathInfo);

            /** GridIndexAndPathInfo gridIndex. */
            public gridIndex?: (CommonProto.Structure.IGridIndex|null);

            /** GridIndexAndPathInfo isVisible. */
            public isVisible: boolean;

            /** GridIndexAndPathInfo isBlocked. */
            public isBlocked: boolean;

            /**
             * Creates a new GridIndexAndPathInfo instance using the specified properties.
             * @param [properties] Properties to set
             * @returns GridIndexAndPathInfo instance
             */
            public static create(properties?: CommonProto.Structure.IGridIndexAndPathInfo): CommonProto.Structure.GridIndexAndPathInfo;

            /**
             * Encodes the specified GridIndexAndPathInfo message. Does not implicitly {@link CommonProto.Structure.GridIndexAndPathInfo.verify|verify} messages.
             * @param message GridIndexAndPathInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.Structure.IGridIndexAndPathInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified GridIndexAndPathInfo message, length delimited. Does not implicitly {@link CommonProto.Structure.GridIndexAndPathInfo.verify|verify} messages.
             * @param message GridIndexAndPathInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.Structure.IGridIndexAndPathInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a GridIndexAndPathInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GridIndexAndPathInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.Structure.GridIndexAndPathInfo;

            /**
             * Decodes a GridIndexAndPathInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns GridIndexAndPathInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.Structure.GridIndexAndPathInfo;

            /**
             * Verifies a GridIndexAndPathInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a GridIndexAndPathInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns GridIndexAndPathInfo
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.Structure.GridIndexAndPathInfo;

            /**
             * Creates a plain object from a GridIndexAndPathInfo message. Also converts values to other types if specified.
             * @param message GridIndexAndPathInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.Structure.GridIndexAndPathInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this GridIndexAndPathInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a MovePath. */
        interface IMovePath {

            /** MovePath nodes */
            nodes?: (CommonProto.Structure.IGridIndex[]|null);

            /** MovePath isBlocked */
            isBlocked?: (boolean|null);

            /** MovePath fuelConsumption */
            fuelConsumption?: (number|null);
        }

        /** Represents a MovePath. */
        class MovePath implements IMovePath {

            /**
             * Constructs a new MovePath.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.Structure.IMovePath);

            /** MovePath nodes. */
            public nodes: CommonProto.Structure.IGridIndex[];

            /** MovePath isBlocked. */
            public isBlocked: boolean;

            /** MovePath fuelConsumption. */
            public fuelConsumption: number;

            /**
             * Creates a new MovePath instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MovePath instance
             */
            public static create(properties?: CommonProto.Structure.IMovePath): CommonProto.Structure.MovePath;

            /**
             * Encodes the specified MovePath message. Does not implicitly {@link CommonProto.Structure.MovePath.verify|verify} messages.
             * @param message MovePath message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.Structure.IMovePath, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MovePath message, length delimited. Does not implicitly {@link CommonProto.Structure.MovePath.verify|verify} messages.
             * @param message MovePath message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.Structure.IMovePath, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MovePath message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MovePath
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.Structure.MovePath;

            /**
             * Decodes a MovePath message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MovePath
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.Structure.MovePath;

            /**
             * Verifies a MovePath message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MovePath message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MovePath
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.Structure.MovePath;

            /**
             * Creates a plain object from a MovePath message. Also converts values to other types if specified.
             * @param message MovePath
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.Structure.MovePath, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MovePath to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a MovingUnitAndPath. */
        interface IMovingUnitAndPath {

            /** MovingUnitAndPath unit */
            unit?: (CommonProto.WarSerialization.ISerialUnit|null);

            /** MovingUnitAndPath path */
            path?: (CommonProto.Structure.IGridIndexAndPathInfo[]|null);
        }

        /** Represents a MovingUnitAndPath. */
        class MovingUnitAndPath implements IMovingUnitAndPath {

            /**
             * Constructs a new MovingUnitAndPath.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.Structure.IMovingUnitAndPath);

            /** MovingUnitAndPath unit. */
            public unit?: (CommonProto.WarSerialization.ISerialUnit|null);

            /** MovingUnitAndPath path. */
            public path: CommonProto.Structure.IGridIndexAndPathInfo[];

            /**
             * Creates a new MovingUnitAndPath instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MovingUnitAndPath instance
             */
            public static create(properties?: CommonProto.Structure.IMovingUnitAndPath): CommonProto.Structure.MovingUnitAndPath;

            /**
             * Encodes the specified MovingUnitAndPath message. Does not implicitly {@link CommonProto.Structure.MovingUnitAndPath.verify|verify} messages.
             * @param message MovingUnitAndPath message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.Structure.IMovingUnitAndPath, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MovingUnitAndPath message, length delimited. Does not implicitly {@link CommonProto.Structure.MovingUnitAndPath.verify|verify} messages.
             * @param message MovingUnitAndPath message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.Structure.IMovingUnitAndPath, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MovingUnitAndPath message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MovingUnitAndPath
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.Structure.MovingUnitAndPath;

            /**
             * Decodes a MovingUnitAndPath message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MovingUnitAndPath
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.Structure.MovingUnitAndPath;

            /**
             * Verifies a MovingUnitAndPath message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MovingUnitAndPath message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MovingUnitAndPath
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.Structure.MovingUnitAndPath;

            /**
             * Creates a plain object from a MovingUnitAndPath message. Also converts values to other types if specified.
             * @param message MovingUnitAndPath
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.Structure.MovingUnitAndPath, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MovingUnitAndPath to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a DropDestination. */
        interface IDropDestination {

            /** DropDestination unitId */
            unitId?: (number|null);

            /** DropDestination gridIndex */
            gridIndex?: (CommonProto.Structure.IGridIndex|null);
        }

        /** Represents a DropDestination. */
        class DropDestination implements IDropDestination {

            /**
             * Constructs a new DropDestination.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.Structure.IDropDestination);

            /** DropDestination unitId. */
            public unitId: number;

            /** DropDestination gridIndex. */
            public gridIndex?: (CommonProto.Structure.IGridIndex|null);

            /**
             * Creates a new DropDestination instance using the specified properties.
             * @param [properties] Properties to set
             * @returns DropDestination instance
             */
            public static create(properties?: CommonProto.Structure.IDropDestination): CommonProto.Structure.DropDestination;

            /**
             * Encodes the specified DropDestination message. Does not implicitly {@link CommonProto.Structure.DropDestination.verify|verify} messages.
             * @param message DropDestination message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.Structure.IDropDestination, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified DropDestination message, length delimited. Does not implicitly {@link CommonProto.Structure.DropDestination.verify|verify} messages.
             * @param message DropDestination message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.Structure.IDropDestination, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a DropDestination message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns DropDestination
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.Structure.DropDestination;

            /**
             * Decodes a DropDestination message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns DropDestination
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.Structure.DropDestination;

            /**
             * Verifies a DropDestination message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a DropDestination message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns DropDestination
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.Structure.DropDestination;

            /**
             * Creates a plain object from a DropDestination message. Also converts values to other types if specified.
             * @param message DropDestination
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.Structure.DropDestination, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this DropDestination to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a SeedRandomState. */
        interface ISeedRandomState {

            /** SeedRandomState i */
            i?: (number|null);

            /** SeedRandomState j */
            j?: (number|null);

            /** SeedRandomState S */
            S?: (number[]|null);
        }

        /** Represents a SeedRandomState. */
        class SeedRandomState implements ISeedRandomState {

            /**
             * Constructs a new SeedRandomState.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.Structure.ISeedRandomState);

            /** SeedRandomState i. */
            public i: number;

            /** SeedRandomState j. */
            public j: number;

            /** SeedRandomState S. */
            public S: number[];

            /**
             * Creates a new SeedRandomState instance using the specified properties.
             * @param [properties] Properties to set
             * @returns SeedRandomState instance
             */
            public static create(properties?: CommonProto.Structure.ISeedRandomState): CommonProto.Structure.SeedRandomState;

            /**
             * Encodes the specified SeedRandomState message. Does not implicitly {@link CommonProto.Structure.SeedRandomState.verify|verify} messages.
             * @param message SeedRandomState message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.Structure.ISeedRandomState, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified SeedRandomState message, length delimited. Does not implicitly {@link CommonProto.Structure.SeedRandomState.verify|verify} messages.
             * @param message SeedRandomState message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.Structure.ISeedRandomState, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a SeedRandomState message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SeedRandomState
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.Structure.SeedRandomState;

            /**
             * Decodes a SeedRandomState message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SeedRandomState
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.Structure.SeedRandomState;

            /**
             * Verifies a SeedRandomState message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SeedRandomState message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SeedRandomState
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.Structure.SeedRandomState;

            /**
             * Creates a plain object from a SeedRandomState message. Also converts values to other types if specified.
             * @param message SeedRandomState
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.Structure.SeedRandomState, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SeedRandomState to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a LanguageText. */
        interface ILanguageText {

            /** LanguageText languageType */
            languageType?: (number|null);

            /** LanguageText text */
            text?: (string|null);
        }

        /** Represents a LanguageText. */
        class LanguageText implements ILanguageText {

            /**
             * Constructs a new LanguageText.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.Structure.ILanguageText);

            /** LanguageText languageType. */
            public languageType: number;

            /** LanguageText text. */
            public text: string;

            /**
             * Creates a new LanguageText instance using the specified properties.
             * @param [properties] Properties to set
             * @returns LanguageText instance
             */
            public static create(properties?: CommonProto.Structure.ILanguageText): CommonProto.Structure.LanguageText;

            /**
             * Encodes the specified LanguageText message. Does not implicitly {@link CommonProto.Structure.LanguageText.verify|verify} messages.
             * @param message LanguageText message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.Structure.ILanguageText, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified LanguageText message, length delimited. Does not implicitly {@link CommonProto.Structure.LanguageText.verify|verify} messages.
             * @param message LanguageText message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.Structure.ILanguageText, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a LanguageText message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns LanguageText
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.Structure.LanguageText;

            /**
             * Decodes a LanguageText message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns LanguageText
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.Structure.LanguageText;

            /**
             * Verifies a LanguageText message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a LanguageText message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns LanguageText
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.Structure.LanguageText;

            /**
             * Creates a plain object from a LanguageText message. Also converts values to other types if specified.
             * @param message LanguageText
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.Structure.LanguageText, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this LanguageText to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a WarPlayerInfo. */
        interface IWarPlayerInfo {

            /** WarPlayerInfo playerIndex */
            playerIndex?: (number|null);

            /** WarPlayerInfo userId */
            userId?: (number|null);

            /** WarPlayerInfo coId */
            coId?: (number|null);

            /** WarPlayerInfo teamIndex */
            teamIndex?: (number|null);

            /** WarPlayerInfo isAlive */
            isAlive?: (boolean|null);

            /** WarPlayerInfo restTimeToBoot */
            restTimeToBoot?: (number|null);

            /** WarPlayerInfo unitAndTileSkinId */
            unitAndTileSkinId?: (number|null);
        }

        /** Represents a WarPlayerInfo. */
        class WarPlayerInfo implements IWarPlayerInfo {

            /**
             * Constructs a new WarPlayerInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.Structure.IWarPlayerInfo);

            /** WarPlayerInfo playerIndex. */
            public playerIndex: number;

            /** WarPlayerInfo userId. */
            public userId: number;

            /** WarPlayerInfo coId. */
            public coId: number;

            /** WarPlayerInfo teamIndex. */
            public teamIndex: number;

            /** WarPlayerInfo isAlive. */
            public isAlive: boolean;

            /** WarPlayerInfo restTimeToBoot. */
            public restTimeToBoot: number;

            /** WarPlayerInfo unitAndTileSkinId. */
            public unitAndTileSkinId: number;

            /**
             * Creates a new WarPlayerInfo instance using the specified properties.
             * @param [properties] Properties to set
             * @returns WarPlayerInfo instance
             */
            public static create(properties?: CommonProto.Structure.IWarPlayerInfo): CommonProto.Structure.WarPlayerInfo;

            /**
             * Encodes the specified WarPlayerInfo message. Does not implicitly {@link CommonProto.Structure.WarPlayerInfo.verify|verify} messages.
             * @param message WarPlayerInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.Structure.IWarPlayerInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified WarPlayerInfo message, length delimited. Does not implicitly {@link CommonProto.Structure.WarPlayerInfo.verify|verify} messages.
             * @param message WarPlayerInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.Structure.IWarPlayerInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a WarPlayerInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns WarPlayerInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.Structure.WarPlayerInfo;

            /**
             * Decodes a WarPlayerInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns WarPlayerInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.Structure.WarPlayerInfo;

            /**
             * Verifies a WarPlayerInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a WarPlayerInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns WarPlayerInfo
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.Structure.WarPlayerInfo;

            /**
             * Creates a plain object from a WarPlayerInfo message. Also converts values to other types if specified.
             * @param message WarPlayerInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.Structure.WarPlayerInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this WarPlayerInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a DataForModifyUnit. */
        interface IDataForModifyUnit {

            /** DataForModifyUnit unitId */
            unitId?: (number|null);

            /** DataForModifyUnit gridIndex */
            gridIndex?: (CommonProto.Structure.IGridIndex|null);

            /** DataForModifyUnit deltaHp */
            deltaHp?: (number|null);

            /** DataForModifyUnit deltaPrimaryWeaponAmmo */
            deltaPrimaryWeaponAmmo?: (number|null);

            /** DataForModifyUnit deltaFuel */
            deltaFuel?: (number|null);

            /** DataForModifyUnit deltaFlareAmmo */
            deltaFlareAmmo?: (number|null);
        }

        /** Represents a DataForModifyUnit. */
        class DataForModifyUnit implements IDataForModifyUnit {

            /**
             * Constructs a new DataForModifyUnit.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.Structure.IDataForModifyUnit);

            /** DataForModifyUnit unitId. */
            public unitId: number;

            /** DataForModifyUnit gridIndex. */
            public gridIndex?: (CommonProto.Structure.IGridIndex|null);

            /** DataForModifyUnit deltaHp. */
            public deltaHp: number;

            /** DataForModifyUnit deltaPrimaryWeaponAmmo. */
            public deltaPrimaryWeaponAmmo: number;

            /** DataForModifyUnit deltaFuel. */
            public deltaFuel: number;

            /** DataForModifyUnit deltaFlareAmmo. */
            public deltaFlareAmmo: number;

            /**
             * Creates a new DataForModifyUnit instance using the specified properties.
             * @param [properties] Properties to set
             * @returns DataForModifyUnit instance
             */
            public static create(properties?: CommonProto.Structure.IDataForModifyUnit): CommonProto.Structure.DataForModifyUnit;

            /**
             * Encodes the specified DataForModifyUnit message. Does not implicitly {@link CommonProto.Structure.DataForModifyUnit.verify|verify} messages.
             * @param message DataForModifyUnit message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.Structure.IDataForModifyUnit, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified DataForModifyUnit message, length delimited. Does not implicitly {@link CommonProto.Structure.DataForModifyUnit.verify|verify} messages.
             * @param message DataForModifyUnit message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.Structure.IDataForModifyUnit, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a DataForModifyUnit message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns DataForModifyUnit
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.Structure.DataForModifyUnit;

            /**
             * Decodes a DataForModifyUnit message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns DataForModifyUnit
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.Structure.DataForModifyUnit;

            /**
             * Verifies a DataForModifyUnit message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a DataForModifyUnit message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns DataForModifyUnit
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.Structure.DataForModifyUnit;

            /**
             * Creates a plain object from a DataForModifyUnit message. Also converts values to other types if specified.
             * @param message DataForModifyUnit
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.Structure.DataForModifyUnit, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this DataForModifyUnit to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a DataForUseCoSkill. */
        interface IDataForUseCoSkill {

            /** DataForUseCoSkill skillIndex */
            skillIndex?: (number|null);

            /** DataForUseCoSkill fixedAreaDamageCenter */
            fixedAreaDamageCenter?: (CommonProto.Structure.IGridIndex|null);

            /** DataForUseCoSkill newWeatherType */
            newWeatherType?: (number|null);
        }

        /** Represents a DataForUseCoSkill. */
        class DataForUseCoSkill implements IDataForUseCoSkill {

            /**
             * Constructs a new DataForUseCoSkill.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.Structure.IDataForUseCoSkill);

            /** DataForUseCoSkill skillIndex. */
            public skillIndex: number;

            /** DataForUseCoSkill fixedAreaDamageCenter. */
            public fixedAreaDamageCenter?: (CommonProto.Structure.IGridIndex|null);

            /** DataForUseCoSkill newWeatherType. */
            public newWeatherType: number;

            /**
             * Creates a new DataForUseCoSkill instance using the specified properties.
             * @param [properties] Properties to set
             * @returns DataForUseCoSkill instance
             */
            public static create(properties?: CommonProto.Structure.IDataForUseCoSkill): CommonProto.Structure.DataForUseCoSkill;

            /**
             * Encodes the specified DataForUseCoSkill message. Does not implicitly {@link CommonProto.Structure.DataForUseCoSkill.verify|verify} messages.
             * @param message DataForUseCoSkill message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.Structure.IDataForUseCoSkill, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified DataForUseCoSkill message, length delimited. Does not implicitly {@link CommonProto.Structure.DataForUseCoSkill.verify|verify} messages.
             * @param message DataForUseCoSkill message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.Structure.IDataForUseCoSkill, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a DataForUseCoSkill message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns DataForUseCoSkill
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.Structure.DataForUseCoSkill;

            /**
             * Decodes a DataForUseCoSkill message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns DataForUseCoSkill
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.Structure.DataForUseCoSkill;

            /**
             * Verifies a DataForUseCoSkill message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a DataForUseCoSkill message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns DataForUseCoSkill
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.Structure.DataForUseCoSkill;

            /**
             * Creates a plain object from a DataForUseCoSkill message. Also converts values to other types if specified.
             * @param message DataForUseCoSkill
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.Structure.DataForUseCoSkill, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this DataForUseCoSkill to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a DataForPlayerInRoom. */
        interface IDataForPlayerInRoom {

            /** DataForPlayerInRoom playerIndex */
            playerIndex?: (number|null);

            /** DataForPlayerInRoom userId */
            userId?: (number|null);

            /** DataForPlayerInRoom coId */
            coId?: (number|null);

            /** DataForPlayerInRoom isReady */
            isReady?: (boolean|null);

            /** DataForPlayerInRoom unitAndTileSkinId */
            unitAndTileSkinId?: (number|null);
        }

        /** Represents a DataForPlayerInRoom. */
        class DataForPlayerInRoom implements IDataForPlayerInRoom {

            /**
             * Constructs a new DataForPlayerInRoom.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.Structure.IDataForPlayerInRoom);

            /** DataForPlayerInRoom playerIndex. */
            public playerIndex: number;

            /** DataForPlayerInRoom userId. */
            public userId: number;

            /** DataForPlayerInRoom coId. */
            public coId: number;

            /** DataForPlayerInRoom isReady. */
            public isReady: boolean;

            /** DataForPlayerInRoom unitAndTileSkinId. */
            public unitAndTileSkinId: number;

            /**
             * Creates a new DataForPlayerInRoom instance using the specified properties.
             * @param [properties] Properties to set
             * @returns DataForPlayerInRoom instance
             */
            public static create(properties?: CommonProto.Structure.IDataForPlayerInRoom): CommonProto.Structure.DataForPlayerInRoom;

            /**
             * Encodes the specified DataForPlayerInRoom message. Does not implicitly {@link CommonProto.Structure.DataForPlayerInRoom.verify|verify} messages.
             * @param message DataForPlayerInRoom message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.Structure.IDataForPlayerInRoom, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified DataForPlayerInRoom message, length delimited. Does not implicitly {@link CommonProto.Structure.DataForPlayerInRoom.verify|verify} messages.
             * @param message DataForPlayerInRoom message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.Structure.IDataForPlayerInRoom, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a DataForPlayerInRoom message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns DataForPlayerInRoom
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.Structure.DataForPlayerInRoom;

            /**
             * Decodes a DataForPlayerInRoom message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns DataForPlayerInRoom
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.Structure.DataForPlayerInRoom;

            /**
             * Verifies a DataForPlayerInRoom message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a DataForPlayerInRoom message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns DataForPlayerInRoom
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.Structure.DataForPlayerInRoom;

            /**
             * Creates a plain object from a DataForPlayerInRoom message. Also converts values to other types if specified.
             * @param message DataForPlayerInRoom
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.Structure.DataForPlayerInRoom, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this DataForPlayerInRoom to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a DataForPlayerBanCo. */
        interface IDataForPlayerBanCo {

            /** DataForPlayerBanCo srcPlayerIndex */
            srcPlayerIndex?: (number|null);

            /** DataForPlayerBanCo bannedCoCategoryIdArray */
            bannedCoCategoryIdArray?: (number[]|null);
        }

        /** Represents a DataForPlayerBanCo. */
        class DataForPlayerBanCo implements IDataForPlayerBanCo {

            /**
             * Constructs a new DataForPlayerBanCo.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.Structure.IDataForPlayerBanCo);

            /** DataForPlayerBanCo srcPlayerIndex. */
            public srcPlayerIndex: number;

            /** DataForPlayerBanCo bannedCoCategoryIdArray. */
            public bannedCoCategoryIdArray: number[];

            /**
             * Creates a new DataForPlayerBanCo instance using the specified properties.
             * @param [properties] Properties to set
             * @returns DataForPlayerBanCo instance
             */
            public static create(properties?: CommonProto.Structure.IDataForPlayerBanCo): CommonProto.Structure.DataForPlayerBanCo;

            /**
             * Encodes the specified DataForPlayerBanCo message. Does not implicitly {@link CommonProto.Structure.DataForPlayerBanCo.verify|verify} messages.
             * @param message DataForPlayerBanCo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.Structure.IDataForPlayerBanCo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified DataForPlayerBanCo message, length delimited. Does not implicitly {@link CommonProto.Structure.DataForPlayerBanCo.verify|verify} messages.
             * @param message DataForPlayerBanCo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.Structure.IDataForPlayerBanCo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a DataForPlayerBanCo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns DataForPlayerBanCo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.Structure.DataForPlayerBanCo;

            /**
             * Decodes a DataForPlayerBanCo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns DataForPlayerBanCo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.Structure.DataForPlayerBanCo;

            /**
             * Verifies a DataForPlayerBanCo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a DataForPlayerBanCo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns DataForPlayerBanCo
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.Structure.DataForPlayerBanCo;

            /**
             * Creates a plain object from a DataForPlayerBanCo message. Also converts values to other types if specified.
             * @param message DataForPlayerBanCo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.Structure.DataForPlayerBanCo, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this DataForPlayerBanCo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a DataForMrwPlayerRank. */
        interface IDataForMrwPlayerRank {

            /** DataForMrwPlayerRank warType */
            warType?: (number|null);

            /** DataForMrwPlayerRank playersCountUnneutral */
            playersCountUnneutral?: (number|null);

            /** DataForMrwPlayerRank userId */
            userId?: (number|null);
        }

        /** Represents a DataForMrwPlayerRank. */
        class DataForMrwPlayerRank implements IDataForMrwPlayerRank {

            /**
             * Constructs a new DataForMrwPlayerRank.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.Structure.IDataForMrwPlayerRank);

            /** DataForMrwPlayerRank warType. */
            public warType: number;

            /** DataForMrwPlayerRank playersCountUnneutral. */
            public playersCountUnneutral: number;

            /** DataForMrwPlayerRank userId. */
            public userId: number;

            /**
             * Creates a new DataForMrwPlayerRank instance using the specified properties.
             * @param [properties] Properties to set
             * @returns DataForMrwPlayerRank instance
             */
            public static create(properties?: CommonProto.Structure.IDataForMrwPlayerRank): CommonProto.Structure.DataForMrwPlayerRank;

            /**
             * Encodes the specified DataForMrwPlayerRank message. Does not implicitly {@link CommonProto.Structure.DataForMrwPlayerRank.verify|verify} messages.
             * @param message DataForMrwPlayerRank message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.Structure.IDataForMrwPlayerRank, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified DataForMrwPlayerRank message, length delimited. Does not implicitly {@link CommonProto.Structure.DataForMrwPlayerRank.verify|verify} messages.
             * @param message DataForMrwPlayerRank message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.Structure.IDataForMrwPlayerRank, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a DataForMrwPlayerRank message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns DataForMrwPlayerRank
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.Structure.DataForMrwPlayerRank;

            /**
             * Decodes a DataForMrwPlayerRank message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns DataForMrwPlayerRank
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.Structure.DataForMrwPlayerRank;

            /**
             * Verifies a DataForMrwPlayerRank message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a DataForMrwPlayerRank message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns DataForMrwPlayerRank
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.Structure.DataForMrwPlayerRank;

            /**
             * Creates a plain object from a DataForMrwPlayerRank message. Also converts values to other types if specified.
             * @param message DataForMrwPlayerRank
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.Structure.DataForMrwPlayerRank, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this DataForMrwPlayerRank to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a BattleDamageInfo. */
        interface IBattleDamageInfo {

            /** BattleDamageInfo attackerUnitId */
            attackerUnitId?: (number|null);

            /** BattleDamageInfo targetUnitId */
            targetUnitId?: (number|null);

            /** BattleDamageInfo targetTileGridIndex */
            targetTileGridIndex?: (CommonProto.Structure.IGridIndex|null);

            /** BattleDamageInfo damage */
            damage?: (number|null);
        }

        /** Represents a BattleDamageInfo. */
        class BattleDamageInfo implements IBattleDamageInfo {

            /**
             * Constructs a new BattleDamageInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.Structure.IBattleDamageInfo);

            /** BattleDamageInfo attackerUnitId. */
            public attackerUnitId: number;

            /** BattleDamageInfo targetUnitId. */
            public targetUnitId: number;

            /** BattleDamageInfo targetTileGridIndex. */
            public targetTileGridIndex?: (CommonProto.Structure.IGridIndex|null);

            /** BattleDamageInfo damage. */
            public damage: number;

            /**
             * Creates a new BattleDamageInfo instance using the specified properties.
             * @param [properties] Properties to set
             * @returns BattleDamageInfo instance
             */
            public static create(properties?: CommonProto.Structure.IBattleDamageInfo): CommonProto.Structure.BattleDamageInfo;

            /**
             * Encodes the specified BattleDamageInfo message. Does not implicitly {@link CommonProto.Structure.BattleDamageInfo.verify|verify} messages.
             * @param message BattleDamageInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.Structure.IBattleDamageInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified BattleDamageInfo message, length delimited. Does not implicitly {@link CommonProto.Structure.BattleDamageInfo.verify|verify} messages.
             * @param message BattleDamageInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.Structure.IBattleDamageInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a BattleDamageInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns BattleDamageInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.Structure.BattleDamageInfo;

            /**
             * Decodes a BattleDamageInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns BattleDamageInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.Structure.BattleDamageInfo;

            /**
             * Verifies a BattleDamageInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a BattleDamageInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns BattleDamageInfo
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.Structure.BattleDamageInfo;

            /**
             * Creates a plain object from a BattleDamageInfo message. Also converts values to other types if specified.
             * @param message BattleDamageInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.Structure.BattleDamageInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this BattleDamageInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a CommonExtraDataForWarAction. */
        interface ICommonExtraDataForWarAction {

            /** CommonExtraDataForWarAction playerArrayAfterAction */
            playerArrayAfterAction?: (CommonProto.WarSerialization.ISerialPlayer[]|null);

            /** CommonExtraDataForWarAction unitArrayAfterAction */
            unitArrayAfterAction?: (CommonProto.WarSerialization.ISerialUnit[]|null);

            /** CommonExtraDataForWarAction destroyedUnitIdArray */
            destroyedUnitIdArray?: (number[]|null);

            /** CommonExtraDataForWarAction tileArrayAfterAction */
            tileArrayAfterAction?: (CommonProto.WarSerialization.ISerialTile[]|null);

            /** CommonExtraDataForWarAction nextUnitId */
            nextUnitId?: (number|null);

            /** CommonExtraDataForWarAction movingUnitAndPath */
            movingUnitAndPath?: (CommonProto.Structure.IMovingUnitAndPath|null);

            /** CommonExtraDataForWarAction visibilityArrayFromPathsAfterAction */
            visibilityArrayFromPathsAfterAction?: (number[]|null);

            /** CommonExtraDataForWarAction hiddenUnitIdArray */
            hiddenUnitIdArray?: (number[]|null);
        }

        /** Represents a CommonExtraDataForWarAction. */
        class CommonExtraDataForWarAction implements ICommonExtraDataForWarAction {

            /**
             * Constructs a new CommonExtraDataForWarAction.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.Structure.ICommonExtraDataForWarAction);

            /** CommonExtraDataForWarAction playerArrayAfterAction. */
            public playerArrayAfterAction: CommonProto.WarSerialization.ISerialPlayer[];

            /** CommonExtraDataForWarAction unitArrayAfterAction. */
            public unitArrayAfterAction: CommonProto.WarSerialization.ISerialUnit[];

            /** CommonExtraDataForWarAction destroyedUnitIdArray. */
            public destroyedUnitIdArray: number[];

            /** CommonExtraDataForWarAction tileArrayAfterAction. */
            public tileArrayAfterAction: CommonProto.WarSerialization.ISerialTile[];

            /** CommonExtraDataForWarAction nextUnitId. */
            public nextUnitId: number;

            /** CommonExtraDataForWarAction movingUnitAndPath. */
            public movingUnitAndPath?: (CommonProto.Structure.IMovingUnitAndPath|null);

            /** CommonExtraDataForWarAction visibilityArrayFromPathsAfterAction. */
            public visibilityArrayFromPathsAfterAction: number[];

            /** CommonExtraDataForWarAction hiddenUnitIdArray. */
            public hiddenUnitIdArray: number[];

            /**
             * Creates a new CommonExtraDataForWarAction instance using the specified properties.
             * @param [properties] Properties to set
             * @returns CommonExtraDataForWarAction instance
             */
            public static create(properties?: CommonProto.Structure.ICommonExtraDataForWarAction): CommonProto.Structure.CommonExtraDataForWarAction;

            /**
             * Encodes the specified CommonExtraDataForWarAction message. Does not implicitly {@link CommonProto.Structure.CommonExtraDataForWarAction.verify|verify} messages.
             * @param message CommonExtraDataForWarAction message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.Structure.ICommonExtraDataForWarAction, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified CommonExtraDataForWarAction message, length delimited. Does not implicitly {@link CommonProto.Structure.CommonExtraDataForWarAction.verify|verify} messages.
             * @param message CommonExtraDataForWarAction message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.Structure.ICommonExtraDataForWarAction, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CommonExtraDataForWarAction message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CommonExtraDataForWarAction
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.Structure.CommonExtraDataForWarAction;

            /**
             * Decodes a CommonExtraDataForWarAction message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns CommonExtraDataForWarAction
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.Structure.CommonExtraDataForWarAction;

            /**
             * Verifies a CommonExtraDataForWarAction message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a CommonExtraDataForWarAction message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns CommonExtraDataForWarAction
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.Structure.CommonExtraDataForWarAction;

            /**
             * Creates a plain object from a CommonExtraDataForWarAction message. Also converts values to other types if specified.
             * @param message CommonExtraDataForWarAction
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.Structure.CommonExtraDataForWarAction, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this CommonExtraDataForWarAction to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MultiCustomRoom. */
    interface IMultiCustomRoom {
    }

    /** Represents a MultiCustomRoom. */
    class MultiCustomRoom implements IMultiCustomRoom {

        /**
         * Constructs a new MultiCustomRoom.
         * @param [properties] Properties to set
         */
        constructor(properties?: CommonProto.IMultiCustomRoom);

        /**
         * Creates a new MultiCustomRoom instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MultiCustomRoom instance
         */
        public static create(properties?: CommonProto.IMultiCustomRoom): CommonProto.MultiCustomRoom;

        /**
         * Encodes the specified MultiCustomRoom message. Does not implicitly {@link CommonProto.MultiCustomRoom.verify|verify} messages.
         * @param message MultiCustomRoom message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: CommonProto.IMultiCustomRoom, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MultiCustomRoom message, length delimited. Does not implicitly {@link CommonProto.MultiCustomRoom.verify|verify} messages.
         * @param message MultiCustomRoom message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: CommonProto.IMultiCustomRoom, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MultiCustomRoom message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MultiCustomRoom
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.MultiCustomRoom;

        /**
         * Decodes a MultiCustomRoom message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MultiCustomRoom
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.MultiCustomRoom;

        /**
         * Verifies a MultiCustomRoom message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MultiCustomRoom message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MultiCustomRoom
         */
        public static fromObject(object: { [k: string]: any }): CommonProto.MultiCustomRoom;

        /**
         * Creates a plain object from a MultiCustomRoom message. Also converts values to other types if specified.
         * @param message MultiCustomRoom
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: CommonProto.MultiCustomRoom, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MultiCustomRoom to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MultiCustomRoom {

        /** Properties of a McrRoomFilter. */
        interface IMcrRoomFilter {

            /** McrRoomFilter roomId */
            roomId?: (number|null);

            /** McrRoomFilter mapName */
            mapName?: (string|null);

            /** McrRoomFilter userNickname */
            userNickname?: (string|null);

            /** McrRoomFilter coName */
            coName?: (string|null);

            /** McrRoomFilter hasFog */
            hasFog?: (boolean|null);

            /** McrRoomFilter userIdInRoom */
            userIdInRoom?: (number|null);

            /** McrRoomFilter userIdNotInRoom */
            userIdNotInRoom?: (number|null);

            /** McrRoomFilter isJoinable */
            isJoinable?: (boolean|null);
        }

        /** Represents a McrRoomFilter. */
        class McrRoomFilter implements IMcrRoomFilter {

            /**
             * Constructs a new McrRoomFilter.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.MultiCustomRoom.IMcrRoomFilter);

            /** McrRoomFilter roomId. */
            public roomId: number;

            /** McrRoomFilter mapName. */
            public mapName: string;

            /** McrRoomFilter userNickname. */
            public userNickname: string;

            /** McrRoomFilter coName. */
            public coName: string;

            /** McrRoomFilter hasFog. */
            public hasFog: boolean;

            /** McrRoomFilter userIdInRoom. */
            public userIdInRoom: number;

            /** McrRoomFilter userIdNotInRoom. */
            public userIdNotInRoom: number;

            /** McrRoomFilter isJoinable. */
            public isJoinable: boolean;

            /**
             * Creates a new McrRoomFilter instance using the specified properties.
             * @param [properties] Properties to set
             * @returns McrRoomFilter instance
             */
            public static create(properties?: CommonProto.MultiCustomRoom.IMcrRoomFilter): CommonProto.MultiCustomRoom.McrRoomFilter;

            /**
             * Encodes the specified McrRoomFilter message. Does not implicitly {@link CommonProto.MultiCustomRoom.McrRoomFilter.verify|verify} messages.
             * @param message McrRoomFilter message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.MultiCustomRoom.IMcrRoomFilter, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified McrRoomFilter message, length delimited. Does not implicitly {@link CommonProto.MultiCustomRoom.McrRoomFilter.verify|verify} messages.
             * @param message McrRoomFilter message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.MultiCustomRoom.IMcrRoomFilter, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a McrRoomFilter message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns McrRoomFilter
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.MultiCustomRoom.McrRoomFilter;

            /**
             * Decodes a McrRoomFilter message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns McrRoomFilter
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.MultiCustomRoom.McrRoomFilter;

            /**
             * Verifies a McrRoomFilter message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a McrRoomFilter message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns McrRoomFilter
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.MultiCustomRoom.McrRoomFilter;

            /**
             * Creates a plain object from a McrRoomFilter message. Also converts values to other types if specified.
             * @param message McrRoomFilter
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.MultiCustomRoom.McrRoomFilter, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this McrRoomFilter to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a McrRoomInfo. */
        interface IMcrRoomInfo {

            /** McrRoomInfo roomId */
            roomId?: (number|null);

            /** McrRoomInfo createTime */
            createTime?: (number|null);

            /** McrRoomInfo creatorUserId */
            creatorUserId?: (number|null);

            /** McrRoomInfo ownerPlayerIndex */
            ownerPlayerIndex?: (number|null);

            /** McrRoomInfo forbiddenUserIdArray */
            forbiddenUserIdArray?: (number[]|null);

            /** McrRoomInfo lastNotificationTimestamp */
            lastNotificationTimestamp?: (number|null);

            /** McrRoomInfo settingsForCommon */
            settingsForCommon?: (CommonProto.WarSettings.ISettingsForCommon|null);

            /** McrRoomInfo settingsForMcw */
            settingsForMcw?: (CommonProto.WarSettings.ISettingsForMcw|null);

            /** McrRoomInfo playerDataList */
            playerDataList?: (CommonProto.Structure.IDataForPlayerInRoom[]|null);
        }

        /** Represents a McrRoomInfo. */
        class McrRoomInfo implements IMcrRoomInfo {

            /**
             * Constructs a new McrRoomInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.MultiCustomRoom.IMcrRoomInfo);

            /** McrRoomInfo roomId. */
            public roomId: number;

            /** McrRoomInfo createTime. */
            public createTime: number;

            /** McrRoomInfo creatorUserId. */
            public creatorUserId: number;

            /** McrRoomInfo ownerPlayerIndex. */
            public ownerPlayerIndex: number;

            /** McrRoomInfo forbiddenUserIdArray. */
            public forbiddenUserIdArray: number[];

            /** McrRoomInfo lastNotificationTimestamp. */
            public lastNotificationTimestamp: number;

            /** McrRoomInfo settingsForCommon. */
            public settingsForCommon?: (CommonProto.WarSettings.ISettingsForCommon|null);

            /** McrRoomInfo settingsForMcw. */
            public settingsForMcw?: (CommonProto.WarSettings.ISettingsForMcw|null);

            /** McrRoomInfo playerDataList. */
            public playerDataList: CommonProto.Structure.IDataForPlayerInRoom[];

            /**
             * Creates a new McrRoomInfo instance using the specified properties.
             * @param [properties] Properties to set
             * @returns McrRoomInfo instance
             */
            public static create(properties?: CommonProto.MultiCustomRoom.IMcrRoomInfo): CommonProto.MultiCustomRoom.McrRoomInfo;

            /**
             * Encodes the specified McrRoomInfo message. Does not implicitly {@link CommonProto.MultiCustomRoom.McrRoomInfo.verify|verify} messages.
             * @param message McrRoomInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.MultiCustomRoom.IMcrRoomInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified McrRoomInfo message, length delimited. Does not implicitly {@link CommonProto.MultiCustomRoom.McrRoomInfo.verify|verify} messages.
             * @param message McrRoomInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.MultiCustomRoom.IMcrRoomInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a McrRoomInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns McrRoomInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.MultiCustomRoom.McrRoomInfo;

            /**
             * Decodes a McrRoomInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns McrRoomInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.MultiCustomRoom.McrRoomInfo;

            /**
             * Verifies a McrRoomInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a McrRoomInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns McrRoomInfo
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.MultiCustomRoom.McrRoomInfo;

            /**
             * Creates a plain object from a McrRoomInfo message. Also converts values to other types if specified.
             * @param message McrRoomInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.MultiCustomRoom.McrRoomInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this McrRoomInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a McrRoomStaticInfo. */
        interface IMcrRoomStaticInfo {

            /** McrRoomStaticInfo roomId */
            roomId?: (number|null);

            /** McrRoomStaticInfo createTime */
            createTime?: (number|null);

            /** McrRoomStaticInfo creatorUserId */
            creatorUserId?: (number|null);

            /** McrRoomStaticInfo settingsForCommon */
            settingsForCommon?: (CommonProto.WarSettings.ISettingsForCommon|null);

            /** McrRoomStaticInfo settingsForMcw */
            settingsForMcw?: (CommonProto.WarSettings.ISettingsForMcw|null);
        }

        /** Represents a McrRoomStaticInfo. */
        class McrRoomStaticInfo implements IMcrRoomStaticInfo {

            /**
             * Constructs a new McrRoomStaticInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.MultiCustomRoom.IMcrRoomStaticInfo);

            /** McrRoomStaticInfo roomId. */
            public roomId: number;

            /** McrRoomStaticInfo createTime. */
            public createTime: number;

            /** McrRoomStaticInfo creatorUserId. */
            public creatorUserId: number;

            /** McrRoomStaticInfo settingsForCommon. */
            public settingsForCommon?: (CommonProto.WarSettings.ISettingsForCommon|null);

            /** McrRoomStaticInfo settingsForMcw. */
            public settingsForMcw?: (CommonProto.WarSettings.ISettingsForMcw|null);

            /**
             * Creates a new McrRoomStaticInfo instance using the specified properties.
             * @param [properties] Properties to set
             * @returns McrRoomStaticInfo instance
             */
            public static create(properties?: CommonProto.MultiCustomRoom.IMcrRoomStaticInfo): CommonProto.MultiCustomRoom.McrRoomStaticInfo;

            /**
             * Encodes the specified McrRoomStaticInfo message. Does not implicitly {@link CommonProto.MultiCustomRoom.McrRoomStaticInfo.verify|verify} messages.
             * @param message McrRoomStaticInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.MultiCustomRoom.IMcrRoomStaticInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified McrRoomStaticInfo message, length delimited. Does not implicitly {@link CommonProto.MultiCustomRoom.McrRoomStaticInfo.verify|verify} messages.
             * @param message McrRoomStaticInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.MultiCustomRoom.IMcrRoomStaticInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a McrRoomStaticInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns McrRoomStaticInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.MultiCustomRoom.McrRoomStaticInfo;

            /**
             * Decodes a McrRoomStaticInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns McrRoomStaticInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.MultiCustomRoom.McrRoomStaticInfo;

            /**
             * Verifies a McrRoomStaticInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a McrRoomStaticInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns McrRoomStaticInfo
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.MultiCustomRoom.McrRoomStaticInfo;

            /**
             * Creates a plain object from a McrRoomStaticInfo message. Also converts values to other types if specified.
             * @param message McrRoomStaticInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.MultiCustomRoom.McrRoomStaticInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this McrRoomStaticInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a McrRoomPlayerInfo. */
        interface IMcrRoomPlayerInfo {

            /** McrRoomPlayerInfo roomId */
            roomId?: (number|null);

            /** McrRoomPlayerInfo ownerPlayerIndex */
            ownerPlayerIndex?: (number|null);

            /** McrRoomPlayerInfo playerDataList */
            playerDataList?: (CommonProto.Structure.IDataForPlayerInRoom[]|null);

            /** McrRoomPlayerInfo playersCountUnneutral */
            playersCountUnneutral?: (number|null);
        }

        /** Represents a McrRoomPlayerInfo. */
        class McrRoomPlayerInfo implements IMcrRoomPlayerInfo {

            /**
             * Constructs a new McrRoomPlayerInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.MultiCustomRoom.IMcrRoomPlayerInfo);

            /** McrRoomPlayerInfo roomId. */
            public roomId: number;

            /** McrRoomPlayerInfo ownerPlayerIndex. */
            public ownerPlayerIndex: number;

            /** McrRoomPlayerInfo playerDataList. */
            public playerDataList: CommonProto.Structure.IDataForPlayerInRoom[];

            /** McrRoomPlayerInfo playersCountUnneutral. */
            public playersCountUnneutral: number;

            /**
             * Creates a new McrRoomPlayerInfo instance using the specified properties.
             * @param [properties] Properties to set
             * @returns McrRoomPlayerInfo instance
             */
            public static create(properties?: CommonProto.MultiCustomRoom.IMcrRoomPlayerInfo): CommonProto.MultiCustomRoom.McrRoomPlayerInfo;

            /**
             * Encodes the specified McrRoomPlayerInfo message. Does not implicitly {@link CommonProto.MultiCustomRoom.McrRoomPlayerInfo.verify|verify} messages.
             * @param message McrRoomPlayerInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.MultiCustomRoom.IMcrRoomPlayerInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified McrRoomPlayerInfo message, length delimited. Does not implicitly {@link CommonProto.MultiCustomRoom.McrRoomPlayerInfo.verify|verify} messages.
             * @param message McrRoomPlayerInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.MultiCustomRoom.IMcrRoomPlayerInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a McrRoomPlayerInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns McrRoomPlayerInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.MultiCustomRoom.McrRoomPlayerInfo;

            /**
             * Decodes a McrRoomPlayerInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns McrRoomPlayerInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.MultiCustomRoom.McrRoomPlayerInfo;

            /**
             * Verifies a McrRoomPlayerInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a McrRoomPlayerInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns McrRoomPlayerInfo
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.MultiCustomRoom.McrRoomPlayerInfo;

            /**
             * Creates a plain object from a McrRoomPlayerInfo message. Also converts values to other types if specified.
             * @param message McrRoomPlayerInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.MultiCustomRoom.McrRoomPlayerInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this McrRoomPlayerInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MultiFreeRoom. */
    interface IMultiFreeRoom {
    }

    /** Represents a MultiFreeRoom. */
    class MultiFreeRoom implements IMultiFreeRoom {

        /**
         * Constructs a new MultiFreeRoom.
         * @param [properties] Properties to set
         */
        constructor(properties?: CommonProto.IMultiFreeRoom);

        /**
         * Creates a new MultiFreeRoom instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MultiFreeRoom instance
         */
        public static create(properties?: CommonProto.IMultiFreeRoom): CommonProto.MultiFreeRoom;

        /**
         * Encodes the specified MultiFreeRoom message. Does not implicitly {@link CommonProto.MultiFreeRoom.verify|verify} messages.
         * @param message MultiFreeRoom message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: CommonProto.IMultiFreeRoom, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MultiFreeRoom message, length delimited. Does not implicitly {@link CommonProto.MultiFreeRoom.verify|verify} messages.
         * @param message MultiFreeRoom message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: CommonProto.IMultiFreeRoom, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MultiFreeRoom message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MultiFreeRoom
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.MultiFreeRoom;

        /**
         * Decodes a MultiFreeRoom message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MultiFreeRoom
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.MultiFreeRoom;

        /**
         * Verifies a MultiFreeRoom message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MultiFreeRoom message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MultiFreeRoom
         */
        public static fromObject(object: { [k: string]: any }): CommonProto.MultiFreeRoom;

        /**
         * Creates a plain object from a MultiFreeRoom message. Also converts values to other types if specified.
         * @param message MultiFreeRoom
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: CommonProto.MultiFreeRoom, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MultiFreeRoom to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MultiFreeRoom {

        /** Properties of a MfrRoomFilter. */
        interface IMfrRoomFilter {

            /** MfrRoomFilter roomId */
            roomId?: (number|null);

            /** MfrRoomFilter userNickname */
            userNickname?: (string|null);

            /** MfrRoomFilter coName */
            coName?: (string|null);

            /** MfrRoomFilter hasFog */
            hasFog?: (boolean|null);

            /** MfrRoomFilter userIdInRoom */
            userIdInRoom?: (number|null);

            /** MfrRoomFilter userIdNotInRoom */
            userIdNotInRoom?: (number|null);

            /** MfrRoomFilter isJoinable */
            isJoinable?: (boolean|null);
        }

        /** Represents a MfrRoomFilter. */
        class MfrRoomFilter implements IMfrRoomFilter {

            /**
             * Constructs a new MfrRoomFilter.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.MultiFreeRoom.IMfrRoomFilter);

            /** MfrRoomFilter roomId. */
            public roomId: number;

            /** MfrRoomFilter userNickname. */
            public userNickname: string;

            /** MfrRoomFilter coName. */
            public coName: string;

            /** MfrRoomFilter hasFog. */
            public hasFog: boolean;

            /** MfrRoomFilter userIdInRoom. */
            public userIdInRoom: number;

            /** MfrRoomFilter userIdNotInRoom. */
            public userIdNotInRoom: number;

            /** MfrRoomFilter isJoinable. */
            public isJoinable: boolean;

            /**
             * Creates a new MfrRoomFilter instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MfrRoomFilter instance
             */
            public static create(properties?: CommonProto.MultiFreeRoom.IMfrRoomFilter): CommonProto.MultiFreeRoom.MfrRoomFilter;

            /**
             * Encodes the specified MfrRoomFilter message. Does not implicitly {@link CommonProto.MultiFreeRoom.MfrRoomFilter.verify|verify} messages.
             * @param message MfrRoomFilter message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.MultiFreeRoom.IMfrRoomFilter, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MfrRoomFilter message, length delimited. Does not implicitly {@link CommonProto.MultiFreeRoom.MfrRoomFilter.verify|verify} messages.
             * @param message MfrRoomFilter message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.MultiFreeRoom.IMfrRoomFilter, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MfrRoomFilter message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MfrRoomFilter
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.MultiFreeRoom.MfrRoomFilter;

            /**
             * Decodes a MfrRoomFilter message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MfrRoomFilter
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.MultiFreeRoom.MfrRoomFilter;

            /**
             * Verifies a MfrRoomFilter message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MfrRoomFilter message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MfrRoomFilter
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.MultiFreeRoom.MfrRoomFilter;

            /**
             * Creates a plain object from a MfrRoomFilter message. Also converts values to other types if specified.
             * @param message MfrRoomFilter
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.MultiFreeRoom.MfrRoomFilter, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MfrRoomFilter to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a MfrRoomInfo. */
        interface IMfrRoomInfo {

            /** MfrRoomInfo roomId */
            roomId?: (number|null);

            /** MfrRoomInfo createTime */
            createTime?: (number|null);

            /** MfrRoomInfo creatorUserId */
            creatorUserId?: (number|null);

            /** MfrRoomInfo ownerPlayerIndex */
            ownerPlayerIndex?: (number|null);

            /** MfrRoomInfo forbiddenUserIdArray */
            forbiddenUserIdArray?: (number[]|null);

            /** MfrRoomInfo lastNotificationTimestamp */
            lastNotificationTimestamp?: (number|null);

            /** MfrRoomInfo settingsForMfw */
            settingsForMfw?: (CommonProto.WarSettings.ISettingsForMfw|null);

            /** MfrRoomInfo playerDataList */
            playerDataList?: (CommonProto.Structure.IDataForPlayerInRoom[]|null);
        }

        /** Represents a MfrRoomInfo. */
        class MfrRoomInfo implements IMfrRoomInfo {

            /**
             * Constructs a new MfrRoomInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.MultiFreeRoom.IMfrRoomInfo);

            /** MfrRoomInfo roomId. */
            public roomId: number;

            /** MfrRoomInfo createTime. */
            public createTime: number;

            /** MfrRoomInfo creatorUserId. */
            public creatorUserId: number;

            /** MfrRoomInfo ownerPlayerIndex. */
            public ownerPlayerIndex: number;

            /** MfrRoomInfo forbiddenUserIdArray. */
            public forbiddenUserIdArray: number[];

            /** MfrRoomInfo lastNotificationTimestamp. */
            public lastNotificationTimestamp: number;

            /** MfrRoomInfo settingsForMfw. */
            public settingsForMfw?: (CommonProto.WarSettings.ISettingsForMfw|null);

            /** MfrRoomInfo playerDataList. */
            public playerDataList: CommonProto.Structure.IDataForPlayerInRoom[];

            /**
             * Creates a new MfrRoomInfo instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MfrRoomInfo instance
             */
            public static create(properties?: CommonProto.MultiFreeRoom.IMfrRoomInfo): CommonProto.MultiFreeRoom.MfrRoomInfo;

            /**
             * Encodes the specified MfrRoomInfo message. Does not implicitly {@link CommonProto.MultiFreeRoom.MfrRoomInfo.verify|verify} messages.
             * @param message MfrRoomInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.MultiFreeRoom.IMfrRoomInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MfrRoomInfo message, length delimited. Does not implicitly {@link CommonProto.MultiFreeRoom.MfrRoomInfo.verify|verify} messages.
             * @param message MfrRoomInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.MultiFreeRoom.IMfrRoomInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MfrRoomInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MfrRoomInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.MultiFreeRoom.MfrRoomInfo;

            /**
             * Decodes a MfrRoomInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MfrRoomInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.MultiFreeRoom.MfrRoomInfo;

            /**
             * Verifies a MfrRoomInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MfrRoomInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MfrRoomInfo
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.MultiFreeRoom.MfrRoomInfo;

            /**
             * Creates a plain object from a MfrRoomInfo message. Also converts values to other types if specified.
             * @param message MfrRoomInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.MultiFreeRoom.MfrRoomInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MfrRoomInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a MfrRoomStaticInfo. */
        interface IMfrRoomStaticInfo {

            /** MfrRoomStaticInfo roomId */
            roomId?: (number|null);

            /** MfrRoomStaticInfo createTime */
            createTime?: (number|null);

            /** MfrRoomStaticInfo creatorUserId */
            creatorUserId?: (number|null);

            /** MfrRoomStaticInfo settingsForMfw */
            settingsForMfw?: (CommonProto.WarSettings.ISettingsForMfw|null);
        }

        /** Represents a MfrRoomStaticInfo. */
        class MfrRoomStaticInfo implements IMfrRoomStaticInfo {

            /**
             * Constructs a new MfrRoomStaticInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.MultiFreeRoom.IMfrRoomStaticInfo);

            /** MfrRoomStaticInfo roomId. */
            public roomId: number;

            /** MfrRoomStaticInfo createTime. */
            public createTime: number;

            /** MfrRoomStaticInfo creatorUserId. */
            public creatorUserId: number;

            /** MfrRoomStaticInfo settingsForMfw. */
            public settingsForMfw?: (CommonProto.WarSettings.ISettingsForMfw|null);

            /**
             * Creates a new MfrRoomStaticInfo instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MfrRoomStaticInfo instance
             */
            public static create(properties?: CommonProto.MultiFreeRoom.IMfrRoomStaticInfo): CommonProto.MultiFreeRoom.MfrRoomStaticInfo;

            /**
             * Encodes the specified MfrRoomStaticInfo message. Does not implicitly {@link CommonProto.MultiFreeRoom.MfrRoomStaticInfo.verify|verify} messages.
             * @param message MfrRoomStaticInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.MultiFreeRoom.IMfrRoomStaticInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MfrRoomStaticInfo message, length delimited. Does not implicitly {@link CommonProto.MultiFreeRoom.MfrRoomStaticInfo.verify|verify} messages.
             * @param message MfrRoomStaticInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.MultiFreeRoom.IMfrRoomStaticInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MfrRoomStaticInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MfrRoomStaticInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.MultiFreeRoom.MfrRoomStaticInfo;

            /**
             * Decodes a MfrRoomStaticInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MfrRoomStaticInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.MultiFreeRoom.MfrRoomStaticInfo;

            /**
             * Verifies a MfrRoomStaticInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MfrRoomStaticInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MfrRoomStaticInfo
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.MultiFreeRoom.MfrRoomStaticInfo;

            /**
             * Creates a plain object from a MfrRoomStaticInfo message. Also converts values to other types if specified.
             * @param message MfrRoomStaticInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.MultiFreeRoom.MfrRoomStaticInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MfrRoomStaticInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a MfrRoomPlayerInfo. */
        interface IMfrRoomPlayerInfo {

            /** MfrRoomPlayerInfo roomId */
            roomId?: (number|null);

            /** MfrRoomPlayerInfo ownerPlayerIndex */
            ownerPlayerIndex?: (number|null);

            /** MfrRoomPlayerInfo playerDataList */
            playerDataList?: (CommonProto.Structure.IDataForPlayerInRoom[]|null);

            /** MfrRoomPlayerInfo playersCountUnneutral */
            playersCountUnneutral?: (number|null);
        }

        /** Represents a MfrRoomPlayerInfo. */
        class MfrRoomPlayerInfo implements IMfrRoomPlayerInfo {

            /**
             * Constructs a new MfrRoomPlayerInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.MultiFreeRoom.IMfrRoomPlayerInfo);

            /** MfrRoomPlayerInfo roomId. */
            public roomId: number;

            /** MfrRoomPlayerInfo ownerPlayerIndex. */
            public ownerPlayerIndex: number;

            /** MfrRoomPlayerInfo playerDataList. */
            public playerDataList: CommonProto.Structure.IDataForPlayerInRoom[];

            /** MfrRoomPlayerInfo playersCountUnneutral. */
            public playersCountUnneutral: number;

            /**
             * Creates a new MfrRoomPlayerInfo instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MfrRoomPlayerInfo instance
             */
            public static create(properties?: CommonProto.MultiFreeRoom.IMfrRoomPlayerInfo): CommonProto.MultiFreeRoom.MfrRoomPlayerInfo;

            /**
             * Encodes the specified MfrRoomPlayerInfo message. Does not implicitly {@link CommonProto.MultiFreeRoom.MfrRoomPlayerInfo.verify|verify} messages.
             * @param message MfrRoomPlayerInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.MultiFreeRoom.IMfrRoomPlayerInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MfrRoomPlayerInfo message, length delimited. Does not implicitly {@link CommonProto.MultiFreeRoom.MfrRoomPlayerInfo.verify|verify} messages.
             * @param message MfrRoomPlayerInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.MultiFreeRoom.IMfrRoomPlayerInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MfrRoomPlayerInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MfrRoomPlayerInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.MultiFreeRoom.MfrRoomPlayerInfo;

            /**
             * Decodes a MfrRoomPlayerInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MfrRoomPlayerInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.MultiFreeRoom.MfrRoomPlayerInfo;

            /**
             * Verifies a MfrRoomPlayerInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MfrRoomPlayerInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MfrRoomPlayerInfo
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.MultiFreeRoom.MfrRoomPlayerInfo;

            /**
             * Creates a plain object from a MfrRoomPlayerInfo message. Also converts values to other types if specified.
             * @param message MfrRoomPlayerInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.MultiFreeRoom.MfrRoomPlayerInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MfrRoomPlayerInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a CoopCustomRoom. */
    interface ICoopCustomRoom {
    }

    /** Represents a CoopCustomRoom. */
    class CoopCustomRoom implements ICoopCustomRoom {

        /**
         * Constructs a new CoopCustomRoom.
         * @param [properties] Properties to set
         */
        constructor(properties?: CommonProto.ICoopCustomRoom);

        /**
         * Creates a new CoopCustomRoom instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CoopCustomRoom instance
         */
        public static create(properties?: CommonProto.ICoopCustomRoom): CommonProto.CoopCustomRoom;

        /**
         * Encodes the specified CoopCustomRoom message. Does not implicitly {@link CommonProto.CoopCustomRoom.verify|verify} messages.
         * @param message CoopCustomRoom message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: CommonProto.ICoopCustomRoom, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified CoopCustomRoom message, length delimited. Does not implicitly {@link CommonProto.CoopCustomRoom.verify|verify} messages.
         * @param message CoopCustomRoom message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: CommonProto.ICoopCustomRoom, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CoopCustomRoom message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CoopCustomRoom
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.CoopCustomRoom;

        /**
         * Decodes a CoopCustomRoom message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CoopCustomRoom
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.CoopCustomRoom;

        /**
         * Verifies a CoopCustomRoom message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CoopCustomRoom message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CoopCustomRoom
         */
        public static fromObject(object: { [k: string]: any }): CommonProto.CoopCustomRoom;

        /**
         * Creates a plain object from a CoopCustomRoom message. Also converts values to other types if specified.
         * @param message CoopCustomRoom
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: CommonProto.CoopCustomRoom, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CoopCustomRoom to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace CoopCustomRoom {

        /** Properties of a CcrRoomFilter. */
        interface ICcrRoomFilter {

            /** CcrRoomFilter roomId */
            roomId?: (number|null);

            /** CcrRoomFilter mapName */
            mapName?: (string|null);

            /** CcrRoomFilter userNickname */
            userNickname?: (string|null);

            /** CcrRoomFilter coName */
            coName?: (string|null);

            /** CcrRoomFilter hasFog */
            hasFog?: (boolean|null);

            /** CcrRoomFilter userIdInRoom */
            userIdInRoom?: (number|null);

            /** CcrRoomFilter userIdNotInRoom */
            userIdNotInRoom?: (number|null);

            /** CcrRoomFilter isJoinable */
            isJoinable?: (boolean|null);
        }

        /** Represents a CcrRoomFilter. */
        class CcrRoomFilter implements ICcrRoomFilter {

            /**
             * Constructs a new CcrRoomFilter.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.CoopCustomRoom.ICcrRoomFilter);

            /** CcrRoomFilter roomId. */
            public roomId: number;

            /** CcrRoomFilter mapName. */
            public mapName: string;

            /** CcrRoomFilter userNickname. */
            public userNickname: string;

            /** CcrRoomFilter coName. */
            public coName: string;

            /** CcrRoomFilter hasFog. */
            public hasFog: boolean;

            /** CcrRoomFilter userIdInRoom. */
            public userIdInRoom: number;

            /** CcrRoomFilter userIdNotInRoom. */
            public userIdNotInRoom: number;

            /** CcrRoomFilter isJoinable. */
            public isJoinable: boolean;

            /**
             * Creates a new CcrRoomFilter instance using the specified properties.
             * @param [properties] Properties to set
             * @returns CcrRoomFilter instance
             */
            public static create(properties?: CommonProto.CoopCustomRoom.ICcrRoomFilter): CommonProto.CoopCustomRoom.CcrRoomFilter;

            /**
             * Encodes the specified CcrRoomFilter message. Does not implicitly {@link CommonProto.CoopCustomRoom.CcrRoomFilter.verify|verify} messages.
             * @param message CcrRoomFilter message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.CoopCustomRoom.ICcrRoomFilter, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified CcrRoomFilter message, length delimited. Does not implicitly {@link CommonProto.CoopCustomRoom.CcrRoomFilter.verify|verify} messages.
             * @param message CcrRoomFilter message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.CoopCustomRoom.ICcrRoomFilter, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CcrRoomFilter message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CcrRoomFilter
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.CoopCustomRoom.CcrRoomFilter;

            /**
             * Decodes a CcrRoomFilter message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns CcrRoomFilter
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.CoopCustomRoom.CcrRoomFilter;

            /**
             * Verifies a CcrRoomFilter message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a CcrRoomFilter message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns CcrRoomFilter
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.CoopCustomRoom.CcrRoomFilter;

            /**
             * Creates a plain object from a CcrRoomFilter message. Also converts values to other types if specified.
             * @param message CcrRoomFilter
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.CoopCustomRoom.CcrRoomFilter, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this CcrRoomFilter to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a CcrRoomInfo. */
        interface ICcrRoomInfo {

            /** CcrRoomInfo roomId */
            roomId?: (number|null);

            /** CcrRoomInfo createTime */
            createTime?: (number|null);

            /** CcrRoomInfo creatorUserId */
            creatorUserId?: (number|null);

            /** CcrRoomInfo ownerPlayerIndex */
            ownerPlayerIndex?: (number|null);

            /** CcrRoomInfo forbiddenUserIdArray */
            forbiddenUserIdArray?: (number[]|null);

            /** CcrRoomInfo lastNotificationTimestamp */
            lastNotificationTimestamp?: (number|null);

            /** CcrRoomInfo settingsForCommon */
            settingsForCommon?: (CommonProto.WarSettings.ISettingsForCommon|null);

            /** CcrRoomInfo settingsForCcw */
            settingsForCcw?: (CommonProto.WarSettings.ISettingsForCcw|null);

            /** CcrRoomInfo playerDataList */
            playerDataList?: (CommonProto.Structure.IDataForPlayerInRoom[]|null);
        }

        /** Represents a CcrRoomInfo. */
        class CcrRoomInfo implements ICcrRoomInfo {

            /**
             * Constructs a new CcrRoomInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.CoopCustomRoom.ICcrRoomInfo);

            /** CcrRoomInfo roomId. */
            public roomId: number;

            /** CcrRoomInfo createTime. */
            public createTime: number;

            /** CcrRoomInfo creatorUserId. */
            public creatorUserId: number;

            /** CcrRoomInfo ownerPlayerIndex. */
            public ownerPlayerIndex: number;

            /** CcrRoomInfo forbiddenUserIdArray. */
            public forbiddenUserIdArray: number[];

            /** CcrRoomInfo lastNotificationTimestamp. */
            public lastNotificationTimestamp: number;

            /** CcrRoomInfo settingsForCommon. */
            public settingsForCommon?: (CommonProto.WarSettings.ISettingsForCommon|null);

            /** CcrRoomInfo settingsForCcw. */
            public settingsForCcw?: (CommonProto.WarSettings.ISettingsForCcw|null);

            /** CcrRoomInfo playerDataList. */
            public playerDataList: CommonProto.Structure.IDataForPlayerInRoom[];

            /**
             * Creates a new CcrRoomInfo instance using the specified properties.
             * @param [properties] Properties to set
             * @returns CcrRoomInfo instance
             */
            public static create(properties?: CommonProto.CoopCustomRoom.ICcrRoomInfo): CommonProto.CoopCustomRoom.CcrRoomInfo;

            /**
             * Encodes the specified CcrRoomInfo message. Does not implicitly {@link CommonProto.CoopCustomRoom.CcrRoomInfo.verify|verify} messages.
             * @param message CcrRoomInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.CoopCustomRoom.ICcrRoomInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified CcrRoomInfo message, length delimited. Does not implicitly {@link CommonProto.CoopCustomRoom.CcrRoomInfo.verify|verify} messages.
             * @param message CcrRoomInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.CoopCustomRoom.ICcrRoomInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CcrRoomInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CcrRoomInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.CoopCustomRoom.CcrRoomInfo;

            /**
             * Decodes a CcrRoomInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns CcrRoomInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.CoopCustomRoom.CcrRoomInfo;

            /**
             * Verifies a CcrRoomInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a CcrRoomInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns CcrRoomInfo
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.CoopCustomRoom.CcrRoomInfo;

            /**
             * Creates a plain object from a CcrRoomInfo message. Also converts values to other types if specified.
             * @param message CcrRoomInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.CoopCustomRoom.CcrRoomInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this CcrRoomInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a CcrRoomStaticInfo. */
        interface ICcrRoomStaticInfo {

            /** CcrRoomStaticInfo roomId */
            roomId?: (number|null);

            /** CcrRoomStaticInfo createTime */
            createTime?: (number|null);

            /** CcrRoomStaticInfo creatorUserId */
            creatorUserId?: (number|null);

            /** CcrRoomStaticInfo settingsForCommon */
            settingsForCommon?: (CommonProto.WarSettings.ISettingsForCommon|null);

            /** CcrRoomStaticInfo settingsForCcw */
            settingsForCcw?: (CommonProto.WarSettings.ISettingsForCcw|null);
        }

        /** Represents a CcrRoomStaticInfo. */
        class CcrRoomStaticInfo implements ICcrRoomStaticInfo {

            /**
             * Constructs a new CcrRoomStaticInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.CoopCustomRoom.ICcrRoomStaticInfo);

            /** CcrRoomStaticInfo roomId. */
            public roomId: number;

            /** CcrRoomStaticInfo createTime. */
            public createTime: number;

            /** CcrRoomStaticInfo creatorUserId. */
            public creatorUserId: number;

            /** CcrRoomStaticInfo settingsForCommon. */
            public settingsForCommon?: (CommonProto.WarSettings.ISettingsForCommon|null);

            /** CcrRoomStaticInfo settingsForCcw. */
            public settingsForCcw?: (CommonProto.WarSettings.ISettingsForCcw|null);

            /**
             * Creates a new CcrRoomStaticInfo instance using the specified properties.
             * @param [properties] Properties to set
             * @returns CcrRoomStaticInfo instance
             */
            public static create(properties?: CommonProto.CoopCustomRoom.ICcrRoomStaticInfo): CommonProto.CoopCustomRoom.CcrRoomStaticInfo;

            /**
             * Encodes the specified CcrRoomStaticInfo message. Does not implicitly {@link CommonProto.CoopCustomRoom.CcrRoomStaticInfo.verify|verify} messages.
             * @param message CcrRoomStaticInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.CoopCustomRoom.ICcrRoomStaticInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified CcrRoomStaticInfo message, length delimited. Does not implicitly {@link CommonProto.CoopCustomRoom.CcrRoomStaticInfo.verify|verify} messages.
             * @param message CcrRoomStaticInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.CoopCustomRoom.ICcrRoomStaticInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CcrRoomStaticInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CcrRoomStaticInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.CoopCustomRoom.CcrRoomStaticInfo;

            /**
             * Decodes a CcrRoomStaticInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns CcrRoomStaticInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.CoopCustomRoom.CcrRoomStaticInfo;

            /**
             * Verifies a CcrRoomStaticInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a CcrRoomStaticInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns CcrRoomStaticInfo
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.CoopCustomRoom.CcrRoomStaticInfo;

            /**
             * Creates a plain object from a CcrRoomStaticInfo message. Also converts values to other types if specified.
             * @param message CcrRoomStaticInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.CoopCustomRoom.CcrRoomStaticInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this CcrRoomStaticInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a CcrRoomPlayerInfo. */
        interface ICcrRoomPlayerInfo {

            /** CcrRoomPlayerInfo roomId */
            roomId?: (number|null);

            /** CcrRoomPlayerInfo ownerPlayerIndex */
            ownerPlayerIndex?: (number|null);

            /** CcrRoomPlayerInfo playerDataList */
            playerDataList?: (CommonProto.Structure.IDataForPlayerInRoom[]|null);

            /** CcrRoomPlayerInfo playersCountUnneutral */
            playersCountUnneutral?: (number|null);
        }

        /** Represents a CcrRoomPlayerInfo. */
        class CcrRoomPlayerInfo implements ICcrRoomPlayerInfo {

            /**
             * Constructs a new CcrRoomPlayerInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.CoopCustomRoom.ICcrRoomPlayerInfo);

            /** CcrRoomPlayerInfo roomId. */
            public roomId: number;

            /** CcrRoomPlayerInfo ownerPlayerIndex. */
            public ownerPlayerIndex: number;

            /** CcrRoomPlayerInfo playerDataList. */
            public playerDataList: CommonProto.Structure.IDataForPlayerInRoom[];

            /** CcrRoomPlayerInfo playersCountUnneutral. */
            public playersCountUnneutral: number;

            /**
             * Creates a new CcrRoomPlayerInfo instance using the specified properties.
             * @param [properties] Properties to set
             * @returns CcrRoomPlayerInfo instance
             */
            public static create(properties?: CommonProto.CoopCustomRoom.ICcrRoomPlayerInfo): CommonProto.CoopCustomRoom.CcrRoomPlayerInfo;

            /**
             * Encodes the specified CcrRoomPlayerInfo message. Does not implicitly {@link CommonProto.CoopCustomRoom.CcrRoomPlayerInfo.verify|verify} messages.
             * @param message CcrRoomPlayerInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.CoopCustomRoom.ICcrRoomPlayerInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified CcrRoomPlayerInfo message, length delimited. Does not implicitly {@link CommonProto.CoopCustomRoom.CcrRoomPlayerInfo.verify|verify} messages.
             * @param message CcrRoomPlayerInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.CoopCustomRoom.ICcrRoomPlayerInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CcrRoomPlayerInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CcrRoomPlayerInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.CoopCustomRoom.CcrRoomPlayerInfo;

            /**
             * Decodes a CcrRoomPlayerInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns CcrRoomPlayerInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.CoopCustomRoom.CcrRoomPlayerInfo;

            /**
             * Verifies a CcrRoomPlayerInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a CcrRoomPlayerInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns CcrRoomPlayerInfo
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.CoopCustomRoom.CcrRoomPlayerInfo;

            /**
             * Creates a plain object from a CcrRoomPlayerInfo message. Also converts values to other types if specified.
             * @param message CcrRoomPlayerInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.CoopCustomRoom.CcrRoomPlayerInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this CcrRoomPlayerInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MultiPlayerWar. */
    interface IMultiPlayerWar {
    }

    /** Represents a MultiPlayerWar. */
    class MultiPlayerWar implements IMultiPlayerWar {

        /**
         * Constructs a new MultiPlayerWar.
         * @param [properties] Properties to set
         */
        constructor(properties?: CommonProto.IMultiPlayerWar);

        /**
         * Creates a new MultiPlayerWar instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MultiPlayerWar instance
         */
        public static create(properties?: CommonProto.IMultiPlayerWar): CommonProto.MultiPlayerWar;

        /**
         * Encodes the specified MultiPlayerWar message. Does not implicitly {@link CommonProto.MultiPlayerWar.verify|verify} messages.
         * @param message MultiPlayerWar message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: CommonProto.IMultiPlayerWar, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MultiPlayerWar message, length delimited. Does not implicitly {@link CommonProto.MultiPlayerWar.verify|verify} messages.
         * @param message MultiPlayerWar message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: CommonProto.IMultiPlayerWar, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MultiPlayerWar message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MultiPlayerWar
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.MultiPlayerWar;

        /**
         * Decodes a MultiPlayerWar message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MultiPlayerWar
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.MultiPlayerWar;

        /**
         * Verifies a MultiPlayerWar message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MultiPlayerWar message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MultiPlayerWar
         */
        public static fromObject(object: { [k: string]: any }): CommonProto.MultiPlayerWar;

        /**
         * Creates a plain object from a MultiPlayerWar message. Also converts values to other types if specified.
         * @param message MultiPlayerWar
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: CommonProto.MultiPlayerWar, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MultiPlayerWar to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MultiPlayerWar {

        /** Properties of a MpwWatchSrcUserInfo. */
        interface IMpwWatchSrcUserInfo {

            /** MpwWatchSrcUserInfo userId */
            userId?: (number|null);

            /** MpwWatchSrcUserInfo isRequestingOthers */
            isRequestingOthers?: (boolean|null);

            /** MpwWatchSrcUserInfo isWatchingOthers */
            isWatchingOthers?: (boolean|null);
        }

        /** Represents a MpwWatchSrcUserInfo. */
        class MpwWatchSrcUserInfo implements IMpwWatchSrcUserInfo {

            /**
             * Constructs a new MpwWatchSrcUserInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.MultiPlayerWar.IMpwWatchSrcUserInfo);

            /** MpwWatchSrcUserInfo userId. */
            public userId: number;

            /** MpwWatchSrcUserInfo isRequestingOthers. */
            public isRequestingOthers: boolean;

            /** MpwWatchSrcUserInfo isWatchingOthers. */
            public isWatchingOthers: boolean;

            /**
             * Creates a new MpwWatchSrcUserInfo instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MpwWatchSrcUserInfo instance
             */
            public static create(properties?: CommonProto.MultiPlayerWar.IMpwWatchSrcUserInfo): CommonProto.MultiPlayerWar.MpwWatchSrcUserInfo;

            /**
             * Encodes the specified MpwWatchSrcUserInfo message. Does not implicitly {@link CommonProto.MultiPlayerWar.MpwWatchSrcUserInfo.verify|verify} messages.
             * @param message MpwWatchSrcUserInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.MultiPlayerWar.IMpwWatchSrcUserInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MpwWatchSrcUserInfo message, length delimited. Does not implicitly {@link CommonProto.MultiPlayerWar.MpwWatchSrcUserInfo.verify|verify} messages.
             * @param message MpwWatchSrcUserInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.MultiPlayerWar.IMpwWatchSrcUserInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MpwWatchSrcUserInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MpwWatchSrcUserInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.MultiPlayerWar.MpwWatchSrcUserInfo;

            /**
             * Decodes a MpwWatchSrcUserInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MpwWatchSrcUserInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.MultiPlayerWar.MpwWatchSrcUserInfo;

            /**
             * Verifies a MpwWatchSrcUserInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MpwWatchSrcUserInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MpwWatchSrcUserInfo
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.MultiPlayerWar.MpwWatchSrcUserInfo;

            /**
             * Creates a plain object from a MpwWatchSrcUserInfo message. Also converts values to other types if specified.
             * @param message MpwWatchSrcUserInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.MultiPlayerWar.MpwWatchSrcUserInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MpwWatchSrcUserInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a MpwWatchIncomingInfo. */
        interface IMpwWatchIncomingInfo {

            /** MpwWatchIncomingInfo warId */
            warId?: (number|null);

            /** MpwWatchIncomingInfo ongoingSrcUserIdArray */
            ongoingSrcUserIdArray?: (number[]|null);

            /** MpwWatchIncomingInfo requestSrcUserIdArray */
            requestSrcUserIdArray?: (number[]|null);

            /** MpwWatchIncomingInfo srcUserInfoArray */
            srcUserInfoArray?: (CommonProto.MultiPlayerWar.IMpwWatchSrcUserInfo[]|null);
        }

        /** Represents a MpwWatchIncomingInfo. */
        class MpwWatchIncomingInfo implements IMpwWatchIncomingInfo {

            /**
             * Constructs a new MpwWatchIncomingInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.MultiPlayerWar.IMpwWatchIncomingInfo);

            /** MpwWatchIncomingInfo warId. */
            public warId: number;

            /** MpwWatchIncomingInfo ongoingSrcUserIdArray. */
            public ongoingSrcUserIdArray: number[];

            /** MpwWatchIncomingInfo requestSrcUserIdArray. */
            public requestSrcUserIdArray: number[];

            /** MpwWatchIncomingInfo srcUserInfoArray. */
            public srcUserInfoArray: CommonProto.MultiPlayerWar.IMpwWatchSrcUserInfo[];

            /**
             * Creates a new MpwWatchIncomingInfo instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MpwWatchIncomingInfo instance
             */
            public static create(properties?: CommonProto.MultiPlayerWar.IMpwWatchIncomingInfo): CommonProto.MultiPlayerWar.MpwWatchIncomingInfo;

            /**
             * Encodes the specified MpwWatchIncomingInfo message. Does not implicitly {@link CommonProto.MultiPlayerWar.MpwWatchIncomingInfo.verify|verify} messages.
             * @param message MpwWatchIncomingInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.MultiPlayerWar.IMpwWatchIncomingInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MpwWatchIncomingInfo message, length delimited. Does not implicitly {@link CommonProto.MultiPlayerWar.MpwWatchIncomingInfo.verify|verify} messages.
             * @param message MpwWatchIncomingInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.MultiPlayerWar.IMpwWatchIncomingInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MpwWatchIncomingInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MpwWatchIncomingInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.MultiPlayerWar.MpwWatchIncomingInfo;

            /**
             * Decodes a MpwWatchIncomingInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MpwWatchIncomingInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.MultiPlayerWar.MpwWatchIncomingInfo;

            /**
             * Verifies a MpwWatchIncomingInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MpwWatchIncomingInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MpwWatchIncomingInfo
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.MultiPlayerWar.MpwWatchIncomingInfo;

            /**
             * Creates a plain object from a MpwWatchIncomingInfo message. Also converts values to other types if specified.
             * @param message MpwWatchIncomingInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.MultiPlayerWar.MpwWatchIncomingInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MpwWatchIncomingInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a MpwWatchOutgoingInfo. */
        interface IMpwWatchOutgoingInfo {

            /** MpwWatchOutgoingInfo warId */
            warId?: (number|null);

            /** MpwWatchOutgoingInfo ongoingDstUserIdArray */
            ongoingDstUserIdArray?: (number[]|null);

            /** MpwWatchOutgoingInfo requestDstUserIdArray */
            requestDstUserIdArray?: (number[]|null);
        }

        /** Represents a MpwWatchOutgoingInfo. */
        class MpwWatchOutgoingInfo implements IMpwWatchOutgoingInfo {

            /**
             * Constructs a new MpwWatchOutgoingInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.MultiPlayerWar.IMpwWatchOutgoingInfo);

            /** MpwWatchOutgoingInfo warId. */
            public warId: number;

            /** MpwWatchOutgoingInfo ongoingDstUserIdArray. */
            public ongoingDstUserIdArray: number[];

            /** MpwWatchOutgoingInfo requestDstUserIdArray. */
            public requestDstUserIdArray: number[];

            /**
             * Creates a new MpwWatchOutgoingInfo instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MpwWatchOutgoingInfo instance
             */
            public static create(properties?: CommonProto.MultiPlayerWar.IMpwWatchOutgoingInfo): CommonProto.MultiPlayerWar.MpwWatchOutgoingInfo;

            /**
             * Encodes the specified MpwWatchOutgoingInfo message. Does not implicitly {@link CommonProto.MultiPlayerWar.MpwWatchOutgoingInfo.verify|verify} messages.
             * @param message MpwWatchOutgoingInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.MultiPlayerWar.IMpwWatchOutgoingInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MpwWatchOutgoingInfo message, length delimited. Does not implicitly {@link CommonProto.MultiPlayerWar.MpwWatchOutgoingInfo.verify|verify} messages.
             * @param message MpwWatchOutgoingInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.MultiPlayerWar.IMpwWatchOutgoingInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MpwWatchOutgoingInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MpwWatchOutgoingInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.MultiPlayerWar.MpwWatchOutgoingInfo;

            /**
             * Decodes a MpwWatchOutgoingInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MpwWatchOutgoingInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.MultiPlayerWar.MpwWatchOutgoingInfo;

            /**
             * Verifies a MpwWatchOutgoingInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MpwWatchOutgoingInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MpwWatchOutgoingInfo
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.MultiPlayerWar.MpwWatchOutgoingInfo;

            /**
             * Creates a plain object from a MpwWatchOutgoingInfo message. Also converts values to other types if specified.
             * @param message MpwWatchOutgoingInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.MultiPlayerWar.MpwWatchOutgoingInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MpwWatchOutgoingInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a MpwFilter. */
        interface IMpwFilter {

            /** MpwFilter warId */
            warId?: (number|null);

            /** MpwFilter mapName */
            mapName?: (string|null);

            /** MpwFilter userNickname */
            userNickname?: (string|null);

            /** MpwFilter coName */
            coName?: (string|null);

            /** MpwFilter userIdInWar */
            userIdInWar?: (number|null);

            /** MpwFilter watchBeRequestedUserId */
            watchBeRequestedUserId?: (number|null);

            /** MpwFilter watchBeWatchedUserId */
            watchBeWatchedUserId?: (number|null);

            /** MpwFilter watchOngoingSrcUserId */
            watchOngoingSrcUserId?: (number|null);

            /** MpwFilter watchRequestableSrcUserId */
            watchRequestableSrcUserId?: (number|null);

            /** MpwFilter playersCountUnneutral */
            playersCountUnneutral?: (number|null);
        }

        /** Represents a MpwFilter. */
        class MpwFilter implements IMpwFilter {

            /**
             * Constructs a new MpwFilter.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.MultiPlayerWar.IMpwFilter);

            /** MpwFilter warId. */
            public warId: number;

            /** MpwFilter mapName. */
            public mapName: string;

            /** MpwFilter userNickname. */
            public userNickname: string;

            /** MpwFilter coName. */
            public coName: string;

            /** MpwFilter userIdInWar. */
            public userIdInWar: number;

            /** MpwFilter watchBeRequestedUserId. */
            public watchBeRequestedUserId: number;

            /** MpwFilter watchBeWatchedUserId. */
            public watchBeWatchedUserId: number;

            /** MpwFilter watchOngoingSrcUserId. */
            public watchOngoingSrcUserId: number;

            /** MpwFilter watchRequestableSrcUserId. */
            public watchRequestableSrcUserId: number;

            /** MpwFilter playersCountUnneutral. */
            public playersCountUnneutral: number;

            /**
             * Creates a new MpwFilter instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MpwFilter instance
             */
            public static create(properties?: CommonProto.MultiPlayerWar.IMpwFilter): CommonProto.MultiPlayerWar.MpwFilter;

            /**
             * Encodes the specified MpwFilter message. Does not implicitly {@link CommonProto.MultiPlayerWar.MpwFilter.verify|verify} messages.
             * @param message MpwFilter message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.MultiPlayerWar.IMpwFilter, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MpwFilter message, length delimited. Does not implicitly {@link CommonProto.MultiPlayerWar.MpwFilter.verify|verify} messages.
             * @param message MpwFilter message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.MultiPlayerWar.IMpwFilter, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MpwFilter message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MpwFilter
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.MultiPlayerWar.MpwFilter;

            /**
             * Decodes a MpwFilter message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MpwFilter
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.MultiPlayerWar.MpwFilter;

            /**
             * Verifies a MpwFilter message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MpwFilter message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MpwFilter
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.MultiPlayerWar.MpwFilter;

            /**
             * Creates a plain object from a MpwFilter message. Also converts values to other types if specified.
             * @param message MpwFilter
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.MultiPlayerWar.MpwFilter, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MpwFilter to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a MpwWarSettings. */
        interface IMpwWarSettings {

            /** MpwWarSettings warId */
            warId?: (number|null);

            /** MpwWarSettings settingsForCommon */
            settingsForCommon?: (CommonProto.WarSettings.ISettingsForCommon|null);

            /** MpwWarSettings settingsForMcw */
            settingsForMcw?: (CommonProto.WarSettings.ISettingsForMcw|null);

            /** MpwWarSettings settingsForMrw */
            settingsForMrw?: (CommonProto.WarSettings.ISettingsForMrw|null);

            /** MpwWarSettings settingsForMfw */
            settingsForMfw?: (CommonProto.WarSettings.ISettingsForMfw|null);

            /** MpwWarSettings settingsForCcw */
            settingsForCcw?: (CommonProto.WarSettings.ISettingsForCcw|null);
        }

        /** Represents a MpwWarSettings. */
        class MpwWarSettings implements IMpwWarSettings {

            /**
             * Constructs a new MpwWarSettings.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.MultiPlayerWar.IMpwWarSettings);

            /** MpwWarSettings warId. */
            public warId: number;

            /** MpwWarSettings settingsForCommon. */
            public settingsForCommon?: (CommonProto.WarSettings.ISettingsForCommon|null);

            /** MpwWarSettings settingsForMcw. */
            public settingsForMcw?: (CommonProto.WarSettings.ISettingsForMcw|null);

            /** MpwWarSettings settingsForMrw. */
            public settingsForMrw?: (CommonProto.WarSettings.ISettingsForMrw|null);

            /** MpwWarSettings settingsForMfw. */
            public settingsForMfw?: (CommonProto.WarSettings.ISettingsForMfw|null);

            /** MpwWarSettings settingsForCcw. */
            public settingsForCcw?: (CommonProto.WarSettings.ISettingsForCcw|null);

            /**
             * Creates a new MpwWarSettings instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MpwWarSettings instance
             */
            public static create(properties?: CommonProto.MultiPlayerWar.IMpwWarSettings): CommonProto.MultiPlayerWar.MpwWarSettings;

            /**
             * Encodes the specified MpwWarSettings message. Does not implicitly {@link CommonProto.MultiPlayerWar.MpwWarSettings.verify|verify} messages.
             * @param message MpwWarSettings message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.MultiPlayerWar.IMpwWarSettings, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MpwWarSettings message, length delimited. Does not implicitly {@link CommonProto.MultiPlayerWar.MpwWarSettings.verify|verify} messages.
             * @param message MpwWarSettings message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.MultiPlayerWar.IMpwWarSettings, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MpwWarSettings message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MpwWarSettings
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.MultiPlayerWar.MpwWarSettings;

            /**
             * Decodes a MpwWarSettings message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MpwWarSettings
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.MultiPlayerWar.MpwWarSettings;

            /**
             * Verifies a MpwWarSettings message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MpwWarSettings message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MpwWarSettings
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.MultiPlayerWar.MpwWarSettings;

            /**
             * Creates a plain object from a MpwWarSettings message. Also converts values to other types if specified.
             * @param message MpwWarSettings
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.MultiPlayerWar.MpwWarSettings, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MpwWarSettings to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a MpwWarProgressInfo. */
        interface IMpwWarProgressInfo {

            /** MpwWarProgressInfo warId */
            warId?: (number|null);

            /** MpwWarProgressInfo playerInfoList */
            playerInfoList?: (CommonProto.Structure.IWarPlayerInfo[]|null);

            /** MpwWarProgressInfo playerIndexInTurn */
            playerIndexInTurn?: (number|null);

            /** MpwWarProgressInfo turnIndex */
            turnIndex?: (number|null);

            /** MpwWarProgressInfo enterTurnTime */
            enterTurnTime?: (number|null);

            /** MpwWarProgressInfo isEnded */
            isEnded?: (boolean|null);
        }

        /** Represents a MpwWarProgressInfo. */
        class MpwWarProgressInfo implements IMpwWarProgressInfo {

            /**
             * Constructs a new MpwWarProgressInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.MultiPlayerWar.IMpwWarProgressInfo);

            /** MpwWarProgressInfo warId. */
            public warId: number;

            /** MpwWarProgressInfo playerInfoList. */
            public playerInfoList: CommonProto.Structure.IWarPlayerInfo[];

            /** MpwWarProgressInfo playerIndexInTurn. */
            public playerIndexInTurn: number;

            /** MpwWarProgressInfo turnIndex. */
            public turnIndex: number;

            /** MpwWarProgressInfo enterTurnTime. */
            public enterTurnTime: number;

            /** MpwWarProgressInfo isEnded. */
            public isEnded: boolean;

            /**
             * Creates a new MpwWarProgressInfo instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MpwWarProgressInfo instance
             */
            public static create(properties?: CommonProto.MultiPlayerWar.IMpwWarProgressInfo): CommonProto.MultiPlayerWar.MpwWarProgressInfo;

            /**
             * Encodes the specified MpwWarProgressInfo message. Does not implicitly {@link CommonProto.MultiPlayerWar.MpwWarProgressInfo.verify|verify} messages.
             * @param message MpwWarProgressInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.MultiPlayerWar.IMpwWarProgressInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MpwWarProgressInfo message, length delimited. Does not implicitly {@link CommonProto.MultiPlayerWar.MpwWarProgressInfo.verify|verify} messages.
             * @param message MpwWarProgressInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.MultiPlayerWar.IMpwWarProgressInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MpwWarProgressInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MpwWarProgressInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.MultiPlayerWar.MpwWarProgressInfo;

            /**
             * Decodes a MpwWarProgressInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MpwWarProgressInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.MultiPlayerWar.MpwWarProgressInfo;

            /**
             * Verifies a MpwWarProgressInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MpwWarProgressInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MpwWarProgressInfo
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.MultiPlayerWar.MpwWarProgressInfo;

            /**
             * Creates a plain object from a MpwWarProgressInfo message. Also converts values to other types if specified.
             * @param message MpwWarProgressInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.MultiPlayerWar.MpwWarProgressInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MpwWarProgressInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MultiRankRoom. */
    interface IMultiRankRoom {
    }

    /** Represents a MultiRankRoom. */
    class MultiRankRoom implements IMultiRankRoom {

        /**
         * Constructs a new MultiRankRoom.
         * @param [properties] Properties to set
         */
        constructor(properties?: CommonProto.IMultiRankRoom);

        /**
         * Creates a new MultiRankRoom instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MultiRankRoom instance
         */
        public static create(properties?: CommonProto.IMultiRankRoom): CommonProto.MultiRankRoom;

        /**
         * Encodes the specified MultiRankRoom message. Does not implicitly {@link CommonProto.MultiRankRoom.verify|verify} messages.
         * @param message MultiRankRoom message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: CommonProto.IMultiRankRoom, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MultiRankRoom message, length delimited. Does not implicitly {@link CommonProto.MultiRankRoom.verify|verify} messages.
         * @param message MultiRankRoom message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: CommonProto.IMultiRankRoom, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MultiRankRoom message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MultiRankRoom
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.MultiRankRoom;

        /**
         * Decodes a MultiRankRoom message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MultiRankRoom
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.MultiRankRoom;

        /**
         * Verifies a MultiRankRoom message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MultiRankRoom message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MultiRankRoom
         */
        public static fromObject(object: { [k: string]: any }): CommonProto.MultiRankRoom;

        /**
         * Creates a plain object from a MultiRankRoom message. Also converts values to other types if specified.
         * @param message MultiRankRoom
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: CommonProto.MultiRankRoom, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MultiRankRoom to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MultiRankRoom {

        /** Properties of a DataForMrrQueue. */
        interface IDataForMrrQueue {

            /** DataForMrrQueue queueType */
            queueType?: (number|null);

            /** DataForMrrQueue userId */
            userId?: (number|null);

            /** DataForMrrQueue timestamp */
            timestamp?: (number|null);

            /** DataForMrrQueue maxConcurrentCount */
            maxConcurrentCount?: (number|null);
        }

        /** Represents a DataForMrrQueue. */
        class DataForMrrQueue implements IDataForMrrQueue {

            /**
             * Constructs a new DataForMrrQueue.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.MultiRankRoom.IDataForMrrQueue);

            /** DataForMrrQueue queueType. */
            public queueType: number;

            /** DataForMrrQueue userId. */
            public userId: number;

            /** DataForMrrQueue timestamp. */
            public timestamp: number;

            /** DataForMrrQueue maxConcurrentCount. */
            public maxConcurrentCount: number;

            /**
             * Creates a new DataForMrrQueue instance using the specified properties.
             * @param [properties] Properties to set
             * @returns DataForMrrQueue instance
             */
            public static create(properties?: CommonProto.MultiRankRoom.IDataForMrrQueue): CommonProto.MultiRankRoom.DataForMrrQueue;

            /**
             * Encodes the specified DataForMrrQueue message. Does not implicitly {@link CommonProto.MultiRankRoom.DataForMrrQueue.verify|verify} messages.
             * @param message DataForMrrQueue message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.MultiRankRoom.IDataForMrrQueue, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified DataForMrrQueue message, length delimited. Does not implicitly {@link CommonProto.MultiRankRoom.DataForMrrQueue.verify|verify} messages.
             * @param message DataForMrrQueue message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.MultiRankRoom.IDataForMrrQueue, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a DataForMrrQueue message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns DataForMrrQueue
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.MultiRankRoom.DataForMrrQueue;

            /**
             * Decodes a DataForMrrQueue message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns DataForMrrQueue
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.MultiRankRoom.DataForMrrQueue;

            /**
             * Verifies a DataForMrrQueue message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a DataForMrrQueue message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns DataForMrrQueue
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.MultiRankRoom.DataForMrrQueue;

            /**
             * Creates a plain object from a DataForMrrQueue message. Also converts values to other types if specified.
             * @param message DataForMrrQueue
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.MultiRankRoom.DataForMrrQueue, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this DataForMrrQueue to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a MrrQueueInfo. */
        interface IMrrQueueInfo {

            /** MrrQueueInfo dataList */
            dataList?: (CommonProto.MultiRankRoom.IDataForMrrQueue[]|null);
        }

        /** Represents a MrrQueueInfo. */
        class MrrQueueInfo implements IMrrQueueInfo {

            /**
             * Constructs a new MrrQueueInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.MultiRankRoom.IMrrQueueInfo);

            /** MrrQueueInfo dataList. */
            public dataList: CommonProto.MultiRankRoom.IDataForMrrQueue[];

            /**
             * Creates a new MrrQueueInfo instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MrrQueueInfo instance
             */
            public static create(properties?: CommonProto.MultiRankRoom.IMrrQueueInfo): CommonProto.MultiRankRoom.MrrQueueInfo;

            /**
             * Encodes the specified MrrQueueInfo message. Does not implicitly {@link CommonProto.MultiRankRoom.MrrQueueInfo.verify|verify} messages.
             * @param message MrrQueueInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.MultiRankRoom.IMrrQueueInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MrrQueueInfo message, length delimited. Does not implicitly {@link CommonProto.MultiRankRoom.MrrQueueInfo.verify|verify} messages.
             * @param message MrrQueueInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.MultiRankRoom.IMrrQueueInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MrrQueueInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MrrQueueInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.MultiRankRoom.MrrQueueInfo;

            /**
             * Decodes a MrrQueueInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MrrQueueInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.MultiRankRoom.MrrQueueInfo;

            /**
             * Verifies a MrrQueueInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MrrQueueInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MrrQueueInfo
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.MultiRankRoom.MrrQueueInfo;

            /**
             * Creates a plain object from a MrrQueueInfo message. Also converts values to other types if specified.
             * @param message MrrQueueInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.MultiRankRoom.MrrQueueInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MrrQueueInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a MrrRoomInfo. */
        interface IMrrRoomInfo {

            /** MrrRoomInfo roomId */
            roomId?: (number|null);

            /** MrrRoomInfo timeForCreateRoom */
            timeForCreateRoom?: (number|null);

            /** MrrRoomInfo timeForStartSetSelfSettings */
            timeForStartSetSelfSettings?: (number|null);

            /** MrrRoomInfo settingsForCommon */
            settingsForCommon?: (CommonProto.WarSettings.ISettingsForCommon|null);

            /** MrrRoomInfo settingsForMrw */
            settingsForMrw?: (CommonProto.WarSettings.ISettingsForMrw|null);

            /** MrrRoomInfo playerDataList */
            playerDataList?: (CommonProto.Structure.IDataForPlayerInRoom[]|null);
        }

        /** Represents a MrrRoomInfo. */
        class MrrRoomInfo implements IMrrRoomInfo {

            /**
             * Constructs a new MrrRoomInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.MultiRankRoom.IMrrRoomInfo);

            /** MrrRoomInfo roomId. */
            public roomId: number;

            /** MrrRoomInfo timeForCreateRoom. */
            public timeForCreateRoom: number;

            /** MrrRoomInfo timeForStartSetSelfSettings. */
            public timeForStartSetSelfSettings: number;

            /** MrrRoomInfo settingsForCommon. */
            public settingsForCommon?: (CommonProto.WarSettings.ISettingsForCommon|null);

            /** MrrRoomInfo settingsForMrw. */
            public settingsForMrw?: (CommonProto.WarSettings.ISettingsForMrw|null);

            /** MrrRoomInfo playerDataList. */
            public playerDataList: CommonProto.Structure.IDataForPlayerInRoom[];

            /**
             * Creates a new MrrRoomInfo instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MrrRoomInfo instance
             */
            public static create(properties?: CommonProto.MultiRankRoom.IMrrRoomInfo): CommonProto.MultiRankRoom.MrrRoomInfo;

            /**
             * Encodes the specified MrrRoomInfo message. Does not implicitly {@link CommonProto.MultiRankRoom.MrrRoomInfo.verify|verify} messages.
             * @param message MrrRoomInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.MultiRankRoom.IMrrRoomInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MrrRoomInfo message, length delimited. Does not implicitly {@link CommonProto.MultiRankRoom.MrrRoomInfo.verify|verify} messages.
             * @param message MrrRoomInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.MultiRankRoom.IMrrRoomInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MrrRoomInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MrrRoomInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.MultiRankRoom.MrrRoomInfo;

            /**
             * Decodes a MrrRoomInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MrrRoomInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.MultiRankRoom.MrrRoomInfo;

            /**
             * Verifies a MrrRoomInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MrrRoomInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MrrRoomInfo
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.MultiRankRoom.MrrRoomInfo;

            /**
             * Creates a plain object from a MrrRoomInfo message. Also converts values to other types if specified.
             * @param message MrrRoomInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.MultiRankRoom.MrrRoomInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MrrRoomInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a MrrRoomInfoList. */
        interface IMrrRoomInfoList {

            /** MrrRoomInfoList roomList */
            roomList?: (CommonProto.MultiRankRoom.IMrrRoomInfo[]|null);
        }

        /** Represents a MrrRoomInfoList. */
        class MrrRoomInfoList implements IMrrRoomInfoList {

            /**
             * Constructs a new MrrRoomInfoList.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.MultiRankRoom.IMrrRoomInfoList);

            /** MrrRoomInfoList roomList. */
            public roomList: CommonProto.MultiRankRoom.IMrrRoomInfo[];

            /**
             * Creates a new MrrRoomInfoList instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MrrRoomInfoList instance
             */
            public static create(properties?: CommonProto.MultiRankRoom.IMrrRoomInfoList): CommonProto.MultiRankRoom.MrrRoomInfoList;

            /**
             * Encodes the specified MrrRoomInfoList message. Does not implicitly {@link CommonProto.MultiRankRoom.MrrRoomInfoList.verify|verify} messages.
             * @param message MrrRoomInfoList message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.MultiRankRoom.IMrrRoomInfoList, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MrrRoomInfoList message, length delimited. Does not implicitly {@link CommonProto.MultiRankRoom.MrrRoomInfoList.verify|verify} messages.
             * @param message MrrRoomInfoList message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.MultiRankRoom.IMrrRoomInfoList, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MrrRoomInfoList message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MrrRoomInfoList
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.MultiRankRoom.MrrRoomInfoList;

            /**
             * Decodes a MrrRoomInfoList message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MrrRoomInfoList
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.MultiRankRoom.MrrRoomInfoList;

            /**
             * Verifies a MrrRoomInfoList message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MrrRoomInfoList message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MrrRoomInfoList
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.MultiRankRoom.MrrRoomInfoList;

            /**
             * Creates a plain object from a MrrRoomInfoList message. Also converts values to other types if specified.
             * @param message MrrRoomInfoList
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.MultiRankRoom.MrrRoomInfoList, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MrrRoomInfoList to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a SinglePlayerMode. */
    interface ISinglePlayerMode {
    }

    /** Represents a SinglePlayerMode. */
    class SinglePlayerMode implements ISinglePlayerMode {

        /**
         * Constructs a new SinglePlayerMode.
         * @param [properties] Properties to set
         */
        constructor(properties?: CommonProto.ISinglePlayerMode);

        /**
         * Creates a new SinglePlayerMode instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SinglePlayerMode instance
         */
        public static create(properties?: CommonProto.ISinglePlayerMode): CommonProto.SinglePlayerMode;

        /**
         * Encodes the specified SinglePlayerMode message. Does not implicitly {@link CommonProto.SinglePlayerMode.verify|verify} messages.
         * @param message SinglePlayerMode message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: CommonProto.ISinglePlayerMode, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SinglePlayerMode message, length delimited. Does not implicitly {@link CommonProto.SinglePlayerMode.verify|verify} messages.
         * @param message SinglePlayerMode message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: CommonProto.ISinglePlayerMode, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SinglePlayerMode message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SinglePlayerMode
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.SinglePlayerMode;

        /**
         * Decodes a SinglePlayerMode message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SinglePlayerMode
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.SinglePlayerMode;

        /**
         * Verifies a SinglePlayerMode message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SinglePlayerMode message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SinglePlayerMode
         */
        public static fromObject(object: { [k: string]: any }): CommonProto.SinglePlayerMode;

        /**
         * Creates a plain object from a SinglePlayerMode message. Also converts values to other types if specified.
         * @param message SinglePlayerMode
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: CommonProto.SinglePlayerMode, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SinglePlayerMode to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace SinglePlayerMode {

        /** Properties of a SpmWarSaveSlotExtraData. */
        interface ISpmWarSaveSlotExtraData {

            /** SpmWarSaveSlotExtraData slotComment */
            slotComment?: (string|null);

            /** SpmWarSaveSlotExtraData timestamp */
            timestamp?: (number|null);
        }

        /** Represents a SpmWarSaveSlotExtraData. */
        class SpmWarSaveSlotExtraData implements ISpmWarSaveSlotExtraData {

            /**
             * Constructs a new SpmWarSaveSlotExtraData.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.SinglePlayerMode.ISpmWarSaveSlotExtraData);

            /** SpmWarSaveSlotExtraData slotComment. */
            public slotComment: string;

            /** SpmWarSaveSlotExtraData timestamp. */
            public timestamp: number;

            /**
             * Creates a new SpmWarSaveSlotExtraData instance using the specified properties.
             * @param [properties] Properties to set
             * @returns SpmWarSaveSlotExtraData instance
             */
            public static create(properties?: CommonProto.SinglePlayerMode.ISpmWarSaveSlotExtraData): CommonProto.SinglePlayerMode.SpmWarSaveSlotExtraData;

            /**
             * Encodes the specified SpmWarSaveSlotExtraData message. Does not implicitly {@link CommonProto.SinglePlayerMode.SpmWarSaveSlotExtraData.verify|verify} messages.
             * @param message SpmWarSaveSlotExtraData message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.SinglePlayerMode.ISpmWarSaveSlotExtraData, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified SpmWarSaveSlotExtraData message, length delimited. Does not implicitly {@link CommonProto.SinglePlayerMode.SpmWarSaveSlotExtraData.verify|verify} messages.
             * @param message SpmWarSaveSlotExtraData message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.SinglePlayerMode.ISpmWarSaveSlotExtraData, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a SpmWarSaveSlotExtraData message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SpmWarSaveSlotExtraData
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.SinglePlayerMode.SpmWarSaveSlotExtraData;

            /**
             * Decodes a SpmWarSaveSlotExtraData message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SpmWarSaveSlotExtraData
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.SinglePlayerMode.SpmWarSaveSlotExtraData;

            /**
             * Verifies a SpmWarSaveSlotExtraData message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SpmWarSaveSlotExtraData message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SpmWarSaveSlotExtraData
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.SinglePlayerMode.SpmWarSaveSlotExtraData;

            /**
             * Creates a plain object from a SpmWarSaveSlotExtraData message. Also converts values to other types if specified.
             * @param message SpmWarSaveSlotExtraData
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.SinglePlayerMode.SpmWarSaveSlotExtraData, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SpmWarSaveSlotExtraData to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a SpmWarSaveSlotFullData. */
        interface ISpmWarSaveSlotFullData {

            /** SpmWarSaveSlotFullData slotIndex */
            slotIndex?: (number|null);

            /** SpmWarSaveSlotFullData encodedExtraData */
            encodedExtraData?: (Uint8Array|null);

            /** SpmWarSaveSlotFullData encodedWarData */
            encodedWarData?: (Uint8Array|null);
        }

        /** Represents a SpmWarSaveSlotFullData. */
        class SpmWarSaveSlotFullData implements ISpmWarSaveSlotFullData {

            /**
             * Constructs a new SpmWarSaveSlotFullData.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.SinglePlayerMode.ISpmWarSaveSlotFullData);

            /** SpmWarSaveSlotFullData slotIndex. */
            public slotIndex: number;

            /** SpmWarSaveSlotFullData encodedExtraData. */
            public encodedExtraData: Uint8Array;

            /** SpmWarSaveSlotFullData encodedWarData. */
            public encodedWarData: Uint8Array;

            /**
             * Creates a new SpmWarSaveSlotFullData instance using the specified properties.
             * @param [properties] Properties to set
             * @returns SpmWarSaveSlotFullData instance
             */
            public static create(properties?: CommonProto.SinglePlayerMode.ISpmWarSaveSlotFullData): CommonProto.SinglePlayerMode.SpmWarSaveSlotFullData;

            /**
             * Encodes the specified SpmWarSaveSlotFullData message. Does not implicitly {@link CommonProto.SinglePlayerMode.SpmWarSaveSlotFullData.verify|verify} messages.
             * @param message SpmWarSaveSlotFullData message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.SinglePlayerMode.ISpmWarSaveSlotFullData, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified SpmWarSaveSlotFullData message, length delimited. Does not implicitly {@link CommonProto.SinglePlayerMode.SpmWarSaveSlotFullData.verify|verify} messages.
             * @param message SpmWarSaveSlotFullData message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.SinglePlayerMode.ISpmWarSaveSlotFullData, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a SpmWarSaveSlotFullData message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SpmWarSaveSlotFullData
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.SinglePlayerMode.SpmWarSaveSlotFullData;

            /**
             * Decodes a SpmWarSaveSlotFullData message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SpmWarSaveSlotFullData
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.SinglePlayerMode.SpmWarSaveSlotFullData;

            /**
             * Verifies a SpmWarSaveSlotFullData message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SpmWarSaveSlotFullData message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SpmWarSaveSlotFullData
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.SinglePlayerMode.SpmWarSaveSlotFullData;

            /**
             * Creates a plain object from a SpmWarSaveSlotFullData message. Also converts values to other types if specified.
             * @param message SpmWarSaveSlotFullData
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.SinglePlayerMode.SpmWarSaveSlotFullData, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SpmWarSaveSlotFullData to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a Replay. */
    interface IReplay {
    }

    /** Represents a Replay. */
    class Replay implements IReplay {

        /**
         * Constructs a new Replay.
         * @param [properties] Properties to set
         */
        constructor(properties?: CommonProto.IReplay);

        /**
         * Creates a new Replay instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Replay instance
         */
        public static create(properties?: CommonProto.IReplay): CommonProto.Replay;

        /**
         * Encodes the specified Replay message. Does not implicitly {@link CommonProto.Replay.verify|verify} messages.
         * @param message Replay message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: CommonProto.IReplay, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified Replay message, length delimited. Does not implicitly {@link CommonProto.Replay.verify|verify} messages.
         * @param message Replay message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: CommonProto.IReplay, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a Replay message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Replay
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.Replay;

        /**
         * Decodes a Replay message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Replay
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.Replay;

        /**
         * Verifies a Replay message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Replay message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Replay
         */
        public static fromObject(object: { [k: string]: any }): CommonProto.Replay;

        /**
         * Creates a plain object from a Replay message. Also converts values to other types if specified.
         * @param message Replay
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: CommonProto.Replay, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Replay to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace Replay {

        /** Properties of a ReplayFilter. */
        interface IReplayFilter {

            /** ReplayFilter replayId */
            replayId?: (number|null);

            /** ReplayFilter mapName */
            mapName?: (string|null);

            /** ReplayFilter minMyRating */
            minMyRating?: (number|null);

            /** ReplayFilter minGlobalRating */
            minGlobalRating?: (number|null);

            /** ReplayFilter userNickname */
            userNickname?: (string|null);

            /** ReplayFilter coName */
            coName?: (string|null);

            /** ReplayFilter hasFog */
            hasFog?: (boolean|null);

            /** ReplayFilter isRankedMatch */
            isRankedMatch?: (boolean|null);
        }

        /** Represents a ReplayFilter. */
        class ReplayFilter implements IReplayFilter {

            /**
             * Constructs a new ReplayFilter.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.Replay.IReplayFilter);

            /** ReplayFilter replayId. */
            public replayId: number;

            /** ReplayFilter mapName. */
            public mapName: string;

            /** ReplayFilter minMyRating. */
            public minMyRating: number;

            /** ReplayFilter minGlobalRating. */
            public minGlobalRating: number;

            /** ReplayFilter userNickname. */
            public userNickname: string;

            /** ReplayFilter coName. */
            public coName: string;

            /** ReplayFilter hasFog. */
            public hasFog: boolean;

            /** ReplayFilter isRankedMatch. */
            public isRankedMatch: boolean;

            /**
             * Creates a new ReplayFilter instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ReplayFilter instance
             */
            public static create(properties?: CommonProto.Replay.IReplayFilter): CommonProto.Replay.ReplayFilter;

            /**
             * Encodes the specified ReplayFilter message. Does not implicitly {@link CommonProto.Replay.ReplayFilter.verify|verify} messages.
             * @param message ReplayFilter message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.Replay.IReplayFilter, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified ReplayFilter message, length delimited. Does not implicitly {@link CommonProto.Replay.ReplayFilter.verify|verify} messages.
             * @param message ReplayFilter message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.Replay.IReplayFilter, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a ReplayFilter message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ReplayFilter
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.Replay.ReplayFilter;

            /**
             * Decodes a ReplayFilter message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ReplayFilter
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.Replay.ReplayFilter;

            /**
             * Verifies a ReplayFilter message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ReplayFilter message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ReplayFilter
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.Replay.ReplayFilter;

            /**
             * Creates a plain object from a ReplayFilter message. Also converts values to other types if specified.
             * @param message ReplayFilter
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.Replay.ReplayFilter, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ReplayFilter to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a ReplayInfo. */
        interface IReplayInfo {

            /** ReplayInfo replayId */
            replayId?: (number|null);

            /** ReplayInfo configVersion */
            configVersion?: (string|null);

            /** ReplayInfo warType */
            warType?: (number|null);

            /** ReplayInfo mapId */
            mapId?: (number|null);

            /** ReplayInfo hasFog */
            hasFog?: (boolean|null);

            /** ReplayInfo turnIndex */
            turnIndex?: (number|null);

            /** ReplayInfo executedActionsCount */
            executedActionsCount?: (number|null);

            /** ReplayInfo warEndTime */
            warEndTime?: (number|null);

            /** ReplayInfo totalRating */
            totalRating?: (number|null);

            /** ReplayInfo totalRaters */
            totalRaters?: (number|null);

            /** ReplayInfo isDraw */
            isDraw?: (boolean|null);

            /** ReplayInfo playerInfoList */
            playerInfoList?: (CommonProto.Structure.IWarPlayerInfo[]|null);
        }

        /** Represents a ReplayInfo. */
        class ReplayInfo implements IReplayInfo {

            /**
             * Constructs a new ReplayInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.Replay.IReplayInfo);

            /** ReplayInfo replayId. */
            public replayId: number;

            /** ReplayInfo configVersion. */
            public configVersion: string;

            /** ReplayInfo warType. */
            public warType: number;

            /** ReplayInfo mapId. */
            public mapId: number;

            /** ReplayInfo hasFog. */
            public hasFog: boolean;

            /** ReplayInfo turnIndex. */
            public turnIndex: number;

            /** ReplayInfo executedActionsCount. */
            public executedActionsCount: number;

            /** ReplayInfo warEndTime. */
            public warEndTime: number;

            /** ReplayInfo totalRating. */
            public totalRating: number;

            /** ReplayInfo totalRaters. */
            public totalRaters: number;

            /** ReplayInfo isDraw. */
            public isDraw: boolean;

            /** ReplayInfo playerInfoList. */
            public playerInfoList: CommonProto.Structure.IWarPlayerInfo[];

            /**
             * Creates a new ReplayInfo instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ReplayInfo instance
             */
            public static create(properties?: CommonProto.Replay.IReplayInfo): CommonProto.Replay.ReplayInfo;

            /**
             * Encodes the specified ReplayInfo message. Does not implicitly {@link CommonProto.Replay.ReplayInfo.verify|verify} messages.
             * @param message ReplayInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.Replay.IReplayInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified ReplayInfo message, length delimited. Does not implicitly {@link CommonProto.Replay.ReplayInfo.verify|verify} messages.
             * @param message ReplayInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.Replay.IReplayInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a ReplayInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ReplayInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.Replay.ReplayInfo;

            /**
             * Decodes a ReplayInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ReplayInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.Replay.ReplayInfo;

            /**
             * Verifies a ReplayInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ReplayInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ReplayInfo
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.Replay.ReplayInfo;

            /**
             * Creates a plain object from a ReplayInfo message. Also converts values to other types if specified.
             * @param message ReplayInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.Replay.ReplayInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ReplayInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a Chat. */
    interface IChat {
    }

    /** Represents a Chat. */
    class Chat implements IChat {

        /**
         * Constructs a new Chat.
         * @param [properties] Properties to set
         */
        constructor(properties?: CommonProto.IChat);

        /**
         * Creates a new Chat instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Chat instance
         */
        public static create(properties?: CommonProto.IChat): CommonProto.Chat;

        /**
         * Encodes the specified Chat message. Does not implicitly {@link CommonProto.Chat.verify|verify} messages.
         * @param message Chat message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: CommonProto.IChat, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified Chat message, length delimited. Does not implicitly {@link CommonProto.Chat.verify|verify} messages.
         * @param message Chat message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: CommonProto.IChat, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a Chat message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Chat
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.Chat;

        /**
         * Decodes a Chat message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Chat
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.Chat;

        /**
         * Verifies a Chat message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Chat message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Chat
         */
        public static fromObject(object: { [k: string]: any }): CommonProto.Chat;

        /**
         * Creates a plain object from a Chat message. Also converts values to other types if specified.
         * @param message Chat
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: CommonProto.Chat, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Chat to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace Chat {

        /** Properties of a ChatMessage. */
        interface IChatMessage {

            /** ChatMessage messageId */
            messageId?: (number|null);

            /** ChatMessage fromUserId */
            fromUserId?: (number|null);

            /** ChatMessage toCategory */
            toCategory?: (number|null);

            /** ChatMessage toTarget */
            toTarget?: (number|null);

            /** ChatMessage content */
            content?: (string|null);

            /** ChatMessage timestamp */
            timestamp?: (number|null);
        }

        /** Represents a ChatMessage. */
        class ChatMessage implements IChatMessage {

            /**
             * Constructs a new ChatMessage.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.Chat.IChatMessage);

            /** ChatMessage messageId. */
            public messageId: number;

            /** ChatMessage fromUserId. */
            public fromUserId: number;

            /** ChatMessage toCategory. */
            public toCategory: number;

            /** ChatMessage toTarget. */
            public toTarget: number;

            /** ChatMessage content. */
            public content: string;

            /** ChatMessage timestamp. */
            public timestamp: number;

            /**
             * Creates a new ChatMessage instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ChatMessage instance
             */
            public static create(properties?: CommonProto.Chat.IChatMessage): CommonProto.Chat.ChatMessage;

            /**
             * Encodes the specified ChatMessage message. Does not implicitly {@link CommonProto.Chat.ChatMessage.verify|verify} messages.
             * @param message ChatMessage message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.Chat.IChatMessage, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified ChatMessage message, length delimited. Does not implicitly {@link CommonProto.Chat.ChatMessage.verify|verify} messages.
             * @param message ChatMessage message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.Chat.IChatMessage, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a ChatMessage message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ChatMessage
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.Chat.ChatMessage;

            /**
             * Decodes a ChatMessage message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ChatMessage
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.Chat.ChatMessage;

            /**
             * Verifies a ChatMessage message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ChatMessage message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ChatMessage
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.Chat.ChatMessage;

            /**
             * Creates a plain object from a ChatMessage message. Also converts values to other types if specified.
             * @param message ChatMessage
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.Chat.ChatMessage, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ChatMessage to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a ChatReadProgress. */
        interface IChatReadProgress {

            /** ChatReadProgress toCategory */
            toCategory?: (number|null);

            /** ChatReadProgress toTarget */
            toTarget?: (number|null);

            /** ChatReadProgress timestamp */
            timestamp?: (number|null);
        }

        /** Represents a ChatReadProgress. */
        class ChatReadProgress implements IChatReadProgress {

            /**
             * Constructs a new ChatReadProgress.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.Chat.IChatReadProgress);

            /** ChatReadProgress toCategory. */
            public toCategory: number;

            /** ChatReadProgress toTarget. */
            public toTarget: number;

            /** ChatReadProgress timestamp. */
            public timestamp: number;

            /**
             * Creates a new ChatReadProgress instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ChatReadProgress instance
             */
            public static create(properties?: CommonProto.Chat.IChatReadProgress): CommonProto.Chat.ChatReadProgress;

            /**
             * Encodes the specified ChatReadProgress message. Does not implicitly {@link CommonProto.Chat.ChatReadProgress.verify|verify} messages.
             * @param message ChatReadProgress message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.Chat.IChatReadProgress, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified ChatReadProgress message, length delimited. Does not implicitly {@link CommonProto.Chat.ChatReadProgress.verify|verify} messages.
             * @param message ChatReadProgress message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.Chat.IChatReadProgress, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a ChatReadProgress message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ChatReadProgress
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.Chat.ChatReadProgress;

            /**
             * Decodes a ChatReadProgress message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ChatReadProgress
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.Chat.ChatReadProgress;

            /**
             * Verifies a ChatReadProgress message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ChatReadProgress message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ChatReadProgress
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.Chat.ChatReadProgress;

            /**
             * Creates a plain object from a ChatReadProgress message. Also converts values to other types if specified.
             * @param message ChatReadProgress
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.Chat.ChatReadProgress, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ChatReadProgress to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a User. */
    interface IUser {
    }

    /** Represents a User. */
    class User implements IUser {

        /**
         * Constructs a new User.
         * @param [properties] Properties to set
         */
        constructor(properties?: CommonProto.IUser);

        /**
         * Creates a new User instance using the specified properties.
         * @param [properties] Properties to set
         * @returns User instance
         */
        public static create(properties?: CommonProto.IUser): CommonProto.User;

        /**
         * Encodes the specified User message. Does not implicitly {@link CommonProto.User.verify|verify} messages.
         * @param message User message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: CommonProto.IUser, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified User message, length delimited. Does not implicitly {@link CommonProto.User.verify|verify} messages.
         * @param message User message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: CommonProto.IUser, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a User message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns User
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.User;

        /**
         * Decodes a User message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns User
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.User;

        /**
         * Verifies a User message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a User message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns User
         */
        public static fromObject(object: { [k: string]: any }): CommonProto.User;

        /**
         * Creates a plain object from a User message. Also converts values to other types if specified.
         * @param message User
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: CommonProto.User, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this User to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace User {

        /** Properties of a UserPrivilege. */
        interface IUserPrivilege {

            /** UserPrivilege canLogin */
            canLogin?: (boolean|null);

            /** UserPrivilege canChat */
            canChat?: (boolean|null);

            /** UserPrivilege isAdmin */
            isAdmin?: (boolean|null);

            /** UserPrivilege isMapCommittee */
            isMapCommittee?: (boolean|null);

            /** UserPrivilege isChangeLogEditor */
            isChangeLogEditor?: (boolean|null);

            /** UserPrivilege isChatManager */
            isChatManager?: (boolean|null);
        }

        /** Represents a UserPrivilege. */
        class UserPrivilege implements IUserPrivilege {

            /**
             * Constructs a new UserPrivilege.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.User.IUserPrivilege);

            /** UserPrivilege canLogin. */
            public canLogin: boolean;

            /** UserPrivilege canChat. */
            public canChat: boolean;

            /** UserPrivilege isAdmin. */
            public isAdmin: boolean;

            /** UserPrivilege isMapCommittee. */
            public isMapCommittee: boolean;

            /** UserPrivilege isChangeLogEditor. */
            public isChangeLogEditor: boolean;

            /** UserPrivilege isChatManager. */
            public isChatManager: boolean;

            /**
             * Creates a new UserPrivilege instance using the specified properties.
             * @param [properties] Properties to set
             * @returns UserPrivilege instance
             */
            public static create(properties?: CommonProto.User.IUserPrivilege): CommonProto.User.UserPrivilege;

            /**
             * Encodes the specified UserPrivilege message. Does not implicitly {@link CommonProto.User.UserPrivilege.verify|verify} messages.
             * @param message UserPrivilege message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.User.IUserPrivilege, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified UserPrivilege message, length delimited. Does not implicitly {@link CommonProto.User.UserPrivilege.verify|verify} messages.
             * @param message UserPrivilege message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.User.IUserPrivilege, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a UserPrivilege message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns UserPrivilege
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.User.UserPrivilege;

            /**
             * Decodes a UserPrivilege message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns UserPrivilege
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.User.UserPrivilege;

            /**
             * Verifies a UserPrivilege message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a UserPrivilege message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns UserPrivilege
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.User.UserPrivilege;

            /**
             * Creates a plain object from a UserPrivilege message. Also converts values to other types if specified.
             * @param message UserPrivilege
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.User.UserPrivilege, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this UserPrivilege to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a UserRankInfo. */
        interface IUserRankInfo {

            /** UserRankInfo mrwArray */
            mrwArray?: (CommonProto.User.UserRankInfo.IUserMrwRankInfo[]|null);

            /** UserRankInfo spmOverallInfo */
            spmOverallInfo?: (CommonProto.User.UserRankInfo.IUserSpmOverallRankInfo|null);
        }

        /** Represents a UserRankInfo. */
        class UserRankInfo implements IUserRankInfo {

            /**
             * Constructs a new UserRankInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.User.IUserRankInfo);

            /** UserRankInfo mrwArray. */
            public mrwArray: CommonProto.User.UserRankInfo.IUserMrwRankInfo[];

            /** UserRankInfo spmOverallInfo. */
            public spmOverallInfo?: (CommonProto.User.UserRankInfo.IUserSpmOverallRankInfo|null);

            /**
             * Creates a new UserRankInfo instance using the specified properties.
             * @param [properties] Properties to set
             * @returns UserRankInfo instance
             */
            public static create(properties?: CommonProto.User.IUserRankInfo): CommonProto.User.UserRankInfo;

            /**
             * Encodes the specified UserRankInfo message. Does not implicitly {@link CommonProto.User.UserRankInfo.verify|verify} messages.
             * @param message UserRankInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.User.IUserRankInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified UserRankInfo message, length delimited. Does not implicitly {@link CommonProto.User.UserRankInfo.verify|verify} messages.
             * @param message UserRankInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.User.IUserRankInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a UserRankInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns UserRankInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.User.UserRankInfo;

            /**
             * Decodes a UserRankInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns UserRankInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.User.UserRankInfo;

            /**
             * Verifies a UserRankInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a UserRankInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns UserRankInfo
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.User.UserRankInfo;

            /**
             * Creates a plain object from a UserRankInfo message. Also converts values to other types if specified.
             * @param message UserRankInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.User.UserRankInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this UserRankInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace UserRankInfo {

            /** Properties of a UserMrwRankInfo. */
            interface IUserMrwRankInfo {

                /** UserMrwRankInfo warType */
                warType?: (number|null);

                /** UserMrwRankInfo playersCountUnneutral */
                playersCountUnneutral?: (number|null);

                /** UserMrwRankInfo currentScore */
                currentScore?: (number|null);

                /** UserMrwRankInfo deprecatedCurrentRankIndex */
                deprecatedCurrentRankIndex?: (number|null);

                /** UserMrwRankInfo lastWarEndTime */
                lastWarEndTime?: (number|null);
            }

            /** Represents a UserMrwRankInfo. */
            class UserMrwRankInfo implements IUserMrwRankInfo {

                /**
                 * Constructs a new UserMrwRankInfo.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.User.UserRankInfo.IUserMrwRankInfo);

                /** UserMrwRankInfo warType. */
                public warType: number;

                /** UserMrwRankInfo playersCountUnneutral. */
                public playersCountUnneutral: number;

                /** UserMrwRankInfo currentScore. */
                public currentScore: number;

                /** UserMrwRankInfo deprecatedCurrentRankIndex. */
                public deprecatedCurrentRankIndex: number;

                /** UserMrwRankInfo lastWarEndTime. */
                public lastWarEndTime: number;

                /**
                 * Creates a new UserMrwRankInfo instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns UserMrwRankInfo instance
                 */
                public static create(properties?: CommonProto.User.UserRankInfo.IUserMrwRankInfo): CommonProto.User.UserRankInfo.UserMrwRankInfo;

                /**
                 * Encodes the specified UserMrwRankInfo message. Does not implicitly {@link CommonProto.User.UserRankInfo.UserMrwRankInfo.verify|verify} messages.
                 * @param message UserMrwRankInfo message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.User.UserRankInfo.IUserMrwRankInfo, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified UserMrwRankInfo message, length delimited. Does not implicitly {@link CommonProto.User.UserRankInfo.UserMrwRankInfo.verify|verify} messages.
                 * @param message UserMrwRankInfo message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.User.UserRankInfo.IUserMrwRankInfo, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a UserMrwRankInfo message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns UserMrwRankInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.User.UserRankInfo.UserMrwRankInfo;

                /**
                 * Decodes a UserMrwRankInfo message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns UserMrwRankInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.User.UserRankInfo.UserMrwRankInfo;

                /**
                 * Verifies a UserMrwRankInfo message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a UserMrwRankInfo message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns UserMrwRankInfo
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.User.UserRankInfo.UserMrwRankInfo;

                /**
                 * Creates a plain object from a UserMrwRankInfo message. Also converts values to other types if specified.
                 * @param message UserMrwRankInfo
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.User.UserRankInfo.UserMrwRankInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this UserMrwRankInfo to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a UserSpmOverallRankInfo. */
            interface IUserSpmOverallRankInfo {

                /** UserSpmOverallRankInfo rankScore */
                rankScore?: (number|null);
            }

            /** Represents a UserSpmOverallRankInfo. */
            class UserSpmOverallRankInfo implements IUserSpmOverallRankInfo {

                /**
                 * Constructs a new UserSpmOverallRankInfo.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.User.UserRankInfo.IUserSpmOverallRankInfo);

                /** UserSpmOverallRankInfo rankScore. */
                public rankScore: number;

                /**
                 * Creates a new UserSpmOverallRankInfo instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns UserSpmOverallRankInfo instance
                 */
                public static create(properties?: CommonProto.User.UserRankInfo.IUserSpmOverallRankInfo): CommonProto.User.UserRankInfo.UserSpmOverallRankInfo;

                /**
                 * Encodes the specified UserSpmOverallRankInfo message. Does not implicitly {@link CommonProto.User.UserRankInfo.UserSpmOverallRankInfo.verify|verify} messages.
                 * @param message UserSpmOverallRankInfo message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.User.UserRankInfo.IUserSpmOverallRankInfo, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified UserSpmOverallRankInfo message, length delimited. Does not implicitly {@link CommonProto.User.UserRankInfo.UserSpmOverallRankInfo.verify|verify} messages.
                 * @param message UserSpmOverallRankInfo message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.User.UserRankInfo.IUserSpmOverallRankInfo, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a UserSpmOverallRankInfo message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns UserSpmOverallRankInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.User.UserRankInfo.UserSpmOverallRankInfo;

                /**
                 * Decodes a UserSpmOverallRankInfo message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns UserSpmOverallRankInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.User.UserRankInfo.UserSpmOverallRankInfo;

                /**
                 * Verifies a UserSpmOverallRankInfo message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a UserSpmOverallRankInfo message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns UserSpmOverallRankInfo
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.User.UserRankInfo.UserSpmOverallRankInfo;

                /**
                 * Creates a plain object from a UserSpmOverallRankInfo message. Also converts values to other types if specified.
                 * @param message UserSpmOverallRankInfo
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.User.UserRankInfo.UserSpmOverallRankInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this UserSpmOverallRankInfo to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a UserWarStatistics. */
        interface IUserWarStatistics {

            /** UserWarStatistics mpwArray */
            mpwArray?: (CommonProto.User.UserWarStatistics.IUserMpwStatistics[]|null);

            /** UserWarStatistics spwArray */
            spwArray?: (CommonProto.User.UserWarStatistics.IUserSpwStatistics[]|null);
        }

        /** Represents a UserWarStatistics. */
        class UserWarStatistics implements IUserWarStatistics {

            /**
             * Constructs a new UserWarStatistics.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.User.IUserWarStatistics);

            /** UserWarStatistics mpwArray. */
            public mpwArray: CommonProto.User.UserWarStatistics.IUserMpwStatistics[];

            /** UserWarStatistics spwArray. */
            public spwArray: CommonProto.User.UserWarStatistics.IUserSpwStatistics[];

            /**
             * Creates a new UserWarStatistics instance using the specified properties.
             * @param [properties] Properties to set
             * @returns UserWarStatistics instance
             */
            public static create(properties?: CommonProto.User.IUserWarStatistics): CommonProto.User.UserWarStatistics;

            /**
             * Encodes the specified UserWarStatistics message. Does not implicitly {@link CommonProto.User.UserWarStatistics.verify|verify} messages.
             * @param message UserWarStatistics message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.User.IUserWarStatistics, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified UserWarStatistics message, length delimited. Does not implicitly {@link CommonProto.User.UserWarStatistics.verify|verify} messages.
             * @param message UserWarStatistics message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.User.IUserWarStatistics, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a UserWarStatistics message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns UserWarStatistics
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.User.UserWarStatistics;

            /**
             * Decodes a UserWarStatistics message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns UserWarStatistics
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.User.UserWarStatistics;

            /**
             * Verifies a UserWarStatistics message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a UserWarStatistics message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns UserWarStatistics
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.User.UserWarStatistics;

            /**
             * Creates a plain object from a UserWarStatistics message. Also converts values to other types if specified.
             * @param message UserWarStatistics
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.User.UserWarStatistics, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this UserWarStatistics to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace UserWarStatistics {

            /** Properties of a UserMpwStatistics. */
            interface IUserMpwStatistics {

                /** UserMpwStatistics warType */
                warType?: (number|null);

                /** UserMpwStatistics playersCountUnneutral */
                playersCountUnneutral?: (number|null);

                /** UserMpwStatistics wins */
                wins?: (number|null);

                /** UserMpwStatistics loses */
                loses?: (number|null);

                /** UserMpwStatistics draws */
                draws?: (number|null);
            }

            /** Represents a UserMpwStatistics. */
            class UserMpwStatistics implements IUserMpwStatistics {

                /**
                 * Constructs a new UserMpwStatistics.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.User.UserWarStatistics.IUserMpwStatistics);

                /** UserMpwStatistics warType. */
                public warType: number;

                /** UserMpwStatistics playersCountUnneutral. */
                public playersCountUnneutral: number;

                /** UserMpwStatistics wins. */
                public wins: number;

                /** UserMpwStatistics loses. */
                public loses: number;

                /** UserMpwStatistics draws. */
                public draws: number;

                /**
                 * Creates a new UserMpwStatistics instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns UserMpwStatistics instance
                 */
                public static create(properties?: CommonProto.User.UserWarStatistics.IUserMpwStatistics): CommonProto.User.UserWarStatistics.UserMpwStatistics;

                /**
                 * Encodes the specified UserMpwStatistics message. Does not implicitly {@link CommonProto.User.UserWarStatistics.UserMpwStatistics.verify|verify} messages.
                 * @param message UserMpwStatistics message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.User.UserWarStatistics.IUserMpwStatistics, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified UserMpwStatistics message, length delimited. Does not implicitly {@link CommonProto.User.UserWarStatistics.UserMpwStatistics.verify|verify} messages.
                 * @param message UserMpwStatistics message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.User.UserWarStatistics.IUserMpwStatistics, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a UserMpwStatistics message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns UserMpwStatistics
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.User.UserWarStatistics.UserMpwStatistics;

                /**
                 * Decodes a UserMpwStatistics message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns UserMpwStatistics
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.User.UserWarStatistics.UserMpwStatistics;

                /**
                 * Verifies a UserMpwStatistics message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a UserMpwStatistics message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns UserMpwStatistics
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.User.UserWarStatistics.UserMpwStatistics;

                /**
                 * Creates a plain object from a UserMpwStatistics message. Also converts values to other types if specified.
                 * @param message UserMpwStatistics
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.User.UserWarStatistics.UserMpwStatistics, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this UserMpwStatistics to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a UserSpwStatistics. */
            interface IUserSpwStatistics {

                /** UserSpwStatistics mapId */
                mapId?: (number|null);

                /** UserSpwStatistics ruleId */
                ruleId?: (number|null);

                /** UserSpwStatistics highScore */
                highScore?: (number|null);

                /** UserSpwStatistics configVersion */
                configVersion?: (string|null);
            }

            /** Represents a UserSpwStatistics. */
            class UserSpwStatistics implements IUserSpwStatistics {

                /**
                 * Constructs a new UserSpwStatistics.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.User.UserWarStatistics.IUserSpwStatistics);

                /** UserSpwStatistics mapId. */
                public mapId: number;

                /** UserSpwStatistics ruleId. */
                public ruleId: number;

                /** UserSpwStatistics highScore. */
                public highScore: number;

                /** UserSpwStatistics configVersion. */
                public configVersion: string;

                /**
                 * Creates a new UserSpwStatistics instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns UserSpwStatistics instance
                 */
                public static create(properties?: CommonProto.User.UserWarStatistics.IUserSpwStatistics): CommonProto.User.UserWarStatistics.UserSpwStatistics;

                /**
                 * Encodes the specified UserSpwStatistics message. Does not implicitly {@link CommonProto.User.UserWarStatistics.UserSpwStatistics.verify|verify} messages.
                 * @param message UserSpwStatistics message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.User.UserWarStatistics.IUserSpwStatistics, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified UserSpwStatistics message, length delimited. Does not implicitly {@link CommonProto.User.UserWarStatistics.UserSpwStatistics.verify|verify} messages.
                 * @param message UserSpwStatistics message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.User.UserWarStatistics.IUserSpwStatistics, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a UserSpwStatistics message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns UserSpwStatistics
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.User.UserWarStatistics.UserSpwStatistics;

                /**
                 * Decodes a UserSpwStatistics message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns UserSpwStatistics
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.User.UserWarStatistics.UserSpwStatistics;

                /**
                 * Verifies a UserSpwStatistics message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a UserSpwStatistics message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns UserSpwStatistics
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.User.UserWarStatistics.UserSpwStatistics;

                /**
                 * Creates a plain object from a UserSpwStatistics message. Also converts values to other types if specified.
                 * @param message UserSpwStatistics
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.User.UserWarStatistics.UserSpwStatistics, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this UserSpwStatistics to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a UserOpacitySettings. */
        interface IUserOpacitySettings {

            /** UserOpacitySettings unitOpacity */
            unitOpacity?: (number|null);

            /** UserOpacitySettings tileBaseOpacity */
            tileBaseOpacity?: (number|null);

            /** UserOpacitySettings tileObjectOpacity */
            tileObjectOpacity?: (number|null);

            /** UserOpacitySettings tileDecoratorOpacity */
            tileDecoratorOpacity?: (number|null);
        }

        /** Represents a UserOpacitySettings. */
        class UserOpacitySettings implements IUserOpacitySettings {

            /**
             * Constructs a new UserOpacitySettings.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.User.IUserOpacitySettings);

            /** UserOpacitySettings unitOpacity. */
            public unitOpacity: number;

            /** UserOpacitySettings tileBaseOpacity. */
            public tileBaseOpacity: number;

            /** UserOpacitySettings tileObjectOpacity. */
            public tileObjectOpacity: number;

            /** UserOpacitySettings tileDecoratorOpacity. */
            public tileDecoratorOpacity: number;

            /**
             * Creates a new UserOpacitySettings instance using the specified properties.
             * @param [properties] Properties to set
             * @returns UserOpacitySettings instance
             */
            public static create(properties?: CommonProto.User.IUserOpacitySettings): CommonProto.User.UserOpacitySettings;

            /**
             * Encodes the specified UserOpacitySettings message. Does not implicitly {@link CommonProto.User.UserOpacitySettings.verify|verify} messages.
             * @param message UserOpacitySettings message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.User.IUserOpacitySettings, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified UserOpacitySettings message, length delimited. Does not implicitly {@link CommonProto.User.UserOpacitySettings.verify|verify} messages.
             * @param message UserOpacitySettings message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.User.IUserOpacitySettings, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a UserOpacitySettings message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns UserOpacitySettings
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.User.UserOpacitySettings;

            /**
             * Decodes a UserOpacitySettings message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns UserOpacitySettings
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.User.UserOpacitySettings;

            /**
             * Verifies a UserOpacitySettings message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a UserOpacitySettings message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns UserOpacitySettings
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.User.UserOpacitySettings;

            /**
             * Creates a plain object from a UserOpacitySettings message. Also converts values to other types if specified.
             * @param message UserOpacitySettings
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.User.UserOpacitySettings, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this UserOpacitySettings to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a UserSettings. */
        interface IUserSettings {

            /** UserSettings unitAndTileTextureVersion */
            unitAndTileTextureVersion?: (number|null);

            /** UserSettings isSetPathMode */
            isSetPathMode?: (boolean|null);

            /** UserSettings isShowGridBorder */
            isShowGridBorder?: (boolean|null);

            /** UserSettings isAutoScrollMap */
            isAutoScrollMap?: (boolean|null);

            /** UserSettings opacitySettings */
            opacitySettings?: (CommonProto.User.IUserOpacitySettings|null);
        }

        /** Represents a UserSettings. */
        class UserSettings implements IUserSettings {

            /**
             * Constructs a new UserSettings.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.User.IUserSettings);

            /** UserSettings unitAndTileTextureVersion. */
            public unitAndTileTextureVersion: number;

            /** UserSettings isSetPathMode. */
            public isSetPathMode: boolean;

            /** UserSettings isShowGridBorder. */
            public isShowGridBorder: boolean;

            /** UserSettings isAutoScrollMap. */
            public isAutoScrollMap: boolean;

            /** UserSettings opacitySettings. */
            public opacitySettings?: (CommonProto.User.IUserOpacitySettings|null);

            /**
             * Creates a new UserSettings instance using the specified properties.
             * @param [properties] Properties to set
             * @returns UserSettings instance
             */
            public static create(properties?: CommonProto.User.IUserSettings): CommonProto.User.UserSettings;

            /**
             * Encodes the specified UserSettings message. Does not implicitly {@link CommonProto.User.UserSettings.verify|verify} messages.
             * @param message UserSettings message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.User.IUserSettings, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified UserSettings message, length delimited. Does not implicitly {@link CommonProto.User.UserSettings.verify|verify} messages.
             * @param message UserSettings message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.User.IUserSettings, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a UserSettings message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns UserSettings
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.User.UserSettings;

            /**
             * Decodes a UserSettings message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns UserSettings
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.User.UserSettings;

            /**
             * Verifies a UserSettings message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a UserSettings message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns UserSettings
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.User.UserSettings;

            /**
             * Creates a plain object from a UserSettings message. Also converts values to other types if specified.
             * @param message UserSettings
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.User.UserSettings, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this UserSettings to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a UserMapRating. */
        interface IUserMapRating {

            /** UserMapRating mapId */
            mapId?: (number|null);

            /** UserMapRating rating */
            rating?: (number|null);
        }

        /** Represents a UserMapRating. */
        class UserMapRating implements IUserMapRating {

            /**
             * Constructs a new UserMapRating.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.User.IUserMapRating);

            /** UserMapRating mapId. */
            public mapId: number;

            /** UserMapRating rating. */
            public rating: number;

            /**
             * Creates a new UserMapRating instance using the specified properties.
             * @param [properties] Properties to set
             * @returns UserMapRating instance
             */
            public static create(properties?: CommonProto.User.IUserMapRating): CommonProto.User.UserMapRating;

            /**
             * Encodes the specified UserMapRating message. Does not implicitly {@link CommonProto.User.UserMapRating.verify|verify} messages.
             * @param message UserMapRating message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.User.IUserMapRating, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified UserMapRating message, length delimited. Does not implicitly {@link CommonProto.User.UserMapRating.verify|verify} messages.
             * @param message UserMapRating message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.User.IUserMapRating, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a UserMapRating message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns UserMapRating
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.User.UserMapRating;

            /**
             * Decodes a UserMapRating message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns UserMapRating
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.User.UserMapRating;

            /**
             * Verifies a UserMapRating message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a UserMapRating message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns UserMapRating
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.User.UserMapRating;

            /**
             * Creates a plain object from a UserMapRating message. Also converts values to other types if specified.
             * @param message UserMapRating
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.User.UserMapRating, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this UserMapRating to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a UserWarHistory. */
        interface IUserWarHistory {

            /** UserWarHistory mpwRankedStdHistoryArray */
            mpwRankedStdHistoryArray?: (CommonProto.User.UserWarHistory.IUserMpwRankedHistory[]|null);

            /** UserWarHistory mpwRankedFowHistoryArray */
            mpwRankedFowHistoryArray?: (CommonProto.User.UserWarHistory.IUserMpwRankedHistory[]|null);

            /** UserWarHistory mpwUnrankedHistoryArray */
            mpwUnrankedHistoryArray?: (CommonProto.User.UserWarHistory.IUserMpwUnrankedHistory[]|null);
        }

        /** Represents a UserWarHistory. */
        class UserWarHistory implements IUserWarHistory {

            /**
             * Constructs a new UserWarHistory.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.User.IUserWarHistory);

            /** UserWarHistory mpwRankedStdHistoryArray. */
            public mpwRankedStdHistoryArray: CommonProto.User.UserWarHistory.IUserMpwRankedHistory[];

            /** UserWarHistory mpwRankedFowHistoryArray. */
            public mpwRankedFowHistoryArray: CommonProto.User.UserWarHistory.IUserMpwRankedHistory[];

            /** UserWarHistory mpwUnrankedHistoryArray. */
            public mpwUnrankedHistoryArray: CommonProto.User.UserWarHistory.IUserMpwUnrankedHistory[];

            /**
             * Creates a new UserWarHistory instance using the specified properties.
             * @param [properties] Properties to set
             * @returns UserWarHistory instance
             */
            public static create(properties?: CommonProto.User.IUserWarHistory): CommonProto.User.UserWarHistory;

            /**
             * Encodes the specified UserWarHistory message. Does not implicitly {@link CommonProto.User.UserWarHistory.verify|verify} messages.
             * @param message UserWarHistory message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.User.IUserWarHistory, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified UserWarHistory message, length delimited. Does not implicitly {@link CommonProto.User.UserWarHistory.verify|verify} messages.
             * @param message UserWarHistory message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.User.IUserWarHistory, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a UserWarHistory message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns UserWarHistory
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.User.UserWarHistory;

            /**
             * Decodes a UserWarHistory message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns UserWarHistory
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.User.UserWarHistory;

            /**
             * Verifies a UserWarHistory message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a UserWarHistory message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns UserWarHistory
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.User.UserWarHistory;

            /**
             * Creates a plain object from a UserWarHistory message. Also converts values to other types if specified.
             * @param message UserWarHistory
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.User.UserWarHistory, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this UserWarHistory to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace UserWarHistory {

            /** Properties of a UserMpwRankedHistory. */
            interface IUserMpwRankedHistory {

                /** UserMpwRankedHistory replayId */
                replayId?: (number|null);

                /** UserMpwRankedHistory endTimestamp */
                endTimestamp?: (number|null);

                /** UserMpwRankedHistory mapId */
                mapId?: (number|null);

                /** UserMpwRankedHistory deltaScore */
                deltaScore?: (number|null);

                /** UserMpwRankedHistory newScore */
                newScore?: (number|null);
            }

            /** Represents a UserMpwRankedHistory. */
            class UserMpwRankedHistory implements IUserMpwRankedHistory {

                /**
                 * Constructs a new UserMpwRankedHistory.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.User.UserWarHistory.IUserMpwRankedHistory);

                /** UserMpwRankedHistory replayId. */
                public replayId: number;

                /** UserMpwRankedHistory endTimestamp. */
                public endTimestamp: number;

                /** UserMpwRankedHistory mapId. */
                public mapId: number;

                /** UserMpwRankedHistory deltaScore. */
                public deltaScore: number;

                /** UserMpwRankedHistory newScore. */
                public newScore: number;

                /**
                 * Creates a new UserMpwRankedHistory instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns UserMpwRankedHistory instance
                 */
                public static create(properties?: CommonProto.User.UserWarHistory.IUserMpwRankedHistory): CommonProto.User.UserWarHistory.UserMpwRankedHistory;

                /**
                 * Encodes the specified UserMpwRankedHistory message. Does not implicitly {@link CommonProto.User.UserWarHistory.UserMpwRankedHistory.verify|verify} messages.
                 * @param message UserMpwRankedHistory message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.User.UserWarHistory.IUserMpwRankedHistory, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified UserMpwRankedHistory message, length delimited. Does not implicitly {@link CommonProto.User.UserWarHistory.UserMpwRankedHistory.verify|verify} messages.
                 * @param message UserMpwRankedHistory message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.User.UserWarHistory.IUserMpwRankedHistory, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a UserMpwRankedHistory message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns UserMpwRankedHistory
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.User.UserWarHistory.UserMpwRankedHistory;

                /**
                 * Decodes a UserMpwRankedHistory message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns UserMpwRankedHistory
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.User.UserWarHistory.UserMpwRankedHistory;

                /**
                 * Verifies a UserMpwRankedHistory message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a UserMpwRankedHistory message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns UserMpwRankedHistory
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.User.UserWarHistory.UserMpwRankedHistory;

                /**
                 * Creates a plain object from a UserMpwRankedHistory message. Also converts values to other types if specified.
                 * @param message UserMpwRankedHistory
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.User.UserWarHistory.UserMpwRankedHistory, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this UserMpwRankedHistory to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a UserMpwUnrankedHistory. */
            interface IUserMpwUnrankedHistory {

                /** UserMpwUnrankedHistory replayId */
                replayId?: (number|null);

                /** UserMpwUnrankedHistory endTimestamp */
                endTimestamp?: (number|null);

                /** UserMpwUnrankedHistory mapId */
                mapId?: (number|null);

                /** UserMpwUnrankedHistory warType */
                warType?: (number|null);
            }

            /** Represents a UserMpwUnrankedHistory. */
            class UserMpwUnrankedHistory implements IUserMpwUnrankedHistory {

                /**
                 * Constructs a new UserMpwUnrankedHistory.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.User.UserWarHistory.IUserMpwUnrankedHistory);

                /** UserMpwUnrankedHistory replayId. */
                public replayId: number;

                /** UserMpwUnrankedHistory endTimestamp. */
                public endTimestamp: number;

                /** UserMpwUnrankedHistory mapId. */
                public mapId: number;

                /** UserMpwUnrankedHistory warType. */
                public warType: number;

                /**
                 * Creates a new UserMpwUnrankedHistory instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns UserMpwUnrankedHistory instance
                 */
                public static create(properties?: CommonProto.User.UserWarHistory.IUserMpwUnrankedHistory): CommonProto.User.UserWarHistory.UserMpwUnrankedHistory;

                /**
                 * Encodes the specified UserMpwUnrankedHistory message. Does not implicitly {@link CommonProto.User.UserWarHistory.UserMpwUnrankedHistory.verify|verify} messages.
                 * @param message UserMpwUnrankedHistory message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.User.UserWarHistory.IUserMpwUnrankedHistory, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified UserMpwUnrankedHistory message, length delimited. Does not implicitly {@link CommonProto.User.UserWarHistory.UserMpwUnrankedHistory.verify|verify} messages.
                 * @param message UserMpwUnrankedHistory message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.User.UserWarHistory.IUserMpwUnrankedHistory, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a UserMpwUnrankedHistory message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns UserMpwUnrankedHistory
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.User.UserWarHistory.UserMpwUnrankedHistory;

                /**
                 * Decodes a UserMpwUnrankedHistory message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns UserMpwUnrankedHistory
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.User.UserWarHistory.UserMpwUnrankedHistory;

                /**
                 * Verifies a UserMpwUnrankedHistory message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a UserMpwUnrankedHistory message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns UserMpwUnrankedHistory
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.User.UserWarHistory.UserMpwUnrankedHistory;

                /**
                 * Creates a plain object from a UserMpwUnrankedHistory message. Also converts values to other types if specified.
                 * @param message UserMpwUnrankedHistory
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.User.UserWarHistory.UserMpwUnrankedHistory, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this UserMpwUnrankedHistory to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a UserDiscordInfo. */
        interface IUserDiscordInfo {

            /** UserDiscordInfo discordId */
            discordId?: (string|null);

            /** UserDiscordInfo ignoreRankPhaseNotification */
            ignoreRankPhaseNotification?: (boolean|null);

            /** UserDiscordInfo ignoreTurnNotification */
            ignoreTurnNotification?: (boolean|null);

            /** UserDiscordInfo ignoreRoomNotification */
            ignoreRoomNotification?: (boolean|null);
        }

        /** Represents a UserDiscordInfo. */
        class UserDiscordInfo implements IUserDiscordInfo {

            /**
             * Constructs a new UserDiscordInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.User.IUserDiscordInfo);

            /** UserDiscordInfo discordId. */
            public discordId: string;

            /** UserDiscordInfo ignoreRankPhaseNotification. */
            public ignoreRankPhaseNotification: boolean;

            /** UserDiscordInfo ignoreTurnNotification. */
            public ignoreTurnNotification: boolean;

            /** UserDiscordInfo ignoreRoomNotification. */
            public ignoreRoomNotification: boolean;

            /**
             * Creates a new UserDiscordInfo instance using the specified properties.
             * @param [properties] Properties to set
             * @returns UserDiscordInfo instance
             */
            public static create(properties?: CommonProto.User.IUserDiscordInfo): CommonProto.User.UserDiscordInfo;

            /**
             * Encodes the specified UserDiscordInfo message. Does not implicitly {@link CommonProto.User.UserDiscordInfo.verify|verify} messages.
             * @param message UserDiscordInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.User.IUserDiscordInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified UserDiscordInfo message, length delimited. Does not implicitly {@link CommonProto.User.UserDiscordInfo.verify|verify} messages.
             * @param message UserDiscordInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.User.IUserDiscordInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a UserDiscordInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns UserDiscordInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.User.UserDiscordInfo;

            /**
             * Decodes a UserDiscordInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns UserDiscordInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.User.UserDiscordInfo;

            /**
             * Verifies a UserDiscordInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a UserDiscordInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns UserDiscordInfo
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.User.UserDiscordInfo;

            /**
             * Creates a plain object from a UserDiscordInfo message. Also converts values to other types if specified.
             * @param message UserDiscordInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.User.UserDiscordInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this UserDiscordInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a UserComplexInfo. */
        interface IUserComplexInfo {

            /** UserComplexInfo userPrivilege */
            userPrivilege?: (CommonProto.User.IUserPrivilege|null);

            /** UserComplexInfo userRankInfo */
            userRankInfo?: (CommonProto.User.IUserRankInfo|null);

            /** UserComplexInfo userWarStatistics */
            userWarStatistics?: (CommonProto.User.IUserWarStatistics|null);

            /** UserComplexInfo userSettings */
            userSettings?: (CommonProto.User.IUserSettings|null);

            /** UserComplexInfo userMapRatingArray */
            userMapRatingArray?: (CommonProto.User.IUserMapRating[]|null);

            /** UserComplexInfo lastChatTime */
            lastChatTime?: (number|null);

            /** UserComplexInfo avatarId */
            avatarId?: (number|null);

            /** UserComplexInfo mapEditorAutoSaveTime */
            mapEditorAutoSaveTime?: (number|null);

            /** UserComplexInfo userWarHistory */
            userWarHistory?: (CommonProto.User.IUserWarHistory|null);

            /** UserComplexInfo userDiscordInfo */
            userDiscordInfo?: (CommonProto.User.IUserDiscordInfo|null);
        }

        /** Represents a UserComplexInfo. */
        class UserComplexInfo implements IUserComplexInfo {

            /**
             * Constructs a new UserComplexInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.User.IUserComplexInfo);

            /** UserComplexInfo userPrivilege. */
            public userPrivilege?: (CommonProto.User.IUserPrivilege|null);

            /** UserComplexInfo userRankInfo. */
            public userRankInfo?: (CommonProto.User.IUserRankInfo|null);

            /** UserComplexInfo userWarStatistics. */
            public userWarStatistics?: (CommonProto.User.IUserWarStatistics|null);

            /** UserComplexInfo userSettings. */
            public userSettings?: (CommonProto.User.IUserSettings|null);

            /** UserComplexInfo userMapRatingArray. */
            public userMapRatingArray: CommonProto.User.IUserMapRating[];

            /** UserComplexInfo lastChatTime. */
            public lastChatTime: number;

            /** UserComplexInfo avatarId. */
            public avatarId: number;

            /** UserComplexInfo mapEditorAutoSaveTime. */
            public mapEditorAutoSaveTime: number;

            /** UserComplexInfo userWarHistory. */
            public userWarHistory?: (CommonProto.User.IUserWarHistory|null);

            /** UserComplexInfo userDiscordInfo. */
            public userDiscordInfo?: (CommonProto.User.IUserDiscordInfo|null);

            /**
             * Creates a new UserComplexInfo instance using the specified properties.
             * @param [properties] Properties to set
             * @returns UserComplexInfo instance
             */
            public static create(properties?: CommonProto.User.IUserComplexInfo): CommonProto.User.UserComplexInfo;

            /**
             * Encodes the specified UserComplexInfo message. Does not implicitly {@link CommonProto.User.UserComplexInfo.verify|verify} messages.
             * @param message UserComplexInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.User.IUserComplexInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified UserComplexInfo message, length delimited. Does not implicitly {@link CommonProto.User.UserComplexInfo.verify|verify} messages.
             * @param message UserComplexInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.User.IUserComplexInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a UserComplexInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns UserComplexInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.User.UserComplexInfo;

            /**
             * Decodes a UserComplexInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns UserComplexInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.User.UserComplexInfo;

            /**
             * Verifies a UserComplexInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a UserComplexInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns UserComplexInfo
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.User.UserComplexInfo;

            /**
             * Creates a plain object from a UserComplexInfo message. Also converts values to other types if specified.
             * @param message UserComplexInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.User.UserComplexInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this UserComplexInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a UserBriefInfo. */
        interface IUserBriefInfo {

            /** UserBriefInfo userId */
            userId?: (number|null);

            /** UserBriefInfo nickname */
            nickname?: (string|null);
        }

        /** Represents a UserBriefInfo. */
        class UserBriefInfo implements IUserBriefInfo {

            /**
             * Constructs a new UserBriefInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.User.IUserBriefInfo);

            /** UserBriefInfo userId. */
            public userId: number;

            /** UserBriefInfo nickname. */
            public nickname: string;

            /**
             * Creates a new UserBriefInfo instance using the specified properties.
             * @param [properties] Properties to set
             * @returns UserBriefInfo instance
             */
            public static create(properties?: CommonProto.User.IUserBriefInfo): CommonProto.User.UserBriefInfo;

            /**
             * Encodes the specified UserBriefInfo message. Does not implicitly {@link CommonProto.User.UserBriefInfo.verify|verify} messages.
             * @param message UserBriefInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.User.IUserBriefInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified UserBriefInfo message, length delimited. Does not implicitly {@link CommonProto.User.UserBriefInfo.verify|verify} messages.
             * @param message UserBriefInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.User.IUserBriefInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a UserBriefInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns UserBriefInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.User.UserBriefInfo;

            /**
             * Decodes a UserBriefInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns UserBriefInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.User.UserBriefInfo;

            /**
             * Verifies a UserBriefInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a UserBriefInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns UserBriefInfo
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.User.UserBriefInfo;

            /**
             * Creates a plain object from a UserBriefInfo message. Also converts values to other types if specified.
             * @param message UserBriefInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.User.UserBriefInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this UserBriefInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a UserPublicInfo. */
        interface IUserPublicInfo {

            /** UserPublicInfo userId */
            userId?: (number|null);

            /** UserPublicInfo nickname */
            nickname?: (string|null);

            /** UserPublicInfo registerTime */
            registerTime?: (number|null);

            /** UserPublicInfo lastLoginTime */
            lastLoginTime?: (number|null);

            /** UserPublicInfo loginCount */
            loginCount?: (number|null);

            /** UserPublicInfo onlineTime */
            onlineTime?: (number|null);

            /** UserPublicInfo discordId */
            discordId?: (string|null);

            /** UserPublicInfo isOnline */
            isOnline?: (boolean|null);

            /** UserPublicInfo lastActivityTime */
            lastActivityTime?: (number|null);

            /** UserPublicInfo avatarId */
            avatarId?: (number|null);

            /** UserPublicInfo userPrivilege */
            userPrivilege?: (CommonProto.User.IUserPrivilege|null);

            /** UserPublicInfo userMrwRankInfoArray */
            userMrwRankInfoArray?: (CommonProto.User.UserRankInfo.IUserMrwRankInfo[]|null);

            /** UserPublicInfo userMpwStatisticsArray */
            userMpwStatisticsArray?: (CommonProto.User.UserWarStatistics.IUserMpwStatistics[]|null);

            /** UserPublicInfo userWarHistory */
            userWarHistory?: (CommonProto.User.IUserWarHistory|null);

            /** UserPublicInfo spmOverallRankScore */
            spmOverallRankScore?: (number|null);
        }

        /** Represents a UserPublicInfo. */
        class UserPublicInfo implements IUserPublicInfo {

            /**
             * Constructs a new UserPublicInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.User.IUserPublicInfo);

            /** UserPublicInfo userId. */
            public userId: number;

            /** UserPublicInfo nickname. */
            public nickname: string;

            /** UserPublicInfo registerTime. */
            public registerTime: number;

            /** UserPublicInfo lastLoginTime. */
            public lastLoginTime: number;

            /** UserPublicInfo loginCount. */
            public loginCount: number;

            /** UserPublicInfo onlineTime. */
            public onlineTime: number;

            /** UserPublicInfo discordId. */
            public discordId: string;

            /** UserPublicInfo isOnline. */
            public isOnline: boolean;

            /** UserPublicInfo lastActivityTime. */
            public lastActivityTime: number;

            /** UserPublicInfo avatarId. */
            public avatarId: number;

            /** UserPublicInfo userPrivilege. */
            public userPrivilege?: (CommonProto.User.IUserPrivilege|null);

            /** UserPublicInfo userMrwRankInfoArray. */
            public userMrwRankInfoArray: CommonProto.User.UserRankInfo.IUserMrwRankInfo[];

            /** UserPublicInfo userMpwStatisticsArray. */
            public userMpwStatisticsArray: CommonProto.User.UserWarStatistics.IUserMpwStatistics[];

            /** UserPublicInfo userWarHistory. */
            public userWarHistory?: (CommonProto.User.IUserWarHistory|null);

            /** UserPublicInfo spmOverallRankScore. */
            public spmOverallRankScore: number;

            /**
             * Creates a new UserPublicInfo instance using the specified properties.
             * @param [properties] Properties to set
             * @returns UserPublicInfo instance
             */
            public static create(properties?: CommonProto.User.IUserPublicInfo): CommonProto.User.UserPublicInfo;

            /**
             * Encodes the specified UserPublicInfo message. Does not implicitly {@link CommonProto.User.UserPublicInfo.verify|verify} messages.
             * @param message UserPublicInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.User.IUserPublicInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified UserPublicInfo message, length delimited. Does not implicitly {@link CommonProto.User.UserPublicInfo.verify|verify} messages.
             * @param message UserPublicInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.User.IUserPublicInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a UserPublicInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns UserPublicInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.User.UserPublicInfo;

            /**
             * Decodes a UserPublicInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns UserPublicInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.User.UserPublicInfo;

            /**
             * Verifies a UserPublicInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a UserPublicInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns UserPublicInfo
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.User.UserPublicInfo;

            /**
             * Creates a plain object from a UserPublicInfo message. Also converts values to other types if specified.
             * @param message UserPublicInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.User.UserPublicInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this UserPublicInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a UserSelfInfo. */
        interface IUserSelfInfo {

            /** UserSelfInfo userId */
            userId?: (number|null);

            /** UserSelfInfo nickname */
            nickname?: (string|null);

            /** UserSelfInfo registerTime */
            registerTime?: (number|null);

            /** UserSelfInfo lastLoginTime */
            lastLoginTime?: (number|null);

            /** UserSelfInfo loginCount */
            loginCount?: (number|null);

            /** UserSelfInfo onlineTime */
            onlineTime?: (number|null);

            /** UserSelfInfo userComplexInfo */
            userComplexInfo?: (CommonProto.User.IUserComplexInfo|null);
        }

        /** Represents a UserSelfInfo. */
        class UserSelfInfo implements IUserSelfInfo {

            /**
             * Constructs a new UserSelfInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.User.IUserSelfInfo);

            /** UserSelfInfo userId. */
            public userId: number;

            /** UserSelfInfo nickname. */
            public nickname: string;

            /** UserSelfInfo registerTime. */
            public registerTime: number;

            /** UserSelfInfo lastLoginTime. */
            public lastLoginTime: number;

            /** UserSelfInfo loginCount. */
            public loginCount: number;

            /** UserSelfInfo onlineTime. */
            public onlineTime: number;

            /** UserSelfInfo userComplexInfo. */
            public userComplexInfo?: (CommonProto.User.IUserComplexInfo|null);

            /**
             * Creates a new UserSelfInfo instance using the specified properties.
             * @param [properties] Properties to set
             * @returns UserSelfInfo instance
             */
            public static create(properties?: CommonProto.User.IUserSelfInfo): CommonProto.User.UserSelfInfo;

            /**
             * Encodes the specified UserSelfInfo message. Does not implicitly {@link CommonProto.User.UserSelfInfo.verify|verify} messages.
             * @param message UserSelfInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.User.IUserSelfInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified UserSelfInfo message, length delimited. Does not implicitly {@link CommonProto.User.UserSelfInfo.verify|verify} messages.
             * @param message UserSelfInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.User.IUserSelfInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a UserSelfInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns UserSelfInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.User.UserSelfInfo;

            /**
             * Decodes a UserSelfInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns UserSelfInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.User.UserSelfInfo;

            /**
             * Verifies a UserSelfInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a UserSelfInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns UserSelfInfo
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.User.UserSelfInfo;

            /**
             * Creates a plain object from a UserSelfInfo message. Also converts values to other types if specified.
             * @param message UserSelfInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.User.UserSelfInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this UserSelfInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a Leaderboard. */
    interface ILeaderboard {
    }

    /** Represents a Leaderboard. */
    class Leaderboard implements ILeaderboard {

        /**
         * Constructs a new Leaderboard.
         * @param [properties] Properties to set
         */
        constructor(properties?: CommonProto.ILeaderboard);

        /**
         * Creates a new Leaderboard instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Leaderboard instance
         */
        public static create(properties?: CommonProto.ILeaderboard): CommonProto.Leaderboard;

        /**
         * Encodes the specified Leaderboard message. Does not implicitly {@link CommonProto.Leaderboard.verify|verify} messages.
         * @param message Leaderboard message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: CommonProto.ILeaderboard, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified Leaderboard message, length delimited. Does not implicitly {@link CommonProto.Leaderboard.verify|verify} messages.
         * @param message Leaderboard message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: CommonProto.ILeaderboard, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a Leaderboard message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Leaderboard
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.Leaderboard;

        /**
         * Decodes a Leaderboard message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Leaderboard
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.Leaderboard;

        /**
         * Verifies a Leaderboard message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Leaderboard message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Leaderboard
         */
        public static fromObject(object: { [k: string]: any }): CommonProto.Leaderboard;

        /**
         * Creates a plain object from a Leaderboard message. Also converts values to other types if specified.
         * @param message Leaderboard
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: CommonProto.Leaderboard, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Leaderboard to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace Leaderboard {

        /** Properties of a LeaderboardSpmOverall. */
        interface ILeaderboardSpmOverall {

            /** LeaderboardSpmOverall dataArray */
            dataArray?: (CommonProto.Leaderboard.LeaderboardSpmOverall.ISingleData[]|null);
        }

        /** Represents a LeaderboardSpmOverall. */
        class LeaderboardSpmOverall implements ILeaderboardSpmOverall {

            /**
             * Constructs a new LeaderboardSpmOverall.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.Leaderboard.ILeaderboardSpmOverall);

            /** LeaderboardSpmOverall dataArray. */
            public dataArray: CommonProto.Leaderboard.LeaderboardSpmOverall.ISingleData[];

            /**
             * Creates a new LeaderboardSpmOverall instance using the specified properties.
             * @param [properties] Properties to set
             * @returns LeaderboardSpmOverall instance
             */
            public static create(properties?: CommonProto.Leaderboard.ILeaderboardSpmOverall): CommonProto.Leaderboard.LeaderboardSpmOverall;

            /**
             * Encodes the specified LeaderboardSpmOverall message. Does not implicitly {@link CommonProto.Leaderboard.LeaderboardSpmOverall.verify|verify} messages.
             * @param message LeaderboardSpmOverall message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.Leaderboard.ILeaderboardSpmOverall, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified LeaderboardSpmOverall message, length delimited. Does not implicitly {@link CommonProto.Leaderboard.LeaderboardSpmOverall.verify|verify} messages.
             * @param message LeaderboardSpmOverall message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.Leaderboard.ILeaderboardSpmOverall, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a LeaderboardSpmOverall message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns LeaderboardSpmOverall
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.Leaderboard.LeaderboardSpmOverall;

            /**
             * Decodes a LeaderboardSpmOverall message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns LeaderboardSpmOverall
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.Leaderboard.LeaderboardSpmOverall;

            /**
             * Verifies a LeaderboardSpmOverall message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a LeaderboardSpmOverall message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns LeaderboardSpmOverall
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.Leaderboard.LeaderboardSpmOverall;

            /**
             * Creates a plain object from a LeaderboardSpmOverall message. Also converts values to other types if specified.
             * @param message LeaderboardSpmOverall
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.Leaderboard.LeaderboardSpmOverall, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this LeaderboardSpmOverall to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace LeaderboardSpmOverall {

            /** Properties of a SingleData. */
            interface ISingleData {

                /** SingleData userId */
                userId?: (number|null);

                /** SingleData score */
                score?: (number|null);
            }

            /** Represents a SingleData. */
            class SingleData implements ISingleData {

                /**
                 * Constructs a new SingleData.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.Leaderboard.LeaderboardSpmOverall.ISingleData);

                /** SingleData userId. */
                public userId: number;

                /** SingleData score. */
                public score: number;

                /**
                 * Creates a new SingleData instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns SingleData instance
                 */
                public static create(properties?: CommonProto.Leaderboard.LeaderboardSpmOverall.ISingleData): CommonProto.Leaderboard.LeaderboardSpmOverall.SingleData;

                /**
                 * Encodes the specified SingleData message. Does not implicitly {@link CommonProto.Leaderboard.LeaderboardSpmOverall.SingleData.verify|verify} messages.
                 * @param message SingleData message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.Leaderboard.LeaderboardSpmOverall.ISingleData, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified SingleData message, length delimited. Does not implicitly {@link CommonProto.Leaderboard.LeaderboardSpmOverall.SingleData.verify|verify} messages.
                 * @param message SingleData message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.Leaderboard.LeaderboardSpmOverall.ISingleData, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a SingleData message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns SingleData
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.Leaderboard.LeaderboardSpmOverall.SingleData;

                /**
                 * Decodes a SingleData message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns SingleData
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.Leaderboard.LeaderboardSpmOverall.SingleData;

                /**
                 * Verifies a SingleData message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a SingleData message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns SingleData
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.Leaderboard.LeaderboardSpmOverall.SingleData;

                /**
                 * Creates a plain object from a SingleData message. Also converts values to other types if specified.
                 * @param message SingleData
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.Leaderboard.LeaderboardSpmOverall.SingleData, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this SingleData to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }
    }

    /** Properties of a NetMessage. */
    interface INetMessage {
    }

    /** Represents a NetMessage. */
    class NetMessage implements INetMessage {

        /**
         * Constructs a new NetMessage.
         * @param [properties] Properties to set
         */
        constructor(properties?: CommonProto.INetMessage);

        /**
         * Creates a new NetMessage instance using the specified properties.
         * @param [properties] Properties to set
         * @returns NetMessage instance
         */
        public static create(properties?: CommonProto.INetMessage): CommonProto.NetMessage;

        /**
         * Encodes the specified NetMessage message. Does not implicitly {@link CommonProto.NetMessage.verify|verify} messages.
         * @param message NetMessage message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: CommonProto.INetMessage, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified NetMessage message, length delimited. Does not implicitly {@link CommonProto.NetMessage.verify|verify} messages.
         * @param message NetMessage message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: CommonProto.INetMessage, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a NetMessage message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns NetMessage
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage;

        /**
         * Decodes a NetMessage message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns NetMessage
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage;

        /**
         * Verifies a NetMessage message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a NetMessage message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns NetMessage
         */
        public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage;

        /**
         * Creates a plain object from a NetMessage message. Also converts values to other types if specified.
         * @param message NetMessage
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: CommonProto.NetMessage, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this NetMessage to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace NetMessage {

        /** Properties of a MessageContainer. */
        interface IMessageContainer {

            /** MessageContainer MsgCommonHeartbeat */
            MsgCommonHeartbeat?: (CommonProto.NetMessage.IMsgCommonHeartbeat|null);

            /** MessageContainer MsgCommonError */
            MsgCommonError?: (CommonProto.NetMessage.IMsgCommonError|null);

            /** MessageContainer MsgCommonServerDisconnect */
            MsgCommonServerDisconnect?: (CommonProto.NetMessage.IMsgCommonServerDisconnect|null);

            /** MessageContainer MsgCommonLatestConfigVersion */
            MsgCommonLatestConfigVersion?: (CommonProto.NetMessage.IMsgCommonLatestConfigVersion|null);

            /** MessageContainer MsgCommonGetServerStatus */
            MsgCommonGetServerStatus?: (CommonProto.NetMessage.IMsgCommonGetServerStatus|null);

            /** MessageContainer MsgCommonGetRankList */
            MsgCommonGetRankList?: (CommonProto.NetMessage.IMsgCommonGetRankList|null);

            /** MessageContainer MsgUserRegister */
            MsgUserRegister?: (CommonProto.NetMessage.IMsgUserRegister|null);

            /** MessageContainer MsgUserLogin */
            MsgUserLogin?: (CommonProto.NetMessage.IMsgUserLogin|null);

            /** MessageContainer MsgUserLogout */
            MsgUserLogout?: (CommonProto.NetMessage.IMsgUserLogout|null);

            /** MessageContainer MsgUserGetPublicInfo */
            MsgUserGetPublicInfo?: (CommonProto.NetMessage.IMsgUserGetPublicInfo|null);

            /** MessageContainer MsgUserGetBriefInfo */
            MsgUserGetBriefInfo?: (CommonProto.NetMessage.IMsgUserGetBriefInfo|null);

            /** MessageContainer MsgUserGetOnlineState */
            MsgUserGetOnlineState?: (CommonProto.NetMessage.IMsgUserGetOnlineState|null);

            /** MessageContainer MsgUserGetOnlineUserIdArray */
            MsgUserGetOnlineUserIdArray?: (CommonProto.NetMessage.IMsgUserGetOnlineUserIdArray|null);

            /** MessageContainer MsgUserSetNickname */
            MsgUserSetNickname?: (CommonProto.NetMessage.IMsgUserSetNickname|null);

            /** MessageContainer MsgUserSetDiscordInfo */
            MsgUserSetDiscordInfo?: (CommonProto.NetMessage.IMsgUserSetDiscordInfo|null);

            /** MessageContainer MsgUserSetPrivilege */
            MsgUserSetPrivilege?: (CommonProto.NetMessage.IMsgUserSetPrivilege|null);

            /** MessageContainer MsgUserSetPassword */
            MsgUserSetPassword?: (CommonProto.NetMessage.IMsgUserSetPassword|null);

            /** MessageContainer MsgUserSetSettings */
            MsgUserSetSettings?: (CommonProto.NetMessage.IMsgUserSetSettings|null);

            /** MessageContainer MsgUserSetMapRating */
            MsgUserSetMapRating?: (CommonProto.NetMessage.IMsgUserSetMapRating|null);

            /** MessageContainer MsgUserSetAvatarId */
            MsgUserSetAvatarId?: (CommonProto.NetMessage.IMsgUserSetAvatarId|null);

            /** MessageContainer MsgUserSetMapEditorAutoSaveTime */
            MsgUserSetMapEditorAutoSaveTime?: (CommonProto.NetMessage.IMsgUserSetMapEditorAutoSaveTime|null);

            /** MessageContainer MsgMapGetEnabledMapIdArray */
            MsgMapGetEnabledMapIdArray?: (CommonProto.NetMessage.IMsgMapGetEnabledMapIdArray|null);

            /** MessageContainer MsgMapGetBriefData */
            MsgMapGetBriefData?: (CommonProto.NetMessage.IMsgMapGetBriefData|null);

            /** MessageContainer MsgMapGetRawData */
            MsgMapGetRawData?: (CommonProto.NetMessage.IMsgMapGetRawData|null);

            /** MessageContainer MsgMapGetMapTag */
            MsgMapGetMapTag?: (CommonProto.NetMessage.IMsgMapGetMapTag|null);

            /** MessageContainer MsgMeGetMapDataList */
            MsgMeGetMapDataList?: (CommonProto.NetMessage.IMsgMeGetMapDataList|null);

            /** MessageContainer MsgMeGetMapData */
            MsgMeGetMapData?: (CommonProto.NetMessage.IMsgMeGetMapData|null);

            /** MessageContainer MsgMeSubmitMap */
            MsgMeSubmitMap?: (CommonProto.NetMessage.IMsgMeSubmitMap|null);

            /** MessageContainer MsgMeDeleteSlot */
            MsgMeDeleteSlot?: (CommonProto.NetMessage.IMsgMeDeleteSlot|null);

            /** MessageContainer MsgChatAddMessage */
            MsgChatAddMessage?: (CommonProto.NetMessage.IMsgChatAddMessage|null);

            /** MessageContainer MsgChatGetAllMessages */
            MsgChatGetAllMessages?: (CommonProto.NetMessage.IMsgChatGetAllMessages|null);

            /** MessageContainer MsgChatUpdateReadProgress */
            MsgChatUpdateReadProgress?: (CommonProto.NetMessage.IMsgChatUpdateReadProgress|null);

            /** MessageContainer MsgChatGetAllReadProgressList */
            MsgChatGetAllReadProgressList?: (CommonProto.NetMessage.IMsgChatGetAllReadProgressList|null);

            /** MessageContainer MsgChatDeleteMessage */
            MsgChatDeleteMessage?: (CommonProto.NetMessage.IMsgChatDeleteMessage|null);

            /** MessageContainer MsgMmSetWarRuleAvailability */
            MsgMmSetWarRuleAvailability?: (CommonProto.NetMessage.IMsgMmSetWarRuleAvailability|null);

            /** MessageContainer MsgMmSetMapEnabled */
            MsgMmSetMapEnabled?: (CommonProto.NetMessage.IMsgMmSetMapEnabled|null);

            /** MessageContainer MsgMmGetReviewingMaps */
            MsgMmGetReviewingMaps?: (CommonProto.NetMessage.IMsgMmGetReviewingMaps|null);

            /** MessageContainer MsgMmReviewMap */
            MsgMmReviewMap?: (CommonProto.NetMessage.IMsgMmReviewMap|null);

            /** MessageContainer MsgMmSetMapTagIdFlags */
            MsgMmSetMapTagIdFlags?: (CommonProto.NetMessage.IMsgMmSetMapTagIdFlags|null);

            /** MessageContainer MsgMmSetMapName */
            MsgMmSetMapName?: (CommonProto.NetMessage.IMsgMmSetMapName|null);

            /** MessageContainer MsgMmAddWarRule */
            MsgMmAddWarRule?: (CommonProto.NetMessage.IMsgMmAddWarRule|null);

            /** MessageContainer MsgMmDeleteWarRule */
            MsgMmDeleteWarRule?: (CommonProto.NetMessage.IMsgMmDeleteWarRule|null);

            /** MessageContainer MsgMmSetWarRuleName */
            MsgMmSetWarRuleName?: (CommonProto.NetMessage.IMsgMmSetWarRuleName|null);

            /** MessageContainer MsgMmSetMapTagSingleData */
            MsgMmSetMapTagSingleData?: (CommonProto.NetMessage.IMsgMmSetMapTagSingleData|null);

            /** MessageContainer MsgReplaySetSelfRating */
            MsgReplaySetSelfRating?: (CommonProto.NetMessage.IMsgReplaySetSelfRating|null);

            /** MessageContainer MsgReplayGetSelfRating */
            MsgReplayGetSelfRating?: (CommonProto.NetMessage.IMsgReplayGetSelfRating|null);

            /** MessageContainer MsgReplayGetReplayIdArray */
            MsgReplayGetReplayIdArray?: (CommonProto.NetMessage.IMsgReplayGetReplayIdArray|null);

            /** MessageContainer MsgReplayGetData */
            MsgReplayGetData?: (CommonProto.NetMessage.IMsgReplayGetData|null);

            /** MessageContainer MsgReplayGetReplayInfo */
            MsgReplayGetReplayInfo?: (CommonProto.NetMessage.IMsgReplayGetReplayInfo|null);

            /** MessageContainer MsgMcrCreateRoom */
            MsgMcrCreateRoom?: (CommonProto.NetMessage.IMsgMcrCreateRoom|null);

            /** MessageContainer MsgMcrExitRoom */
            MsgMcrExitRoom?: (CommonProto.NetMessage.IMsgMcrExitRoom|null);

            /** MessageContainer MsgMcrJoinRoom */
            MsgMcrJoinRoom?: (CommonProto.NetMessage.IMsgMcrJoinRoom|null);

            /** MessageContainer MsgMcrDeleteRoom */
            MsgMcrDeleteRoom?: (CommonProto.NetMessage.IMsgMcrDeleteRoom|null);

            /** MessageContainer MsgMcrSetReady */
            MsgMcrSetReady?: (CommonProto.NetMessage.IMsgMcrSetReady|null);

            /** MessageContainer MsgMcrDeletePlayer */
            MsgMcrDeletePlayer?: (CommonProto.NetMessage.IMsgMcrDeletePlayer|null);

            /** MessageContainer MsgMcrSetSelfSettings */
            MsgMcrSetSelfSettings?: (CommonProto.NetMessage.IMsgMcrSetSelfSettings|null);

            /** MessageContainer MsgMcrStartWar */
            MsgMcrStartWar?: (CommonProto.NetMessage.IMsgMcrStartWar|null);

            /** MessageContainer MsgMcrGetRoomStaticInfo */
            MsgMcrGetRoomStaticInfo?: (CommonProto.NetMessage.IMsgMcrGetRoomStaticInfo|null);

            /** MessageContainer MsgMcrGetRoomPlayerInfo */
            MsgMcrGetRoomPlayerInfo?: (CommonProto.NetMessage.IMsgMcrGetRoomPlayerInfo|null);

            /** MessageContainer MsgMpwCommonContinueWar */
            MsgMpwCommonContinueWar?: (CommonProto.NetMessage.IMsgMpwCommonContinueWar|null);

            /** MessageContainer MsgMpwCommonSyncWar */
            MsgMpwCommonSyncWar?: (CommonProto.NetMessage.IMsgMpwCommonSyncWar|null);

            /** MessageContainer MsgMpwCommonHandleBoot */
            MsgMpwCommonHandleBoot?: (CommonProto.NetMessage.IMsgMpwCommonHandleBoot|null);

            /** MessageContainer MsgMpwCommonBroadcastGameStart */
            MsgMpwCommonBroadcastGameStart?: (CommonProto.NetMessage.IMsgMpwCommonBroadcastGameStart|null);

            /** MessageContainer MsgMpwCommonGetWarSettings */
            MsgMpwCommonGetWarSettings?: (CommonProto.NetMessage.IMsgMpwCommonGetWarSettings|null);

            /** MessageContainer MsgMpwCommonGetWarProgressInfo */
            MsgMpwCommonGetWarProgressInfo?: (CommonProto.NetMessage.IMsgMpwCommonGetWarProgressInfo|null);

            /** MessageContainer MsgMpwCommonMarkTile */
            MsgMpwCommonMarkTile?: (CommonProto.NetMessage.IMsgMpwCommonMarkTile|null);

            /** MessageContainer MsgMpwWatchMakeRequest */
            MsgMpwWatchMakeRequest?: (CommonProto.NetMessage.IMsgMpwWatchMakeRequest|null);

            /** MessageContainer MsgMpwWatchHandleRequest */
            MsgMpwWatchHandleRequest?: (CommonProto.NetMessage.IMsgMpwWatchHandleRequest|null);

            /** MessageContainer MsgMpwWatchDeleteWatcher */
            MsgMpwWatchDeleteWatcher?: (CommonProto.NetMessage.IMsgMpwWatchDeleteWatcher|null);

            /** MessageContainer MsgMpwWatchGetRequestableWarIdArray */
            MsgMpwWatchGetRequestableWarIdArray?: (CommonProto.NetMessage.IMsgMpwWatchGetRequestableWarIdArray|null);

            /** MessageContainer MsgMpwWatchGetOngoingWarIdArray */
            MsgMpwWatchGetOngoingWarIdArray?: (CommonProto.NetMessage.IMsgMpwWatchGetOngoingWarIdArray|null);

            /** MessageContainer MsgMpwWatchGetRequestedWarIdArray */
            MsgMpwWatchGetRequestedWarIdArray?: (CommonProto.NetMessage.IMsgMpwWatchGetRequestedWarIdArray|null);

            /** MessageContainer MsgMpwWatchGetWatchedWarIdArray */
            MsgMpwWatchGetWatchedWarIdArray?: (CommonProto.NetMessage.IMsgMpwWatchGetWatchedWarIdArray|null);

            /** MessageContainer MsgMpwWatchContinueWar */
            MsgMpwWatchContinueWar?: (CommonProto.NetMessage.IMsgMpwWatchContinueWar|null);

            /** MessageContainer MsgMpwWatchGetIncomingInfo */
            MsgMpwWatchGetIncomingInfo?: (CommonProto.NetMessage.IMsgMpwWatchGetIncomingInfo|null);

            /** MessageContainer MsgMpwWatchGetOutgoingInfo */
            MsgMpwWatchGetOutgoingInfo?: (CommonProto.NetMessage.IMsgMpwWatchGetOutgoingInfo|null);

            /** MessageContainer MsgMpwExecuteWarAction */
            MsgMpwExecuteWarAction?: (CommonProto.NetMessage.IMsgMpwExecuteWarAction|null);

            /** MessageContainer MsgMpwGetHalfwayReplayData */
            MsgMpwGetHalfwayReplayData?: (CommonProto.NetMessage.IMsgMpwGetHalfwayReplayData|null);

            /** MessageContainer MsgSpmCreateScw */
            MsgSpmCreateScw?: (CommonProto.NetMessage.IMsgSpmCreateScw|null);

            /** MessageContainer MsgSpmCreateSfw */
            MsgSpmCreateSfw?: (CommonProto.NetMessage.IMsgSpmCreateSfw|null);

            /** MessageContainer MsgSpmCreateSrw */
            MsgSpmCreateSrw?: (CommonProto.NetMessage.IMsgSpmCreateSrw|null);

            /** MessageContainer MsgSpmGetWarSaveSlotFullData */
            MsgSpmGetWarSaveSlotFullData?: (CommonProto.NetMessage.IMsgSpmGetWarSaveSlotFullData|null);

            /** MessageContainer MsgSpmDeleteWarSaveSlot */
            MsgSpmDeleteWarSaveSlot?: (CommonProto.NetMessage.IMsgSpmDeleteWarSaveSlot|null);

            /** MessageContainer MsgSpmSaveScw */
            MsgSpmSaveScw?: (CommonProto.NetMessage.IMsgSpmSaveScw|null);

            /** MessageContainer MsgSpmSaveSfw */
            MsgSpmSaveSfw?: (CommonProto.NetMessage.IMsgSpmSaveSfw|null);

            /** MessageContainer MsgSpmSaveSrw */
            MsgSpmSaveSrw?: (CommonProto.NetMessage.IMsgSpmSaveSrw|null);

            /** MessageContainer MsgSpmValidateSrw */
            MsgSpmValidateSrw?: (CommonProto.NetMessage.IMsgSpmValidateSrw|null);

            /** MessageContainer MsgSpmGetRankList */
            MsgSpmGetRankList?: (CommonProto.NetMessage.IMsgSpmGetRankList|null);

            /** MessageContainer MsgSpmGetReplayData */
            MsgSpmGetReplayData?: (CommonProto.NetMessage.IMsgSpmGetReplayData|null);

            /** MessageContainer MsgSpmDeleteAllScoreAndReplay */
            MsgSpmDeleteAllScoreAndReplay?: (CommonProto.NetMessage.IMsgSpmDeleteAllScoreAndReplay|null);

            /** MessageContainer MsgMrrSetMaxConcurrentCount */
            MsgMrrSetMaxConcurrentCount?: (CommonProto.NetMessage.IMsgMrrSetMaxConcurrentCount|null);

            /** MessageContainer MsgMrrGetMaxConcurrentCount */
            MsgMrrGetMaxConcurrentCount?: (CommonProto.NetMessage.IMsgMrrGetMaxConcurrentCount|null);

            /** MessageContainer MsgMrrGetJoinedRoomIdArray */
            MsgMrrGetJoinedRoomIdArray?: (CommonProto.NetMessage.IMsgMrrGetJoinedRoomIdArray|null);

            /** MessageContainer MsgMrrGetRoomPublicInfo */
            MsgMrrGetRoomPublicInfo?: (CommonProto.NetMessage.IMsgMrrGetRoomPublicInfo|null);

            /** MessageContainer MsgMrrDeleteRoomByServer */
            MsgMrrDeleteRoomByServer?: (CommonProto.NetMessage.IMsgMrrDeleteRoomByServer|null);

            /** MessageContainer MsgMrrSetBannedCoCategoryIdArray */
            MsgMrrSetBannedCoCategoryIdArray?: (CommonProto.NetMessage.IMsgMrrSetBannedCoCategoryIdArray|null);

            /** MessageContainer MsgMrrSetSelfSettings */
            MsgMrrSetSelfSettings?: (CommonProto.NetMessage.IMsgMrrSetSelfSettings|null);

            /** MessageContainer MsgMrrDeleteRoomByGm */
            MsgMrrDeleteRoomByGm?: (CommonProto.NetMessage.IMsgMrrDeleteRoomByGm|null);

            /** MessageContainer MsgBroadcastGetAllMessageIdArray */
            MsgBroadcastGetAllMessageIdArray?: (CommonProto.NetMessage.IMsgBroadcastGetAllMessageIdArray|null);

            /** MessageContainer MsgBroadcastAddMessage */
            MsgBroadcastAddMessage?: (CommonProto.NetMessage.IMsgBroadcastAddMessage|null);

            /** MessageContainer MsgBroadcastDeleteMessage */
            MsgBroadcastDeleteMessage?: (CommonProto.NetMessage.IMsgBroadcastDeleteMessage|null);

            /** MessageContainer MsgBroadcastDoBroadcast */
            MsgBroadcastDoBroadcast?: (CommonProto.NetMessage.IMsgBroadcastDoBroadcast|null);

            /** MessageContainer MsgBroadcastGetMessageData */
            MsgBroadcastGetMessageData?: (CommonProto.NetMessage.IMsgBroadcastGetMessageData|null);

            /** MessageContainer MsgChangeLogGetMessageList */
            MsgChangeLogGetMessageList?: (CommonProto.NetMessage.IMsgChangeLogGetMessageList|null);

            /** MessageContainer MsgChangeLogAddMessage */
            MsgChangeLogAddMessage?: (CommonProto.NetMessage.IMsgChangeLogAddMessage|null);

            /** MessageContainer MsgChangeLogModifyMessage */
            MsgChangeLogModifyMessage?: (CommonProto.NetMessage.IMsgChangeLogModifyMessage|null);

            /** MessageContainer MsgMfrCreateRoom */
            MsgMfrCreateRoom?: (CommonProto.NetMessage.IMsgMfrCreateRoom|null);

            /** MessageContainer MsgMfrExitRoom */
            MsgMfrExitRoom?: (CommonProto.NetMessage.IMsgMfrExitRoom|null);

            /** MessageContainer MsgMfrJoinRoom */
            MsgMfrJoinRoom?: (CommonProto.NetMessage.IMsgMfrJoinRoom|null);

            /** MessageContainer MsgMfrDeleteRoom */
            MsgMfrDeleteRoom?: (CommonProto.NetMessage.IMsgMfrDeleteRoom|null);

            /** MessageContainer MsgMfrSetReady */
            MsgMfrSetReady?: (CommonProto.NetMessage.IMsgMfrSetReady|null);

            /** MessageContainer MsgMfrDeletePlayer */
            MsgMfrDeletePlayer?: (CommonProto.NetMessage.IMsgMfrDeletePlayer|null);

            /** MessageContainer MsgMfrSetSelfSettings */
            MsgMfrSetSelfSettings?: (CommonProto.NetMessage.IMsgMfrSetSelfSettings|null);

            /** MessageContainer MsgMfrStartWar */
            MsgMfrStartWar?: (CommonProto.NetMessage.IMsgMfrStartWar|null);

            /** MessageContainer MsgMfrGetRoomStaticInfo */
            MsgMfrGetRoomStaticInfo?: (CommonProto.NetMessage.IMsgMfrGetRoomStaticInfo|null);

            /** MessageContainer MsgMfrGetRoomPlayerInfo */
            MsgMfrGetRoomPlayerInfo?: (CommonProto.NetMessage.IMsgMfrGetRoomPlayerInfo|null);

            /** MessageContainer MsgCcrCreateRoom */
            MsgCcrCreateRoom?: (CommonProto.NetMessage.IMsgCcrCreateRoom|null);

            /** MessageContainer MsgCcrExitRoom */
            MsgCcrExitRoom?: (CommonProto.NetMessage.IMsgCcrExitRoom|null);

            /** MessageContainer MsgCcrJoinRoom */
            MsgCcrJoinRoom?: (CommonProto.NetMessage.IMsgCcrJoinRoom|null);

            /** MessageContainer MsgCcrDeleteRoom */
            MsgCcrDeleteRoom?: (CommonProto.NetMessage.IMsgCcrDeleteRoom|null);

            /** MessageContainer MsgCcrSetReady */
            MsgCcrSetReady?: (CommonProto.NetMessage.IMsgCcrSetReady|null);

            /** MessageContainer MsgCcrDeletePlayer */
            MsgCcrDeletePlayer?: (CommonProto.NetMessage.IMsgCcrDeletePlayer|null);

            /** MessageContainer MsgCcrSetSelfSettings */
            MsgCcrSetSelfSettings?: (CommonProto.NetMessage.IMsgCcrSetSelfSettings|null);

            /** MessageContainer MsgCcrStartWar */
            MsgCcrStartWar?: (CommonProto.NetMessage.IMsgCcrStartWar|null);

            /** MessageContainer MsgCcrGetRoomStaticInfo */
            MsgCcrGetRoomStaticInfo?: (CommonProto.NetMessage.IMsgCcrGetRoomStaticInfo|null);

            /** MessageContainer MsgCcrGetRoomPlayerInfo */
            MsgCcrGetRoomPlayerInfo?: (CommonProto.NetMessage.IMsgCcrGetRoomPlayerInfo|null);

            /** MessageContainer MsgLbSpmOverallGetTopDataArray */
            MsgLbSpmOverallGetTopDataArray?: (CommonProto.NetMessage.IMsgLbSpmOverallGetTopDataArray|null);

            /** MessageContainer MsgLbSpmOverallGetRankIndex */
            MsgLbSpmOverallGetRankIndex?: (CommonProto.NetMessage.IMsgLbSpmOverallGetRankIndex|null);

            /** MessageContainer MsgLbMrwGetRankIndex */
            MsgLbMrwGetRankIndex?: (CommonProto.NetMessage.IMsgLbMrwGetRankIndex|null);
        }

        /** Represents a MessageContainer. */
        class MessageContainer implements IMessageContainer {

            /**
             * Constructs a new MessageContainer.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMessageContainer);

            /** MessageContainer MsgCommonHeartbeat. */
            public MsgCommonHeartbeat?: (CommonProto.NetMessage.IMsgCommonHeartbeat|null);

            /** MessageContainer MsgCommonError. */
            public MsgCommonError?: (CommonProto.NetMessage.IMsgCommonError|null);

            /** MessageContainer MsgCommonServerDisconnect. */
            public MsgCommonServerDisconnect?: (CommonProto.NetMessage.IMsgCommonServerDisconnect|null);

            /** MessageContainer MsgCommonLatestConfigVersion. */
            public MsgCommonLatestConfigVersion?: (CommonProto.NetMessage.IMsgCommonLatestConfigVersion|null);

            /** MessageContainer MsgCommonGetServerStatus. */
            public MsgCommonGetServerStatus?: (CommonProto.NetMessage.IMsgCommonGetServerStatus|null);

            /** MessageContainer MsgCommonGetRankList. */
            public MsgCommonGetRankList?: (CommonProto.NetMessage.IMsgCommonGetRankList|null);

            /** MessageContainer MsgUserRegister. */
            public MsgUserRegister?: (CommonProto.NetMessage.IMsgUserRegister|null);

            /** MessageContainer MsgUserLogin. */
            public MsgUserLogin?: (CommonProto.NetMessage.IMsgUserLogin|null);

            /** MessageContainer MsgUserLogout. */
            public MsgUserLogout?: (CommonProto.NetMessage.IMsgUserLogout|null);

            /** MessageContainer MsgUserGetPublicInfo. */
            public MsgUserGetPublicInfo?: (CommonProto.NetMessage.IMsgUserGetPublicInfo|null);

            /** MessageContainer MsgUserGetBriefInfo. */
            public MsgUserGetBriefInfo?: (CommonProto.NetMessage.IMsgUserGetBriefInfo|null);

            /** MessageContainer MsgUserGetOnlineState. */
            public MsgUserGetOnlineState?: (CommonProto.NetMessage.IMsgUserGetOnlineState|null);

            /** MessageContainer MsgUserGetOnlineUserIdArray. */
            public MsgUserGetOnlineUserIdArray?: (CommonProto.NetMessage.IMsgUserGetOnlineUserIdArray|null);

            /** MessageContainer MsgUserSetNickname. */
            public MsgUserSetNickname?: (CommonProto.NetMessage.IMsgUserSetNickname|null);

            /** MessageContainer MsgUserSetDiscordInfo. */
            public MsgUserSetDiscordInfo?: (CommonProto.NetMessage.IMsgUserSetDiscordInfo|null);

            /** MessageContainer MsgUserSetPrivilege. */
            public MsgUserSetPrivilege?: (CommonProto.NetMessage.IMsgUserSetPrivilege|null);

            /** MessageContainer MsgUserSetPassword. */
            public MsgUserSetPassword?: (CommonProto.NetMessage.IMsgUserSetPassword|null);

            /** MessageContainer MsgUserSetSettings. */
            public MsgUserSetSettings?: (CommonProto.NetMessage.IMsgUserSetSettings|null);

            /** MessageContainer MsgUserSetMapRating. */
            public MsgUserSetMapRating?: (CommonProto.NetMessage.IMsgUserSetMapRating|null);

            /** MessageContainer MsgUserSetAvatarId. */
            public MsgUserSetAvatarId?: (CommonProto.NetMessage.IMsgUserSetAvatarId|null);

            /** MessageContainer MsgUserSetMapEditorAutoSaveTime. */
            public MsgUserSetMapEditorAutoSaveTime?: (CommonProto.NetMessage.IMsgUserSetMapEditorAutoSaveTime|null);

            /** MessageContainer MsgMapGetEnabledMapIdArray. */
            public MsgMapGetEnabledMapIdArray?: (CommonProto.NetMessage.IMsgMapGetEnabledMapIdArray|null);

            /** MessageContainer MsgMapGetBriefData. */
            public MsgMapGetBriefData?: (CommonProto.NetMessage.IMsgMapGetBriefData|null);

            /** MessageContainer MsgMapGetRawData. */
            public MsgMapGetRawData?: (CommonProto.NetMessage.IMsgMapGetRawData|null);

            /** MessageContainer MsgMapGetMapTag. */
            public MsgMapGetMapTag?: (CommonProto.NetMessage.IMsgMapGetMapTag|null);

            /** MessageContainer MsgMeGetMapDataList. */
            public MsgMeGetMapDataList?: (CommonProto.NetMessage.IMsgMeGetMapDataList|null);

            /** MessageContainer MsgMeGetMapData. */
            public MsgMeGetMapData?: (CommonProto.NetMessage.IMsgMeGetMapData|null);

            /** MessageContainer MsgMeSubmitMap. */
            public MsgMeSubmitMap?: (CommonProto.NetMessage.IMsgMeSubmitMap|null);

            /** MessageContainer MsgMeDeleteSlot. */
            public MsgMeDeleteSlot?: (CommonProto.NetMessage.IMsgMeDeleteSlot|null);

            /** MessageContainer MsgChatAddMessage. */
            public MsgChatAddMessage?: (CommonProto.NetMessage.IMsgChatAddMessage|null);

            /** MessageContainer MsgChatGetAllMessages. */
            public MsgChatGetAllMessages?: (CommonProto.NetMessage.IMsgChatGetAllMessages|null);

            /** MessageContainer MsgChatUpdateReadProgress. */
            public MsgChatUpdateReadProgress?: (CommonProto.NetMessage.IMsgChatUpdateReadProgress|null);

            /** MessageContainer MsgChatGetAllReadProgressList. */
            public MsgChatGetAllReadProgressList?: (CommonProto.NetMessage.IMsgChatGetAllReadProgressList|null);

            /** MessageContainer MsgChatDeleteMessage. */
            public MsgChatDeleteMessage?: (CommonProto.NetMessage.IMsgChatDeleteMessage|null);

            /** MessageContainer MsgMmSetWarRuleAvailability. */
            public MsgMmSetWarRuleAvailability?: (CommonProto.NetMessage.IMsgMmSetWarRuleAvailability|null);

            /** MessageContainer MsgMmSetMapEnabled. */
            public MsgMmSetMapEnabled?: (CommonProto.NetMessage.IMsgMmSetMapEnabled|null);

            /** MessageContainer MsgMmGetReviewingMaps. */
            public MsgMmGetReviewingMaps?: (CommonProto.NetMessage.IMsgMmGetReviewingMaps|null);

            /** MessageContainer MsgMmReviewMap. */
            public MsgMmReviewMap?: (CommonProto.NetMessage.IMsgMmReviewMap|null);

            /** MessageContainer MsgMmSetMapTagIdFlags. */
            public MsgMmSetMapTagIdFlags?: (CommonProto.NetMessage.IMsgMmSetMapTagIdFlags|null);

            /** MessageContainer MsgMmSetMapName. */
            public MsgMmSetMapName?: (CommonProto.NetMessage.IMsgMmSetMapName|null);

            /** MessageContainer MsgMmAddWarRule. */
            public MsgMmAddWarRule?: (CommonProto.NetMessage.IMsgMmAddWarRule|null);

            /** MessageContainer MsgMmDeleteWarRule. */
            public MsgMmDeleteWarRule?: (CommonProto.NetMessage.IMsgMmDeleteWarRule|null);

            /** MessageContainer MsgMmSetWarRuleName. */
            public MsgMmSetWarRuleName?: (CommonProto.NetMessage.IMsgMmSetWarRuleName|null);

            /** MessageContainer MsgMmSetMapTagSingleData. */
            public MsgMmSetMapTagSingleData?: (CommonProto.NetMessage.IMsgMmSetMapTagSingleData|null);

            /** MessageContainer MsgReplaySetSelfRating. */
            public MsgReplaySetSelfRating?: (CommonProto.NetMessage.IMsgReplaySetSelfRating|null);

            /** MessageContainer MsgReplayGetSelfRating. */
            public MsgReplayGetSelfRating?: (CommonProto.NetMessage.IMsgReplayGetSelfRating|null);

            /** MessageContainer MsgReplayGetReplayIdArray. */
            public MsgReplayGetReplayIdArray?: (CommonProto.NetMessage.IMsgReplayGetReplayIdArray|null);

            /** MessageContainer MsgReplayGetData. */
            public MsgReplayGetData?: (CommonProto.NetMessage.IMsgReplayGetData|null);

            /** MessageContainer MsgReplayGetReplayInfo. */
            public MsgReplayGetReplayInfo?: (CommonProto.NetMessage.IMsgReplayGetReplayInfo|null);

            /** MessageContainer MsgMcrCreateRoom. */
            public MsgMcrCreateRoom?: (CommonProto.NetMessage.IMsgMcrCreateRoom|null);

            /** MessageContainer MsgMcrExitRoom. */
            public MsgMcrExitRoom?: (CommonProto.NetMessage.IMsgMcrExitRoom|null);

            /** MessageContainer MsgMcrJoinRoom. */
            public MsgMcrJoinRoom?: (CommonProto.NetMessage.IMsgMcrJoinRoom|null);

            /** MessageContainer MsgMcrDeleteRoom. */
            public MsgMcrDeleteRoom?: (CommonProto.NetMessage.IMsgMcrDeleteRoom|null);

            /** MessageContainer MsgMcrSetReady. */
            public MsgMcrSetReady?: (CommonProto.NetMessage.IMsgMcrSetReady|null);

            /** MessageContainer MsgMcrDeletePlayer. */
            public MsgMcrDeletePlayer?: (CommonProto.NetMessage.IMsgMcrDeletePlayer|null);

            /** MessageContainer MsgMcrSetSelfSettings. */
            public MsgMcrSetSelfSettings?: (CommonProto.NetMessage.IMsgMcrSetSelfSettings|null);

            /** MessageContainer MsgMcrStartWar. */
            public MsgMcrStartWar?: (CommonProto.NetMessage.IMsgMcrStartWar|null);

            /** MessageContainer MsgMcrGetRoomStaticInfo. */
            public MsgMcrGetRoomStaticInfo?: (CommonProto.NetMessage.IMsgMcrGetRoomStaticInfo|null);

            /** MessageContainer MsgMcrGetRoomPlayerInfo. */
            public MsgMcrGetRoomPlayerInfo?: (CommonProto.NetMessage.IMsgMcrGetRoomPlayerInfo|null);

            /** MessageContainer MsgMpwCommonContinueWar. */
            public MsgMpwCommonContinueWar?: (CommonProto.NetMessage.IMsgMpwCommonContinueWar|null);

            /** MessageContainer MsgMpwCommonSyncWar. */
            public MsgMpwCommonSyncWar?: (CommonProto.NetMessage.IMsgMpwCommonSyncWar|null);

            /** MessageContainer MsgMpwCommonHandleBoot. */
            public MsgMpwCommonHandleBoot?: (CommonProto.NetMessage.IMsgMpwCommonHandleBoot|null);

            /** MessageContainer MsgMpwCommonBroadcastGameStart. */
            public MsgMpwCommonBroadcastGameStart?: (CommonProto.NetMessage.IMsgMpwCommonBroadcastGameStart|null);

            /** MessageContainer MsgMpwCommonGetWarSettings. */
            public MsgMpwCommonGetWarSettings?: (CommonProto.NetMessage.IMsgMpwCommonGetWarSettings|null);

            /** MessageContainer MsgMpwCommonGetWarProgressInfo. */
            public MsgMpwCommonGetWarProgressInfo?: (CommonProto.NetMessage.IMsgMpwCommonGetWarProgressInfo|null);

            /** MessageContainer MsgMpwCommonMarkTile. */
            public MsgMpwCommonMarkTile?: (CommonProto.NetMessage.IMsgMpwCommonMarkTile|null);

            /** MessageContainer MsgMpwWatchMakeRequest. */
            public MsgMpwWatchMakeRequest?: (CommonProto.NetMessage.IMsgMpwWatchMakeRequest|null);

            /** MessageContainer MsgMpwWatchHandleRequest. */
            public MsgMpwWatchHandleRequest?: (CommonProto.NetMessage.IMsgMpwWatchHandleRequest|null);

            /** MessageContainer MsgMpwWatchDeleteWatcher. */
            public MsgMpwWatchDeleteWatcher?: (CommonProto.NetMessage.IMsgMpwWatchDeleteWatcher|null);

            /** MessageContainer MsgMpwWatchGetRequestableWarIdArray. */
            public MsgMpwWatchGetRequestableWarIdArray?: (CommonProto.NetMessage.IMsgMpwWatchGetRequestableWarIdArray|null);

            /** MessageContainer MsgMpwWatchGetOngoingWarIdArray. */
            public MsgMpwWatchGetOngoingWarIdArray?: (CommonProto.NetMessage.IMsgMpwWatchGetOngoingWarIdArray|null);

            /** MessageContainer MsgMpwWatchGetRequestedWarIdArray. */
            public MsgMpwWatchGetRequestedWarIdArray?: (CommonProto.NetMessage.IMsgMpwWatchGetRequestedWarIdArray|null);

            /** MessageContainer MsgMpwWatchGetWatchedWarIdArray. */
            public MsgMpwWatchGetWatchedWarIdArray?: (CommonProto.NetMessage.IMsgMpwWatchGetWatchedWarIdArray|null);

            /** MessageContainer MsgMpwWatchContinueWar. */
            public MsgMpwWatchContinueWar?: (CommonProto.NetMessage.IMsgMpwWatchContinueWar|null);

            /** MessageContainer MsgMpwWatchGetIncomingInfo. */
            public MsgMpwWatchGetIncomingInfo?: (CommonProto.NetMessage.IMsgMpwWatchGetIncomingInfo|null);

            /** MessageContainer MsgMpwWatchGetOutgoingInfo. */
            public MsgMpwWatchGetOutgoingInfo?: (CommonProto.NetMessage.IMsgMpwWatchGetOutgoingInfo|null);

            /** MessageContainer MsgMpwExecuteWarAction. */
            public MsgMpwExecuteWarAction?: (CommonProto.NetMessage.IMsgMpwExecuteWarAction|null);

            /** MessageContainer MsgMpwGetHalfwayReplayData. */
            public MsgMpwGetHalfwayReplayData?: (CommonProto.NetMessage.IMsgMpwGetHalfwayReplayData|null);

            /** MessageContainer MsgSpmCreateScw. */
            public MsgSpmCreateScw?: (CommonProto.NetMessage.IMsgSpmCreateScw|null);

            /** MessageContainer MsgSpmCreateSfw. */
            public MsgSpmCreateSfw?: (CommonProto.NetMessage.IMsgSpmCreateSfw|null);

            /** MessageContainer MsgSpmCreateSrw. */
            public MsgSpmCreateSrw?: (CommonProto.NetMessage.IMsgSpmCreateSrw|null);

            /** MessageContainer MsgSpmGetWarSaveSlotFullData. */
            public MsgSpmGetWarSaveSlotFullData?: (CommonProto.NetMessage.IMsgSpmGetWarSaveSlotFullData|null);

            /** MessageContainer MsgSpmDeleteWarSaveSlot. */
            public MsgSpmDeleteWarSaveSlot?: (CommonProto.NetMessage.IMsgSpmDeleteWarSaveSlot|null);

            /** MessageContainer MsgSpmSaveScw. */
            public MsgSpmSaveScw?: (CommonProto.NetMessage.IMsgSpmSaveScw|null);

            /** MessageContainer MsgSpmSaveSfw. */
            public MsgSpmSaveSfw?: (CommonProto.NetMessage.IMsgSpmSaveSfw|null);

            /** MessageContainer MsgSpmSaveSrw. */
            public MsgSpmSaveSrw?: (CommonProto.NetMessage.IMsgSpmSaveSrw|null);

            /** MessageContainer MsgSpmValidateSrw. */
            public MsgSpmValidateSrw?: (CommonProto.NetMessage.IMsgSpmValidateSrw|null);

            /** MessageContainer MsgSpmGetRankList. */
            public MsgSpmGetRankList?: (CommonProto.NetMessage.IMsgSpmGetRankList|null);

            /** MessageContainer MsgSpmGetReplayData. */
            public MsgSpmGetReplayData?: (CommonProto.NetMessage.IMsgSpmGetReplayData|null);

            /** MessageContainer MsgSpmDeleteAllScoreAndReplay. */
            public MsgSpmDeleteAllScoreAndReplay?: (CommonProto.NetMessage.IMsgSpmDeleteAllScoreAndReplay|null);

            /** MessageContainer MsgMrrSetMaxConcurrentCount. */
            public MsgMrrSetMaxConcurrentCount?: (CommonProto.NetMessage.IMsgMrrSetMaxConcurrentCount|null);

            /** MessageContainer MsgMrrGetMaxConcurrentCount. */
            public MsgMrrGetMaxConcurrentCount?: (CommonProto.NetMessage.IMsgMrrGetMaxConcurrentCount|null);

            /** MessageContainer MsgMrrGetJoinedRoomIdArray. */
            public MsgMrrGetJoinedRoomIdArray?: (CommonProto.NetMessage.IMsgMrrGetJoinedRoomIdArray|null);

            /** MessageContainer MsgMrrGetRoomPublicInfo. */
            public MsgMrrGetRoomPublicInfo?: (CommonProto.NetMessage.IMsgMrrGetRoomPublicInfo|null);

            /** MessageContainer MsgMrrDeleteRoomByServer. */
            public MsgMrrDeleteRoomByServer?: (CommonProto.NetMessage.IMsgMrrDeleteRoomByServer|null);

            /** MessageContainer MsgMrrSetBannedCoCategoryIdArray. */
            public MsgMrrSetBannedCoCategoryIdArray?: (CommonProto.NetMessage.IMsgMrrSetBannedCoCategoryIdArray|null);

            /** MessageContainer MsgMrrSetSelfSettings. */
            public MsgMrrSetSelfSettings?: (CommonProto.NetMessage.IMsgMrrSetSelfSettings|null);

            /** MessageContainer MsgMrrDeleteRoomByGm. */
            public MsgMrrDeleteRoomByGm?: (CommonProto.NetMessage.IMsgMrrDeleteRoomByGm|null);

            /** MessageContainer MsgBroadcastGetAllMessageIdArray. */
            public MsgBroadcastGetAllMessageIdArray?: (CommonProto.NetMessage.IMsgBroadcastGetAllMessageIdArray|null);

            /** MessageContainer MsgBroadcastAddMessage. */
            public MsgBroadcastAddMessage?: (CommonProto.NetMessage.IMsgBroadcastAddMessage|null);

            /** MessageContainer MsgBroadcastDeleteMessage. */
            public MsgBroadcastDeleteMessage?: (CommonProto.NetMessage.IMsgBroadcastDeleteMessage|null);

            /** MessageContainer MsgBroadcastDoBroadcast. */
            public MsgBroadcastDoBroadcast?: (CommonProto.NetMessage.IMsgBroadcastDoBroadcast|null);

            /** MessageContainer MsgBroadcastGetMessageData. */
            public MsgBroadcastGetMessageData?: (CommonProto.NetMessage.IMsgBroadcastGetMessageData|null);

            /** MessageContainer MsgChangeLogGetMessageList. */
            public MsgChangeLogGetMessageList?: (CommonProto.NetMessage.IMsgChangeLogGetMessageList|null);

            /** MessageContainer MsgChangeLogAddMessage. */
            public MsgChangeLogAddMessage?: (CommonProto.NetMessage.IMsgChangeLogAddMessage|null);

            /** MessageContainer MsgChangeLogModifyMessage. */
            public MsgChangeLogModifyMessage?: (CommonProto.NetMessage.IMsgChangeLogModifyMessage|null);

            /** MessageContainer MsgMfrCreateRoom. */
            public MsgMfrCreateRoom?: (CommonProto.NetMessage.IMsgMfrCreateRoom|null);

            /** MessageContainer MsgMfrExitRoom. */
            public MsgMfrExitRoom?: (CommonProto.NetMessage.IMsgMfrExitRoom|null);

            /** MessageContainer MsgMfrJoinRoom. */
            public MsgMfrJoinRoom?: (CommonProto.NetMessage.IMsgMfrJoinRoom|null);

            /** MessageContainer MsgMfrDeleteRoom. */
            public MsgMfrDeleteRoom?: (CommonProto.NetMessage.IMsgMfrDeleteRoom|null);

            /** MessageContainer MsgMfrSetReady. */
            public MsgMfrSetReady?: (CommonProto.NetMessage.IMsgMfrSetReady|null);

            /** MessageContainer MsgMfrDeletePlayer. */
            public MsgMfrDeletePlayer?: (CommonProto.NetMessage.IMsgMfrDeletePlayer|null);

            /** MessageContainer MsgMfrSetSelfSettings. */
            public MsgMfrSetSelfSettings?: (CommonProto.NetMessage.IMsgMfrSetSelfSettings|null);

            /** MessageContainer MsgMfrStartWar. */
            public MsgMfrStartWar?: (CommonProto.NetMessage.IMsgMfrStartWar|null);

            /** MessageContainer MsgMfrGetRoomStaticInfo. */
            public MsgMfrGetRoomStaticInfo?: (CommonProto.NetMessage.IMsgMfrGetRoomStaticInfo|null);

            /** MessageContainer MsgMfrGetRoomPlayerInfo. */
            public MsgMfrGetRoomPlayerInfo?: (CommonProto.NetMessage.IMsgMfrGetRoomPlayerInfo|null);

            /** MessageContainer MsgCcrCreateRoom. */
            public MsgCcrCreateRoom?: (CommonProto.NetMessage.IMsgCcrCreateRoom|null);

            /** MessageContainer MsgCcrExitRoom. */
            public MsgCcrExitRoom?: (CommonProto.NetMessage.IMsgCcrExitRoom|null);

            /** MessageContainer MsgCcrJoinRoom. */
            public MsgCcrJoinRoom?: (CommonProto.NetMessage.IMsgCcrJoinRoom|null);

            /** MessageContainer MsgCcrDeleteRoom. */
            public MsgCcrDeleteRoom?: (CommonProto.NetMessage.IMsgCcrDeleteRoom|null);

            /** MessageContainer MsgCcrSetReady. */
            public MsgCcrSetReady?: (CommonProto.NetMessage.IMsgCcrSetReady|null);

            /** MessageContainer MsgCcrDeletePlayer. */
            public MsgCcrDeletePlayer?: (CommonProto.NetMessage.IMsgCcrDeletePlayer|null);

            /** MessageContainer MsgCcrSetSelfSettings. */
            public MsgCcrSetSelfSettings?: (CommonProto.NetMessage.IMsgCcrSetSelfSettings|null);

            /** MessageContainer MsgCcrStartWar. */
            public MsgCcrStartWar?: (CommonProto.NetMessage.IMsgCcrStartWar|null);

            /** MessageContainer MsgCcrGetRoomStaticInfo. */
            public MsgCcrGetRoomStaticInfo?: (CommonProto.NetMessage.IMsgCcrGetRoomStaticInfo|null);

            /** MessageContainer MsgCcrGetRoomPlayerInfo. */
            public MsgCcrGetRoomPlayerInfo?: (CommonProto.NetMessage.IMsgCcrGetRoomPlayerInfo|null);

            /** MessageContainer MsgLbSpmOverallGetTopDataArray. */
            public MsgLbSpmOverallGetTopDataArray?: (CommonProto.NetMessage.IMsgLbSpmOverallGetTopDataArray|null);

            /** MessageContainer MsgLbSpmOverallGetRankIndex. */
            public MsgLbSpmOverallGetRankIndex?: (CommonProto.NetMessage.IMsgLbSpmOverallGetRankIndex|null);

            /** MessageContainer MsgLbMrwGetRankIndex. */
            public MsgLbMrwGetRankIndex?: (CommonProto.NetMessage.IMsgLbMrwGetRankIndex|null);

            /**
             * Creates a new MessageContainer instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MessageContainer instance
             */
            public static create(properties?: CommonProto.NetMessage.IMessageContainer): CommonProto.NetMessage.MessageContainer;

            /**
             * Encodes the specified MessageContainer message. Does not implicitly {@link CommonProto.NetMessage.MessageContainer.verify|verify} messages.
             * @param message MessageContainer message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMessageContainer, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MessageContainer message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MessageContainer.verify|verify} messages.
             * @param message MessageContainer message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMessageContainer, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MessageContainer message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MessageContainer
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MessageContainer;

            /**
             * Decodes a MessageContainer message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MessageContainer
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MessageContainer;

            /**
             * Verifies a MessageContainer message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MessageContainer message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MessageContainer
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MessageContainer;

            /**
             * Creates a plain object from a MessageContainer message. Also converts values to other types if specified.
             * @param message MessageContainer
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MessageContainer, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MessageContainer to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a MsgCommonHeartbeat. */
        interface IMsgCommonHeartbeat {

            /** MsgCommonHeartbeat c */
            c?: (CommonProto.NetMessage.MsgCommonHeartbeat.IC|null);

            /** MsgCommonHeartbeat s */
            s?: (CommonProto.NetMessage.MsgCommonHeartbeat.IS|null);
        }

        /** Represents a MsgCommonHeartbeat. */
        class MsgCommonHeartbeat implements IMsgCommonHeartbeat {

            /**
             * Constructs a new MsgCommonHeartbeat.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgCommonHeartbeat);

            /** MsgCommonHeartbeat c. */
            public c?: (CommonProto.NetMessage.MsgCommonHeartbeat.IC|null);

            /** MsgCommonHeartbeat s. */
            public s?: (CommonProto.NetMessage.MsgCommonHeartbeat.IS|null);

            /**
             * Creates a new MsgCommonHeartbeat instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgCommonHeartbeat instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgCommonHeartbeat): CommonProto.NetMessage.MsgCommonHeartbeat;

            /**
             * Encodes the specified MsgCommonHeartbeat message. Does not implicitly {@link CommonProto.NetMessage.MsgCommonHeartbeat.verify|verify} messages.
             * @param message MsgCommonHeartbeat message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgCommonHeartbeat, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgCommonHeartbeat message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgCommonHeartbeat.verify|verify} messages.
             * @param message MsgCommonHeartbeat message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgCommonHeartbeat, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgCommonHeartbeat message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgCommonHeartbeat
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgCommonHeartbeat;

            /**
             * Decodes a MsgCommonHeartbeat message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgCommonHeartbeat
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgCommonHeartbeat;

            /**
             * Verifies a MsgCommonHeartbeat message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgCommonHeartbeat message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgCommonHeartbeat
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgCommonHeartbeat;

            /**
             * Creates a plain object from a MsgCommonHeartbeat message. Also converts values to other types if specified.
             * @param message MsgCommonHeartbeat
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgCommonHeartbeat, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgCommonHeartbeat to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgCommonHeartbeat {

            /** Properties of a C. */
            interface IC {

                /** C counter */
                counter?: (number|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgCommonHeartbeat.IC);

                /** C counter. */
                public counter: number;

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgCommonHeartbeat.IC): CommonProto.NetMessage.MsgCommonHeartbeat.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgCommonHeartbeat.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgCommonHeartbeat.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgCommonHeartbeat.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgCommonHeartbeat.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgCommonHeartbeat.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgCommonHeartbeat.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgCommonHeartbeat.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgCommonHeartbeat.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S counter */
                counter?: (number|null);

                /** S timestamp */
                timestamp?: (number|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgCommonHeartbeat.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S counter. */
                public counter: number;

                /** S timestamp. */
                public timestamp: number;

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgCommonHeartbeat.IS): CommonProto.NetMessage.MsgCommonHeartbeat.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgCommonHeartbeat.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgCommonHeartbeat.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgCommonHeartbeat.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgCommonHeartbeat.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgCommonHeartbeat.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgCommonHeartbeat.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgCommonHeartbeat.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgCommonHeartbeat.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgCommonError. */
        interface IMsgCommonError {

            /** MsgCommonError s */
            s?: (CommonProto.NetMessage.MsgCommonError.IS|null);
        }

        /** Represents a MsgCommonError. */
        class MsgCommonError implements IMsgCommonError {

            /**
             * Constructs a new MsgCommonError.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgCommonError);

            /** MsgCommonError s. */
            public s?: (CommonProto.NetMessage.MsgCommonError.IS|null);

            /**
             * Creates a new MsgCommonError instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgCommonError instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgCommonError): CommonProto.NetMessage.MsgCommonError;

            /**
             * Encodes the specified MsgCommonError message. Does not implicitly {@link CommonProto.NetMessage.MsgCommonError.verify|verify} messages.
             * @param message MsgCommonError message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgCommonError, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgCommonError message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgCommonError.verify|verify} messages.
             * @param message MsgCommonError message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgCommonError, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgCommonError message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgCommonError
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgCommonError;

            /**
             * Decodes a MsgCommonError message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgCommonError
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgCommonError;

            /**
             * Verifies a MsgCommonError message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgCommonError message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgCommonError
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgCommonError;

            /**
             * Creates a plain object from a MsgCommonError message. Also converts values to other types if specified.
             * @param message MsgCommonError
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgCommonError, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgCommonError to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgCommonError {

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgCommonError.IS);

                /** S errorCode. */
                public errorCode: number;

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgCommonError.IS): CommonProto.NetMessage.MsgCommonError.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgCommonError.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgCommonError.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgCommonError.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgCommonError.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgCommonError.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgCommonError.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgCommonError.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgCommonError.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgCommonServerDisconnect. */
        interface IMsgCommonServerDisconnect {

            /** MsgCommonServerDisconnect s */
            s?: (CommonProto.NetMessage.MsgCommonServerDisconnect.IS|null);
        }

        /** Represents a MsgCommonServerDisconnect. */
        class MsgCommonServerDisconnect implements IMsgCommonServerDisconnect {

            /**
             * Constructs a new MsgCommonServerDisconnect.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgCommonServerDisconnect);

            /** MsgCommonServerDisconnect s. */
            public s?: (CommonProto.NetMessage.MsgCommonServerDisconnect.IS|null);

            /**
             * Creates a new MsgCommonServerDisconnect instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgCommonServerDisconnect instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgCommonServerDisconnect): CommonProto.NetMessage.MsgCommonServerDisconnect;

            /**
             * Encodes the specified MsgCommonServerDisconnect message. Does not implicitly {@link CommonProto.NetMessage.MsgCommonServerDisconnect.verify|verify} messages.
             * @param message MsgCommonServerDisconnect message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgCommonServerDisconnect, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgCommonServerDisconnect message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgCommonServerDisconnect.verify|verify} messages.
             * @param message MsgCommonServerDisconnect message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgCommonServerDisconnect, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgCommonServerDisconnect message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgCommonServerDisconnect
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgCommonServerDisconnect;

            /**
             * Decodes a MsgCommonServerDisconnect message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgCommonServerDisconnect
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgCommonServerDisconnect;

            /**
             * Verifies a MsgCommonServerDisconnect message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgCommonServerDisconnect message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgCommonServerDisconnect
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgCommonServerDisconnect;

            /**
             * Creates a plain object from a MsgCommonServerDisconnect message. Also converts values to other types if specified.
             * @param message MsgCommonServerDisconnect
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgCommonServerDisconnect, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgCommonServerDisconnect to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgCommonServerDisconnect {

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgCommonServerDisconnect.IS);

                /** S errorCode. */
                public errorCode: number;

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgCommonServerDisconnect.IS): CommonProto.NetMessage.MsgCommonServerDisconnect.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgCommonServerDisconnect.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgCommonServerDisconnect.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgCommonServerDisconnect.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgCommonServerDisconnect.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgCommonServerDisconnect.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgCommonServerDisconnect.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgCommonServerDisconnect.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgCommonServerDisconnect.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgCommonLatestConfigVersion. */
        interface IMsgCommonLatestConfigVersion {

            /** MsgCommonLatestConfigVersion c */
            c?: (CommonProto.NetMessage.MsgCommonLatestConfigVersion.IC|null);

            /** MsgCommonLatestConfigVersion s */
            s?: (CommonProto.NetMessage.MsgCommonLatestConfigVersion.IS|null);
        }

        /** Represents a MsgCommonLatestConfigVersion. */
        class MsgCommonLatestConfigVersion implements IMsgCommonLatestConfigVersion {

            /**
             * Constructs a new MsgCommonLatestConfigVersion.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgCommonLatestConfigVersion);

            /** MsgCommonLatestConfigVersion c. */
            public c?: (CommonProto.NetMessage.MsgCommonLatestConfigVersion.IC|null);

            /** MsgCommonLatestConfigVersion s. */
            public s?: (CommonProto.NetMessage.MsgCommonLatestConfigVersion.IS|null);

            /**
             * Creates a new MsgCommonLatestConfigVersion instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgCommonLatestConfigVersion instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgCommonLatestConfigVersion): CommonProto.NetMessage.MsgCommonLatestConfigVersion;

            /**
             * Encodes the specified MsgCommonLatestConfigVersion message. Does not implicitly {@link CommonProto.NetMessage.MsgCommonLatestConfigVersion.verify|verify} messages.
             * @param message MsgCommonLatestConfigVersion message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgCommonLatestConfigVersion, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgCommonLatestConfigVersion message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgCommonLatestConfigVersion.verify|verify} messages.
             * @param message MsgCommonLatestConfigVersion message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgCommonLatestConfigVersion, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgCommonLatestConfigVersion message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgCommonLatestConfigVersion
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgCommonLatestConfigVersion;

            /**
             * Decodes a MsgCommonLatestConfigVersion message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgCommonLatestConfigVersion
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgCommonLatestConfigVersion;

            /**
             * Verifies a MsgCommonLatestConfigVersion message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgCommonLatestConfigVersion message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgCommonLatestConfigVersion
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgCommonLatestConfigVersion;

            /**
             * Creates a plain object from a MsgCommonLatestConfigVersion message. Also converts values to other types if specified.
             * @param message MsgCommonLatestConfigVersion
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgCommonLatestConfigVersion, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgCommonLatestConfigVersion to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgCommonLatestConfigVersion {

            /** Properties of a C. */
            interface IC {
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgCommonLatestConfigVersion.IC);

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgCommonLatestConfigVersion.IC): CommonProto.NetMessage.MsgCommonLatestConfigVersion.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgCommonLatestConfigVersion.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgCommonLatestConfigVersion.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgCommonLatestConfigVersion.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgCommonLatestConfigVersion.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgCommonLatestConfigVersion.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgCommonLatestConfigVersion.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgCommonLatestConfigVersion.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgCommonLatestConfigVersion.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S version */
                version?: (string|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgCommonLatestConfigVersion.IS);

                /** S version. */
                public version: string;

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgCommonLatestConfigVersion.IS): CommonProto.NetMessage.MsgCommonLatestConfigVersion.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgCommonLatestConfigVersion.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgCommonLatestConfigVersion.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgCommonLatestConfigVersion.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgCommonLatestConfigVersion.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgCommonLatestConfigVersion.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgCommonLatestConfigVersion.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgCommonLatestConfigVersion.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgCommonLatestConfigVersion.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgCommonGetServerStatus. */
        interface IMsgCommonGetServerStatus {

            /** MsgCommonGetServerStatus c */
            c?: (CommonProto.NetMessage.MsgCommonGetServerStatus.IC|null);

            /** MsgCommonGetServerStatus s */
            s?: (CommonProto.NetMessage.MsgCommonGetServerStatus.IS|null);
        }

        /** Represents a MsgCommonGetServerStatus. */
        class MsgCommonGetServerStatus implements IMsgCommonGetServerStatus {

            /**
             * Constructs a new MsgCommonGetServerStatus.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgCommonGetServerStatus);

            /** MsgCommonGetServerStatus c. */
            public c?: (CommonProto.NetMessage.MsgCommonGetServerStatus.IC|null);

            /** MsgCommonGetServerStatus s. */
            public s?: (CommonProto.NetMessage.MsgCommonGetServerStatus.IS|null);

            /**
             * Creates a new MsgCommonGetServerStatus instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgCommonGetServerStatus instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgCommonGetServerStatus): CommonProto.NetMessage.MsgCommonGetServerStatus;

            /**
             * Encodes the specified MsgCommonGetServerStatus message. Does not implicitly {@link CommonProto.NetMessage.MsgCommonGetServerStatus.verify|verify} messages.
             * @param message MsgCommonGetServerStatus message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgCommonGetServerStatus, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgCommonGetServerStatus message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgCommonGetServerStatus.verify|verify} messages.
             * @param message MsgCommonGetServerStatus message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgCommonGetServerStatus, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgCommonGetServerStatus message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgCommonGetServerStatus
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgCommonGetServerStatus;

            /**
             * Decodes a MsgCommonGetServerStatus message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgCommonGetServerStatus
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgCommonGetServerStatus;

            /**
             * Verifies a MsgCommonGetServerStatus message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgCommonGetServerStatus message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgCommonGetServerStatus
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgCommonGetServerStatus;

            /**
             * Creates a plain object from a MsgCommonGetServerStatus message. Also converts values to other types if specified.
             * @param message MsgCommonGetServerStatus
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgCommonGetServerStatus, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgCommonGetServerStatus to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgCommonGetServerStatus {

            /** Properties of a C. */
            interface IC {
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgCommonGetServerStatus.IC);

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgCommonGetServerStatus.IC): CommonProto.NetMessage.MsgCommonGetServerStatus.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgCommonGetServerStatus.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgCommonGetServerStatus.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgCommonGetServerStatus.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgCommonGetServerStatus.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgCommonGetServerStatus.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgCommonGetServerStatus.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgCommonGetServerStatus.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgCommonGetServerStatus.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S totalAccounts */
                totalAccounts?: (number|null);

                /** S totalOnlineTime */
                totalOnlineTime?: (number|null);

                /** S activeAccounts */
                activeAccounts?: (number[]|null);

                /** S newAccounts */
                newAccounts?: (number[]|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgCommonGetServerStatus.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S totalAccounts. */
                public totalAccounts: number;

                /** S totalOnlineTime. */
                public totalOnlineTime: number;

                /** S activeAccounts. */
                public activeAccounts: number[];

                /** S newAccounts. */
                public newAccounts: number[];

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgCommonGetServerStatus.IS): CommonProto.NetMessage.MsgCommonGetServerStatus.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgCommonGetServerStatus.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgCommonGetServerStatus.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgCommonGetServerStatus.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgCommonGetServerStatus.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgCommonGetServerStatus.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgCommonGetServerStatus.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgCommonGetServerStatus.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgCommonGetServerStatus.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgCommonGetRankList. */
        interface IMsgCommonGetRankList {

            /** MsgCommonGetRankList c */
            c?: (CommonProto.NetMessage.MsgCommonGetRankList.IC|null);

            /** MsgCommonGetRankList s */
            s?: (CommonProto.NetMessage.MsgCommonGetRankList.IS|null);
        }

        /** Represents a MsgCommonGetRankList. */
        class MsgCommonGetRankList implements IMsgCommonGetRankList {

            /**
             * Constructs a new MsgCommonGetRankList.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgCommonGetRankList);

            /** MsgCommonGetRankList c. */
            public c?: (CommonProto.NetMessage.MsgCommonGetRankList.IC|null);

            /** MsgCommonGetRankList s. */
            public s?: (CommonProto.NetMessage.MsgCommonGetRankList.IS|null);

            /**
             * Creates a new MsgCommonGetRankList instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgCommonGetRankList instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgCommonGetRankList): CommonProto.NetMessage.MsgCommonGetRankList;

            /**
             * Encodes the specified MsgCommonGetRankList message. Does not implicitly {@link CommonProto.NetMessage.MsgCommonGetRankList.verify|verify} messages.
             * @param message MsgCommonGetRankList message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgCommonGetRankList, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgCommonGetRankList message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgCommonGetRankList.verify|verify} messages.
             * @param message MsgCommonGetRankList message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgCommonGetRankList, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgCommonGetRankList message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgCommonGetRankList
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgCommonGetRankList;

            /**
             * Decodes a MsgCommonGetRankList message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgCommonGetRankList
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgCommonGetRankList;

            /**
             * Verifies a MsgCommonGetRankList message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgCommonGetRankList message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgCommonGetRankList
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgCommonGetRankList;

            /**
             * Creates a plain object from a MsgCommonGetRankList message. Also converts values to other types if specified.
             * @param message MsgCommonGetRankList
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgCommonGetRankList, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgCommonGetRankList to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgCommonGetRankList {

            /** Properties of a C. */
            interface IC {
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgCommonGetRankList.IC);

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgCommonGetRankList.IC): CommonProto.NetMessage.MsgCommonGetRankList.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgCommonGetRankList.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgCommonGetRankList.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgCommonGetRankList.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgCommonGetRankList.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgCommonGetRankList.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgCommonGetRankList.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgCommonGetRankList.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgCommonGetRankList.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S mrwRankDataArray */
                mrwRankDataArray?: (CommonProto.Structure.IDataForMrwPlayerRank[]|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgCommonGetRankList.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S mrwRankDataArray. */
                public mrwRankDataArray: CommonProto.Structure.IDataForMrwPlayerRank[];

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgCommonGetRankList.IS): CommonProto.NetMessage.MsgCommonGetRankList.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgCommonGetRankList.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgCommonGetRankList.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgCommonGetRankList.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgCommonGetRankList.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgCommonGetRankList.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgCommonGetRankList.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgCommonGetRankList.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgCommonGetRankList.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgBroadcastGetAllMessageIdArray. */
        interface IMsgBroadcastGetAllMessageIdArray {

            /** MsgBroadcastGetAllMessageIdArray c */
            c?: (CommonProto.NetMessage.MsgBroadcastGetAllMessageIdArray.IC|null);

            /** MsgBroadcastGetAllMessageIdArray s */
            s?: (CommonProto.NetMessage.MsgBroadcastGetAllMessageIdArray.IS|null);
        }

        /** Represents a MsgBroadcastGetAllMessageIdArray. */
        class MsgBroadcastGetAllMessageIdArray implements IMsgBroadcastGetAllMessageIdArray {

            /**
             * Constructs a new MsgBroadcastGetAllMessageIdArray.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgBroadcastGetAllMessageIdArray);

            /** MsgBroadcastGetAllMessageIdArray c. */
            public c?: (CommonProto.NetMessage.MsgBroadcastGetAllMessageIdArray.IC|null);

            /** MsgBroadcastGetAllMessageIdArray s. */
            public s?: (CommonProto.NetMessage.MsgBroadcastGetAllMessageIdArray.IS|null);

            /**
             * Creates a new MsgBroadcastGetAllMessageIdArray instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgBroadcastGetAllMessageIdArray instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgBroadcastGetAllMessageIdArray): CommonProto.NetMessage.MsgBroadcastGetAllMessageIdArray;

            /**
             * Encodes the specified MsgBroadcastGetAllMessageIdArray message. Does not implicitly {@link CommonProto.NetMessage.MsgBroadcastGetAllMessageIdArray.verify|verify} messages.
             * @param message MsgBroadcastGetAllMessageIdArray message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgBroadcastGetAllMessageIdArray, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgBroadcastGetAllMessageIdArray message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgBroadcastGetAllMessageIdArray.verify|verify} messages.
             * @param message MsgBroadcastGetAllMessageIdArray message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgBroadcastGetAllMessageIdArray, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgBroadcastGetAllMessageIdArray message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgBroadcastGetAllMessageIdArray
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgBroadcastGetAllMessageIdArray;

            /**
             * Decodes a MsgBroadcastGetAllMessageIdArray message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgBroadcastGetAllMessageIdArray
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgBroadcastGetAllMessageIdArray;

            /**
             * Verifies a MsgBroadcastGetAllMessageIdArray message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgBroadcastGetAllMessageIdArray message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgBroadcastGetAllMessageIdArray
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgBroadcastGetAllMessageIdArray;

            /**
             * Creates a plain object from a MsgBroadcastGetAllMessageIdArray message. Also converts values to other types if specified.
             * @param message MsgBroadcastGetAllMessageIdArray
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgBroadcastGetAllMessageIdArray, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgBroadcastGetAllMessageIdArray to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgBroadcastGetAllMessageIdArray {

            /** Properties of a C. */
            interface IC {
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgBroadcastGetAllMessageIdArray.IC);

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgBroadcastGetAllMessageIdArray.IC): CommonProto.NetMessage.MsgBroadcastGetAllMessageIdArray.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgBroadcastGetAllMessageIdArray.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgBroadcastGetAllMessageIdArray.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgBroadcastGetAllMessageIdArray.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgBroadcastGetAllMessageIdArray.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgBroadcastGetAllMessageIdArray.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgBroadcastGetAllMessageIdArray.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgBroadcastGetAllMessageIdArray.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgBroadcastGetAllMessageIdArray.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S messageIdArray */
                messageIdArray?: (number[]|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgBroadcastGetAllMessageIdArray.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S messageIdArray. */
                public messageIdArray: number[];

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgBroadcastGetAllMessageIdArray.IS): CommonProto.NetMessage.MsgBroadcastGetAllMessageIdArray.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgBroadcastGetAllMessageIdArray.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgBroadcastGetAllMessageIdArray.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgBroadcastGetAllMessageIdArray.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgBroadcastGetAllMessageIdArray.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgBroadcastGetAllMessageIdArray.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgBroadcastGetAllMessageIdArray.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgBroadcastGetAllMessageIdArray.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgBroadcastGetAllMessageIdArray.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgBroadcastAddMessage. */
        interface IMsgBroadcastAddMessage {

            /** MsgBroadcastAddMessage c */
            c?: (CommonProto.NetMessage.MsgBroadcastAddMessage.IC|null);

            /** MsgBroadcastAddMessage s */
            s?: (CommonProto.NetMessage.MsgBroadcastAddMessage.IS|null);
        }

        /** Represents a MsgBroadcastAddMessage. */
        class MsgBroadcastAddMessage implements IMsgBroadcastAddMessage {

            /**
             * Constructs a new MsgBroadcastAddMessage.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgBroadcastAddMessage);

            /** MsgBroadcastAddMessage c. */
            public c?: (CommonProto.NetMessage.MsgBroadcastAddMessage.IC|null);

            /** MsgBroadcastAddMessage s. */
            public s?: (CommonProto.NetMessage.MsgBroadcastAddMessage.IS|null);

            /**
             * Creates a new MsgBroadcastAddMessage instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgBroadcastAddMessage instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgBroadcastAddMessage): CommonProto.NetMessage.MsgBroadcastAddMessage;

            /**
             * Encodes the specified MsgBroadcastAddMessage message. Does not implicitly {@link CommonProto.NetMessage.MsgBroadcastAddMessage.verify|verify} messages.
             * @param message MsgBroadcastAddMessage message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgBroadcastAddMessage, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgBroadcastAddMessage message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgBroadcastAddMessage.verify|verify} messages.
             * @param message MsgBroadcastAddMessage message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgBroadcastAddMessage, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgBroadcastAddMessage message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgBroadcastAddMessage
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgBroadcastAddMessage;

            /**
             * Decodes a MsgBroadcastAddMessage message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgBroadcastAddMessage
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgBroadcastAddMessage;

            /**
             * Verifies a MsgBroadcastAddMessage message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgBroadcastAddMessage message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgBroadcastAddMessage
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgBroadcastAddMessage;

            /**
             * Creates a plain object from a MsgBroadcastAddMessage message. Also converts values to other types if specified.
             * @param message MsgBroadcastAddMessage
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgBroadcastAddMessage, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgBroadcastAddMessage to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgBroadcastAddMessage {

            /** Properties of a C. */
            interface IC {

                /** C textList */
                textList?: (CommonProto.Structure.ILanguageText[]|null);

                /** C startTime */
                startTime?: (number|null);

                /** C endTime */
                endTime?: (number|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgBroadcastAddMessage.IC);

                /** C textList. */
                public textList: CommonProto.Structure.ILanguageText[];

                /** C startTime. */
                public startTime: number;

                /** C endTime. */
                public endTime: number;

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgBroadcastAddMessage.IC): CommonProto.NetMessage.MsgBroadcastAddMessage.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgBroadcastAddMessage.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgBroadcastAddMessage.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgBroadcastAddMessage.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgBroadcastAddMessage.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgBroadcastAddMessage.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgBroadcastAddMessage.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgBroadcastAddMessage.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgBroadcastAddMessage.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S messageId */
                messageId?: (number|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgBroadcastAddMessage.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S messageId. */
                public messageId: number;

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgBroadcastAddMessage.IS): CommonProto.NetMessage.MsgBroadcastAddMessage.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgBroadcastAddMessage.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgBroadcastAddMessage.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgBroadcastAddMessage.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgBroadcastAddMessage.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgBroadcastAddMessage.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgBroadcastAddMessage.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgBroadcastAddMessage.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgBroadcastAddMessage.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgBroadcastDeleteMessage. */
        interface IMsgBroadcastDeleteMessage {

            /** MsgBroadcastDeleteMessage c */
            c?: (CommonProto.NetMessage.MsgBroadcastDeleteMessage.IC|null);

            /** MsgBroadcastDeleteMessage s */
            s?: (CommonProto.NetMessage.MsgBroadcastDeleteMessage.IS|null);
        }

        /** Represents a MsgBroadcastDeleteMessage. */
        class MsgBroadcastDeleteMessage implements IMsgBroadcastDeleteMessage {

            /**
             * Constructs a new MsgBroadcastDeleteMessage.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgBroadcastDeleteMessage);

            /** MsgBroadcastDeleteMessage c. */
            public c?: (CommonProto.NetMessage.MsgBroadcastDeleteMessage.IC|null);

            /** MsgBroadcastDeleteMessage s. */
            public s?: (CommonProto.NetMessage.MsgBroadcastDeleteMessage.IS|null);

            /**
             * Creates a new MsgBroadcastDeleteMessage instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgBroadcastDeleteMessage instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgBroadcastDeleteMessage): CommonProto.NetMessage.MsgBroadcastDeleteMessage;

            /**
             * Encodes the specified MsgBroadcastDeleteMessage message. Does not implicitly {@link CommonProto.NetMessage.MsgBroadcastDeleteMessage.verify|verify} messages.
             * @param message MsgBroadcastDeleteMessage message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgBroadcastDeleteMessage, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgBroadcastDeleteMessage message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgBroadcastDeleteMessage.verify|verify} messages.
             * @param message MsgBroadcastDeleteMessage message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgBroadcastDeleteMessage, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgBroadcastDeleteMessage message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgBroadcastDeleteMessage
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgBroadcastDeleteMessage;

            /**
             * Decodes a MsgBroadcastDeleteMessage message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgBroadcastDeleteMessage
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgBroadcastDeleteMessage;

            /**
             * Verifies a MsgBroadcastDeleteMessage message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgBroadcastDeleteMessage message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgBroadcastDeleteMessage
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgBroadcastDeleteMessage;

            /**
             * Creates a plain object from a MsgBroadcastDeleteMessage message. Also converts values to other types if specified.
             * @param message MsgBroadcastDeleteMessage
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgBroadcastDeleteMessage, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgBroadcastDeleteMessage to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgBroadcastDeleteMessage {

            /** Properties of a C. */
            interface IC {

                /** C messageId */
                messageId?: (number|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgBroadcastDeleteMessage.IC);

                /** C messageId. */
                public messageId: number;

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgBroadcastDeleteMessage.IC): CommonProto.NetMessage.MsgBroadcastDeleteMessage.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgBroadcastDeleteMessage.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgBroadcastDeleteMessage.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgBroadcastDeleteMessage.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgBroadcastDeleteMessage.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgBroadcastDeleteMessage.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgBroadcastDeleteMessage.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgBroadcastDeleteMessage.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgBroadcastDeleteMessage.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S messageId */
                messageId?: (number|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgBroadcastDeleteMessage.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S messageId. */
                public messageId: number;

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgBroadcastDeleteMessage.IS): CommonProto.NetMessage.MsgBroadcastDeleteMessage.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgBroadcastDeleteMessage.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgBroadcastDeleteMessage.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgBroadcastDeleteMessage.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgBroadcastDeleteMessage.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgBroadcastDeleteMessage.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgBroadcastDeleteMessage.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgBroadcastDeleteMessage.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgBroadcastDeleteMessage.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgBroadcastDoBroadcast. */
        interface IMsgBroadcastDoBroadcast {

            /** MsgBroadcastDoBroadcast c */
            c?: (CommonProto.NetMessage.MsgBroadcastDoBroadcast.IC|null);

            /** MsgBroadcastDoBroadcast s */
            s?: (CommonProto.NetMessage.MsgBroadcastDoBroadcast.IS|null);
        }

        /** Represents a MsgBroadcastDoBroadcast. */
        class MsgBroadcastDoBroadcast implements IMsgBroadcastDoBroadcast {

            /**
             * Constructs a new MsgBroadcastDoBroadcast.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgBroadcastDoBroadcast);

            /** MsgBroadcastDoBroadcast c. */
            public c?: (CommonProto.NetMessage.MsgBroadcastDoBroadcast.IC|null);

            /** MsgBroadcastDoBroadcast s. */
            public s?: (CommonProto.NetMessage.MsgBroadcastDoBroadcast.IS|null);

            /**
             * Creates a new MsgBroadcastDoBroadcast instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgBroadcastDoBroadcast instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgBroadcastDoBroadcast): CommonProto.NetMessage.MsgBroadcastDoBroadcast;

            /**
             * Encodes the specified MsgBroadcastDoBroadcast message. Does not implicitly {@link CommonProto.NetMessage.MsgBroadcastDoBroadcast.verify|verify} messages.
             * @param message MsgBroadcastDoBroadcast message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgBroadcastDoBroadcast, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgBroadcastDoBroadcast message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgBroadcastDoBroadcast.verify|verify} messages.
             * @param message MsgBroadcastDoBroadcast message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgBroadcastDoBroadcast, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgBroadcastDoBroadcast message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgBroadcastDoBroadcast
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgBroadcastDoBroadcast;

            /**
             * Decodes a MsgBroadcastDoBroadcast message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgBroadcastDoBroadcast
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgBroadcastDoBroadcast;

            /**
             * Verifies a MsgBroadcastDoBroadcast message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgBroadcastDoBroadcast message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgBroadcastDoBroadcast
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgBroadcastDoBroadcast;

            /**
             * Creates a plain object from a MsgBroadcastDoBroadcast message. Also converts values to other types if specified.
             * @param message MsgBroadcastDoBroadcast
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgBroadcastDoBroadcast, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgBroadcastDoBroadcast to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgBroadcastDoBroadcast {

            /** Properties of a C. */
            interface IC {
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgBroadcastDoBroadcast.IC);

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgBroadcastDoBroadcast.IC): CommonProto.NetMessage.MsgBroadcastDoBroadcast.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgBroadcastDoBroadcast.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgBroadcastDoBroadcast.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgBroadcastDoBroadcast.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgBroadcastDoBroadcast.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgBroadcastDoBroadcast.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgBroadcastDoBroadcast.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgBroadcastDoBroadcast.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgBroadcastDoBroadcast.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgBroadcastDoBroadcast.IS);

                /** S errorCode. */
                public errorCode: number;

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgBroadcastDoBroadcast.IS): CommonProto.NetMessage.MsgBroadcastDoBroadcast.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgBroadcastDoBroadcast.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgBroadcastDoBroadcast.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgBroadcastDoBroadcast.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgBroadcastDoBroadcast.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgBroadcastDoBroadcast.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgBroadcastDoBroadcast.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgBroadcastDoBroadcast.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgBroadcastDoBroadcast.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgBroadcastGetMessageData. */
        interface IMsgBroadcastGetMessageData {

            /** MsgBroadcastGetMessageData c */
            c?: (CommonProto.NetMessage.MsgBroadcastGetMessageData.IC|null);

            /** MsgBroadcastGetMessageData s */
            s?: (CommonProto.NetMessage.MsgBroadcastGetMessageData.IS|null);
        }

        /** Represents a MsgBroadcastGetMessageData. */
        class MsgBroadcastGetMessageData implements IMsgBroadcastGetMessageData {

            /**
             * Constructs a new MsgBroadcastGetMessageData.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgBroadcastGetMessageData);

            /** MsgBroadcastGetMessageData c. */
            public c?: (CommonProto.NetMessage.MsgBroadcastGetMessageData.IC|null);

            /** MsgBroadcastGetMessageData s. */
            public s?: (CommonProto.NetMessage.MsgBroadcastGetMessageData.IS|null);

            /**
             * Creates a new MsgBroadcastGetMessageData instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgBroadcastGetMessageData instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgBroadcastGetMessageData): CommonProto.NetMessage.MsgBroadcastGetMessageData;

            /**
             * Encodes the specified MsgBroadcastGetMessageData message. Does not implicitly {@link CommonProto.NetMessage.MsgBroadcastGetMessageData.verify|verify} messages.
             * @param message MsgBroadcastGetMessageData message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgBroadcastGetMessageData, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgBroadcastGetMessageData message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgBroadcastGetMessageData.verify|verify} messages.
             * @param message MsgBroadcastGetMessageData message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgBroadcastGetMessageData, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgBroadcastGetMessageData message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgBroadcastGetMessageData
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgBroadcastGetMessageData;

            /**
             * Decodes a MsgBroadcastGetMessageData message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgBroadcastGetMessageData
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgBroadcastGetMessageData;

            /**
             * Verifies a MsgBroadcastGetMessageData message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgBroadcastGetMessageData message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgBroadcastGetMessageData
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgBroadcastGetMessageData;

            /**
             * Creates a plain object from a MsgBroadcastGetMessageData message. Also converts values to other types if specified.
             * @param message MsgBroadcastGetMessageData
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgBroadcastGetMessageData, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgBroadcastGetMessageData to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgBroadcastGetMessageData {

            /** Properties of a C. */
            interface IC {

                /** C messageId */
                messageId?: (number|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgBroadcastGetMessageData.IC);

                /** C messageId. */
                public messageId: number;

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgBroadcastGetMessageData.IC): CommonProto.NetMessage.MsgBroadcastGetMessageData.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgBroadcastGetMessageData.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgBroadcastGetMessageData.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgBroadcastGetMessageData.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgBroadcastGetMessageData.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgBroadcastGetMessageData.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgBroadcastGetMessageData.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgBroadcastGetMessageData.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgBroadcastGetMessageData.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S messageId */
                messageId?: (number|null);

                /** S messageData */
                messageData?: (CommonProto.Broadcast.IBroadcastMessage|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgBroadcastGetMessageData.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S messageId. */
                public messageId: number;

                /** S messageData. */
                public messageData?: (CommonProto.Broadcast.IBroadcastMessage|null);

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgBroadcastGetMessageData.IS): CommonProto.NetMessage.MsgBroadcastGetMessageData.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgBroadcastGetMessageData.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgBroadcastGetMessageData.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgBroadcastGetMessageData.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgBroadcastGetMessageData.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgBroadcastGetMessageData.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgBroadcastGetMessageData.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgBroadcastGetMessageData.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgBroadcastGetMessageData.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgChangeLogGetMessageList. */
        interface IMsgChangeLogGetMessageList {

            /** MsgChangeLogGetMessageList c */
            c?: (CommonProto.NetMessage.MsgChangeLogGetMessageList.IC|null);

            /** MsgChangeLogGetMessageList s */
            s?: (CommonProto.NetMessage.MsgChangeLogGetMessageList.IS|null);
        }

        /** Represents a MsgChangeLogGetMessageList. */
        class MsgChangeLogGetMessageList implements IMsgChangeLogGetMessageList {

            /**
             * Constructs a new MsgChangeLogGetMessageList.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgChangeLogGetMessageList);

            /** MsgChangeLogGetMessageList c. */
            public c?: (CommonProto.NetMessage.MsgChangeLogGetMessageList.IC|null);

            /** MsgChangeLogGetMessageList s. */
            public s?: (CommonProto.NetMessage.MsgChangeLogGetMessageList.IS|null);

            /**
             * Creates a new MsgChangeLogGetMessageList instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgChangeLogGetMessageList instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgChangeLogGetMessageList): CommonProto.NetMessage.MsgChangeLogGetMessageList;

            /**
             * Encodes the specified MsgChangeLogGetMessageList message. Does not implicitly {@link CommonProto.NetMessage.MsgChangeLogGetMessageList.verify|verify} messages.
             * @param message MsgChangeLogGetMessageList message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgChangeLogGetMessageList, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgChangeLogGetMessageList message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgChangeLogGetMessageList.verify|verify} messages.
             * @param message MsgChangeLogGetMessageList message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgChangeLogGetMessageList, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgChangeLogGetMessageList message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgChangeLogGetMessageList
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgChangeLogGetMessageList;

            /**
             * Decodes a MsgChangeLogGetMessageList message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgChangeLogGetMessageList
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgChangeLogGetMessageList;

            /**
             * Verifies a MsgChangeLogGetMessageList message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgChangeLogGetMessageList message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgChangeLogGetMessageList
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgChangeLogGetMessageList;

            /**
             * Creates a plain object from a MsgChangeLogGetMessageList message. Also converts values to other types if specified.
             * @param message MsgChangeLogGetMessageList
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgChangeLogGetMessageList, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgChangeLogGetMessageList to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgChangeLogGetMessageList {

            /** Properties of a C. */
            interface IC {
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgChangeLogGetMessageList.IC);

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgChangeLogGetMessageList.IC): CommonProto.NetMessage.MsgChangeLogGetMessageList.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgChangeLogGetMessageList.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgChangeLogGetMessageList.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgChangeLogGetMessageList.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgChangeLogGetMessageList.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgChangeLogGetMessageList.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgChangeLogGetMessageList.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgChangeLogGetMessageList.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgChangeLogGetMessageList.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S messageList */
                messageList?: (CommonProto.ChangeLog.IChangeLogMessage[]|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgChangeLogGetMessageList.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S messageList. */
                public messageList: CommonProto.ChangeLog.IChangeLogMessage[];

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgChangeLogGetMessageList.IS): CommonProto.NetMessage.MsgChangeLogGetMessageList.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgChangeLogGetMessageList.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgChangeLogGetMessageList.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgChangeLogGetMessageList.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgChangeLogGetMessageList.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgChangeLogGetMessageList.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgChangeLogGetMessageList.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgChangeLogGetMessageList.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgChangeLogGetMessageList.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgChangeLogAddMessage. */
        interface IMsgChangeLogAddMessage {

            /** MsgChangeLogAddMessage c */
            c?: (CommonProto.NetMessage.MsgChangeLogAddMessage.IC|null);

            /** MsgChangeLogAddMessage s */
            s?: (CommonProto.NetMessage.MsgChangeLogAddMessage.IS|null);
        }

        /** Represents a MsgChangeLogAddMessage. */
        class MsgChangeLogAddMessage implements IMsgChangeLogAddMessage {

            /**
             * Constructs a new MsgChangeLogAddMessage.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgChangeLogAddMessage);

            /** MsgChangeLogAddMessage c. */
            public c?: (CommonProto.NetMessage.MsgChangeLogAddMessage.IC|null);

            /** MsgChangeLogAddMessage s. */
            public s?: (CommonProto.NetMessage.MsgChangeLogAddMessage.IS|null);

            /**
             * Creates a new MsgChangeLogAddMessage instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgChangeLogAddMessage instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgChangeLogAddMessage): CommonProto.NetMessage.MsgChangeLogAddMessage;

            /**
             * Encodes the specified MsgChangeLogAddMessage message. Does not implicitly {@link CommonProto.NetMessage.MsgChangeLogAddMessage.verify|verify} messages.
             * @param message MsgChangeLogAddMessage message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgChangeLogAddMessage, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgChangeLogAddMessage message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgChangeLogAddMessage.verify|verify} messages.
             * @param message MsgChangeLogAddMessage message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgChangeLogAddMessage, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgChangeLogAddMessage message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgChangeLogAddMessage
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgChangeLogAddMessage;

            /**
             * Decodes a MsgChangeLogAddMessage message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgChangeLogAddMessage
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgChangeLogAddMessage;

            /**
             * Verifies a MsgChangeLogAddMessage message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgChangeLogAddMessage message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgChangeLogAddMessage
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgChangeLogAddMessage;

            /**
             * Creates a plain object from a MsgChangeLogAddMessage message. Also converts values to other types if specified.
             * @param message MsgChangeLogAddMessage
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgChangeLogAddMessage, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgChangeLogAddMessage to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgChangeLogAddMessage {

            /** Properties of a C. */
            interface IC {

                /** C textList */
                textList?: (CommonProto.Structure.ILanguageText[]|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgChangeLogAddMessage.IC);

                /** C textList. */
                public textList: CommonProto.Structure.ILanguageText[];

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgChangeLogAddMessage.IC): CommonProto.NetMessage.MsgChangeLogAddMessage.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgChangeLogAddMessage.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgChangeLogAddMessage.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgChangeLogAddMessage.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgChangeLogAddMessage.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgChangeLogAddMessage.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgChangeLogAddMessage.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgChangeLogAddMessage.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgChangeLogAddMessage.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S messageId */
                messageId?: (number|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgChangeLogAddMessage.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S messageId. */
                public messageId: number;

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgChangeLogAddMessage.IS): CommonProto.NetMessage.MsgChangeLogAddMessage.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgChangeLogAddMessage.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgChangeLogAddMessage.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgChangeLogAddMessage.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgChangeLogAddMessage.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgChangeLogAddMessage.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgChangeLogAddMessage.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgChangeLogAddMessage.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgChangeLogAddMessage.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgChangeLogModifyMessage. */
        interface IMsgChangeLogModifyMessage {

            /** MsgChangeLogModifyMessage c */
            c?: (CommonProto.NetMessage.MsgChangeLogModifyMessage.IC|null);

            /** MsgChangeLogModifyMessage s */
            s?: (CommonProto.NetMessage.MsgChangeLogModifyMessage.IS|null);
        }

        /** Represents a MsgChangeLogModifyMessage. */
        class MsgChangeLogModifyMessage implements IMsgChangeLogModifyMessage {

            /**
             * Constructs a new MsgChangeLogModifyMessage.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgChangeLogModifyMessage);

            /** MsgChangeLogModifyMessage c. */
            public c?: (CommonProto.NetMessage.MsgChangeLogModifyMessage.IC|null);

            /** MsgChangeLogModifyMessage s. */
            public s?: (CommonProto.NetMessage.MsgChangeLogModifyMessage.IS|null);

            /**
             * Creates a new MsgChangeLogModifyMessage instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgChangeLogModifyMessage instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgChangeLogModifyMessage): CommonProto.NetMessage.MsgChangeLogModifyMessage;

            /**
             * Encodes the specified MsgChangeLogModifyMessage message. Does not implicitly {@link CommonProto.NetMessage.MsgChangeLogModifyMessage.verify|verify} messages.
             * @param message MsgChangeLogModifyMessage message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgChangeLogModifyMessage, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgChangeLogModifyMessage message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgChangeLogModifyMessage.verify|verify} messages.
             * @param message MsgChangeLogModifyMessage message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgChangeLogModifyMessage, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgChangeLogModifyMessage message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgChangeLogModifyMessage
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgChangeLogModifyMessage;

            /**
             * Decodes a MsgChangeLogModifyMessage message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgChangeLogModifyMessage
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgChangeLogModifyMessage;

            /**
             * Verifies a MsgChangeLogModifyMessage message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgChangeLogModifyMessage message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgChangeLogModifyMessage
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgChangeLogModifyMessage;

            /**
             * Creates a plain object from a MsgChangeLogModifyMessage message. Also converts values to other types if specified.
             * @param message MsgChangeLogModifyMessage
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgChangeLogModifyMessage, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgChangeLogModifyMessage to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgChangeLogModifyMessage {

            /** Properties of a C. */
            interface IC {

                /** C messageId */
                messageId?: (number|null);

                /** C textList */
                textList?: (CommonProto.Structure.ILanguageText[]|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgChangeLogModifyMessage.IC);

                /** C messageId. */
                public messageId: number;

                /** C textList. */
                public textList: CommonProto.Structure.ILanguageText[];

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgChangeLogModifyMessage.IC): CommonProto.NetMessage.MsgChangeLogModifyMessage.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgChangeLogModifyMessage.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgChangeLogModifyMessage.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgChangeLogModifyMessage.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgChangeLogModifyMessage.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgChangeLogModifyMessage.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgChangeLogModifyMessage.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgChangeLogModifyMessage.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgChangeLogModifyMessage.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S messageId */
                messageId?: (number|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgChangeLogModifyMessage.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S messageId. */
                public messageId: number;

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgChangeLogModifyMessage.IS): CommonProto.NetMessage.MsgChangeLogModifyMessage.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgChangeLogModifyMessage.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgChangeLogModifyMessage.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgChangeLogModifyMessage.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgChangeLogModifyMessage.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgChangeLogModifyMessage.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgChangeLogModifyMessage.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgChangeLogModifyMessage.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgChangeLogModifyMessage.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgUserRegister. */
        interface IMsgUserRegister {

            /** MsgUserRegister c */
            c?: (CommonProto.NetMessage.MsgUserRegister.IC|null);

            /** MsgUserRegister s */
            s?: (CommonProto.NetMessage.MsgUserRegister.IS|null);
        }

        /** Represents a MsgUserRegister. */
        class MsgUserRegister implements IMsgUserRegister {

            /**
             * Constructs a new MsgUserRegister.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgUserRegister);

            /** MsgUserRegister c. */
            public c?: (CommonProto.NetMessage.MsgUserRegister.IC|null);

            /** MsgUserRegister s. */
            public s?: (CommonProto.NetMessage.MsgUserRegister.IS|null);

            /**
             * Creates a new MsgUserRegister instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgUserRegister instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgUserRegister): CommonProto.NetMessage.MsgUserRegister;

            /**
             * Encodes the specified MsgUserRegister message. Does not implicitly {@link CommonProto.NetMessage.MsgUserRegister.verify|verify} messages.
             * @param message MsgUserRegister message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgUserRegister, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgUserRegister message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgUserRegister.verify|verify} messages.
             * @param message MsgUserRegister message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgUserRegister, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgUserRegister message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgUserRegister
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgUserRegister;

            /**
             * Decodes a MsgUserRegister message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgUserRegister
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgUserRegister;

            /**
             * Verifies a MsgUserRegister message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgUserRegister message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgUserRegister
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgUserRegister;

            /**
             * Creates a plain object from a MsgUserRegister message. Also converts values to other types if specified.
             * @param message MsgUserRegister
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgUserRegister, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgUserRegister to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgUserRegister {

            /** Properties of a C. */
            interface IC {

                /** C account */
                account?: (string|null);

                /** C password */
                password?: (string|null);

                /** C nickname */
                nickname?: (string|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgUserRegister.IC);

                /** C account. */
                public account: string;

                /** C password. */
                public password: string;

                /** C nickname. */
                public nickname: string;

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgUserRegister.IC): CommonProto.NetMessage.MsgUserRegister.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgUserRegister.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgUserRegister.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgUserRegister.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgUserRegister.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgUserRegister.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgUserRegister.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgUserRegister.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgUserRegister.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S account */
                account?: (string|null);

                /** S password */
                password?: (string|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgUserRegister.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S account. */
                public account: string;

                /** S password. */
                public password: string;

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgUserRegister.IS): CommonProto.NetMessage.MsgUserRegister.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgUserRegister.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgUserRegister.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgUserRegister.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgUserRegister.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgUserRegister.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgUserRegister.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgUserRegister.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgUserRegister.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgUserLogin. */
        interface IMsgUserLogin {

            /** MsgUserLogin c */
            c?: (CommonProto.NetMessage.MsgUserLogin.IC|null);

            /** MsgUserLogin s */
            s?: (CommonProto.NetMessage.MsgUserLogin.IS|null);
        }

        /** Represents a MsgUserLogin. */
        class MsgUserLogin implements IMsgUserLogin {

            /**
             * Constructs a new MsgUserLogin.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgUserLogin);

            /** MsgUserLogin c. */
            public c?: (CommonProto.NetMessage.MsgUserLogin.IC|null);

            /** MsgUserLogin s. */
            public s?: (CommonProto.NetMessage.MsgUserLogin.IS|null);

            /**
             * Creates a new MsgUserLogin instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgUserLogin instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgUserLogin): CommonProto.NetMessage.MsgUserLogin;

            /**
             * Encodes the specified MsgUserLogin message. Does not implicitly {@link CommonProto.NetMessage.MsgUserLogin.verify|verify} messages.
             * @param message MsgUserLogin message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgUserLogin, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgUserLogin message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgUserLogin.verify|verify} messages.
             * @param message MsgUserLogin message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgUserLogin, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgUserLogin message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgUserLogin
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgUserLogin;

            /**
             * Decodes a MsgUserLogin message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgUserLogin
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgUserLogin;

            /**
             * Verifies a MsgUserLogin message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgUserLogin message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgUserLogin
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgUserLogin;

            /**
             * Creates a plain object from a MsgUserLogin message. Also converts values to other types if specified.
             * @param message MsgUserLogin
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgUserLogin, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgUserLogin to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgUserLogin {

            /** Properties of a C. */
            interface IC {

                /** C account */
                account?: (string|null);

                /** C password */
                password?: (string|null);

                /** C isAutoRelogin */
                isAutoRelogin?: (boolean|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgUserLogin.IC);

                /** C account. */
                public account: string;

                /** C password. */
                public password: string;

                /** C isAutoRelogin. */
                public isAutoRelogin: boolean;

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgUserLogin.IC): CommonProto.NetMessage.MsgUserLogin.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgUserLogin.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgUserLogin.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgUserLogin.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgUserLogin.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgUserLogin.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgUserLogin.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgUserLogin.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgUserLogin.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S userSelfInfo */
                userSelfInfo?: (CommonProto.User.IUserSelfInfo|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgUserLogin.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S userSelfInfo. */
                public userSelfInfo?: (CommonProto.User.IUserSelfInfo|null);

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgUserLogin.IS): CommonProto.NetMessage.MsgUserLogin.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgUserLogin.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgUserLogin.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgUserLogin.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgUserLogin.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgUserLogin.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgUserLogin.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgUserLogin.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgUserLogin.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgUserLogout. */
        interface IMsgUserLogout {

            /** MsgUserLogout c */
            c?: (CommonProto.NetMessage.MsgUserLogout.IC|null);

            /** MsgUserLogout s */
            s?: (CommonProto.NetMessage.MsgUserLogout.IS|null);
        }

        /** Represents a MsgUserLogout. */
        class MsgUserLogout implements IMsgUserLogout {

            /**
             * Constructs a new MsgUserLogout.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgUserLogout);

            /** MsgUserLogout c. */
            public c?: (CommonProto.NetMessage.MsgUserLogout.IC|null);

            /** MsgUserLogout s. */
            public s?: (CommonProto.NetMessage.MsgUserLogout.IS|null);

            /**
             * Creates a new MsgUserLogout instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgUserLogout instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgUserLogout): CommonProto.NetMessage.MsgUserLogout;

            /**
             * Encodes the specified MsgUserLogout message. Does not implicitly {@link CommonProto.NetMessage.MsgUserLogout.verify|verify} messages.
             * @param message MsgUserLogout message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgUserLogout, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgUserLogout message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgUserLogout.verify|verify} messages.
             * @param message MsgUserLogout message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgUserLogout, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgUserLogout message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgUserLogout
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgUserLogout;

            /**
             * Decodes a MsgUserLogout message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgUserLogout
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgUserLogout;

            /**
             * Verifies a MsgUserLogout message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgUserLogout message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgUserLogout
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgUserLogout;

            /**
             * Creates a plain object from a MsgUserLogout message. Also converts values to other types if specified.
             * @param message MsgUserLogout
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgUserLogout, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgUserLogout to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgUserLogout {

            /** Properties of a C. */
            interface IC {
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgUserLogout.IC);

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgUserLogout.IC): CommonProto.NetMessage.MsgUserLogout.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgUserLogout.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgUserLogout.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgUserLogout.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgUserLogout.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgUserLogout.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgUserLogout.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgUserLogout.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgUserLogout.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S reason */
                reason?: (number|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgUserLogout.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S reason. */
                public reason: number;

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgUserLogout.IS): CommonProto.NetMessage.MsgUserLogout.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgUserLogout.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgUserLogout.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgUserLogout.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgUserLogout.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgUserLogout.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgUserLogout.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgUserLogout.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgUserLogout.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgUserGetPublicInfo. */
        interface IMsgUserGetPublicInfo {

            /** MsgUserGetPublicInfo c */
            c?: (CommonProto.NetMessage.MsgUserGetPublicInfo.IC|null);

            /** MsgUserGetPublicInfo s */
            s?: (CommonProto.NetMessage.MsgUserGetPublicInfo.IS|null);
        }

        /** Represents a MsgUserGetPublicInfo. */
        class MsgUserGetPublicInfo implements IMsgUserGetPublicInfo {

            /**
             * Constructs a new MsgUserGetPublicInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgUserGetPublicInfo);

            /** MsgUserGetPublicInfo c. */
            public c?: (CommonProto.NetMessage.MsgUserGetPublicInfo.IC|null);

            /** MsgUserGetPublicInfo s. */
            public s?: (CommonProto.NetMessage.MsgUserGetPublicInfo.IS|null);

            /**
             * Creates a new MsgUserGetPublicInfo instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgUserGetPublicInfo instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgUserGetPublicInfo): CommonProto.NetMessage.MsgUserGetPublicInfo;

            /**
             * Encodes the specified MsgUserGetPublicInfo message. Does not implicitly {@link CommonProto.NetMessage.MsgUserGetPublicInfo.verify|verify} messages.
             * @param message MsgUserGetPublicInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgUserGetPublicInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgUserGetPublicInfo message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgUserGetPublicInfo.verify|verify} messages.
             * @param message MsgUserGetPublicInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgUserGetPublicInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgUserGetPublicInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgUserGetPublicInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgUserGetPublicInfo;

            /**
             * Decodes a MsgUserGetPublicInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgUserGetPublicInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgUserGetPublicInfo;

            /**
             * Verifies a MsgUserGetPublicInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgUserGetPublicInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgUserGetPublicInfo
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgUserGetPublicInfo;

            /**
             * Creates a plain object from a MsgUserGetPublicInfo message. Also converts values to other types if specified.
             * @param message MsgUserGetPublicInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgUserGetPublicInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgUserGetPublicInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgUserGetPublicInfo {

            /** Properties of a C. */
            interface IC {

                /** C userId */
                userId?: (number|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgUserGetPublicInfo.IC);

                /** C userId. */
                public userId: number;

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgUserGetPublicInfo.IC): CommonProto.NetMessage.MsgUserGetPublicInfo.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgUserGetPublicInfo.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgUserGetPublicInfo.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgUserGetPublicInfo.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgUserGetPublicInfo.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgUserGetPublicInfo.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgUserGetPublicInfo.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgUserGetPublicInfo.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgUserGetPublicInfo.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S userId */
                userId?: (number|null);

                /** S userPublicInfo */
                userPublicInfo?: (CommonProto.User.IUserPublicInfo|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgUserGetPublicInfo.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S userId. */
                public userId: number;

                /** S userPublicInfo. */
                public userPublicInfo?: (CommonProto.User.IUserPublicInfo|null);

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgUserGetPublicInfo.IS): CommonProto.NetMessage.MsgUserGetPublicInfo.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgUserGetPublicInfo.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgUserGetPublicInfo.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgUserGetPublicInfo.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgUserGetPublicInfo.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgUserGetPublicInfo.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgUserGetPublicInfo.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgUserGetPublicInfo.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgUserGetPublicInfo.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgUserGetBriefInfo. */
        interface IMsgUserGetBriefInfo {

            /** MsgUserGetBriefInfo c */
            c?: (CommonProto.NetMessage.MsgUserGetBriefInfo.IC|null);

            /** MsgUserGetBriefInfo s */
            s?: (CommonProto.NetMessage.MsgUserGetBriefInfo.IS|null);
        }

        /** Represents a MsgUserGetBriefInfo. */
        class MsgUserGetBriefInfo implements IMsgUserGetBriefInfo {

            /**
             * Constructs a new MsgUserGetBriefInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgUserGetBriefInfo);

            /** MsgUserGetBriefInfo c. */
            public c?: (CommonProto.NetMessage.MsgUserGetBriefInfo.IC|null);

            /** MsgUserGetBriefInfo s. */
            public s?: (CommonProto.NetMessage.MsgUserGetBriefInfo.IS|null);

            /**
             * Creates a new MsgUserGetBriefInfo instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgUserGetBriefInfo instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgUserGetBriefInfo): CommonProto.NetMessage.MsgUserGetBriefInfo;

            /**
             * Encodes the specified MsgUserGetBriefInfo message. Does not implicitly {@link CommonProto.NetMessage.MsgUserGetBriefInfo.verify|verify} messages.
             * @param message MsgUserGetBriefInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgUserGetBriefInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgUserGetBriefInfo message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgUserGetBriefInfo.verify|verify} messages.
             * @param message MsgUserGetBriefInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgUserGetBriefInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgUserGetBriefInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgUserGetBriefInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgUserGetBriefInfo;

            /**
             * Decodes a MsgUserGetBriefInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgUserGetBriefInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgUserGetBriefInfo;

            /**
             * Verifies a MsgUserGetBriefInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgUserGetBriefInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgUserGetBriefInfo
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgUserGetBriefInfo;

            /**
             * Creates a plain object from a MsgUserGetBriefInfo message. Also converts values to other types if specified.
             * @param message MsgUserGetBriefInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgUserGetBriefInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgUserGetBriefInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgUserGetBriefInfo {

            /** Properties of a C. */
            interface IC {

                /** C userId */
                userId?: (number|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgUserGetBriefInfo.IC);

                /** C userId. */
                public userId: number;

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgUserGetBriefInfo.IC): CommonProto.NetMessage.MsgUserGetBriefInfo.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgUserGetBriefInfo.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgUserGetBriefInfo.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgUserGetBriefInfo.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgUserGetBriefInfo.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgUserGetBriefInfo.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgUserGetBriefInfo.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgUserGetBriefInfo.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgUserGetBriefInfo.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S userId */
                userId?: (number|null);

                /** S userBriefInfo */
                userBriefInfo?: (CommonProto.User.IUserBriefInfo|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgUserGetBriefInfo.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S userId. */
                public userId: number;

                /** S userBriefInfo. */
                public userBriefInfo?: (CommonProto.User.IUserBriefInfo|null);

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgUserGetBriefInfo.IS): CommonProto.NetMessage.MsgUserGetBriefInfo.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgUserGetBriefInfo.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgUserGetBriefInfo.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgUserGetBriefInfo.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgUserGetBriefInfo.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgUserGetBriefInfo.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgUserGetBriefInfo.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgUserGetBriefInfo.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgUserGetBriefInfo.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgUserGetOnlineState. */
        interface IMsgUserGetOnlineState {

            /** MsgUserGetOnlineState c */
            c?: (CommonProto.NetMessage.MsgUserGetOnlineState.IC|null);

            /** MsgUserGetOnlineState s */
            s?: (CommonProto.NetMessage.MsgUserGetOnlineState.IS|null);
        }

        /** Represents a MsgUserGetOnlineState. */
        class MsgUserGetOnlineState implements IMsgUserGetOnlineState {

            /**
             * Constructs a new MsgUserGetOnlineState.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgUserGetOnlineState);

            /** MsgUserGetOnlineState c. */
            public c?: (CommonProto.NetMessage.MsgUserGetOnlineState.IC|null);

            /** MsgUserGetOnlineState s. */
            public s?: (CommonProto.NetMessage.MsgUserGetOnlineState.IS|null);

            /**
             * Creates a new MsgUserGetOnlineState instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgUserGetOnlineState instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgUserGetOnlineState): CommonProto.NetMessage.MsgUserGetOnlineState;

            /**
             * Encodes the specified MsgUserGetOnlineState message. Does not implicitly {@link CommonProto.NetMessage.MsgUserGetOnlineState.verify|verify} messages.
             * @param message MsgUserGetOnlineState message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgUserGetOnlineState, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgUserGetOnlineState message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgUserGetOnlineState.verify|verify} messages.
             * @param message MsgUserGetOnlineState message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgUserGetOnlineState, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgUserGetOnlineState message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgUserGetOnlineState
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgUserGetOnlineState;

            /**
             * Decodes a MsgUserGetOnlineState message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgUserGetOnlineState
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgUserGetOnlineState;

            /**
             * Verifies a MsgUserGetOnlineState message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgUserGetOnlineState message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgUserGetOnlineState
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgUserGetOnlineState;

            /**
             * Creates a plain object from a MsgUserGetOnlineState message. Also converts values to other types if specified.
             * @param message MsgUserGetOnlineState
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgUserGetOnlineState, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgUserGetOnlineState to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgUserGetOnlineState {

            /** Properties of a C. */
            interface IC {

                /** C userId */
                userId?: (number|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgUserGetOnlineState.IC);

                /** C userId. */
                public userId: number;

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgUserGetOnlineState.IC): CommonProto.NetMessage.MsgUserGetOnlineState.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgUserGetOnlineState.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgUserGetOnlineState.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgUserGetOnlineState.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgUserGetOnlineState.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgUserGetOnlineState.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgUserGetOnlineState.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgUserGetOnlineState.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgUserGetOnlineState.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S userId */
                userId?: (number|null);

                /** S isOnline */
                isOnline?: (boolean|null);

                /** S lastActivityTime */
                lastActivityTime?: (number|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgUserGetOnlineState.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S userId. */
                public userId: number;

                /** S isOnline. */
                public isOnline: boolean;

                /** S lastActivityTime. */
                public lastActivityTime: number;

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgUserGetOnlineState.IS): CommonProto.NetMessage.MsgUserGetOnlineState.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgUserGetOnlineState.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgUserGetOnlineState.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgUserGetOnlineState.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgUserGetOnlineState.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgUserGetOnlineState.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgUserGetOnlineState.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgUserGetOnlineState.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgUserGetOnlineState.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgUserSetNickname. */
        interface IMsgUserSetNickname {

            /** MsgUserSetNickname c */
            c?: (CommonProto.NetMessage.MsgUserSetNickname.IC|null);

            /** MsgUserSetNickname s */
            s?: (CommonProto.NetMessage.MsgUserSetNickname.IS|null);
        }

        /** Represents a MsgUserSetNickname. */
        class MsgUserSetNickname implements IMsgUserSetNickname {

            /**
             * Constructs a new MsgUserSetNickname.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgUserSetNickname);

            /** MsgUserSetNickname c. */
            public c?: (CommonProto.NetMessage.MsgUserSetNickname.IC|null);

            /** MsgUserSetNickname s. */
            public s?: (CommonProto.NetMessage.MsgUserSetNickname.IS|null);

            /**
             * Creates a new MsgUserSetNickname instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgUserSetNickname instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgUserSetNickname): CommonProto.NetMessage.MsgUserSetNickname;

            /**
             * Encodes the specified MsgUserSetNickname message. Does not implicitly {@link CommonProto.NetMessage.MsgUserSetNickname.verify|verify} messages.
             * @param message MsgUserSetNickname message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgUserSetNickname, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgUserSetNickname message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgUserSetNickname.verify|verify} messages.
             * @param message MsgUserSetNickname message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgUserSetNickname, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgUserSetNickname message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgUserSetNickname
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgUserSetNickname;

            /**
             * Decodes a MsgUserSetNickname message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgUserSetNickname
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgUserSetNickname;

            /**
             * Verifies a MsgUserSetNickname message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgUserSetNickname message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgUserSetNickname
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgUserSetNickname;

            /**
             * Creates a plain object from a MsgUserSetNickname message. Also converts values to other types if specified.
             * @param message MsgUserSetNickname
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgUserSetNickname, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgUserSetNickname to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgUserSetNickname {

            /** Properties of a C. */
            interface IC {

                /** C nickname */
                nickname?: (string|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgUserSetNickname.IC);

                /** C nickname. */
                public nickname: string;

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgUserSetNickname.IC): CommonProto.NetMessage.MsgUserSetNickname.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgUserSetNickname.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgUserSetNickname.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgUserSetNickname.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgUserSetNickname.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgUserSetNickname.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgUserSetNickname.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgUserSetNickname.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgUserSetNickname.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S nickname */
                nickname?: (string|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgUserSetNickname.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S nickname. */
                public nickname: string;

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgUserSetNickname.IS): CommonProto.NetMessage.MsgUserSetNickname.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgUserSetNickname.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgUserSetNickname.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgUserSetNickname.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgUserSetNickname.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgUserSetNickname.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgUserSetNickname.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgUserSetNickname.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgUserSetNickname.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgUserSetDiscordInfo. */
        interface IMsgUserSetDiscordInfo {

            /** MsgUserSetDiscordInfo c */
            c?: (CommonProto.NetMessage.MsgUserSetDiscordInfo.IC|null);

            /** MsgUserSetDiscordInfo s */
            s?: (CommonProto.NetMessage.MsgUserSetDiscordInfo.IS|null);
        }

        /** Represents a MsgUserSetDiscordInfo. */
        class MsgUserSetDiscordInfo implements IMsgUserSetDiscordInfo {

            /**
             * Constructs a new MsgUserSetDiscordInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgUserSetDiscordInfo);

            /** MsgUserSetDiscordInfo c. */
            public c?: (CommonProto.NetMessage.MsgUserSetDiscordInfo.IC|null);

            /** MsgUserSetDiscordInfo s. */
            public s?: (CommonProto.NetMessage.MsgUserSetDiscordInfo.IS|null);

            /**
             * Creates a new MsgUserSetDiscordInfo instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgUserSetDiscordInfo instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgUserSetDiscordInfo): CommonProto.NetMessage.MsgUserSetDiscordInfo;

            /**
             * Encodes the specified MsgUserSetDiscordInfo message. Does not implicitly {@link CommonProto.NetMessage.MsgUserSetDiscordInfo.verify|verify} messages.
             * @param message MsgUserSetDiscordInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgUserSetDiscordInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgUserSetDiscordInfo message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgUserSetDiscordInfo.verify|verify} messages.
             * @param message MsgUserSetDiscordInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgUserSetDiscordInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgUserSetDiscordInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgUserSetDiscordInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgUserSetDiscordInfo;

            /**
             * Decodes a MsgUserSetDiscordInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgUserSetDiscordInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgUserSetDiscordInfo;

            /**
             * Verifies a MsgUserSetDiscordInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgUserSetDiscordInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgUserSetDiscordInfo
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgUserSetDiscordInfo;

            /**
             * Creates a plain object from a MsgUserSetDiscordInfo message. Also converts values to other types if specified.
             * @param message MsgUserSetDiscordInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgUserSetDiscordInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgUserSetDiscordInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgUserSetDiscordInfo {

            /** Properties of a C. */
            interface IC {

                /** C discordInfo */
                discordInfo?: (CommonProto.User.IUserDiscordInfo|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgUserSetDiscordInfo.IC);

                /** C discordInfo. */
                public discordInfo?: (CommonProto.User.IUserDiscordInfo|null);

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgUserSetDiscordInfo.IC): CommonProto.NetMessage.MsgUserSetDiscordInfo.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgUserSetDiscordInfo.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgUserSetDiscordInfo.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgUserSetDiscordInfo.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgUserSetDiscordInfo.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgUserSetDiscordInfo.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgUserSetDiscordInfo.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgUserSetDiscordInfo.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgUserSetDiscordInfo.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S discordInfo */
                discordInfo?: (CommonProto.User.IUserDiscordInfo|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgUserSetDiscordInfo.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S discordInfo. */
                public discordInfo?: (CommonProto.User.IUserDiscordInfo|null);

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgUserSetDiscordInfo.IS): CommonProto.NetMessage.MsgUserSetDiscordInfo.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgUserSetDiscordInfo.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgUserSetDiscordInfo.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgUserSetDiscordInfo.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgUserSetDiscordInfo.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgUserSetDiscordInfo.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgUserSetDiscordInfo.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgUserSetDiscordInfo.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgUserSetDiscordInfo.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgUserGetOnlineUserIdArray. */
        interface IMsgUserGetOnlineUserIdArray {

            /** MsgUserGetOnlineUserIdArray c */
            c?: (CommonProto.NetMessage.MsgUserGetOnlineUserIdArray.IC|null);

            /** MsgUserGetOnlineUserIdArray s */
            s?: (CommonProto.NetMessage.MsgUserGetOnlineUserIdArray.IS|null);
        }

        /** Represents a MsgUserGetOnlineUserIdArray. */
        class MsgUserGetOnlineUserIdArray implements IMsgUserGetOnlineUserIdArray {

            /**
             * Constructs a new MsgUserGetOnlineUserIdArray.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgUserGetOnlineUserIdArray);

            /** MsgUserGetOnlineUserIdArray c. */
            public c?: (CommonProto.NetMessage.MsgUserGetOnlineUserIdArray.IC|null);

            /** MsgUserGetOnlineUserIdArray s. */
            public s?: (CommonProto.NetMessage.MsgUserGetOnlineUserIdArray.IS|null);

            /**
             * Creates a new MsgUserGetOnlineUserIdArray instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgUserGetOnlineUserIdArray instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgUserGetOnlineUserIdArray): CommonProto.NetMessage.MsgUserGetOnlineUserIdArray;

            /**
             * Encodes the specified MsgUserGetOnlineUserIdArray message. Does not implicitly {@link CommonProto.NetMessage.MsgUserGetOnlineUserIdArray.verify|verify} messages.
             * @param message MsgUserGetOnlineUserIdArray message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgUserGetOnlineUserIdArray, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgUserGetOnlineUserIdArray message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgUserGetOnlineUserIdArray.verify|verify} messages.
             * @param message MsgUserGetOnlineUserIdArray message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgUserGetOnlineUserIdArray, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgUserGetOnlineUserIdArray message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgUserGetOnlineUserIdArray
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgUserGetOnlineUserIdArray;

            /**
             * Decodes a MsgUserGetOnlineUserIdArray message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgUserGetOnlineUserIdArray
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgUserGetOnlineUserIdArray;

            /**
             * Verifies a MsgUserGetOnlineUserIdArray message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgUserGetOnlineUserIdArray message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgUserGetOnlineUserIdArray
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgUserGetOnlineUserIdArray;

            /**
             * Creates a plain object from a MsgUserGetOnlineUserIdArray message. Also converts values to other types if specified.
             * @param message MsgUserGetOnlineUserIdArray
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgUserGetOnlineUserIdArray, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgUserGetOnlineUserIdArray to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgUserGetOnlineUserIdArray {

            /** Properties of a C. */
            interface IC {
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgUserGetOnlineUserIdArray.IC);

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgUserGetOnlineUserIdArray.IC): CommonProto.NetMessage.MsgUserGetOnlineUserIdArray.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgUserGetOnlineUserIdArray.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgUserGetOnlineUserIdArray.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgUserGetOnlineUserIdArray.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgUserGetOnlineUserIdArray.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgUserGetOnlineUserIdArray.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgUserGetOnlineUserIdArray.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgUserGetOnlineUserIdArray.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgUserGetOnlineUserIdArray.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S totalCount */
                totalCount?: (number|null);

                /** S userIdArray */
                userIdArray?: (number[]|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgUserGetOnlineUserIdArray.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S totalCount. */
                public totalCount: number;

                /** S userIdArray. */
                public userIdArray: number[];

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgUserGetOnlineUserIdArray.IS): CommonProto.NetMessage.MsgUserGetOnlineUserIdArray.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgUserGetOnlineUserIdArray.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgUserGetOnlineUserIdArray.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgUserGetOnlineUserIdArray.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgUserGetOnlineUserIdArray.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgUserGetOnlineUserIdArray.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgUserGetOnlineUserIdArray.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgUserGetOnlineUserIdArray.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgUserGetOnlineUserIdArray.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgUserSetPrivilege. */
        interface IMsgUserSetPrivilege {

            /** MsgUserSetPrivilege c */
            c?: (CommonProto.NetMessage.MsgUserSetPrivilege.IC|null);

            /** MsgUserSetPrivilege s */
            s?: (CommonProto.NetMessage.MsgUserSetPrivilege.IS|null);
        }

        /** Represents a MsgUserSetPrivilege. */
        class MsgUserSetPrivilege implements IMsgUserSetPrivilege {

            /**
             * Constructs a new MsgUserSetPrivilege.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgUserSetPrivilege);

            /** MsgUserSetPrivilege c. */
            public c?: (CommonProto.NetMessage.MsgUserSetPrivilege.IC|null);

            /** MsgUserSetPrivilege s. */
            public s?: (CommonProto.NetMessage.MsgUserSetPrivilege.IS|null);

            /**
             * Creates a new MsgUserSetPrivilege instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgUserSetPrivilege instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgUserSetPrivilege): CommonProto.NetMessage.MsgUserSetPrivilege;

            /**
             * Encodes the specified MsgUserSetPrivilege message. Does not implicitly {@link CommonProto.NetMessage.MsgUserSetPrivilege.verify|verify} messages.
             * @param message MsgUserSetPrivilege message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgUserSetPrivilege, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgUserSetPrivilege message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgUserSetPrivilege.verify|verify} messages.
             * @param message MsgUserSetPrivilege message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgUserSetPrivilege, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgUserSetPrivilege message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgUserSetPrivilege
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgUserSetPrivilege;

            /**
             * Decodes a MsgUserSetPrivilege message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgUserSetPrivilege
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgUserSetPrivilege;

            /**
             * Verifies a MsgUserSetPrivilege message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgUserSetPrivilege message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgUserSetPrivilege
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgUserSetPrivilege;

            /**
             * Creates a plain object from a MsgUserSetPrivilege message. Also converts values to other types if specified.
             * @param message MsgUserSetPrivilege
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgUserSetPrivilege, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgUserSetPrivilege to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgUserSetPrivilege {

            /** Properties of a C. */
            interface IC {

                /** C userId */
                userId?: (number|null);

                /** C userPrivilege */
                userPrivilege?: (CommonProto.User.IUserPrivilege|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgUserSetPrivilege.IC);

                /** C userId. */
                public userId: number;

                /** C userPrivilege. */
                public userPrivilege?: (CommonProto.User.IUserPrivilege|null);

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgUserSetPrivilege.IC): CommonProto.NetMessage.MsgUserSetPrivilege.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgUserSetPrivilege.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgUserSetPrivilege.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgUserSetPrivilege.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgUserSetPrivilege.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgUserSetPrivilege.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgUserSetPrivilege.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgUserSetPrivilege.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgUserSetPrivilege.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S userId */
                userId?: (number|null);

                /** S userPrivilege */
                userPrivilege?: (CommonProto.User.IUserPrivilege|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgUserSetPrivilege.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S userId. */
                public userId: number;

                /** S userPrivilege. */
                public userPrivilege?: (CommonProto.User.IUserPrivilege|null);

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgUserSetPrivilege.IS): CommonProto.NetMessage.MsgUserSetPrivilege.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgUserSetPrivilege.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgUserSetPrivilege.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgUserSetPrivilege.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgUserSetPrivilege.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgUserSetPrivilege.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgUserSetPrivilege.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgUserSetPrivilege.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgUserSetPrivilege.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgUserSetPassword. */
        interface IMsgUserSetPassword {

            /** MsgUserSetPassword c */
            c?: (CommonProto.NetMessage.MsgUserSetPassword.IC|null);

            /** MsgUserSetPassword s */
            s?: (CommonProto.NetMessage.MsgUserSetPassword.IS|null);
        }

        /** Represents a MsgUserSetPassword. */
        class MsgUserSetPassword implements IMsgUserSetPassword {

            /**
             * Constructs a new MsgUserSetPassword.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgUserSetPassword);

            /** MsgUserSetPassword c. */
            public c?: (CommonProto.NetMessage.MsgUserSetPassword.IC|null);

            /** MsgUserSetPassword s. */
            public s?: (CommonProto.NetMessage.MsgUserSetPassword.IS|null);

            /**
             * Creates a new MsgUserSetPassword instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgUserSetPassword instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgUserSetPassword): CommonProto.NetMessage.MsgUserSetPassword;

            /**
             * Encodes the specified MsgUserSetPassword message. Does not implicitly {@link CommonProto.NetMessage.MsgUserSetPassword.verify|verify} messages.
             * @param message MsgUserSetPassword message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgUserSetPassword, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgUserSetPassword message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgUserSetPassword.verify|verify} messages.
             * @param message MsgUserSetPassword message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgUserSetPassword, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgUserSetPassword message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgUserSetPassword
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgUserSetPassword;

            /**
             * Decodes a MsgUserSetPassword message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgUserSetPassword
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgUserSetPassword;

            /**
             * Verifies a MsgUserSetPassword message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgUserSetPassword message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgUserSetPassword
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgUserSetPassword;

            /**
             * Creates a plain object from a MsgUserSetPassword message. Also converts values to other types if specified.
             * @param message MsgUserSetPassword
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgUserSetPassword, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgUserSetPassword to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgUserSetPassword {

            /** Properties of a C. */
            interface IC {

                /** C oldPassword */
                oldPassword?: (string|null);

                /** C newPassword */
                newPassword?: (string|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgUserSetPassword.IC);

                /** C oldPassword. */
                public oldPassword: string;

                /** C newPassword. */
                public newPassword: string;

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgUserSetPassword.IC): CommonProto.NetMessage.MsgUserSetPassword.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgUserSetPassword.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgUserSetPassword.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgUserSetPassword.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgUserSetPassword.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgUserSetPassword.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgUserSetPassword.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgUserSetPassword.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgUserSetPassword.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgUserSetPassword.IS);

                /** S errorCode. */
                public errorCode: number;

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgUserSetPassword.IS): CommonProto.NetMessage.MsgUserSetPassword.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgUserSetPassword.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgUserSetPassword.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgUserSetPassword.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgUserSetPassword.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgUserSetPassword.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgUserSetPassword.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgUserSetPassword.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgUserSetPassword.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgUserSetSettings. */
        interface IMsgUserSetSettings {

            /** MsgUserSetSettings c */
            c?: (CommonProto.NetMessage.MsgUserSetSettings.IC|null);

            /** MsgUserSetSettings s */
            s?: (CommonProto.NetMessage.MsgUserSetSettings.IS|null);
        }

        /** Represents a MsgUserSetSettings. */
        class MsgUserSetSettings implements IMsgUserSetSettings {

            /**
             * Constructs a new MsgUserSetSettings.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgUserSetSettings);

            /** MsgUserSetSettings c. */
            public c?: (CommonProto.NetMessage.MsgUserSetSettings.IC|null);

            /** MsgUserSetSettings s. */
            public s?: (CommonProto.NetMessage.MsgUserSetSettings.IS|null);

            /**
             * Creates a new MsgUserSetSettings instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgUserSetSettings instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgUserSetSettings): CommonProto.NetMessage.MsgUserSetSettings;

            /**
             * Encodes the specified MsgUserSetSettings message. Does not implicitly {@link CommonProto.NetMessage.MsgUserSetSettings.verify|verify} messages.
             * @param message MsgUserSetSettings message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgUserSetSettings, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgUserSetSettings message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgUserSetSettings.verify|verify} messages.
             * @param message MsgUserSetSettings message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgUserSetSettings, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgUserSetSettings message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgUserSetSettings
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgUserSetSettings;

            /**
             * Decodes a MsgUserSetSettings message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgUserSetSettings
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgUserSetSettings;

            /**
             * Verifies a MsgUserSetSettings message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgUserSetSettings message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgUserSetSettings
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgUserSetSettings;

            /**
             * Creates a plain object from a MsgUserSetSettings message. Also converts values to other types if specified.
             * @param message MsgUserSetSettings
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgUserSetSettings, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgUserSetSettings to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgUserSetSettings {

            /** Properties of a C. */
            interface IC {

                /** C userSettings */
                userSettings?: (CommonProto.User.IUserSettings|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgUserSetSettings.IC);

                /** C userSettings. */
                public userSettings?: (CommonProto.User.IUserSettings|null);

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgUserSetSettings.IC): CommonProto.NetMessage.MsgUserSetSettings.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgUserSetSettings.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgUserSetSettings.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgUserSetSettings.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgUserSetSettings.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgUserSetSettings.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgUserSetSettings.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgUserSetSettings.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgUserSetSettings.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S userSettings */
                userSettings?: (CommonProto.User.IUserSettings|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgUserSetSettings.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S userSettings. */
                public userSettings?: (CommonProto.User.IUserSettings|null);

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgUserSetSettings.IS): CommonProto.NetMessage.MsgUserSetSettings.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgUserSetSettings.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgUserSetSettings.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgUserSetSettings.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgUserSetSettings.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgUserSetSettings.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgUserSetSettings.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgUserSetSettings.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgUserSetSettings.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgUserSetMapRating. */
        interface IMsgUserSetMapRating {

            /** MsgUserSetMapRating c */
            c?: (CommonProto.NetMessage.MsgUserSetMapRating.IC|null);

            /** MsgUserSetMapRating s */
            s?: (CommonProto.NetMessage.MsgUserSetMapRating.IS|null);
        }

        /** Represents a MsgUserSetMapRating. */
        class MsgUserSetMapRating implements IMsgUserSetMapRating {

            /**
             * Constructs a new MsgUserSetMapRating.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgUserSetMapRating);

            /** MsgUserSetMapRating c. */
            public c?: (CommonProto.NetMessage.MsgUserSetMapRating.IC|null);

            /** MsgUserSetMapRating s. */
            public s?: (CommonProto.NetMessage.MsgUserSetMapRating.IS|null);

            /**
             * Creates a new MsgUserSetMapRating instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgUserSetMapRating instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgUserSetMapRating): CommonProto.NetMessage.MsgUserSetMapRating;

            /**
             * Encodes the specified MsgUserSetMapRating message. Does not implicitly {@link CommonProto.NetMessage.MsgUserSetMapRating.verify|verify} messages.
             * @param message MsgUserSetMapRating message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgUserSetMapRating, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgUserSetMapRating message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgUserSetMapRating.verify|verify} messages.
             * @param message MsgUserSetMapRating message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgUserSetMapRating, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgUserSetMapRating message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgUserSetMapRating
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgUserSetMapRating;

            /**
             * Decodes a MsgUserSetMapRating message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgUserSetMapRating
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgUserSetMapRating;

            /**
             * Verifies a MsgUserSetMapRating message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgUserSetMapRating message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgUserSetMapRating
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgUserSetMapRating;

            /**
             * Creates a plain object from a MsgUserSetMapRating message. Also converts values to other types if specified.
             * @param message MsgUserSetMapRating
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgUserSetMapRating, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgUserSetMapRating to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgUserSetMapRating {

            /** Properties of a C. */
            interface IC {

                /** C mapId */
                mapId?: (number|null);

                /** C rating */
                rating?: (number|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgUserSetMapRating.IC);

                /** C mapId. */
                public mapId: number;

                /** C rating. */
                public rating: number;

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgUserSetMapRating.IC): CommonProto.NetMessage.MsgUserSetMapRating.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgUserSetMapRating.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgUserSetMapRating.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgUserSetMapRating.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgUserSetMapRating.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgUserSetMapRating.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgUserSetMapRating.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgUserSetMapRating.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgUserSetMapRating.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S mapId */
                mapId?: (number|null);

                /** S rating */
                rating?: (number|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgUserSetMapRating.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S mapId. */
                public mapId: number;

                /** S rating. */
                public rating: number;

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgUserSetMapRating.IS): CommonProto.NetMessage.MsgUserSetMapRating.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgUserSetMapRating.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgUserSetMapRating.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgUserSetMapRating.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgUserSetMapRating.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgUserSetMapRating.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgUserSetMapRating.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgUserSetMapRating.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgUserSetMapRating.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgUserSetAvatarId. */
        interface IMsgUserSetAvatarId {

            /** MsgUserSetAvatarId c */
            c?: (CommonProto.NetMessage.MsgUserSetAvatarId.IC|null);

            /** MsgUserSetAvatarId s */
            s?: (CommonProto.NetMessage.MsgUserSetAvatarId.IS|null);
        }

        /** Represents a MsgUserSetAvatarId. */
        class MsgUserSetAvatarId implements IMsgUserSetAvatarId {

            /**
             * Constructs a new MsgUserSetAvatarId.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgUserSetAvatarId);

            /** MsgUserSetAvatarId c. */
            public c?: (CommonProto.NetMessage.MsgUserSetAvatarId.IC|null);

            /** MsgUserSetAvatarId s. */
            public s?: (CommonProto.NetMessage.MsgUserSetAvatarId.IS|null);

            /**
             * Creates a new MsgUserSetAvatarId instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgUserSetAvatarId instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgUserSetAvatarId): CommonProto.NetMessage.MsgUserSetAvatarId;

            /**
             * Encodes the specified MsgUserSetAvatarId message. Does not implicitly {@link CommonProto.NetMessage.MsgUserSetAvatarId.verify|verify} messages.
             * @param message MsgUserSetAvatarId message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgUserSetAvatarId, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgUserSetAvatarId message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgUserSetAvatarId.verify|verify} messages.
             * @param message MsgUserSetAvatarId message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgUserSetAvatarId, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgUserSetAvatarId message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgUserSetAvatarId
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgUserSetAvatarId;

            /**
             * Decodes a MsgUserSetAvatarId message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgUserSetAvatarId
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgUserSetAvatarId;

            /**
             * Verifies a MsgUserSetAvatarId message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgUserSetAvatarId message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgUserSetAvatarId
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgUserSetAvatarId;

            /**
             * Creates a plain object from a MsgUserSetAvatarId message. Also converts values to other types if specified.
             * @param message MsgUserSetAvatarId
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgUserSetAvatarId, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgUserSetAvatarId to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgUserSetAvatarId {

            /** Properties of a C. */
            interface IC {

                /** C avatarId */
                avatarId?: (number|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgUserSetAvatarId.IC);

                /** C avatarId. */
                public avatarId: number;

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgUserSetAvatarId.IC): CommonProto.NetMessage.MsgUserSetAvatarId.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgUserSetAvatarId.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgUserSetAvatarId.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgUserSetAvatarId.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgUserSetAvatarId.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgUserSetAvatarId.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgUserSetAvatarId.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgUserSetAvatarId.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgUserSetAvatarId.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S avatarId */
                avatarId?: (number|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgUserSetAvatarId.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S avatarId. */
                public avatarId: number;

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgUserSetAvatarId.IS): CommonProto.NetMessage.MsgUserSetAvatarId.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgUserSetAvatarId.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgUserSetAvatarId.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgUserSetAvatarId.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgUserSetAvatarId.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgUserSetAvatarId.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgUserSetAvatarId.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgUserSetAvatarId.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgUserSetAvatarId.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgUserSetMapEditorAutoSaveTime. */
        interface IMsgUserSetMapEditorAutoSaveTime {

            /** MsgUserSetMapEditorAutoSaveTime c */
            c?: (CommonProto.NetMessage.MsgUserSetMapEditorAutoSaveTime.IC|null);

            /** MsgUserSetMapEditorAutoSaveTime s */
            s?: (CommonProto.NetMessage.MsgUserSetMapEditorAutoSaveTime.IS|null);
        }

        /** Represents a MsgUserSetMapEditorAutoSaveTime. */
        class MsgUserSetMapEditorAutoSaveTime implements IMsgUserSetMapEditorAutoSaveTime {

            /**
             * Constructs a new MsgUserSetMapEditorAutoSaveTime.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgUserSetMapEditorAutoSaveTime);

            /** MsgUserSetMapEditorAutoSaveTime c. */
            public c?: (CommonProto.NetMessage.MsgUserSetMapEditorAutoSaveTime.IC|null);

            /** MsgUserSetMapEditorAutoSaveTime s. */
            public s?: (CommonProto.NetMessage.MsgUserSetMapEditorAutoSaveTime.IS|null);

            /**
             * Creates a new MsgUserSetMapEditorAutoSaveTime instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgUserSetMapEditorAutoSaveTime instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgUserSetMapEditorAutoSaveTime): CommonProto.NetMessage.MsgUserSetMapEditorAutoSaveTime;

            /**
             * Encodes the specified MsgUserSetMapEditorAutoSaveTime message. Does not implicitly {@link CommonProto.NetMessage.MsgUserSetMapEditorAutoSaveTime.verify|verify} messages.
             * @param message MsgUserSetMapEditorAutoSaveTime message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgUserSetMapEditorAutoSaveTime, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgUserSetMapEditorAutoSaveTime message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgUserSetMapEditorAutoSaveTime.verify|verify} messages.
             * @param message MsgUserSetMapEditorAutoSaveTime message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgUserSetMapEditorAutoSaveTime, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgUserSetMapEditorAutoSaveTime message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgUserSetMapEditorAutoSaveTime
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgUserSetMapEditorAutoSaveTime;

            /**
             * Decodes a MsgUserSetMapEditorAutoSaveTime message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgUserSetMapEditorAutoSaveTime
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgUserSetMapEditorAutoSaveTime;

            /**
             * Verifies a MsgUserSetMapEditorAutoSaveTime message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgUserSetMapEditorAutoSaveTime message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgUserSetMapEditorAutoSaveTime
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgUserSetMapEditorAutoSaveTime;

            /**
             * Creates a plain object from a MsgUserSetMapEditorAutoSaveTime message. Also converts values to other types if specified.
             * @param message MsgUserSetMapEditorAutoSaveTime
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgUserSetMapEditorAutoSaveTime, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgUserSetMapEditorAutoSaveTime to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgUserSetMapEditorAutoSaveTime {

            /** Properties of a C. */
            interface IC {

                /** C time */
                time?: (number|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgUserSetMapEditorAutoSaveTime.IC);

                /** C time. */
                public time: number;

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgUserSetMapEditorAutoSaveTime.IC): CommonProto.NetMessage.MsgUserSetMapEditorAutoSaveTime.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgUserSetMapEditorAutoSaveTime.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgUserSetMapEditorAutoSaveTime.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgUserSetMapEditorAutoSaveTime.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgUserSetMapEditorAutoSaveTime.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgUserSetMapEditorAutoSaveTime.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgUserSetMapEditorAutoSaveTime.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgUserSetMapEditorAutoSaveTime.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgUserSetMapEditorAutoSaveTime.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S time */
                time?: (number|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgUserSetMapEditorAutoSaveTime.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S time. */
                public time: number;

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgUserSetMapEditorAutoSaveTime.IS): CommonProto.NetMessage.MsgUserSetMapEditorAutoSaveTime.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgUserSetMapEditorAutoSaveTime.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgUserSetMapEditorAutoSaveTime.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgUserSetMapEditorAutoSaveTime.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgUserSetMapEditorAutoSaveTime.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgUserSetMapEditorAutoSaveTime.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgUserSetMapEditorAutoSaveTime.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgUserSetMapEditorAutoSaveTime.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgUserSetMapEditorAutoSaveTime.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgMapGetEnabledMapIdArray. */
        interface IMsgMapGetEnabledMapIdArray {

            /** MsgMapGetEnabledMapIdArray s */
            s?: (CommonProto.NetMessage.MsgMapGetEnabledMapIdArray.IS|null);
        }

        /** Represents a MsgMapGetEnabledMapIdArray. */
        class MsgMapGetEnabledMapIdArray implements IMsgMapGetEnabledMapIdArray {

            /**
             * Constructs a new MsgMapGetEnabledMapIdArray.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgMapGetEnabledMapIdArray);

            /** MsgMapGetEnabledMapIdArray s. */
            public s?: (CommonProto.NetMessage.MsgMapGetEnabledMapIdArray.IS|null);

            /**
             * Creates a new MsgMapGetEnabledMapIdArray instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgMapGetEnabledMapIdArray instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgMapGetEnabledMapIdArray): CommonProto.NetMessage.MsgMapGetEnabledMapIdArray;

            /**
             * Encodes the specified MsgMapGetEnabledMapIdArray message. Does not implicitly {@link CommonProto.NetMessage.MsgMapGetEnabledMapIdArray.verify|verify} messages.
             * @param message MsgMapGetEnabledMapIdArray message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgMapGetEnabledMapIdArray, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgMapGetEnabledMapIdArray message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMapGetEnabledMapIdArray.verify|verify} messages.
             * @param message MsgMapGetEnabledMapIdArray message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgMapGetEnabledMapIdArray, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgMapGetEnabledMapIdArray message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgMapGetEnabledMapIdArray
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMapGetEnabledMapIdArray;

            /**
             * Decodes a MsgMapGetEnabledMapIdArray message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgMapGetEnabledMapIdArray
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMapGetEnabledMapIdArray;

            /**
             * Verifies a MsgMapGetEnabledMapIdArray message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgMapGetEnabledMapIdArray message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgMapGetEnabledMapIdArray
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMapGetEnabledMapIdArray;

            /**
             * Creates a plain object from a MsgMapGetEnabledMapIdArray message. Also converts values to other types if specified.
             * @param message MsgMapGetEnabledMapIdArray
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgMapGetEnabledMapIdArray, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgMapGetEnabledMapIdArray to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgMapGetEnabledMapIdArray {

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S mapIdArray */
                mapIdArray?: (number[]|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMapGetEnabledMapIdArray.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S mapIdArray. */
                public mapIdArray: number[];

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMapGetEnabledMapIdArray.IS): CommonProto.NetMessage.MsgMapGetEnabledMapIdArray.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgMapGetEnabledMapIdArray.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMapGetEnabledMapIdArray.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMapGetEnabledMapIdArray.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMapGetEnabledMapIdArray.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMapGetEnabledMapIdArray.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMapGetEnabledMapIdArray.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMapGetEnabledMapIdArray.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMapGetEnabledMapIdArray.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgMapGetBriefData. */
        interface IMsgMapGetBriefData {

            /** MsgMapGetBriefData c */
            c?: (CommonProto.NetMessage.MsgMapGetBriefData.IC|null);

            /** MsgMapGetBriefData s */
            s?: (CommonProto.NetMessage.MsgMapGetBriefData.IS|null);
        }

        /** Represents a MsgMapGetBriefData. */
        class MsgMapGetBriefData implements IMsgMapGetBriefData {

            /**
             * Constructs a new MsgMapGetBriefData.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgMapGetBriefData);

            /** MsgMapGetBriefData c. */
            public c?: (CommonProto.NetMessage.MsgMapGetBriefData.IC|null);

            /** MsgMapGetBriefData s. */
            public s?: (CommonProto.NetMessage.MsgMapGetBriefData.IS|null);

            /**
             * Creates a new MsgMapGetBriefData instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgMapGetBriefData instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgMapGetBriefData): CommonProto.NetMessage.MsgMapGetBriefData;

            /**
             * Encodes the specified MsgMapGetBriefData message. Does not implicitly {@link CommonProto.NetMessage.MsgMapGetBriefData.verify|verify} messages.
             * @param message MsgMapGetBriefData message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgMapGetBriefData, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgMapGetBriefData message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMapGetBriefData.verify|verify} messages.
             * @param message MsgMapGetBriefData message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgMapGetBriefData, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgMapGetBriefData message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgMapGetBriefData
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMapGetBriefData;

            /**
             * Decodes a MsgMapGetBriefData message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgMapGetBriefData
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMapGetBriefData;

            /**
             * Verifies a MsgMapGetBriefData message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgMapGetBriefData message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgMapGetBriefData
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMapGetBriefData;

            /**
             * Creates a plain object from a MsgMapGetBriefData message. Also converts values to other types if specified.
             * @param message MsgMapGetBriefData
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgMapGetBriefData, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgMapGetBriefData to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgMapGetBriefData {

            /** Properties of a C. */
            interface IC {

                /** C mapId */
                mapId?: (number|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMapGetBriefData.IC);

                /** C mapId. */
                public mapId: number;

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMapGetBriefData.IC): CommonProto.NetMessage.MsgMapGetBriefData.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgMapGetBriefData.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMapGetBriefData.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMapGetBriefData.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMapGetBriefData.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMapGetBriefData.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMapGetBriefData.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMapGetBriefData.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMapGetBriefData.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S mapId */
                mapId?: (number|null);

                /** S mapBriefData */
                mapBriefData?: (CommonProto.Map.IMapBriefData|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMapGetBriefData.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S mapId. */
                public mapId: number;

                /** S mapBriefData. */
                public mapBriefData?: (CommonProto.Map.IMapBriefData|null);

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMapGetBriefData.IS): CommonProto.NetMessage.MsgMapGetBriefData.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgMapGetBriefData.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMapGetBriefData.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMapGetBriefData.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMapGetBriefData.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMapGetBriefData.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMapGetBriefData.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMapGetBriefData.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMapGetBriefData.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgMapGetRawData. */
        interface IMsgMapGetRawData {

            /** MsgMapGetRawData c */
            c?: (CommonProto.NetMessage.MsgMapGetRawData.IC|null);

            /** MsgMapGetRawData s */
            s?: (CommonProto.NetMessage.MsgMapGetRawData.IS|null);
        }

        /** Represents a MsgMapGetRawData. */
        class MsgMapGetRawData implements IMsgMapGetRawData {

            /**
             * Constructs a new MsgMapGetRawData.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgMapGetRawData);

            /** MsgMapGetRawData c. */
            public c?: (CommonProto.NetMessage.MsgMapGetRawData.IC|null);

            /** MsgMapGetRawData s. */
            public s?: (CommonProto.NetMessage.MsgMapGetRawData.IS|null);

            /**
             * Creates a new MsgMapGetRawData instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgMapGetRawData instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgMapGetRawData): CommonProto.NetMessage.MsgMapGetRawData;

            /**
             * Encodes the specified MsgMapGetRawData message. Does not implicitly {@link CommonProto.NetMessage.MsgMapGetRawData.verify|verify} messages.
             * @param message MsgMapGetRawData message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgMapGetRawData, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgMapGetRawData message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMapGetRawData.verify|verify} messages.
             * @param message MsgMapGetRawData message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgMapGetRawData, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgMapGetRawData message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgMapGetRawData
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMapGetRawData;

            /**
             * Decodes a MsgMapGetRawData message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgMapGetRawData
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMapGetRawData;

            /**
             * Verifies a MsgMapGetRawData message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgMapGetRawData message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgMapGetRawData
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMapGetRawData;

            /**
             * Creates a plain object from a MsgMapGetRawData message. Also converts values to other types if specified.
             * @param message MsgMapGetRawData
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgMapGetRawData, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgMapGetRawData to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgMapGetRawData {

            /** Properties of a C. */
            interface IC {

                /** C mapId */
                mapId?: (number|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMapGetRawData.IC);

                /** C mapId. */
                public mapId: number;

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMapGetRawData.IC): CommonProto.NetMessage.MsgMapGetRawData.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgMapGetRawData.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMapGetRawData.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMapGetRawData.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMapGetRawData.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMapGetRawData.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMapGetRawData.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMapGetRawData.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMapGetRawData.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S mapId */
                mapId?: (number|null);

                /** S mapRawData */
                mapRawData?: (CommonProto.Map.IMapRawData|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMapGetRawData.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S mapId. */
                public mapId: number;

                /** S mapRawData. */
                public mapRawData?: (CommonProto.Map.IMapRawData|null);

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMapGetRawData.IS): CommonProto.NetMessage.MsgMapGetRawData.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgMapGetRawData.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMapGetRawData.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMapGetRawData.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMapGetRawData.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMapGetRawData.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMapGetRawData.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMapGetRawData.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMapGetRawData.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgMapGetMapTag. */
        interface IMsgMapGetMapTag {

            /** MsgMapGetMapTag c */
            c?: (CommonProto.NetMessage.MsgMapGetMapTag.IC|null);

            /** MsgMapGetMapTag s */
            s?: (CommonProto.NetMessage.MsgMapGetMapTag.IS|null);
        }

        /** Represents a MsgMapGetMapTag. */
        class MsgMapGetMapTag implements IMsgMapGetMapTag {

            /**
             * Constructs a new MsgMapGetMapTag.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgMapGetMapTag);

            /** MsgMapGetMapTag c. */
            public c?: (CommonProto.NetMessage.MsgMapGetMapTag.IC|null);

            /** MsgMapGetMapTag s. */
            public s?: (CommonProto.NetMessage.MsgMapGetMapTag.IS|null);

            /**
             * Creates a new MsgMapGetMapTag instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgMapGetMapTag instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgMapGetMapTag): CommonProto.NetMessage.MsgMapGetMapTag;

            /**
             * Encodes the specified MsgMapGetMapTag message. Does not implicitly {@link CommonProto.NetMessage.MsgMapGetMapTag.verify|verify} messages.
             * @param message MsgMapGetMapTag message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgMapGetMapTag, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgMapGetMapTag message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMapGetMapTag.verify|verify} messages.
             * @param message MsgMapGetMapTag message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgMapGetMapTag, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgMapGetMapTag message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgMapGetMapTag
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMapGetMapTag;

            /**
             * Decodes a MsgMapGetMapTag message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgMapGetMapTag
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMapGetMapTag;

            /**
             * Verifies a MsgMapGetMapTag message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgMapGetMapTag message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgMapGetMapTag
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMapGetMapTag;

            /**
             * Creates a plain object from a MsgMapGetMapTag message. Also converts values to other types if specified.
             * @param message MsgMapGetMapTag
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgMapGetMapTag, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgMapGetMapTag to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgMapGetMapTag {

            /** Properties of a C. */
            interface IC {
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMapGetMapTag.IC);

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMapGetMapTag.IC): CommonProto.NetMessage.MsgMapGetMapTag.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgMapGetMapTag.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMapGetMapTag.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMapGetMapTag.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMapGetMapTag.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMapGetMapTag.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMapGetMapTag.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMapGetMapTag.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMapGetMapTag.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S mapTag */
                mapTag?: (CommonProto.Map.IMapTag|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMapGetMapTag.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S mapTag. */
                public mapTag?: (CommonProto.Map.IMapTag|null);

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMapGetMapTag.IS): CommonProto.NetMessage.MsgMapGetMapTag.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgMapGetMapTag.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMapGetMapTag.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMapGetMapTag.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMapGetMapTag.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMapGetMapTag.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMapGetMapTag.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMapGetMapTag.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMapGetMapTag.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgMeGetMapDataList. */
        interface IMsgMeGetMapDataList {

            /** MsgMeGetMapDataList c */
            c?: (CommonProto.NetMessage.MsgMeGetMapDataList.IC|null);

            /** MsgMeGetMapDataList s */
            s?: (CommonProto.NetMessage.MsgMeGetMapDataList.IS|null);
        }

        /** Represents a MsgMeGetMapDataList. */
        class MsgMeGetMapDataList implements IMsgMeGetMapDataList {

            /**
             * Constructs a new MsgMeGetMapDataList.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgMeGetMapDataList);

            /** MsgMeGetMapDataList c. */
            public c?: (CommonProto.NetMessage.MsgMeGetMapDataList.IC|null);

            /** MsgMeGetMapDataList s. */
            public s?: (CommonProto.NetMessage.MsgMeGetMapDataList.IS|null);

            /**
             * Creates a new MsgMeGetMapDataList instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgMeGetMapDataList instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgMeGetMapDataList): CommonProto.NetMessage.MsgMeGetMapDataList;

            /**
             * Encodes the specified MsgMeGetMapDataList message. Does not implicitly {@link CommonProto.NetMessage.MsgMeGetMapDataList.verify|verify} messages.
             * @param message MsgMeGetMapDataList message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgMeGetMapDataList, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgMeGetMapDataList message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMeGetMapDataList.verify|verify} messages.
             * @param message MsgMeGetMapDataList message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgMeGetMapDataList, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgMeGetMapDataList message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgMeGetMapDataList
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMeGetMapDataList;

            /**
             * Decodes a MsgMeGetMapDataList message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgMeGetMapDataList
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMeGetMapDataList;

            /**
             * Verifies a MsgMeGetMapDataList message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgMeGetMapDataList message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgMeGetMapDataList
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMeGetMapDataList;

            /**
             * Creates a plain object from a MsgMeGetMapDataList message. Also converts values to other types if specified.
             * @param message MsgMeGetMapDataList
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgMeGetMapDataList, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgMeGetMapDataList to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgMeGetMapDataList {

            /** Properties of a C. */
            interface IC {
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMeGetMapDataList.IC);

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMeGetMapDataList.IC): CommonProto.NetMessage.MsgMeGetMapDataList.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgMeGetMapDataList.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMeGetMapDataList.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMeGetMapDataList.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMeGetMapDataList.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMeGetMapDataList.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMeGetMapDataList.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMeGetMapDataList.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMeGetMapDataList.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S dataList */
                dataList?: (CommonProto.Map.IMapEditorData[]|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMeGetMapDataList.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S dataList. */
                public dataList: CommonProto.Map.IMapEditorData[];

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMeGetMapDataList.IS): CommonProto.NetMessage.MsgMeGetMapDataList.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgMeGetMapDataList.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMeGetMapDataList.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMeGetMapDataList.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMeGetMapDataList.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMeGetMapDataList.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMeGetMapDataList.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMeGetMapDataList.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMeGetMapDataList.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgMeGetMapData. */
        interface IMsgMeGetMapData {

            /** MsgMeGetMapData c */
            c?: (CommonProto.NetMessage.MsgMeGetMapData.IC|null);

            /** MsgMeGetMapData s */
            s?: (CommonProto.NetMessage.MsgMeGetMapData.IS|null);
        }

        /** Represents a MsgMeGetMapData. */
        class MsgMeGetMapData implements IMsgMeGetMapData {

            /**
             * Constructs a new MsgMeGetMapData.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgMeGetMapData);

            /** MsgMeGetMapData c. */
            public c?: (CommonProto.NetMessage.MsgMeGetMapData.IC|null);

            /** MsgMeGetMapData s. */
            public s?: (CommonProto.NetMessage.MsgMeGetMapData.IS|null);

            /**
             * Creates a new MsgMeGetMapData instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgMeGetMapData instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgMeGetMapData): CommonProto.NetMessage.MsgMeGetMapData;

            /**
             * Encodes the specified MsgMeGetMapData message. Does not implicitly {@link CommonProto.NetMessage.MsgMeGetMapData.verify|verify} messages.
             * @param message MsgMeGetMapData message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgMeGetMapData, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgMeGetMapData message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMeGetMapData.verify|verify} messages.
             * @param message MsgMeGetMapData message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgMeGetMapData, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgMeGetMapData message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgMeGetMapData
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMeGetMapData;

            /**
             * Decodes a MsgMeGetMapData message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgMeGetMapData
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMeGetMapData;

            /**
             * Verifies a MsgMeGetMapData message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgMeGetMapData message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgMeGetMapData
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMeGetMapData;

            /**
             * Creates a plain object from a MsgMeGetMapData message. Also converts values to other types if specified.
             * @param message MsgMeGetMapData
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgMeGetMapData, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgMeGetMapData to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgMeGetMapData {

            /** Properties of a C. */
            interface IC {

                /** C slotIndex */
                slotIndex?: (number|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMeGetMapData.IC);

                /** C slotIndex. */
                public slotIndex: number;

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMeGetMapData.IC): CommonProto.NetMessage.MsgMeGetMapData.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgMeGetMapData.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMeGetMapData.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMeGetMapData.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMeGetMapData.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMeGetMapData.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMeGetMapData.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMeGetMapData.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMeGetMapData.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S slotIndex */
                slotIndex?: (number|null);

                /** S data */
                data?: (CommonProto.Map.IMapEditorData|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMeGetMapData.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S slotIndex. */
                public slotIndex: number;

                /** S data. */
                public data?: (CommonProto.Map.IMapEditorData|null);

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMeGetMapData.IS): CommonProto.NetMessage.MsgMeGetMapData.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgMeGetMapData.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMeGetMapData.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMeGetMapData.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMeGetMapData.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMeGetMapData.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMeGetMapData.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMeGetMapData.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMeGetMapData.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgMeSubmitMap. */
        interface IMsgMeSubmitMap {

            /** MsgMeSubmitMap c */
            c?: (CommonProto.NetMessage.MsgMeSubmitMap.IC|null);

            /** MsgMeSubmitMap s */
            s?: (CommonProto.NetMessage.MsgMeSubmitMap.IS|null);
        }

        /** Represents a MsgMeSubmitMap. */
        class MsgMeSubmitMap implements IMsgMeSubmitMap {

            /**
             * Constructs a new MsgMeSubmitMap.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgMeSubmitMap);

            /** MsgMeSubmitMap c. */
            public c?: (CommonProto.NetMessage.MsgMeSubmitMap.IC|null);

            /** MsgMeSubmitMap s. */
            public s?: (CommonProto.NetMessage.MsgMeSubmitMap.IS|null);

            /**
             * Creates a new MsgMeSubmitMap instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgMeSubmitMap instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgMeSubmitMap): CommonProto.NetMessage.MsgMeSubmitMap;

            /**
             * Encodes the specified MsgMeSubmitMap message. Does not implicitly {@link CommonProto.NetMessage.MsgMeSubmitMap.verify|verify} messages.
             * @param message MsgMeSubmitMap message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgMeSubmitMap, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgMeSubmitMap message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMeSubmitMap.verify|verify} messages.
             * @param message MsgMeSubmitMap message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgMeSubmitMap, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgMeSubmitMap message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgMeSubmitMap
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMeSubmitMap;

            /**
             * Decodes a MsgMeSubmitMap message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgMeSubmitMap
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMeSubmitMap;

            /**
             * Verifies a MsgMeSubmitMap message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgMeSubmitMap message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgMeSubmitMap
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMeSubmitMap;

            /**
             * Creates a plain object from a MsgMeSubmitMap message. Also converts values to other types if specified.
             * @param message MsgMeSubmitMap
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgMeSubmitMap, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgMeSubmitMap to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgMeSubmitMap {

            /** Properties of a C. */
            interface IC {

                /** C slotIndex */
                slotIndex?: (number|null);

                /** C mapRawData */
                mapRawData?: (CommonProto.Map.IMapRawData|null);

                /** C needReview */
                needReview?: (boolean|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMeSubmitMap.IC);

                /** C slotIndex. */
                public slotIndex: number;

                /** C mapRawData. */
                public mapRawData?: (CommonProto.Map.IMapRawData|null);

                /** C needReview. */
                public needReview: boolean;

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMeSubmitMap.IC): CommonProto.NetMessage.MsgMeSubmitMap.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgMeSubmitMap.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMeSubmitMap.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMeSubmitMap.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMeSubmitMap.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMeSubmitMap.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMeSubmitMap.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMeSubmitMap.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMeSubmitMap.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S mapRawDataErrorCode */
                mapRawDataErrorCode?: (number|null);

                /** S needReview */
                needReview?: (boolean|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMeSubmitMap.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S mapRawDataErrorCode. */
                public mapRawDataErrorCode: number;

                /** S needReview. */
                public needReview: boolean;

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMeSubmitMap.IS): CommonProto.NetMessage.MsgMeSubmitMap.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgMeSubmitMap.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMeSubmitMap.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMeSubmitMap.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMeSubmitMap.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMeSubmitMap.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMeSubmitMap.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMeSubmitMap.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMeSubmitMap.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgMeDeleteSlot. */
        interface IMsgMeDeleteSlot {

            /** MsgMeDeleteSlot c */
            c?: (CommonProto.NetMessage.MsgMeDeleteSlot.IC|null);

            /** MsgMeDeleteSlot s */
            s?: (CommonProto.NetMessage.MsgMeDeleteSlot.IS|null);
        }

        /** Represents a MsgMeDeleteSlot. */
        class MsgMeDeleteSlot implements IMsgMeDeleteSlot {

            /**
             * Constructs a new MsgMeDeleteSlot.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgMeDeleteSlot);

            /** MsgMeDeleteSlot c. */
            public c?: (CommonProto.NetMessage.MsgMeDeleteSlot.IC|null);

            /** MsgMeDeleteSlot s. */
            public s?: (CommonProto.NetMessage.MsgMeDeleteSlot.IS|null);

            /**
             * Creates a new MsgMeDeleteSlot instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgMeDeleteSlot instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgMeDeleteSlot): CommonProto.NetMessage.MsgMeDeleteSlot;

            /**
             * Encodes the specified MsgMeDeleteSlot message. Does not implicitly {@link CommonProto.NetMessage.MsgMeDeleteSlot.verify|verify} messages.
             * @param message MsgMeDeleteSlot message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgMeDeleteSlot, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgMeDeleteSlot message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMeDeleteSlot.verify|verify} messages.
             * @param message MsgMeDeleteSlot message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgMeDeleteSlot, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgMeDeleteSlot message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgMeDeleteSlot
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMeDeleteSlot;

            /**
             * Decodes a MsgMeDeleteSlot message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgMeDeleteSlot
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMeDeleteSlot;

            /**
             * Verifies a MsgMeDeleteSlot message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgMeDeleteSlot message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgMeDeleteSlot
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMeDeleteSlot;

            /**
             * Creates a plain object from a MsgMeDeleteSlot message. Also converts values to other types if specified.
             * @param message MsgMeDeleteSlot
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgMeDeleteSlot, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgMeDeleteSlot to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgMeDeleteSlot {

            /** Properties of a C. */
            interface IC {

                /** C slotIndex */
                slotIndex?: (number|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMeDeleteSlot.IC);

                /** C slotIndex. */
                public slotIndex: number;

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMeDeleteSlot.IC): CommonProto.NetMessage.MsgMeDeleteSlot.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgMeDeleteSlot.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMeDeleteSlot.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMeDeleteSlot.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMeDeleteSlot.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMeDeleteSlot.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMeDeleteSlot.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMeDeleteSlot.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMeDeleteSlot.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S slotIndex */
                slotIndex?: (number|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMeDeleteSlot.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S slotIndex. */
                public slotIndex: number;

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMeDeleteSlot.IS): CommonProto.NetMessage.MsgMeDeleteSlot.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgMeDeleteSlot.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMeDeleteSlot.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMeDeleteSlot.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMeDeleteSlot.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMeDeleteSlot.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMeDeleteSlot.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMeDeleteSlot.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMeDeleteSlot.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgChatAddMessage. */
        interface IMsgChatAddMessage {

            /** MsgChatAddMessage c */
            c?: (CommonProto.NetMessage.MsgChatAddMessage.IC|null);

            /** MsgChatAddMessage s */
            s?: (CommonProto.NetMessage.MsgChatAddMessage.IS|null);
        }

        /** Represents a MsgChatAddMessage. */
        class MsgChatAddMessage implements IMsgChatAddMessage {

            /**
             * Constructs a new MsgChatAddMessage.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgChatAddMessage);

            /** MsgChatAddMessage c. */
            public c?: (CommonProto.NetMessage.MsgChatAddMessage.IC|null);

            /** MsgChatAddMessage s. */
            public s?: (CommonProto.NetMessage.MsgChatAddMessage.IS|null);

            /**
             * Creates a new MsgChatAddMessage instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgChatAddMessage instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgChatAddMessage): CommonProto.NetMessage.MsgChatAddMessage;

            /**
             * Encodes the specified MsgChatAddMessage message. Does not implicitly {@link CommonProto.NetMessage.MsgChatAddMessage.verify|verify} messages.
             * @param message MsgChatAddMessage message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgChatAddMessage, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgChatAddMessage message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgChatAddMessage.verify|verify} messages.
             * @param message MsgChatAddMessage message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgChatAddMessage, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgChatAddMessage message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgChatAddMessage
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgChatAddMessage;

            /**
             * Decodes a MsgChatAddMessage message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgChatAddMessage
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgChatAddMessage;

            /**
             * Verifies a MsgChatAddMessage message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgChatAddMessage message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgChatAddMessage
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgChatAddMessage;

            /**
             * Creates a plain object from a MsgChatAddMessage message. Also converts values to other types if specified.
             * @param message MsgChatAddMessage
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgChatAddMessage, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgChatAddMessage to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgChatAddMessage {

            /** Properties of a C. */
            interface IC {

                /** C toCategory */
                toCategory?: (number|null);

                /** C toTarget */
                toTarget?: (number|null);

                /** C content */
                content?: (string|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgChatAddMessage.IC);

                /** C toCategory. */
                public toCategory: number;

                /** C toTarget. */
                public toTarget: number;

                /** C content. */
                public content: string;

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgChatAddMessage.IC): CommonProto.NetMessage.MsgChatAddMessage.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgChatAddMessage.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgChatAddMessage.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgChatAddMessage.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgChatAddMessage.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgChatAddMessage.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgChatAddMessage.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgChatAddMessage.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgChatAddMessage.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S message */
                message?: (CommonProto.Chat.IChatMessage|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgChatAddMessage.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S message. */
                public message?: (CommonProto.Chat.IChatMessage|null);

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgChatAddMessage.IS): CommonProto.NetMessage.MsgChatAddMessage.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgChatAddMessage.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgChatAddMessage.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgChatAddMessage.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgChatAddMessage.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgChatAddMessage.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgChatAddMessage.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgChatAddMessage.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgChatAddMessage.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgChatGetAllMessages. */
        interface IMsgChatGetAllMessages {

            /** MsgChatGetAllMessages c */
            c?: (CommonProto.NetMessage.MsgChatGetAllMessages.IC|null);

            /** MsgChatGetAllMessages s */
            s?: (CommonProto.NetMessage.MsgChatGetAllMessages.IS|null);
        }

        /** Represents a MsgChatGetAllMessages. */
        class MsgChatGetAllMessages implements IMsgChatGetAllMessages {

            /**
             * Constructs a new MsgChatGetAllMessages.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgChatGetAllMessages);

            /** MsgChatGetAllMessages c. */
            public c?: (CommonProto.NetMessage.MsgChatGetAllMessages.IC|null);

            /** MsgChatGetAllMessages s. */
            public s?: (CommonProto.NetMessage.MsgChatGetAllMessages.IS|null);

            /**
             * Creates a new MsgChatGetAllMessages instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgChatGetAllMessages instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgChatGetAllMessages): CommonProto.NetMessage.MsgChatGetAllMessages;

            /**
             * Encodes the specified MsgChatGetAllMessages message. Does not implicitly {@link CommonProto.NetMessage.MsgChatGetAllMessages.verify|verify} messages.
             * @param message MsgChatGetAllMessages message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgChatGetAllMessages, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgChatGetAllMessages message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgChatGetAllMessages.verify|verify} messages.
             * @param message MsgChatGetAllMessages message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgChatGetAllMessages, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgChatGetAllMessages message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgChatGetAllMessages
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgChatGetAllMessages;

            /**
             * Decodes a MsgChatGetAllMessages message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgChatGetAllMessages
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgChatGetAllMessages;

            /**
             * Verifies a MsgChatGetAllMessages message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgChatGetAllMessages message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgChatGetAllMessages
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgChatGetAllMessages;

            /**
             * Creates a plain object from a MsgChatGetAllMessages message. Also converts values to other types if specified.
             * @param message MsgChatGetAllMessages
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgChatGetAllMessages, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgChatGetAllMessages to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgChatGetAllMessages {

            /** Properties of a C. */
            interface IC {
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgChatGetAllMessages.IC);

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgChatGetAllMessages.IC): CommonProto.NetMessage.MsgChatGetAllMessages.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgChatGetAllMessages.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgChatGetAllMessages.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgChatGetAllMessages.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgChatGetAllMessages.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgChatGetAllMessages.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgChatGetAllMessages.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgChatGetAllMessages.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgChatGetAllMessages.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S messageList */
                messageList?: (CommonProto.Chat.IChatMessage[]|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgChatGetAllMessages.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S messageList. */
                public messageList: CommonProto.Chat.IChatMessage[];

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgChatGetAllMessages.IS): CommonProto.NetMessage.MsgChatGetAllMessages.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgChatGetAllMessages.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgChatGetAllMessages.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgChatGetAllMessages.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgChatGetAllMessages.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgChatGetAllMessages.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgChatGetAllMessages.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgChatGetAllMessages.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgChatGetAllMessages.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgChatUpdateReadProgress. */
        interface IMsgChatUpdateReadProgress {

            /** MsgChatUpdateReadProgress c */
            c?: (CommonProto.NetMessage.MsgChatUpdateReadProgress.IC|null);

            /** MsgChatUpdateReadProgress s */
            s?: (CommonProto.NetMessage.MsgChatUpdateReadProgress.IS|null);
        }

        /** Represents a MsgChatUpdateReadProgress. */
        class MsgChatUpdateReadProgress implements IMsgChatUpdateReadProgress {

            /**
             * Constructs a new MsgChatUpdateReadProgress.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgChatUpdateReadProgress);

            /** MsgChatUpdateReadProgress c. */
            public c?: (CommonProto.NetMessage.MsgChatUpdateReadProgress.IC|null);

            /** MsgChatUpdateReadProgress s. */
            public s?: (CommonProto.NetMessage.MsgChatUpdateReadProgress.IS|null);

            /**
             * Creates a new MsgChatUpdateReadProgress instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgChatUpdateReadProgress instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgChatUpdateReadProgress): CommonProto.NetMessage.MsgChatUpdateReadProgress;

            /**
             * Encodes the specified MsgChatUpdateReadProgress message. Does not implicitly {@link CommonProto.NetMessage.MsgChatUpdateReadProgress.verify|verify} messages.
             * @param message MsgChatUpdateReadProgress message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgChatUpdateReadProgress, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgChatUpdateReadProgress message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgChatUpdateReadProgress.verify|verify} messages.
             * @param message MsgChatUpdateReadProgress message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgChatUpdateReadProgress, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgChatUpdateReadProgress message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgChatUpdateReadProgress
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgChatUpdateReadProgress;

            /**
             * Decodes a MsgChatUpdateReadProgress message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgChatUpdateReadProgress
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgChatUpdateReadProgress;

            /**
             * Verifies a MsgChatUpdateReadProgress message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgChatUpdateReadProgress message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgChatUpdateReadProgress
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgChatUpdateReadProgress;

            /**
             * Creates a plain object from a MsgChatUpdateReadProgress message. Also converts values to other types if specified.
             * @param message MsgChatUpdateReadProgress
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgChatUpdateReadProgress, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgChatUpdateReadProgress to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgChatUpdateReadProgress {

            /** Properties of a C. */
            interface IC {

                /** C progress */
                progress?: (CommonProto.Chat.IChatReadProgress|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgChatUpdateReadProgress.IC);

                /** C progress. */
                public progress?: (CommonProto.Chat.IChatReadProgress|null);

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgChatUpdateReadProgress.IC): CommonProto.NetMessage.MsgChatUpdateReadProgress.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgChatUpdateReadProgress.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgChatUpdateReadProgress.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgChatUpdateReadProgress.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgChatUpdateReadProgress.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgChatUpdateReadProgress.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgChatUpdateReadProgress.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgChatUpdateReadProgress.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgChatUpdateReadProgress.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S progress */
                progress?: (CommonProto.Chat.IChatReadProgress|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgChatUpdateReadProgress.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S progress. */
                public progress?: (CommonProto.Chat.IChatReadProgress|null);

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgChatUpdateReadProgress.IS): CommonProto.NetMessage.MsgChatUpdateReadProgress.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgChatUpdateReadProgress.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgChatUpdateReadProgress.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgChatUpdateReadProgress.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgChatUpdateReadProgress.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgChatUpdateReadProgress.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgChatUpdateReadProgress.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgChatUpdateReadProgress.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgChatUpdateReadProgress.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgChatGetAllReadProgressList. */
        interface IMsgChatGetAllReadProgressList {

            /** MsgChatGetAllReadProgressList c */
            c?: (CommonProto.NetMessage.MsgChatGetAllReadProgressList.IC|null);

            /** MsgChatGetAllReadProgressList s */
            s?: (CommonProto.NetMessage.MsgChatGetAllReadProgressList.IS|null);
        }

        /** Represents a MsgChatGetAllReadProgressList. */
        class MsgChatGetAllReadProgressList implements IMsgChatGetAllReadProgressList {

            /**
             * Constructs a new MsgChatGetAllReadProgressList.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgChatGetAllReadProgressList);

            /** MsgChatGetAllReadProgressList c. */
            public c?: (CommonProto.NetMessage.MsgChatGetAllReadProgressList.IC|null);

            /** MsgChatGetAllReadProgressList s. */
            public s?: (CommonProto.NetMessage.MsgChatGetAllReadProgressList.IS|null);

            /**
             * Creates a new MsgChatGetAllReadProgressList instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgChatGetAllReadProgressList instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgChatGetAllReadProgressList): CommonProto.NetMessage.MsgChatGetAllReadProgressList;

            /**
             * Encodes the specified MsgChatGetAllReadProgressList message. Does not implicitly {@link CommonProto.NetMessage.MsgChatGetAllReadProgressList.verify|verify} messages.
             * @param message MsgChatGetAllReadProgressList message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgChatGetAllReadProgressList, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgChatGetAllReadProgressList message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgChatGetAllReadProgressList.verify|verify} messages.
             * @param message MsgChatGetAllReadProgressList message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgChatGetAllReadProgressList, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgChatGetAllReadProgressList message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgChatGetAllReadProgressList
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgChatGetAllReadProgressList;

            /**
             * Decodes a MsgChatGetAllReadProgressList message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgChatGetAllReadProgressList
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgChatGetAllReadProgressList;

            /**
             * Verifies a MsgChatGetAllReadProgressList message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgChatGetAllReadProgressList message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgChatGetAllReadProgressList
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgChatGetAllReadProgressList;

            /**
             * Creates a plain object from a MsgChatGetAllReadProgressList message. Also converts values to other types if specified.
             * @param message MsgChatGetAllReadProgressList
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgChatGetAllReadProgressList, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgChatGetAllReadProgressList to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgChatGetAllReadProgressList {

            /** Properties of a C. */
            interface IC {
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgChatGetAllReadProgressList.IC);

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgChatGetAllReadProgressList.IC): CommonProto.NetMessage.MsgChatGetAllReadProgressList.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgChatGetAllReadProgressList.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgChatGetAllReadProgressList.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgChatGetAllReadProgressList.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgChatGetAllReadProgressList.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgChatGetAllReadProgressList.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgChatGetAllReadProgressList.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgChatGetAllReadProgressList.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgChatGetAllReadProgressList.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S list */
                list?: (CommonProto.Chat.IChatReadProgress[]|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgChatGetAllReadProgressList.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S list. */
                public list: CommonProto.Chat.IChatReadProgress[];

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgChatGetAllReadProgressList.IS): CommonProto.NetMessage.MsgChatGetAllReadProgressList.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgChatGetAllReadProgressList.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgChatGetAllReadProgressList.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgChatGetAllReadProgressList.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgChatGetAllReadProgressList.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgChatGetAllReadProgressList.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgChatGetAllReadProgressList.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgChatGetAllReadProgressList.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgChatGetAllReadProgressList.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgChatDeleteMessage. */
        interface IMsgChatDeleteMessage {

            /** MsgChatDeleteMessage c */
            c?: (CommonProto.NetMessage.MsgChatDeleteMessage.IC|null);

            /** MsgChatDeleteMessage s */
            s?: (CommonProto.NetMessage.MsgChatDeleteMessage.IS|null);
        }

        /** Represents a MsgChatDeleteMessage. */
        class MsgChatDeleteMessage implements IMsgChatDeleteMessage {

            /**
             * Constructs a new MsgChatDeleteMessage.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgChatDeleteMessage);

            /** MsgChatDeleteMessage c. */
            public c?: (CommonProto.NetMessage.MsgChatDeleteMessage.IC|null);

            /** MsgChatDeleteMessage s. */
            public s?: (CommonProto.NetMessage.MsgChatDeleteMessage.IS|null);

            /**
             * Creates a new MsgChatDeleteMessage instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgChatDeleteMessage instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgChatDeleteMessage): CommonProto.NetMessage.MsgChatDeleteMessage;

            /**
             * Encodes the specified MsgChatDeleteMessage message. Does not implicitly {@link CommonProto.NetMessage.MsgChatDeleteMessage.verify|verify} messages.
             * @param message MsgChatDeleteMessage message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgChatDeleteMessage, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgChatDeleteMessage message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgChatDeleteMessage.verify|verify} messages.
             * @param message MsgChatDeleteMessage message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgChatDeleteMessage, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgChatDeleteMessage message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgChatDeleteMessage
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgChatDeleteMessage;

            /**
             * Decodes a MsgChatDeleteMessage message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgChatDeleteMessage
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgChatDeleteMessage;

            /**
             * Verifies a MsgChatDeleteMessage message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgChatDeleteMessage message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgChatDeleteMessage
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgChatDeleteMessage;

            /**
             * Creates a plain object from a MsgChatDeleteMessage message. Also converts values to other types if specified.
             * @param message MsgChatDeleteMessage
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgChatDeleteMessage, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgChatDeleteMessage to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgChatDeleteMessage {

            /** Properties of a C. */
            interface IC {

                /** C messageId */
                messageId?: (number|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgChatDeleteMessage.IC);

                /** C messageId. */
                public messageId: number;

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgChatDeleteMessage.IC): CommonProto.NetMessage.MsgChatDeleteMessage.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgChatDeleteMessage.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgChatDeleteMessage.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgChatDeleteMessage.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgChatDeleteMessage.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgChatDeleteMessage.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgChatDeleteMessage.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgChatDeleteMessage.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgChatDeleteMessage.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S messageId */
                messageId?: (number|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgChatDeleteMessage.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S messageId. */
                public messageId: number;

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgChatDeleteMessage.IS): CommonProto.NetMessage.MsgChatDeleteMessage.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgChatDeleteMessage.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgChatDeleteMessage.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgChatDeleteMessage.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgChatDeleteMessage.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgChatDeleteMessage.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgChatDeleteMessage.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgChatDeleteMessage.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgChatDeleteMessage.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgMmSetWarRuleAvailability. */
        interface IMsgMmSetWarRuleAvailability {

            /** MsgMmSetWarRuleAvailability c */
            c?: (CommonProto.NetMessage.MsgMmSetWarRuleAvailability.IC|null);

            /** MsgMmSetWarRuleAvailability s */
            s?: (CommonProto.NetMessage.MsgMmSetWarRuleAvailability.IS|null);
        }

        /** Represents a MsgMmSetWarRuleAvailability. */
        class MsgMmSetWarRuleAvailability implements IMsgMmSetWarRuleAvailability {

            /**
             * Constructs a new MsgMmSetWarRuleAvailability.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgMmSetWarRuleAvailability);

            /** MsgMmSetWarRuleAvailability c. */
            public c?: (CommonProto.NetMessage.MsgMmSetWarRuleAvailability.IC|null);

            /** MsgMmSetWarRuleAvailability s. */
            public s?: (CommonProto.NetMessage.MsgMmSetWarRuleAvailability.IS|null);

            /**
             * Creates a new MsgMmSetWarRuleAvailability instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgMmSetWarRuleAvailability instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgMmSetWarRuleAvailability): CommonProto.NetMessage.MsgMmSetWarRuleAvailability;

            /**
             * Encodes the specified MsgMmSetWarRuleAvailability message. Does not implicitly {@link CommonProto.NetMessage.MsgMmSetWarRuleAvailability.verify|verify} messages.
             * @param message MsgMmSetWarRuleAvailability message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgMmSetWarRuleAvailability, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgMmSetWarRuleAvailability message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMmSetWarRuleAvailability.verify|verify} messages.
             * @param message MsgMmSetWarRuleAvailability message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgMmSetWarRuleAvailability, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgMmSetWarRuleAvailability message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgMmSetWarRuleAvailability
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMmSetWarRuleAvailability;

            /**
             * Decodes a MsgMmSetWarRuleAvailability message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgMmSetWarRuleAvailability
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMmSetWarRuleAvailability;

            /**
             * Verifies a MsgMmSetWarRuleAvailability message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgMmSetWarRuleAvailability message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgMmSetWarRuleAvailability
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMmSetWarRuleAvailability;

            /**
             * Creates a plain object from a MsgMmSetWarRuleAvailability message. Also converts values to other types if specified.
             * @param message MsgMmSetWarRuleAvailability
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgMmSetWarRuleAvailability, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgMmSetWarRuleAvailability to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgMmSetWarRuleAvailability {

            /** Properties of a C. */
            interface IC {

                /** C mapId */
                mapId?: (number|null);

                /** C ruleId */
                ruleId?: (number|null);

                /** C availability */
                availability?: (CommonProto.WarRule.IRuleAvailability|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMmSetWarRuleAvailability.IC);

                /** C mapId. */
                public mapId: number;

                /** C ruleId. */
                public ruleId: number;

                /** C availability. */
                public availability?: (CommonProto.WarRule.IRuleAvailability|null);

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMmSetWarRuleAvailability.IC): CommonProto.NetMessage.MsgMmSetWarRuleAvailability.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgMmSetWarRuleAvailability.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMmSetWarRuleAvailability.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMmSetWarRuleAvailability.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMmSetWarRuleAvailability.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMmSetWarRuleAvailability.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMmSetWarRuleAvailability.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMmSetWarRuleAvailability.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMmSetWarRuleAvailability.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S mapId */
                mapId?: (number|null);

                /** S ruleId */
                ruleId?: (number|null);

                /** S availability */
                availability?: (CommonProto.WarRule.IRuleAvailability|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMmSetWarRuleAvailability.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S mapId. */
                public mapId: number;

                /** S ruleId. */
                public ruleId: number;

                /** S availability. */
                public availability?: (CommonProto.WarRule.IRuleAvailability|null);

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMmSetWarRuleAvailability.IS): CommonProto.NetMessage.MsgMmSetWarRuleAvailability.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgMmSetWarRuleAvailability.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMmSetWarRuleAvailability.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMmSetWarRuleAvailability.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMmSetWarRuleAvailability.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMmSetWarRuleAvailability.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMmSetWarRuleAvailability.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMmSetWarRuleAvailability.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMmSetWarRuleAvailability.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgMmReloadAllMaps. */
        interface IMsgMmReloadAllMaps {

            /** MsgMmReloadAllMaps c */
            c?: (CommonProto.NetMessage.MsgMmReloadAllMaps.IC|null);

            /** MsgMmReloadAllMaps s */
            s?: (CommonProto.NetMessage.MsgMmReloadAllMaps.IS|null);
        }

        /** Represents a MsgMmReloadAllMaps. */
        class MsgMmReloadAllMaps implements IMsgMmReloadAllMaps {

            /**
             * Constructs a new MsgMmReloadAllMaps.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgMmReloadAllMaps);

            /** MsgMmReloadAllMaps c. */
            public c?: (CommonProto.NetMessage.MsgMmReloadAllMaps.IC|null);

            /** MsgMmReloadAllMaps s. */
            public s?: (CommonProto.NetMessage.MsgMmReloadAllMaps.IS|null);

            /**
             * Creates a new MsgMmReloadAllMaps instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgMmReloadAllMaps instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgMmReloadAllMaps): CommonProto.NetMessage.MsgMmReloadAllMaps;

            /**
             * Encodes the specified MsgMmReloadAllMaps message. Does not implicitly {@link CommonProto.NetMessage.MsgMmReloadAllMaps.verify|verify} messages.
             * @param message MsgMmReloadAllMaps message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgMmReloadAllMaps, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgMmReloadAllMaps message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMmReloadAllMaps.verify|verify} messages.
             * @param message MsgMmReloadAllMaps message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgMmReloadAllMaps, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgMmReloadAllMaps message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgMmReloadAllMaps
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMmReloadAllMaps;

            /**
             * Decodes a MsgMmReloadAllMaps message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgMmReloadAllMaps
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMmReloadAllMaps;

            /**
             * Verifies a MsgMmReloadAllMaps message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgMmReloadAllMaps message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgMmReloadAllMaps
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMmReloadAllMaps;

            /**
             * Creates a plain object from a MsgMmReloadAllMaps message. Also converts values to other types if specified.
             * @param message MsgMmReloadAllMaps
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgMmReloadAllMaps, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgMmReloadAllMaps to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgMmReloadAllMaps {

            /** Properties of a C. */
            interface IC {
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMmReloadAllMaps.IC);

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMmReloadAllMaps.IC): CommonProto.NetMessage.MsgMmReloadAllMaps.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgMmReloadAllMaps.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMmReloadAllMaps.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMmReloadAllMaps.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMmReloadAllMaps.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMmReloadAllMaps.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMmReloadAllMaps.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMmReloadAllMaps.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMmReloadAllMaps.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMmReloadAllMaps.IS);

                /** S errorCode. */
                public errorCode: number;

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMmReloadAllMaps.IS): CommonProto.NetMessage.MsgMmReloadAllMaps.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgMmReloadAllMaps.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMmReloadAllMaps.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMmReloadAllMaps.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMmReloadAllMaps.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMmReloadAllMaps.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMmReloadAllMaps.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMmReloadAllMaps.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMmReloadAllMaps.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgMmSetMapEnabled. */
        interface IMsgMmSetMapEnabled {

            /** MsgMmSetMapEnabled c */
            c?: (CommonProto.NetMessage.MsgMmSetMapEnabled.IC|null);

            /** MsgMmSetMapEnabled s */
            s?: (CommonProto.NetMessage.MsgMmSetMapEnabled.IS|null);
        }

        /** Represents a MsgMmSetMapEnabled. */
        class MsgMmSetMapEnabled implements IMsgMmSetMapEnabled {

            /**
             * Constructs a new MsgMmSetMapEnabled.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgMmSetMapEnabled);

            /** MsgMmSetMapEnabled c. */
            public c?: (CommonProto.NetMessage.MsgMmSetMapEnabled.IC|null);

            /** MsgMmSetMapEnabled s. */
            public s?: (CommonProto.NetMessage.MsgMmSetMapEnabled.IS|null);

            /**
             * Creates a new MsgMmSetMapEnabled instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgMmSetMapEnabled instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgMmSetMapEnabled): CommonProto.NetMessage.MsgMmSetMapEnabled;

            /**
             * Encodes the specified MsgMmSetMapEnabled message. Does not implicitly {@link CommonProto.NetMessage.MsgMmSetMapEnabled.verify|verify} messages.
             * @param message MsgMmSetMapEnabled message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgMmSetMapEnabled, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgMmSetMapEnabled message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMmSetMapEnabled.verify|verify} messages.
             * @param message MsgMmSetMapEnabled message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgMmSetMapEnabled, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgMmSetMapEnabled message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgMmSetMapEnabled
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMmSetMapEnabled;

            /**
             * Decodes a MsgMmSetMapEnabled message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgMmSetMapEnabled
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMmSetMapEnabled;

            /**
             * Verifies a MsgMmSetMapEnabled message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgMmSetMapEnabled message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgMmSetMapEnabled
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMmSetMapEnabled;

            /**
             * Creates a plain object from a MsgMmSetMapEnabled message. Also converts values to other types if specified.
             * @param message MsgMmSetMapEnabled
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgMmSetMapEnabled, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgMmSetMapEnabled to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgMmSetMapEnabled {

            /** Properties of a C. */
            interface IC {

                /** C mapId */
                mapId?: (number|null);

                /** C isEnabled */
                isEnabled?: (boolean|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMmSetMapEnabled.IC);

                /** C mapId. */
                public mapId: number;

                /** C isEnabled. */
                public isEnabled: boolean;

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMmSetMapEnabled.IC): CommonProto.NetMessage.MsgMmSetMapEnabled.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgMmSetMapEnabled.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMmSetMapEnabled.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMmSetMapEnabled.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMmSetMapEnabled.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMmSetMapEnabled.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMmSetMapEnabled.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMmSetMapEnabled.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMmSetMapEnabled.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S mapId */
                mapId?: (number|null);

                /** S isEnabled */
                isEnabled?: (boolean|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMmSetMapEnabled.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S mapId. */
                public mapId: number;

                /** S isEnabled. */
                public isEnabled: boolean;

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMmSetMapEnabled.IS): CommonProto.NetMessage.MsgMmSetMapEnabled.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgMmSetMapEnabled.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMmSetMapEnabled.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMmSetMapEnabled.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMmSetMapEnabled.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMmSetMapEnabled.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMmSetMapEnabled.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMmSetMapEnabled.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMmSetMapEnabled.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgMmGetReviewingMaps. */
        interface IMsgMmGetReviewingMaps {

            /** MsgMmGetReviewingMaps c */
            c?: (CommonProto.NetMessage.MsgMmGetReviewingMaps.IC|null);

            /** MsgMmGetReviewingMaps s */
            s?: (CommonProto.NetMessage.MsgMmGetReviewingMaps.IS|null);
        }

        /** Represents a MsgMmGetReviewingMaps. */
        class MsgMmGetReviewingMaps implements IMsgMmGetReviewingMaps {

            /**
             * Constructs a new MsgMmGetReviewingMaps.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgMmGetReviewingMaps);

            /** MsgMmGetReviewingMaps c. */
            public c?: (CommonProto.NetMessage.MsgMmGetReviewingMaps.IC|null);

            /** MsgMmGetReviewingMaps s. */
            public s?: (CommonProto.NetMessage.MsgMmGetReviewingMaps.IS|null);

            /**
             * Creates a new MsgMmGetReviewingMaps instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgMmGetReviewingMaps instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgMmGetReviewingMaps): CommonProto.NetMessage.MsgMmGetReviewingMaps;

            /**
             * Encodes the specified MsgMmGetReviewingMaps message. Does not implicitly {@link CommonProto.NetMessage.MsgMmGetReviewingMaps.verify|verify} messages.
             * @param message MsgMmGetReviewingMaps message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgMmGetReviewingMaps, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgMmGetReviewingMaps message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMmGetReviewingMaps.verify|verify} messages.
             * @param message MsgMmGetReviewingMaps message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgMmGetReviewingMaps, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgMmGetReviewingMaps message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgMmGetReviewingMaps
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMmGetReviewingMaps;

            /**
             * Decodes a MsgMmGetReviewingMaps message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgMmGetReviewingMaps
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMmGetReviewingMaps;

            /**
             * Verifies a MsgMmGetReviewingMaps message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgMmGetReviewingMaps message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgMmGetReviewingMaps
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMmGetReviewingMaps;

            /**
             * Creates a plain object from a MsgMmGetReviewingMaps message. Also converts values to other types if specified.
             * @param message MsgMmGetReviewingMaps
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgMmGetReviewingMaps, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgMmGetReviewingMaps to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgMmGetReviewingMaps {

            /** Properties of a C. */
            interface IC {
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMmGetReviewingMaps.IC);

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMmGetReviewingMaps.IC): CommonProto.NetMessage.MsgMmGetReviewingMaps.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgMmGetReviewingMaps.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMmGetReviewingMaps.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMmGetReviewingMaps.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMmGetReviewingMaps.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMmGetReviewingMaps.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMmGetReviewingMaps.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMmGetReviewingMaps.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMmGetReviewingMaps.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S maps */
                maps?: (CommonProto.Map.IMapEditorData[]|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMmGetReviewingMaps.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S maps. */
                public maps: CommonProto.Map.IMapEditorData[];

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMmGetReviewingMaps.IS): CommonProto.NetMessage.MsgMmGetReviewingMaps.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgMmGetReviewingMaps.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMmGetReviewingMaps.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMmGetReviewingMaps.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMmGetReviewingMaps.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMmGetReviewingMaps.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMmGetReviewingMaps.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMmGetReviewingMaps.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMmGetReviewingMaps.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgMmReviewMap. */
        interface IMsgMmReviewMap {

            /** MsgMmReviewMap c */
            c?: (CommonProto.NetMessage.MsgMmReviewMap.IC|null);

            /** MsgMmReviewMap s */
            s?: (CommonProto.NetMessage.MsgMmReviewMap.IS|null);
        }

        /** Represents a MsgMmReviewMap. */
        class MsgMmReviewMap implements IMsgMmReviewMap {

            /**
             * Constructs a new MsgMmReviewMap.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgMmReviewMap);

            /** MsgMmReviewMap c. */
            public c?: (CommonProto.NetMessage.MsgMmReviewMap.IC|null);

            /** MsgMmReviewMap s. */
            public s?: (CommonProto.NetMessage.MsgMmReviewMap.IS|null);

            /**
             * Creates a new MsgMmReviewMap instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgMmReviewMap instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgMmReviewMap): CommonProto.NetMessage.MsgMmReviewMap;

            /**
             * Encodes the specified MsgMmReviewMap message. Does not implicitly {@link CommonProto.NetMessage.MsgMmReviewMap.verify|verify} messages.
             * @param message MsgMmReviewMap message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgMmReviewMap, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgMmReviewMap message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMmReviewMap.verify|verify} messages.
             * @param message MsgMmReviewMap message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgMmReviewMap, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgMmReviewMap message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgMmReviewMap
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMmReviewMap;

            /**
             * Decodes a MsgMmReviewMap message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgMmReviewMap
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMmReviewMap;

            /**
             * Verifies a MsgMmReviewMap message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgMmReviewMap message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgMmReviewMap
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMmReviewMap;

            /**
             * Creates a plain object from a MsgMmReviewMap message. Also converts values to other types if specified.
             * @param message MsgMmReviewMap
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgMmReviewMap, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgMmReviewMap to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgMmReviewMap {

            /** Properties of a C. */
            interface IC {

                /** C designerUserId */
                designerUserId?: (number|null);

                /** C slotIndex */
                slotIndex?: (number|null);

                /** C modifiedTime */
                modifiedTime?: (number|null);

                /** C isAccept */
                isAccept?: (boolean|null);

                /** C reviewComment */
                reviewComment?: (string|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMmReviewMap.IC);

                /** C designerUserId. */
                public designerUserId: number;

                /** C slotIndex. */
                public slotIndex: number;

                /** C modifiedTime. */
                public modifiedTime: number;

                /** C isAccept. */
                public isAccept: boolean;

                /** C reviewComment. */
                public reviewComment: string;

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMmReviewMap.IC): CommonProto.NetMessage.MsgMmReviewMap.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgMmReviewMap.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMmReviewMap.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMmReviewMap.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMmReviewMap.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMmReviewMap.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMmReviewMap.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMmReviewMap.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMmReviewMap.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S isAccept */
                isAccept?: (boolean|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMmReviewMap.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S isAccept. */
                public isAccept: boolean;

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMmReviewMap.IS): CommonProto.NetMessage.MsgMmReviewMap.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgMmReviewMap.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMmReviewMap.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMmReviewMap.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMmReviewMap.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMmReviewMap.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMmReviewMap.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMmReviewMap.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMmReviewMap.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgMmSetMapTagIdFlags. */
        interface IMsgMmSetMapTagIdFlags {

            /** MsgMmSetMapTagIdFlags c */
            c?: (CommonProto.NetMessage.MsgMmSetMapTagIdFlags.IC|null);

            /** MsgMmSetMapTagIdFlags s */
            s?: (CommonProto.NetMessage.MsgMmSetMapTagIdFlags.IS|null);
        }

        /** Represents a MsgMmSetMapTagIdFlags. */
        class MsgMmSetMapTagIdFlags implements IMsgMmSetMapTagIdFlags {

            /**
             * Constructs a new MsgMmSetMapTagIdFlags.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgMmSetMapTagIdFlags);

            /** MsgMmSetMapTagIdFlags c. */
            public c?: (CommonProto.NetMessage.MsgMmSetMapTagIdFlags.IC|null);

            /** MsgMmSetMapTagIdFlags s. */
            public s?: (CommonProto.NetMessage.MsgMmSetMapTagIdFlags.IS|null);

            /**
             * Creates a new MsgMmSetMapTagIdFlags instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgMmSetMapTagIdFlags instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgMmSetMapTagIdFlags): CommonProto.NetMessage.MsgMmSetMapTagIdFlags;

            /**
             * Encodes the specified MsgMmSetMapTagIdFlags message. Does not implicitly {@link CommonProto.NetMessage.MsgMmSetMapTagIdFlags.verify|verify} messages.
             * @param message MsgMmSetMapTagIdFlags message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgMmSetMapTagIdFlags, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgMmSetMapTagIdFlags message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMmSetMapTagIdFlags.verify|verify} messages.
             * @param message MsgMmSetMapTagIdFlags message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgMmSetMapTagIdFlags, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgMmSetMapTagIdFlags message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgMmSetMapTagIdFlags
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMmSetMapTagIdFlags;

            /**
             * Decodes a MsgMmSetMapTagIdFlags message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgMmSetMapTagIdFlags
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMmSetMapTagIdFlags;

            /**
             * Verifies a MsgMmSetMapTagIdFlags message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgMmSetMapTagIdFlags message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgMmSetMapTagIdFlags
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMmSetMapTagIdFlags;

            /**
             * Creates a plain object from a MsgMmSetMapTagIdFlags message. Also converts values to other types if specified.
             * @param message MsgMmSetMapTagIdFlags
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgMmSetMapTagIdFlags, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgMmSetMapTagIdFlags to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgMmSetMapTagIdFlags {

            /** Properties of a C. */
            interface IC {

                /** C mapId */
                mapId?: (number|null);

                /** C mapTagIdFlags */
                mapTagIdFlags?: (number|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMmSetMapTagIdFlags.IC);

                /** C mapId. */
                public mapId: number;

                /** C mapTagIdFlags. */
                public mapTagIdFlags: number;

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMmSetMapTagIdFlags.IC): CommonProto.NetMessage.MsgMmSetMapTagIdFlags.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgMmSetMapTagIdFlags.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMmSetMapTagIdFlags.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMmSetMapTagIdFlags.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMmSetMapTagIdFlags.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMmSetMapTagIdFlags.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMmSetMapTagIdFlags.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMmSetMapTagIdFlags.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMmSetMapTagIdFlags.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S mapId */
                mapId?: (number|null);

                /** S mapTagIdFlags */
                mapTagIdFlags?: (number|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMmSetMapTagIdFlags.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S mapId. */
                public mapId: number;

                /** S mapTagIdFlags. */
                public mapTagIdFlags: number;

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMmSetMapTagIdFlags.IS): CommonProto.NetMessage.MsgMmSetMapTagIdFlags.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgMmSetMapTagIdFlags.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMmSetMapTagIdFlags.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMmSetMapTagIdFlags.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMmSetMapTagIdFlags.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMmSetMapTagIdFlags.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMmSetMapTagIdFlags.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMmSetMapTagIdFlags.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMmSetMapTagIdFlags.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgMmSetMapName. */
        interface IMsgMmSetMapName {

            /** MsgMmSetMapName c */
            c?: (CommonProto.NetMessage.MsgMmSetMapName.IC|null);

            /** MsgMmSetMapName s */
            s?: (CommonProto.NetMessage.MsgMmSetMapName.IS|null);
        }

        /** Represents a MsgMmSetMapName. */
        class MsgMmSetMapName implements IMsgMmSetMapName {

            /**
             * Constructs a new MsgMmSetMapName.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgMmSetMapName);

            /** MsgMmSetMapName c. */
            public c?: (CommonProto.NetMessage.MsgMmSetMapName.IC|null);

            /** MsgMmSetMapName s. */
            public s?: (CommonProto.NetMessage.MsgMmSetMapName.IS|null);

            /**
             * Creates a new MsgMmSetMapName instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgMmSetMapName instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgMmSetMapName): CommonProto.NetMessage.MsgMmSetMapName;

            /**
             * Encodes the specified MsgMmSetMapName message. Does not implicitly {@link CommonProto.NetMessage.MsgMmSetMapName.verify|verify} messages.
             * @param message MsgMmSetMapName message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgMmSetMapName, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgMmSetMapName message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMmSetMapName.verify|verify} messages.
             * @param message MsgMmSetMapName message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgMmSetMapName, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgMmSetMapName message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgMmSetMapName
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMmSetMapName;

            /**
             * Decodes a MsgMmSetMapName message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgMmSetMapName
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMmSetMapName;

            /**
             * Verifies a MsgMmSetMapName message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgMmSetMapName message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgMmSetMapName
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMmSetMapName;

            /**
             * Creates a plain object from a MsgMmSetMapName message. Also converts values to other types if specified.
             * @param message MsgMmSetMapName
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgMmSetMapName, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgMmSetMapName to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgMmSetMapName {

            /** Properties of a C. */
            interface IC {

                /** C mapId */
                mapId?: (number|null);

                /** C mapNameArray */
                mapNameArray?: (CommonProto.Structure.ILanguageText[]|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMmSetMapName.IC);

                /** C mapId. */
                public mapId: number;

                /** C mapNameArray. */
                public mapNameArray: CommonProto.Structure.ILanguageText[];

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMmSetMapName.IC): CommonProto.NetMessage.MsgMmSetMapName.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgMmSetMapName.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMmSetMapName.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMmSetMapName.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMmSetMapName.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMmSetMapName.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMmSetMapName.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMmSetMapName.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMmSetMapName.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S mapId */
                mapId?: (number|null);

                /** S mapNameArray */
                mapNameArray?: (CommonProto.Structure.ILanguageText[]|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMmSetMapName.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S mapId. */
                public mapId: number;

                /** S mapNameArray. */
                public mapNameArray: CommonProto.Structure.ILanguageText[];

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMmSetMapName.IS): CommonProto.NetMessage.MsgMmSetMapName.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgMmSetMapName.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMmSetMapName.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMmSetMapName.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMmSetMapName.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMmSetMapName.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMmSetMapName.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMmSetMapName.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMmSetMapName.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgMmAddWarRule. */
        interface IMsgMmAddWarRule {

            /** MsgMmAddWarRule c */
            c?: (CommonProto.NetMessage.MsgMmAddWarRule.IC|null);

            /** MsgMmAddWarRule s */
            s?: (CommonProto.NetMessage.MsgMmAddWarRule.IS|null);
        }

        /** Represents a MsgMmAddWarRule. */
        class MsgMmAddWarRule implements IMsgMmAddWarRule {

            /**
             * Constructs a new MsgMmAddWarRule.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgMmAddWarRule);

            /** MsgMmAddWarRule c. */
            public c?: (CommonProto.NetMessage.MsgMmAddWarRule.IC|null);

            /** MsgMmAddWarRule s. */
            public s?: (CommonProto.NetMessage.MsgMmAddWarRule.IS|null);

            /**
             * Creates a new MsgMmAddWarRule instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgMmAddWarRule instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgMmAddWarRule): CommonProto.NetMessage.MsgMmAddWarRule;

            /**
             * Encodes the specified MsgMmAddWarRule message. Does not implicitly {@link CommonProto.NetMessage.MsgMmAddWarRule.verify|verify} messages.
             * @param message MsgMmAddWarRule message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgMmAddWarRule, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgMmAddWarRule message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMmAddWarRule.verify|verify} messages.
             * @param message MsgMmAddWarRule message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgMmAddWarRule, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgMmAddWarRule message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgMmAddWarRule
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMmAddWarRule;

            /**
             * Decodes a MsgMmAddWarRule message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgMmAddWarRule
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMmAddWarRule;

            /**
             * Verifies a MsgMmAddWarRule message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgMmAddWarRule message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgMmAddWarRule
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMmAddWarRule;

            /**
             * Creates a plain object from a MsgMmAddWarRule message. Also converts values to other types if specified.
             * @param message MsgMmAddWarRule
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgMmAddWarRule, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgMmAddWarRule to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgMmAddWarRule {

            /** Properties of a C. */
            interface IC {

                /** C mapId */
                mapId?: (number|null);

                /** C templateWarRule */
                templateWarRule?: (CommonProto.WarRule.ITemplateWarRule|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMmAddWarRule.IC);

                /** C mapId. */
                public mapId: number;

                /** C templateWarRule. */
                public templateWarRule?: (CommonProto.WarRule.ITemplateWarRule|null);

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMmAddWarRule.IC): CommonProto.NetMessage.MsgMmAddWarRule.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgMmAddWarRule.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMmAddWarRule.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMmAddWarRule.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMmAddWarRule.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMmAddWarRule.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMmAddWarRule.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMmAddWarRule.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMmAddWarRule.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S mapId */
                mapId?: (number|null);

                /** S templateWarRule */
                templateWarRule?: (CommonProto.WarRule.ITemplateWarRule|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMmAddWarRule.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S mapId. */
                public mapId: number;

                /** S templateWarRule. */
                public templateWarRule?: (CommonProto.WarRule.ITemplateWarRule|null);

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMmAddWarRule.IS): CommonProto.NetMessage.MsgMmAddWarRule.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgMmAddWarRule.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMmAddWarRule.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMmAddWarRule.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMmAddWarRule.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMmAddWarRule.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMmAddWarRule.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMmAddWarRule.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMmAddWarRule.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgMmDeleteWarRule. */
        interface IMsgMmDeleteWarRule {

            /** MsgMmDeleteWarRule c */
            c?: (CommonProto.NetMessage.MsgMmDeleteWarRule.IC|null);

            /** MsgMmDeleteWarRule s */
            s?: (CommonProto.NetMessage.MsgMmDeleteWarRule.IS|null);
        }

        /** Represents a MsgMmDeleteWarRule. */
        class MsgMmDeleteWarRule implements IMsgMmDeleteWarRule {

            /**
             * Constructs a new MsgMmDeleteWarRule.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgMmDeleteWarRule);

            /** MsgMmDeleteWarRule c. */
            public c?: (CommonProto.NetMessage.MsgMmDeleteWarRule.IC|null);

            /** MsgMmDeleteWarRule s. */
            public s?: (CommonProto.NetMessage.MsgMmDeleteWarRule.IS|null);

            /**
             * Creates a new MsgMmDeleteWarRule instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgMmDeleteWarRule instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgMmDeleteWarRule): CommonProto.NetMessage.MsgMmDeleteWarRule;

            /**
             * Encodes the specified MsgMmDeleteWarRule message. Does not implicitly {@link CommonProto.NetMessage.MsgMmDeleteWarRule.verify|verify} messages.
             * @param message MsgMmDeleteWarRule message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgMmDeleteWarRule, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgMmDeleteWarRule message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMmDeleteWarRule.verify|verify} messages.
             * @param message MsgMmDeleteWarRule message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgMmDeleteWarRule, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgMmDeleteWarRule message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgMmDeleteWarRule
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMmDeleteWarRule;

            /**
             * Decodes a MsgMmDeleteWarRule message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgMmDeleteWarRule
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMmDeleteWarRule;

            /**
             * Verifies a MsgMmDeleteWarRule message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgMmDeleteWarRule message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgMmDeleteWarRule
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMmDeleteWarRule;

            /**
             * Creates a plain object from a MsgMmDeleteWarRule message. Also converts values to other types if specified.
             * @param message MsgMmDeleteWarRule
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgMmDeleteWarRule, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgMmDeleteWarRule to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgMmDeleteWarRule {

            /** Properties of a C. */
            interface IC {

                /** C mapId */
                mapId?: (number|null);

                /** C ruleId */
                ruleId?: (number|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMmDeleteWarRule.IC);

                /** C mapId. */
                public mapId: number;

                /** C ruleId. */
                public ruleId: number;

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMmDeleteWarRule.IC): CommonProto.NetMessage.MsgMmDeleteWarRule.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgMmDeleteWarRule.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMmDeleteWarRule.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMmDeleteWarRule.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMmDeleteWarRule.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMmDeleteWarRule.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMmDeleteWarRule.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMmDeleteWarRule.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMmDeleteWarRule.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S mapId */
                mapId?: (number|null);

                /** S ruleId */
                ruleId?: (number|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMmDeleteWarRule.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S mapId. */
                public mapId: number;

                /** S ruleId. */
                public ruleId: number;

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMmDeleteWarRule.IS): CommonProto.NetMessage.MsgMmDeleteWarRule.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgMmDeleteWarRule.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMmDeleteWarRule.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMmDeleteWarRule.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMmDeleteWarRule.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMmDeleteWarRule.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMmDeleteWarRule.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMmDeleteWarRule.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMmDeleteWarRule.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgMmSetWarRuleName. */
        interface IMsgMmSetWarRuleName {

            /** MsgMmSetWarRuleName c */
            c?: (CommonProto.NetMessage.MsgMmSetWarRuleName.IC|null);

            /** MsgMmSetWarRuleName s */
            s?: (CommonProto.NetMessage.MsgMmSetWarRuleName.IS|null);
        }

        /** Represents a MsgMmSetWarRuleName. */
        class MsgMmSetWarRuleName implements IMsgMmSetWarRuleName {

            /**
             * Constructs a new MsgMmSetWarRuleName.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgMmSetWarRuleName);

            /** MsgMmSetWarRuleName c. */
            public c?: (CommonProto.NetMessage.MsgMmSetWarRuleName.IC|null);

            /** MsgMmSetWarRuleName s. */
            public s?: (CommonProto.NetMessage.MsgMmSetWarRuleName.IS|null);

            /**
             * Creates a new MsgMmSetWarRuleName instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgMmSetWarRuleName instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgMmSetWarRuleName): CommonProto.NetMessage.MsgMmSetWarRuleName;

            /**
             * Encodes the specified MsgMmSetWarRuleName message. Does not implicitly {@link CommonProto.NetMessage.MsgMmSetWarRuleName.verify|verify} messages.
             * @param message MsgMmSetWarRuleName message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgMmSetWarRuleName, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgMmSetWarRuleName message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMmSetWarRuleName.verify|verify} messages.
             * @param message MsgMmSetWarRuleName message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgMmSetWarRuleName, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgMmSetWarRuleName message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgMmSetWarRuleName
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMmSetWarRuleName;

            /**
             * Decodes a MsgMmSetWarRuleName message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgMmSetWarRuleName
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMmSetWarRuleName;

            /**
             * Verifies a MsgMmSetWarRuleName message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgMmSetWarRuleName message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgMmSetWarRuleName
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMmSetWarRuleName;

            /**
             * Creates a plain object from a MsgMmSetWarRuleName message. Also converts values to other types if specified.
             * @param message MsgMmSetWarRuleName
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgMmSetWarRuleName, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgMmSetWarRuleName to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgMmSetWarRuleName {

            /** Properties of a C. */
            interface IC {

                /** C mapId */
                mapId?: (number|null);

                /** C ruleId */
                ruleId?: (number|null);

                /** C ruleNameArray */
                ruleNameArray?: (CommonProto.Structure.ILanguageText[]|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMmSetWarRuleName.IC);

                /** C mapId. */
                public mapId: number;

                /** C ruleId. */
                public ruleId: number;

                /** C ruleNameArray. */
                public ruleNameArray: CommonProto.Structure.ILanguageText[];

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMmSetWarRuleName.IC): CommonProto.NetMessage.MsgMmSetWarRuleName.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgMmSetWarRuleName.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMmSetWarRuleName.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMmSetWarRuleName.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMmSetWarRuleName.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMmSetWarRuleName.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMmSetWarRuleName.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMmSetWarRuleName.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMmSetWarRuleName.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S mapId */
                mapId?: (number|null);

                /** S ruleId */
                ruleId?: (number|null);

                /** S ruleNameArray */
                ruleNameArray?: (CommonProto.Structure.ILanguageText[]|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMmSetWarRuleName.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S mapId. */
                public mapId: number;

                /** S ruleId. */
                public ruleId: number;

                /** S ruleNameArray. */
                public ruleNameArray: CommonProto.Structure.ILanguageText[];

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMmSetWarRuleName.IS): CommonProto.NetMessage.MsgMmSetWarRuleName.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgMmSetWarRuleName.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMmSetWarRuleName.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMmSetWarRuleName.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMmSetWarRuleName.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMmSetWarRuleName.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMmSetWarRuleName.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMmSetWarRuleName.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMmSetWarRuleName.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgMmSetMapTagSingleData. */
        interface IMsgMmSetMapTagSingleData {

            /** MsgMmSetMapTagSingleData c */
            c?: (CommonProto.NetMessage.MsgMmSetMapTagSingleData.IC|null);

            /** MsgMmSetMapTagSingleData s */
            s?: (CommonProto.NetMessage.MsgMmSetMapTagSingleData.IS|null);
        }

        /** Represents a MsgMmSetMapTagSingleData. */
        class MsgMmSetMapTagSingleData implements IMsgMmSetMapTagSingleData {

            /**
             * Constructs a new MsgMmSetMapTagSingleData.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgMmSetMapTagSingleData);

            /** MsgMmSetMapTagSingleData c. */
            public c?: (CommonProto.NetMessage.MsgMmSetMapTagSingleData.IC|null);

            /** MsgMmSetMapTagSingleData s. */
            public s?: (CommonProto.NetMessage.MsgMmSetMapTagSingleData.IS|null);

            /**
             * Creates a new MsgMmSetMapTagSingleData instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgMmSetMapTagSingleData instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgMmSetMapTagSingleData): CommonProto.NetMessage.MsgMmSetMapTagSingleData;

            /**
             * Encodes the specified MsgMmSetMapTagSingleData message. Does not implicitly {@link CommonProto.NetMessage.MsgMmSetMapTagSingleData.verify|verify} messages.
             * @param message MsgMmSetMapTagSingleData message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgMmSetMapTagSingleData, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgMmSetMapTagSingleData message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMmSetMapTagSingleData.verify|verify} messages.
             * @param message MsgMmSetMapTagSingleData message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgMmSetMapTagSingleData, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgMmSetMapTagSingleData message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgMmSetMapTagSingleData
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMmSetMapTagSingleData;

            /**
             * Decodes a MsgMmSetMapTagSingleData message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgMmSetMapTagSingleData
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMmSetMapTagSingleData;

            /**
             * Verifies a MsgMmSetMapTagSingleData message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgMmSetMapTagSingleData message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgMmSetMapTagSingleData
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMmSetMapTagSingleData;

            /**
             * Creates a plain object from a MsgMmSetMapTagSingleData message. Also converts values to other types if specified.
             * @param message MsgMmSetMapTagSingleData
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgMmSetMapTagSingleData, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgMmSetMapTagSingleData to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgMmSetMapTagSingleData {

            /** Properties of a C. */
            interface IC {

                /** C data */
                data?: (CommonProto.Map.MapTag.IMapTagSingleData|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMmSetMapTagSingleData.IC);

                /** C data. */
                public data?: (CommonProto.Map.MapTag.IMapTagSingleData|null);

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMmSetMapTagSingleData.IC): CommonProto.NetMessage.MsgMmSetMapTagSingleData.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgMmSetMapTagSingleData.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMmSetMapTagSingleData.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMmSetMapTagSingleData.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMmSetMapTagSingleData.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMmSetMapTagSingleData.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMmSetMapTagSingleData.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMmSetMapTagSingleData.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMmSetMapTagSingleData.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S data */
                data?: (CommonProto.Map.MapTag.IMapTagSingleData|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMmSetMapTagSingleData.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S data. */
                public data?: (CommonProto.Map.MapTag.IMapTagSingleData|null);

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMmSetMapTagSingleData.IS): CommonProto.NetMessage.MsgMmSetMapTagSingleData.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgMmSetMapTagSingleData.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMmSetMapTagSingleData.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMmSetMapTagSingleData.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMmSetMapTagSingleData.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMmSetMapTagSingleData.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMmSetMapTagSingleData.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMmSetMapTagSingleData.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMmSetMapTagSingleData.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgReplaySetSelfRating. */
        interface IMsgReplaySetSelfRating {

            /** MsgReplaySetSelfRating c */
            c?: (CommonProto.NetMessage.MsgReplaySetSelfRating.IC|null);

            /** MsgReplaySetSelfRating s */
            s?: (CommonProto.NetMessage.MsgReplaySetSelfRating.IS|null);
        }

        /** Represents a MsgReplaySetSelfRating. */
        class MsgReplaySetSelfRating implements IMsgReplaySetSelfRating {

            /**
             * Constructs a new MsgReplaySetSelfRating.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgReplaySetSelfRating);

            /** MsgReplaySetSelfRating c. */
            public c?: (CommonProto.NetMessage.MsgReplaySetSelfRating.IC|null);

            /** MsgReplaySetSelfRating s. */
            public s?: (CommonProto.NetMessage.MsgReplaySetSelfRating.IS|null);

            /**
             * Creates a new MsgReplaySetSelfRating instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgReplaySetSelfRating instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgReplaySetSelfRating): CommonProto.NetMessage.MsgReplaySetSelfRating;

            /**
             * Encodes the specified MsgReplaySetSelfRating message. Does not implicitly {@link CommonProto.NetMessage.MsgReplaySetSelfRating.verify|verify} messages.
             * @param message MsgReplaySetSelfRating message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgReplaySetSelfRating, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgReplaySetSelfRating message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgReplaySetSelfRating.verify|verify} messages.
             * @param message MsgReplaySetSelfRating message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgReplaySetSelfRating, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgReplaySetSelfRating message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgReplaySetSelfRating
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgReplaySetSelfRating;

            /**
             * Decodes a MsgReplaySetSelfRating message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgReplaySetSelfRating
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgReplaySetSelfRating;

            /**
             * Verifies a MsgReplaySetSelfRating message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgReplaySetSelfRating message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgReplaySetSelfRating
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgReplaySetSelfRating;

            /**
             * Creates a plain object from a MsgReplaySetSelfRating message. Also converts values to other types if specified.
             * @param message MsgReplaySetSelfRating
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgReplaySetSelfRating, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgReplaySetSelfRating to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgReplaySetSelfRating {

            /** Properties of a C. */
            interface IC {

                /** C replayId */
                replayId?: (number|null);

                /** C rating */
                rating?: (number|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgReplaySetSelfRating.IC);

                /** C replayId. */
                public replayId: number;

                /** C rating. */
                public rating: number;

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgReplaySetSelfRating.IC): CommonProto.NetMessage.MsgReplaySetSelfRating.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgReplaySetSelfRating.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgReplaySetSelfRating.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgReplaySetSelfRating.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgReplaySetSelfRating.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgReplaySetSelfRating.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgReplaySetSelfRating.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgReplaySetSelfRating.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgReplaySetSelfRating.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S replayId */
                replayId?: (number|null);

                /** S rating */
                rating?: (number|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgReplaySetSelfRating.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S replayId. */
                public replayId: number;

                /** S rating. */
                public rating: number;

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgReplaySetSelfRating.IS): CommonProto.NetMessage.MsgReplaySetSelfRating.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgReplaySetSelfRating.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgReplaySetSelfRating.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgReplaySetSelfRating.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgReplaySetSelfRating.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgReplaySetSelfRating.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgReplaySetSelfRating.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgReplaySetSelfRating.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgReplaySetSelfRating.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgReplayGetSelfRating. */
        interface IMsgReplayGetSelfRating {

            /** MsgReplayGetSelfRating c */
            c?: (CommonProto.NetMessage.MsgReplayGetSelfRating.IC|null);

            /** MsgReplayGetSelfRating s */
            s?: (CommonProto.NetMessage.MsgReplayGetSelfRating.IS|null);
        }

        /** Represents a MsgReplayGetSelfRating. */
        class MsgReplayGetSelfRating implements IMsgReplayGetSelfRating {

            /**
             * Constructs a new MsgReplayGetSelfRating.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgReplayGetSelfRating);

            /** MsgReplayGetSelfRating c. */
            public c?: (CommonProto.NetMessage.MsgReplayGetSelfRating.IC|null);

            /** MsgReplayGetSelfRating s. */
            public s?: (CommonProto.NetMessage.MsgReplayGetSelfRating.IS|null);

            /**
             * Creates a new MsgReplayGetSelfRating instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgReplayGetSelfRating instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgReplayGetSelfRating): CommonProto.NetMessage.MsgReplayGetSelfRating;

            /**
             * Encodes the specified MsgReplayGetSelfRating message. Does not implicitly {@link CommonProto.NetMessage.MsgReplayGetSelfRating.verify|verify} messages.
             * @param message MsgReplayGetSelfRating message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgReplayGetSelfRating, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgReplayGetSelfRating message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgReplayGetSelfRating.verify|verify} messages.
             * @param message MsgReplayGetSelfRating message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgReplayGetSelfRating, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgReplayGetSelfRating message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgReplayGetSelfRating
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgReplayGetSelfRating;

            /**
             * Decodes a MsgReplayGetSelfRating message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgReplayGetSelfRating
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgReplayGetSelfRating;

            /**
             * Verifies a MsgReplayGetSelfRating message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgReplayGetSelfRating message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgReplayGetSelfRating
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgReplayGetSelfRating;

            /**
             * Creates a plain object from a MsgReplayGetSelfRating message. Also converts values to other types if specified.
             * @param message MsgReplayGetSelfRating
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgReplayGetSelfRating, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgReplayGetSelfRating to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgReplayGetSelfRating {

            /** Properties of a C. */
            interface IC {

                /** C replayId */
                replayId?: (number|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgReplayGetSelfRating.IC);

                /** C replayId. */
                public replayId: number;

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgReplayGetSelfRating.IC): CommonProto.NetMessage.MsgReplayGetSelfRating.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgReplayGetSelfRating.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgReplayGetSelfRating.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgReplayGetSelfRating.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgReplayGetSelfRating.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgReplayGetSelfRating.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgReplayGetSelfRating.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgReplayGetSelfRating.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgReplayGetSelfRating.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S replayId */
                replayId?: (number|null);

                /** S rating */
                rating?: (number|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgReplayGetSelfRating.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S replayId. */
                public replayId: number;

                /** S rating. */
                public rating: number;

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgReplayGetSelfRating.IS): CommonProto.NetMessage.MsgReplayGetSelfRating.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgReplayGetSelfRating.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgReplayGetSelfRating.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgReplayGetSelfRating.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgReplayGetSelfRating.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgReplayGetSelfRating.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgReplayGetSelfRating.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgReplayGetSelfRating.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgReplayGetSelfRating.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgReplayGetReplayIdArray. */
        interface IMsgReplayGetReplayIdArray {

            /** MsgReplayGetReplayIdArray c */
            c?: (CommonProto.NetMessage.MsgReplayGetReplayIdArray.IC|null);

            /** MsgReplayGetReplayIdArray s */
            s?: (CommonProto.NetMessage.MsgReplayGetReplayIdArray.IS|null);
        }

        /** Represents a MsgReplayGetReplayIdArray. */
        class MsgReplayGetReplayIdArray implements IMsgReplayGetReplayIdArray {

            /**
             * Constructs a new MsgReplayGetReplayIdArray.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgReplayGetReplayIdArray);

            /** MsgReplayGetReplayIdArray c. */
            public c?: (CommonProto.NetMessage.MsgReplayGetReplayIdArray.IC|null);

            /** MsgReplayGetReplayIdArray s. */
            public s?: (CommonProto.NetMessage.MsgReplayGetReplayIdArray.IS|null);

            /**
             * Creates a new MsgReplayGetReplayIdArray instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgReplayGetReplayIdArray instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgReplayGetReplayIdArray): CommonProto.NetMessage.MsgReplayGetReplayIdArray;

            /**
             * Encodes the specified MsgReplayGetReplayIdArray message. Does not implicitly {@link CommonProto.NetMessage.MsgReplayGetReplayIdArray.verify|verify} messages.
             * @param message MsgReplayGetReplayIdArray message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgReplayGetReplayIdArray, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgReplayGetReplayIdArray message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgReplayGetReplayIdArray.verify|verify} messages.
             * @param message MsgReplayGetReplayIdArray message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgReplayGetReplayIdArray, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgReplayGetReplayIdArray message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgReplayGetReplayIdArray
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgReplayGetReplayIdArray;

            /**
             * Decodes a MsgReplayGetReplayIdArray message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgReplayGetReplayIdArray
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgReplayGetReplayIdArray;

            /**
             * Verifies a MsgReplayGetReplayIdArray message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgReplayGetReplayIdArray message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgReplayGetReplayIdArray
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgReplayGetReplayIdArray;

            /**
             * Creates a plain object from a MsgReplayGetReplayIdArray message. Also converts values to other types if specified.
             * @param message MsgReplayGetReplayIdArray
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgReplayGetReplayIdArray, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgReplayGetReplayIdArray to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgReplayGetReplayIdArray {

            /** Properties of a C. */
            interface IC {

                /** C replayFilter */
                replayFilter?: (CommonProto.Replay.IReplayFilter|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgReplayGetReplayIdArray.IC);

                /** C replayFilter. */
                public replayFilter?: (CommonProto.Replay.IReplayFilter|null);

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgReplayGetReplayIdArray.IC): CommonProto.NetMessage.MsgReplayGetReplayIdArray.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgReplayGetReplayIdArray.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgReplayGetReplayIdArray.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgReplayGetReplayIdArray.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgReplayGetReplayIdArray.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgReplayGetReplayIdArray.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgReplayGetReplayIdArray.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgReplayGetReplayIdArray.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgReplayGetReplayIdArray.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S replayIdArray */
                replayIdArray?: (number[]|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgReplayGetReplayIdArray.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S replayIdArray. */
                public replayIdArray: number[];

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgReplayGetReplayIdArray.IS): CommonProto.NetMessage.MsgReplayGetReplayIdArray.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgReplayGetReplayIdArray.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgReplayGetReplayIdArray.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgReplayGetReplayIdArray.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgReplayGetReplayIdArray.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgReplayGetReplayIdArray.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgReplayGetReplayIdArray.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgReplayGetReplayIdArray.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgReplayGetReplayIdArray.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgReplayGetData. */
        interface IMsgReplayGetData {

            /** MsgReplayGetData c */
            c?: (CommonProto.NetMessage.MsgReplayGetData.IC|null);

            /** MsgReplayGetData s */
            s?: (CommonProto.NetMessage.MsgReplayGetData.IS|null);
        }

        /** Represents a MsgReplayGetData. */
        class MsgReplayGetData implements IMsgReplayGetData {

            /**
             * Constructs a new MsgReplayGetData.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgReplayGetData);

            /** MsgReplayGetData c. */
            public c?: (CommonProto.NetMessage.MsgReplayGetData.IC|null);

            /** MsgReplayGetData s. */
            public s?: (CommonProto.NetMessage.MsgReplayGetData.IS|null);

            /**
             * Creates a new MsgReplayGetData instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgReplayGetData instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgReplayGetData): CommonProto.NetMessage.MsgReplayGetData;

            /**
             * Encodes the specified MsgReplayGetData message. Does not implicitly {@link CommonProto.NetMessage.MsgReplayGetData.verify|verify} messages.
             * @param message MsgReplayGetData message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgReplayGetData, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgReplayGetData message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgReplayGetData.verify|verify} messages.
             * @param message MsgReplayGetData message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgReplayGetData, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgReplayGetData message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgReplayGetData
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgReplayGetData;

            /**
             * Decodes a MsgReplayGetData message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgReplayGetData
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgReplayGetData;

            /**
             * Verifies a MsgReplayGetData message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgReplayGetData message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgReplayGetData
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgReplayGetData;

            /**
             * Creates a plain object from a MsgReplayGetData message. Also converts values to other types if specified.
             * @param message MsgReplayGetData
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgReplayGetData, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgReplayGetData to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgReplayGetData {

            /** Properties of a C. */
            interface IC {

                /** C replayId */
                replayId?: (number|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgReplayGetData.IC);

                /** C replayId. */
                public replayId: number;

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgReplayGetData.IC): CommonProto.NetMessage.MsgReplayGetData.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgReplayGetData.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgReplayGetData.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgReplayGetData.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgReplayGetData.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgReplayGetData.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgReplayGetData.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgReplayGetData.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgReplayGetData.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S replayId */
                replayId?: (number|null);

                /** S encodedWar */
                encodedWar?: (Uint8Array|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgReplayGetData.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S replayId. */
                public replayId: number;

                /** S encodedWar. */
                public encodedWar: Uint8Array;

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgReplayGetData.IS): CommonProto.NetMessage.MsgReplayGetData.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgReplayGetData.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgReplayGetData.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgReplayGetData.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgReplayGetData.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgReplayGetData.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgReplayGetData.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgReplayGetData.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgReplayGetData.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgReplayGetReplayInfo. */
        interface IMsgReplayGetReplayInfo {

            /** MsgReplayGetReplayInfo c */
            c?: (CommonProto.NetMessage.MsgReplayGetReplayInfo.IC|null);

            /** MsgReplayGetReplayInfo s */
            s?: (CommonProto.NetMessage.MsgReplayGetReplayInfo.IS|null);
        }

        /** Represents a MsgReplayGetReplayInfo. */
        class MsgReplayGetReplayInfo implements IMsgReplayGetReplayInfo {

            /**
             * Constructs a new MsgReplayGetReplayInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgReplayGetReplayInfo);

            /** MsgReplayGetReplayInfo c. */
            public c?: (CommonProto.NetMessage.MsgReplayGetReplayInfo.IC|null);

            /** MsgReplayGetReplayInfo s. */
            public s?: (CommonProto.NetMessage.MsgReplayGetReplayInfo.IS|null);

            /**
             * Creates a new MsgReplayGetReplayInfo instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgReplayGetReplayInfo instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgReplayGetReplayInfo): CommonProto.NetMessage.MsgReplayGetReplayInfo;

            /**
             * Encodes the specified MsgReplayGetReplayInfo message. Does not implicitly {@link CommonProto.NetMessage.MsgReplayGetReplayInfo.verify|verify} messages.
             * @param message MsgReplayGetReplayInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgReplayGetReplayInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgReplayGetReplayInfo message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgReplayGetReplayInfo.verify|verify} messages.
             * @param message MsgReplayGetReplayInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgReplayGetReplayInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgReplayGetReplayInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgReplayGetReplayInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgReplayGetReplayInfo;

            /**
             * Decodes a MsgReplayGetReplayInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgReplayGetReplayInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgReplayGetReplayInfo;

            /**
             * Verifies a MsgReplayGetReplayInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgReplayGetReplayInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgReplayGetReplayInfo
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgReplayGetReplayInfo;

            /**
             * Creates a plain object from a MsgReplayGetReplayInfo message. Also converts values to other types if specified.
             * @param message MsgReplayGetReplayInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgReplayGetReplayInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgReplayGetReplayInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgReplayGetReplayInfo {

            /** Properties of a C. */
            interface IC {

                /** C replayId */
                replayId?: (number|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgReplayGetReplayInfo.IC);

                /** C replayId. */
                public replayId: number;

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgReplayGetReplayInfo.IC): CommonProto.NetMessage.MsgReplayGetReplayInfo.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgReplayGetReplayInfo.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgReplayGetReplayInfo.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgReplayGetReplayInfo.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgReplayGetReplayInfo.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgReplayGetReplayInfo.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgReplayGetReplayInfo.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgReplayGetReplayInfo.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgReplayGetReplayInfo.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S replayId */
                replayId?: (number|null);

                /** S replayInfo */
                replayInfo?: (CommonProto.Replay.IReplayInfo|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgReplayGetReplayInfo.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S replayId. */
                public replayId: number;

                /** S replayInfo. */
                public replayInfo?: (CommonProto.Replay.IReplayInfo|null);

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgReplayGetReplayInfo.IS): CommonProto.NetMessage.MsgReplayGetReplayInfo.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgReplayGetReplayInfo.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgReplayGetReplayInfo.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgReplayGetReplayInfo.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgReplayGetReplayInfo.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgReplayGetReplayInfo.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgReplayGetReplayInfo.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgReplayGetReplayInfo.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgReplayGetReplayInfo.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgMcrCreateRoom. */
        interface IMsgMcrCreateRoom {

            /** MsgMcrCreateRoom c */
            c?: (CommonProto.NetMessage.MsgMcrCreateRoom.IC|null);

            /** MsgMcrCreateRoom s */
            s?: (CommonProto.NetMessage.MsgMcrCreateRoom.IS|null);
        }

        /** Represents a MsgMcrCreateRoom. */
        class MsgMcrCreateRoom implements IMsgMcrCreateRoom {

            /**
             * Constructs a new MsgMcrCreateRoom.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgMcrCreateRoom);

            /** MsgMcrCreateRoom c. */
            public c?: (CommonProto.NetMessage.MsgMcrCreateRoom.IC|null);

            /** MsgMcrCreateRoom s. */
            public s?: (CommonProto.NetMessage.MsgMcrCreateRoom.IS|null);

            /**
             * Creates a new MsgMcrCreateRoom instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgMcrCreateRoom instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgMcrCreateRoom): CommonProto.NetMessage.MsgMcrCreateRoom;

            /**
             * Encodes the specified MsgMcrCreateRoom message. Does not implicitly {@link CommonProto.NetMessage.MsgMcrCreateRoom.verify|verify} messages.
             * @param message MsgMcrCreateRoom message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgMcrCreateRoom, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgMcrCreateRoom message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMcrCreateRoom.verify|verify} messages.
             * @param message MsgMcrCreateRoom message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgMcrCreateRoom, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgMcrCreateRoom message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgMcrCreateRoom
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMcrCreateRoom;

            /**
             * Decodes a MsgMcrCreateRoom message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgMcrCreateRoom
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMcrCreateRoom;

            /**
             * Verifies a MsgMcrCreateRoom message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgMcrCreateRoom message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgMcrCreateRoom
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMcrCreateRoom;

            /**
             * Creates a plain object from a MsgMcrCreateRoom message. Also converts values to other types if specified.
             * @param message MsgMcrCreateRoom
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgMcrCreateRoom, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgMcrCreateRoom to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgMcrCreateRoom {

            /** Properties of a C. */
            interface IC {

                /** C settingsForCommon */
                settingsForCommon?: (CommonProto.WarSettings.ISettingsForCommon|null);

                /** C settingsForMcw */
                settingsForMcw?: (CommonProto.WarSettings.ISettingsForMcw|null);

                /** C selfPlayerIndex */
                selfPlayerIndex?: (number|null);

                /** C selfCoId */
                selfCoId?: (number|null);

                /** C selfUnitAndTileSkinId */
                selfUnitAndTileSkinId?: (number|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMcrCreateRoom.IC);

                /** C settingsForCommon. */
                public settingsForCommon?: (CommonProto.WarSettings.ISettingsForCommon|null);

                /** C settingsForMcw. */
                public settingsForMcw?: (CommonProto.WarSettings.ISettingsForMcw|null);

                /** C selfPlayerIndex. */
                public selfPlayerIndex: number;

                /** C selfCoId. */
                public selfCoId: number;

                /** C selfUnitAndTileSkinId. */
                public selfUnitAndTileSkinId: number;

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMcrCreateRoom.IC): CommonProto.NetMessage.MsgMcrCreateRoom.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgMcrCreateRoom.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMcrCreateRoom.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMcrCreateRoom.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMcrCreateRoom.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMcrCreateRoom.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMcrCreateRoom.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMcrCreateRoom.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMcrCreateRoom.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMcrCreateRoom.IS);

                /** S errorCode. */
                public errorCode: number;

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMcrCreateRoom.IS): CommonProto.NetMessage.MsgMcrCreateRoom.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgMcrCreateRoom.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMcrCreateRoom.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMcrCreateRoom.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMcrCreateRoom.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMcrCreateRoom.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMcrCreateRoom.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMcrCreateRoom.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMcrCreateRoom.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgMcrExitRoom. */
        interface IMsgMcrExitRoom {

            /** MsgMcrExitRoom c */
            c?: (CommonProto.NetMessage.MsgMcrExitRoom.IC|null);

            /** MsgMcrExitRoom s */
            s?: (CommonProto.NetMessage.MsgMcrExitRoom.IS|null);
        }

        /** Represents a MsgMcrExitRoom. */
        class MsgMcrExitRoom implements IMsgMcrExitRoom {

            /**
             * Constructs a new MsgMcrExitRoom.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgMcrExitRoom);

            /** MsgMcrExitRoom c. */
            public c?: (CommonProto.NetMessage.MsgMcrExitRoom.IC|null);

            /** MsgMcrExitRoom s. */
            public s?: (CommonProto.NetMessage.MsgMcrExitRoom.IS|null);

            /**
             * Creates a new MsgMcrExitRoom instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgMcrExitRoom instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgMcrExitRoom): CommonProto.NetMessage.MsgMcrExitRoom;

            /**
             * Encodes the specified MsgMcrExitRoom message. Does not implicitly {@link CommonProto.NetMessage.MsgMcrExitRoom.verify|verify} messages.
             * @param message MsgMcrExitRoom message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgMcrExitRoom, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgMcrExitRoom message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMcrExitRoom.verify|verify} messages.
             * @param message MsgMcrExitRoom message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgMcrExitRoom, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgMcrExitRoom message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgMcrExitRoom
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMcrExitRoom;

            /**
             * Decodes a MsgMcrExitRoom message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgMcrExitRoom
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMcrExitRoom;

            /**
             * Verifies a MsgMcrExitRoom message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgMcrExitRoom message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgMcrExitRoom
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMcrExitRoom;

            /**
             * Creates a plain object from a MsgMcrExitRoom message. Also converts values to other types if specified.
             * @param message MsgMcrExitRoom
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgMcrExitRoom, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgMcrExitRoom to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgMcrExitRoom {

            /** Properties of a C. */
            interface IC {

                /** C roomId */
                roomId?: (number|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMcrExitRoom.IC);

                /** C roomId. */
                public roomId: number;

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMcrExitRoom.IC): CommonProto.NetMessage.MsgMcrExitRoom.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgMcrExitRoom.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMcrExitRoom.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMcrExitRoom.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMcrExitRoom.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMcrExitRoom.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMcrExitRoom.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMcrExitRoom.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMcrExitRoom.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S roomId */
                roomId?: (number|null);

                /** S exitType */
                exitType?: (number|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMcrExitRoom.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S roomId. */
                public roomId: number;

                /** S exitType. */
                public exitType: number;

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMcrExitRoom.IS): CommonProto.NetMessage.MsgMcrExitRoom.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgMcrExitRoom.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMcrExitRoom.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMcrExitRoom.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMcrExitRoom.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMcrExitRoom.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMcrExitRoom.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMcrExitRoom.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMcrExitRoom.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgMcrGetRoomStaticInfo. */
        interface IMsgMcrGetRoomStaticInfo {

            /** MsgMcrGetRoomStaticInfo c */
            c?: (CommonProto.NetMessage.MsgMcrGetRoomStaticInfo.IC|null);

            /** MsgMcrGetRoomStaticInfo s */
            s?: (CommonProto.NetMessage.MsgMcrGetRoomStaticInfo.IS|null);
        }

        /** Represents a MsgMcrGetRoomStaticInfo. */
        class MsgMcrGetRoomStaticInfo implements IMsgMcrGetRoomStaticInfo {

            /**
             * Constructs a new MsgMcrGetRoomStaticInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgMcrGetRoomStaticInfo);

            /** MsgMcrGetRoomStaticInfo c. */
            public c?: (CommonProto.NetMessage.MsgMcrGetRoomStaticInfo.IC|null);

            /** MsgMcrGetRoomStaticInfo s. */
            public s?: (CommonProto.NetMessage.MsgMcrGetRoomStaticInfo.IS|null);

            /**
             * Creates a new MsgMcrGetRoomStaticInfo instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgMcrGetRoomStaticInfo instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgMcrGetRoomStaticInfo): CommonProto.NetMessage.MsgMcrGetRoomStaticInfo;

            /**
             * Encodes the specified MsgMcrGetRoomStaticInfo message. Does not implicitly {@link CommonProto.NetMessage.MsgMcrGetRoomStaticInfo.verify|verify} messages.
             * @param message MsgMcrGetRoomStaticInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgMcrGetRoomStaticInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgMcrGetRoomStaticInfo message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMcrGetRoomStaticInfo.verify|verify} messages.
             * @param message MsgMcrGetRoomStaticInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgMcrGetRoomStaticInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgMcrGetRoomStaticInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgMcrGetRoomStaticInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMcrGetRoomStaticInfo;

            /**
             * Decodes a MsgMcrGetRoomStaticInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgMcrGetRoomStaticInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMcrGetRoomStaticInfo;

            /**
             * Verifies a MsgMcrGetRoomStaticInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgMcrGetRoomStaticInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgMcrGetRoomStaticInfo
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMcrGetRoomStaticInfo;

            /**
             * Creates a plain object from a MsgMcrGetRoomStaticInfo message. Also converts values to other types if specified.
             * @param message MsgMcrGetRoomStaticInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgMcrGetRoomStaticInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgMcrGetRoomStaticInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgMcrGetRoomStaticInfo {

            /** Properties of a C. */
            interface IC {

                /** C roomId */
                roomId?: (number|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMcrGetRoomStaticInfo.IC);

                /** C roomId. */
                public roomId: number;

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMcrGetRoomStaticInfo.IC): CommonProto.NetMessage.MsgMcrGetRoomStaticInfo.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgMcrGetRoomStaticInfo.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMcrGetRoomStaticInfo.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMcrGetRoomStaticInfo.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMcrGetRoomStaticInfo.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMcrGetRoomStaticInfo.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMcrGetRoomStaticInfo.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMcrGetRoomStaticInfo.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMcrGetRoomStaticInfo.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S roomId */
                roomId?: (number|null);

                /** S roomStaticInfo */
                roomStaticInfo?: (CommonProto.MultiCustomRoom.IMcrRoomStaticInfo|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMcrGetRoomStaticInfo.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S roomId. */
                public roomId: number;

                /** S roomStaticInfo. */
                public roomStaticInfo?: (CommonProto.MultiCustomRoom.IMcrRoomStaticInfo|null);

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMcrGetRoomStaticInfo.IS): CommonProto.NetMessage.MsgMcrGetRoomStaticInfo.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgMcrGetRoomStaticInfo.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMcrGetRoomStaticInfo.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMcrGetRoomStaticInfo.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMcrGetRoomStaticInfo.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMcrGetRoomStaticInfo.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMcrGetRoomStaticInfo.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMcrGetRoomStaticInfo.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMcrGetRoomStaticInfo.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgMcrGetRoomPlayerInfo. */
        interface IMsgMcrGetRoomPlayerInfo {

            /** MsgMcrGetRoomPlayerInfo c */
            c?: (CommonProto.NetMessage.MsgMcrGetRoomPlayerInfo.IC|null);

            /** MsgMcrGetRoomPlayerInfo s */
            s?: (CommonProto.NetMessage.MsgMcrGetRoomPlayerInfo.IS|null);
        }

        /** Represents a MsgMcrGetRoomPlayerInfo. */
        class MsgMcrGetRoomPlayerInfo implements IMsgMcrGetRoomPlayerInfo {

            /**
             * Constructs a new MsgMcrGetRoomPlayerInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgMcrGetRoomPlayerInfo);

            /** MsgMcrGetRoomPlayerInfo c. */
            public c?: (CommonProto.NetMessage.MsgMcrGetRoomPlayerInfo.IC|null);

            /** MsgMcrGetRoomPlayerInfo s. */
            public s?: (CommonProto.NetMessage.MsgMcrGetRoomPlayerInfo.IS|null);

            /**
             * Creates a new MsgMcrGetRoomPlayerInfo instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgMcrGetRoomPlayerInfo instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgMcrGetRoomPlayerInfo): CommonProto.NetMessage.MsgMcrGetRoomPlayerInfo;

            /**
             * Encodes the specified MsgMcrGetRoomPlayerInfo message. Does not implicitly {@link CommonProto.NetMessage.MsgMcrGetRoomPlayerInfo.verify|verify} messages.
             * @param message MsgMcrGetRoomPlayerInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgMcrGetRoomPlayerInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgMcrGetRoomPlayerInfo message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMcrGetRoomPlayerInfo.verify|verify} messages.
             * @param message MsgMcrGetRoomPlayerInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgMcrGetRoomPlayerInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgMcrGetRoomPlayerInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgMcrGetRoomPlayerInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMcrGetRoomPlayerInfo;

            /**
             * Decodes a MsgMcrGetRoomPlayerInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgMcrGetRoomPlayerInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMcrGetRoomPlayerInfo;

            /**
             * Verifies a MsgMcrGetRoomPlayerInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgMcrGetRoomPlayerInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgMcrGetRoomPlayerInfo
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMcrGetRoomPlayerInfo;

            /**
             * Creates a plain object from a MsgMcrGetRoomPlayerInfo message. Also converts values to other types if specified.
             * @param message MsgMcrGetRoomPlayerInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgMcrGetRoomPlayerInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgMcrGetRoomPlayerInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgMcrGetRoomPlayerInfo {

            /** Properties of a C. */
            interface IC {

                /** C roomId */
                roomId?: (number|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMcrGetRoomPlayerInfo.IC);

                /** C roomId. */
                public roomId: number;

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMcrGetRoomPlayerInfo.IC): CommonProto.NetMessage.MsgMcrGetRoomPlayerInfo.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgMcrGetRoomPlayerInfo.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMcrGetRoomPlayerInfo.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMcrGetRoomPlayerInfo.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMcrGetRoomPlayerInfo.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMcrGetRoomPlayerInfo.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMcrGetRoomPlayerInfo.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMcrGetRoomPlayerInfo.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMcrGetRoomPlayerInfo.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S roomId */
                roomId?: (number|null);

                /** S roomPlayerInfo */
                roomPlayerInfo?: (CommonProto.MultiCustomRoom.IMcrRoomPlayerInfo|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMcrGetRoomPlayerInfo.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S roomId. */
                public roomId: number;

                /** S roomPlayerInfo. */
                public roomPlayerInfo?: (CommonProto.MultiCustomRoom.IMcrRoomPlayerInfo|null);

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMcrGetRoomPlayerInfo.IS): CommonProto.NetMessage.MsgMcrGetRoomPlayerInfo.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgMcrGetRoomPlayerInfo.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMcrGetRoomPlayerInfo.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMcrGetRoomPlayerInfo.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMcrGetRoomPlayerInfo.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMcrGetRoomPlayerInfo.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMcrGetRoomPlayerInfo.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMcrGetRoomPlayerInfo.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMcrGetRoomPlayerInfo.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgMcrJoinRoom. */
        interface IMsgMcrJoinRoom {

            /** MsgMcrJoinRoom c */
            c?: (CommonProto.NetMessage.MsgMcrJoinRoom.IC|null);

            /** MsgMcrJoinRoom s */
            s?: (CommonProto.NetMessage.MsgMcrJoinRoom.IS|null);
        }

        /** Represents a MsgMcrJoinRoom. */
        class MsgMcrJoinRoom implements IMsgMcrJoinRoom {

            /**
             * Constructs a new MsgMcrJoinRoom.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgMcrJoinRoom);

            /** MsgMcrJoinRoom c. */
            public c?: (CommonProto.NetMessage.MsgMcrJoinRoom.IC|null);

            /** MsgMcrJoinRoom s. */
            public s?: (CommonProto.NetMessage.MsgMcrJoinRoom.IS|null);

            /**
             * Creates a new MsgMcrJoinRoom instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgMcrJoinRoom instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgMcrJoinRoom): CommonProto.NetMessage.MsgMcrJoinRoom;

            /**
             * Encodes the specified MsgMcrJoinRoom message. Does not implicitly {@link CommonProto.NetMessage.MsgMcrJoinRoom.verify|verify} messages.
             * @param message MsgMcrJoinRoom message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgMcrJoinRoom, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgMcrJoinRoom message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMcrJoinRoom.verify|verify} messages.
             * @param message MsgMcrJoinRoom message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgMcrJoinRoom, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgMcrJoinRoom message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgMcrJoinRoom
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMcrJoinRoom;

            /**
             * Decodes a MsgMcrJoinRoom message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgMcrJoinRoom
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMcrJoinRoom;

            /**
             * Verifies a MsgMcrJoinRoom message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgMcrJoinRoom message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgMcrJoinRoom
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMcrJoinRoom;

            /**
             * Creates a plain object from a MsgMcrJoinRoom message. Also converts values to other types if specified.
             * @param message MsgMcrJoinRoom
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgMcrJoinRoom, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgMcrJoinRoom to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgMcrJoinRoom {

            /** Properties of a C. */
            interface IC {

                /** C roomId */
                roomId?: (number|null);

                /** C playerIndex */
                playerIndex?: (number|null);

                /** C coId */
                coId?: (number|null);

                /** C isReady */
                isReady?: (boolean|null);

                /** C unitAndTileSkinId */
                unitAndTileSkinId?: (number|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMcrJoinRoom.IC);

                /** C roomId. */
                public roomId: number;

                /** C playerIndex. */
                public playerIndex: number;

                /** C coId. */
                public coId: number;

                /** C isReady. */
                public isReady: boolean;

                /** C unitAndTileSkinId. */
                public unitAndTileSkinId: number;

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMcrJoinRoom.IC): CommonProto.NetMessage.MsgMcrJoinRoom.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgMcrJoinRoom.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMcrJoinRoom.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMcrJoinRoom.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMcrJoinRoom.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMcrJoinRoom.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMcrJoinRoom.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMcrJoinRoom.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMcrJoinRoom.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S roomId */
                roomId?: (number|null);

                /** S playerIndex */
                playerIndex?: (number|null);

                /** S coId */
                coId?: (number|null);

                /** S isReady */
                isReady?: (boolean|null);

                /** S unitAndTileSkinId */
                unitAndTileSkinId?: (number|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMcrJoinRoom.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S roomId. */
                public roomId: number;

                /** S playerIndex. */
                public playerIndex: number;

                /** S coId. */
                public coId: number;

                /** S isReady. */
                public isReady: boolean;

                /** S unitAndTileSkinId. */
                public unitAndTileSkinId: number;

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMcrJoinRoom.IS): CommonProto.NetMessage.MsgMcrJoinRoom.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgMcrJoinRoom.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMcrJoinRoom.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMcrJoinRoom.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMcrJoinRoom.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMcrJoinRoom.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMcrJoinRoom.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMcrJoinRoom.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMcrJoinRoom.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgMcrDeleteRoom. */
        interface IMsgMcrDeleteRoom {

            /** MsgMcrDeleteRoom c */
            c?: (CommonProto.NetMessage.MsgMcrDeleteRoom.IC|null);

            /** MsgMcrDeleteRoom s */
            s?: (CommonProto.NetMessage.MsgMcrDeleteRoom.IS|null);
        }

        /** Represents a MsgMcrDeleteRoom. */
        class MsgMcrDeleteRoom implements IMsgMcrDeleteRoom {

            /**
             * Constructs a new MsgMcrDeleteRoom.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgMcrDeleteRoom);

            /** MsgMcrDeleteRoom c. */
            public c?: (CommonProto.NetMessage.MsgMcrDeleteRoom.IC|null);

            /** MsgMcrDeleteRoom s. */
            public s?: (CommonProto.NetMessage.MsgMcrDeleteRoom.IS|null);

            /**
             * Creates a new MsgMcrDeleteRoom instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgMcrDeleteRoom instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgMcrDeleteRoom): CommonProto.NetMessage.MsgMcrDeleteRoom;

            /**
             * Encodes the specified MsgMcrDeleteRoom message. Does not implicitly {@link CommonProto.NetMessage.MsgMcrDeleteRoom.verify|verify} messages.
             * @param message MsgMcrDeleteRoom message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgMcrDeleteRoom, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgMcrDeleteRoom message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMcrDeleteRoom.verify|verify} messages.
             * @param message MsgMcrDeleteRoom message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgMcrDeleteRoom, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgMcrDeleteRoom message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgMcrDeleteRoom
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMcrDeleteRoom;

            /**
             * Decodes a MsgMcrDeleteRoom message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgMcrDeleteRoom
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMcrDeleteRoom;

            /**
             * Verifies a MsgMcrDeleteRoom message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgMcrDeleteRoom message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgMcrDeleteRoom
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMcrDeleteRoom;

            /**
             * Creates a plain object from a MsgMcrDeleteRoom message. Also converts values to other types if specified.
             * @param message MsgMcrDeleteRoom
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgMcrDeleteRoom, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgMcrDeleteRoom to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgMcrDeleteRoom {

            /** Properties of a C. */
            interface IC {

                /** C roomId */
                roomId?: (number|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMcrDeleteRoom.IC);

                /** C roomId. */
                public roomId: number;

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMcrDeleteRoom.IC): CommonProto.NetMessage.MsgMcrDeleteRoom.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgMcrDeleteRoom.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMcrDeleteRoom.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMcrDeleteRoom.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMcrDeleteRoom.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMcrDeleteRoom.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMcrDeleteRoom.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMcrDeleteRoom.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMcrDeleteRoom.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S roomId */
                roomId?: (number|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMcrDeleteRoom.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S roomId. */
                public roomId: number;

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMcrDeleteRoom.IS): CommonProto.NetMessage.MsgMcrDeleteRoom.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgMcrDeleteRoom.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMcrDeleteRoom.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMcrDeleteRoom.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMcrDeleteRoom.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMcrDeleteRoom.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMcrDeleteRoom.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMcrDeleteRoom.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMcrDeleteRoom.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgMcrSetReady. */
        interface IMsgMcrSetReady {

            /** MsgMcrSetReady c */
            c?: (CommonProto.NetMessage.MsgMcrSetReady.IC|null);

            /** MsgMcrSetReady s */
            s?: (CommonProto.NetMessage.MsgMcrSetReady.IS|null);
        }

        /** Represents a MsgMcrSetReady. */
        class MsgMcrSetReady implements IMsgMcrSetReady {

            /**
             * Constructs a new MsgMcrSetReady.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgMcrSetReady);

            /** MsgMcrSetReady c. */
            public c?: (CommonProto.NetMessage.MsgMcrSetReady.IC|null);

            /** MsgMcrSetReady s. */
            public s?: (CommonProto.NetMessage.MsgMcrSetReady.IS|null);

            /**
             * Creates a new MsgMcrSetReady instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgMcrSetReady instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgMcrSetReady): CommonProto.NetMessage.MsgMcrSetReady;

            /**
             * Encodes the specified MsgMcrSetReady message. Does not implicitly {@link CommonProto.NetMessage.MsgMcrSetReady.verify|verify} messages.
             * @param message MsgMcrSetReady message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgMcrSetReady, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgMcrSetReady message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMcrSetReady.verify|verify} messages.
             * @param message MsgMcrSetReady message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgMcrSetReady, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgMcrSetReady message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgMcrSetReady
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMcrSetReady;

            /**
             * Decodes a MsgMcrSetReady message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgMcrSetReady
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMcrSetReady;

            /**
             * Verifies a MsgMcrSetReady message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgMcrSetReady message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgMcrSetReady
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMcrSetReady;

            /**
             * Creates a plain object from a MsgMcrSetReady message. Also converts values to other types if specified.
             * @param message MsgMcrSetReady
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgMcrSetReady, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgMcrSetReady to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgMcrSetReady {

            /** Properties of a C. */
            interface IC {

                /** C roomId */
                roomId?: (number|null);

                /** C isReady */
                isReady?: (boolean|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMcrSetReady.IC);

                /** C roomId. */
                public roomId: number;

                /** C isReady. */
                public isReady: boolean;

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMcrSetReady.IC): CommonProto.NetMessage.MsgMcrSetReady.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgMcrSetReady.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMcrSetReady.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMcrSetReady.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMcrSetReady.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMcrSetReady.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMcrSetReady.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMcrSetReady.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMcrSetReady.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S roomId */
                roomId?: (number|null);

                /** S isReady */
                isReady?: (boolean|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMcrSetReady.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S roomId. */
                public roomId: number;

                /** S isReady. */
                public isReady: boolean;

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMcrSetReady.IS): CommonProto.NetMessage.MsgMcrSetReady.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgMcrSetReady.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMcrSetReady.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMcrSetReady.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMcrSetReady.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMcrSetReady.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMcrSetReady.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMcrSetReady.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMcrSetReady.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgMcrDeletePlayer. */
        interface IMsgMcrDeletePlayer {

            /** MsgMcrDeletePlayer c */
            c?: (CommonProto.NetMessage.MsgMcrDeletePlayer.IC|null);

            /** MsgMcrDeletePlayer s */
            s?: (CommonProto.NetMessage.MsgMcrDeletePlayer.IS|null);
        }

        /** Represents a MsgMcrDeletePlayer. */
        class MsgMcrDeletePlayer implements IMsgMcrDeletePlayer {

            /**
             * Constructs a new MsgMcrDeletePlayer.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgMcrDeletePlayer);

            /** MsgMcrDeletePlayer c. */
            public c?: (CommonProto.NetMessage.MsgMcrDeletePlayer.IC|null);

            /** MsgMcrDeletePlayer s. */
            public s?: (CommonProto.NetMessage.MsgMcrDeletePlayer.IS|null);

            /**
             * Creates a new MsgMcrDeletePlayer instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgMcrDeletePlayer instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgMcrDeletePlayer): CommonProto.NetMessage.MsgMcrDeletePlayer;

            /**
             * Encodes the specified MsgMcrDeletePlayer message. Does not implicitly {@link CommonProto.NetMessage.MsgMcrDeletePlayer.verify|verify} messages.
             * @param message MsgMcrDeletePlayer message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgMcrDeletePlayer, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgMcrDeletePlayer message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMcrDeletePlayer.verify|verify} messages.
             * @param message MsgMcrDeletePlayer message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgMcrDeletePlayer, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgMcrDeletePlayer message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgMcrDeletePlayer
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMcrDeletePlayer;

            /**
             * Decodes a MsgMcrDeletePlayer message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgMcrDeletePlayer
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMcrDeletePlayer;

            /**
             * Verifies a MsgMcrDeletePlayer message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgMcrDeletePlayer message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgMcrDeletePlayer
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMcrDeletePlayer;

            /**
             * Creates a plain object from a MsgMcrDeletePlayer message. Also converts values to other types if specified.
             * @param message MsgMcrDeletePlayer
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgMcrDeletePlayer, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgMcrDeletePlayer to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgMcrDeletePlayer {

            /** Properties of a C. */
            interface IC {

                /** C roomId */
                roomId?: (number|null);

                /** C playerIndex */
                playerIndex?: (number|null);

                /** C forbidReentrance */
                forbidReentrance?: (boolean|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMcrDeletePlayer.IC);

                /** C roomId. */
                public roomId: number;

                /** C playerIndex. */
                public playerIndex: number;

                /** C forbidReentrance. */
                public forbidReentrance: boolean;

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMcrDeletePlayer.IC): CommonProto.NetMessage.MsgMcrDeletePlayer.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgMcrDeletePlayer.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMcrDeletePlayer.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMcrDeletePlayer.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMcrDeletePlayer.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMcrDeletePlayer.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMcrDeletePlayer.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMcrDeletePlayer.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMcrDeletePlayer.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S roomId */
                roomId?: (number|null);

                /** S playerIndex */
                playerIndex?: (number|null);

                /** S forbidReentrance */
                forbidReentrance?: (boolean|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMcrDeletePlayer.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S roomId. */
                public roomId: number;

                /** S playerIndex. */
                public playerIndex: number;

                /** S forbidReentrance. */
                public forbidReentrance: boolean;

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMcrDeletePlayer.IS): CommonProto.NetMessage.MsgMcrDeletePlayer.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgMcrDeletePlayer.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMcrDeletePlayer.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMcrDeletePlayer.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMcrDeletePlayer.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMcrDeletePlayer.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMcrDeletePlayer.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMcrDeletePlayer.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMcrDeletePlayer.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgMcrSetSelfSettings. */
        interface IMsgMcrSetSelfSettings {

            /** MsgMcrSetSelfSettings c */
            c?: (CommonProto.NetMessage.MsgMcrSetSelfSettings.IC|null);

            /** MsgMcrSetSelfSettings s */
            s?: (CommonProto.NetMessage.MsgMcrSetSelfSettings.IS|null);
        }

        /** Represents a MsgMcrSetSelfSettings. */
        class MsgMcrSetSelfSettings implements IMsgMcrSetSelfSettings {

            /**
             * Constructs a new MsgMcrSetSelfSettings.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgMcrSetSelfSettings);

            /** MsgMcrSetSelfSettings c. */
            public c?: (CommonProto.NetMessage.MsgMcrSetSelfSettings.IC|null);

            /** MsgMcrSetSelfSettings s. */
            public s?: (CommonProto.NetMessage.MsgMcrSetSelfSettings.IS|null);

            /**
             * Creates a new MsgMcrSetSelfSettings instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgMcrSetSelfSettings instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgMcrSetSelfSettings): CommonProto.NetMessage.MsgMcrSetSelfSettings;

            /**
             * Encodes the specified MsgMcrSetSelfSettings message. Does not implicitly {@link CommonProto.NetMessage.MsgMcrSetSelfSettings.verify|verify} messages.
             * @param message MsgMcrSetSelfSettings message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgMcrSetSelfSettings, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgMcrSetSelfSettings message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMcrSetSelfSettings.verify|verify} messages.
             * @param message MsgMcrSetSelfSettings message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgMcrSetSelfSettings, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgMcrSetSelfSettings message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgMcrSetSelfSettings
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMcrSetSelfSettings;

            /**
             * Decodes a MsgMcrSetSelfSettings message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgMcrSetSelfSettings
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMcrSetSelfSettings;

            /**
             * Verifies a MsgMcrSetSelfSettings message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgMcrSetSelfSettings message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgMcrSetSelfSettings
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMcrSetSelfSettings;

            /**
             * Creates a plain object from a MsgMcrSetSelfSettings message. Also converts values to other types if specified.
             * @param message MsgMcrSetSelfSettings
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgMcrSetSelfSettings, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgMcrSetSelfSettings to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgMcrSetSelfSettings {

            /** Properties of a C. */
            interface IC {

                /** C roomId */
                roomId?: (number|null);

                /** C playerIndex */
                playerIndex?: (number|null);

                /** C coId */
                coId?: (number|null);

                /** C unitAndTileSkinId */
                unitAndTileSkinId?: (number|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMcrSetSelfSettings.IC);

                /** C roomId. */
                public roomId: number;

                /** C playerIndex. */
                public playerIndex: number;

                /** C coId. */
                public coId: number;

                /** C unitAndTileSkinId. */
                public unitAndTileSkinId: number;

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMcrSetSelfSettings.IC): CommonProto.NetMessage.MsgMcrSetSelfSettings.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgMcrSetSelfSettings.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMcrSetSelfSettings.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMcrSetSelfSettings.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMcrSetSelfSettings.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMcrSetSelfSettings.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMcrSetSelfSettings.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMcrSetSelfSettings.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMcrSetSelfSettings.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S roomId */
                roomId?: (number|null);

                /** S oldPlayerIndex */
                oldPlayerIndex?: (number|null);

                /** S newPlayerIndex */
                newPlayerIndex?: (number|null);

                /** S coId */
                coId?: (number|null);

                /** S unitAndTileSkinId */
                unitAndTileSkinId?: (number|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMcrSetSelfSettings.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S roomId. */
                public roomId: number;

                /** S oldPlayerIndex. */
                public oldPlayerIndex: number;

                /** S newPlayerIndex. */
                public newPlayerIndex: number;

                /** S coId. */
                public coId: number;

                /** S unitAndTileSkinId. */
                public unitAndTileSkinId: number;

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMcrSetSelfSettings.IS): CommonProto.NetMessage.MsgMcrSetSelfSettings.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgMcrSetSelfSettings.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMcrSetSelfSettings.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMcrSetSelfSettings.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMcrSetSelfSettings.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMcrSetSelfSettings.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMcrSetSelfSettings.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMcrSetSelfSettings.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMcrSetSelfSettings.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgMcrStartWar. */
        interface IMsgMcrStartWar {

            /** MsgMcrStartWar c */
            c?: (CommonProto.NetMessage.MsgMcrStartWar.IC|null);

            /** MsgMcrStartWar s */
            s?: (CommonProto.NetMessage.MsgMcrStartWar.IS|null);
        }

        /** Represents a MsgMcrStartWar. */
        class MsgMcrStartWar implements IMsgMcrStartWar {

            /**
             * Constructs a new MsgMcrStartWar.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgMcrStartWar);

            /** MsgMcrStartWar c. */
            public c?: (CommonProto.NetMessage.MsgMcrStartWar.IC|null);

            /** MsgMcrStartWar s. */
            public s?: (CommonProto.NetMessage.MsgMcrStartWar.IS|null);

            /**
             * Creates a new MsgMcrStartWar instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgMcrStartWar instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgMcrStartWar): CommonProto.NetMessage.MsgMcrStartWar;

            /**
             * Encodes the specified MsgMcrStartWar message. Does not implicitly {@link CommonProto.NetMessage.MsgMcrStartWar.verify|verify} messages.
             * @param message MsgMcrStartWar message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgMcrStartWar, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgMcrStartWar message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMcrStartWar.verify|verify} messages.
             * @param message MsgMcrStartWar message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgMcrStartWar, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgMcrStartWar message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgMcrStartWar
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMcrStartWar;

            /**
             * Decodes a MsgMcrStartWar message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgMcrStartWar
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMcrStartWar;

            /**
             * Verifies a MsgMcrStartWar message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgMcrStartWar message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgMcrStartWar
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMcrStartWar;

            /**
             * Creates a plain object from a MsgMcrStartWar message. Also converts values to other types if specified.
             * @param message MsgMcrStartWar
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgMcrStartWar, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgMcrStartWar to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgMcrStartWar {

            /** Properties of a C. */
            interface IC {

                /** C roomId */
                roomId?: (number|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMcrStartWar.IC);

                /** C roomId. */
                public roomId: number;

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMcrStartWar.IC): CommonProto.NetMessage.MsgMcrStartWar.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgMcrStartWar.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMcrStartWar.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMcrStartWar.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMcrStartWar.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMcrStartWar.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMcrStartWar.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMcrStartWar.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMcrStartWar.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S roomId */
                roomId?: (number|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMcrStartWar.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S roomId. */
                public roomId: number;

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMcrStartWar.IS): CommonProto.NetMessage.MsgMcrStartWar.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgMcrStartWar.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMcrStartWar.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMcrStartWar.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMcrStartWar.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMcrStartWar.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMcrStartWar.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMcrStartWar.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMcrStartWar.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgMpwCommonContinueWar. */
        interface IMsgMpwCommonContinueWar {

            /** MsgMpwCommonContinueWar c */
            c?: (CommonProto.NetMessage.MsgMpwCommonContinueWar.IC|null);

            /** MsgMpwCommonContinueWar s */
            s?: (CommonProto.NetMessage.MsgMpwCommonContinueWar.IS|null);
        }

        /** Represents a MsgMpwCommonContinueWar. */
        class MsgMpwCommonContinueWar implements IMsgMpwCommonContinueWar {

            /**
             * Constructs a new MsgMpwCommonContinueWar.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgMpwCommonContinueWar);

            /** MsgMpwCommonContinueWar c. */
            public c?: (CommonProto.NetMessage.MsgMpwCommonContinueWar.IC|null);

            /** MsgMpwCommonContinueWar s. */
            public s?: (CommonProto.NetMessage.MsgMpwCommonContinueWar.IS|null);

            /**
             * Creates a new MsgMpwCommonContinueWar instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgMpwCommonContinueWar instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgMpwCommonContinueWar): CommonProto.NetMessage.MsgMpwCommonContinueWar;

            /**
             * Encodes the specified MsgMpwCommonContinueWar message. Does not implicitly {@link CommonProto.NetMessage.MsgMpwCommonContinueWar.verify|verify} messages.
             * @param message MsgMpwCommonContinueWar message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgMpwCommonContinueWar, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgMpwCommonContinueWar message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMpwCommonContinueWar.verify|verify} messages.
             * @param message MsgMpwCommonContinueWar message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgMpwCommonContinueWar, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgMpwCommonContinueWar message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgMpwCommonContinueWar
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMpwCommonContinueWar;

            /**
             * Decodes a MsgMpwCommonContinueWar message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgMpwCommonContinueWar
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMpwCommonContinueWar;

            /**
             * Verifies a MsgMpwCommonContinueWar message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgMpwCommonContinueWar message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgMpwCommonContinueWar
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMpwCommonContinueWar;

            /**
             * Creates a plain object from a MsgMpwCommonContinueWar message. Also converts values to other types if specified.
             * @param message MsgMpwCommonContinueWar
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgMpwCommonContinueWar, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgMpwCommonContinueWar to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgMpwCommonContinueWar {

            /** Properties of a C. */
            interface IC {

                /** C warId */
                warId?: (number|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMpwCommonContinueWar.IC);

                /** C warId. */
                public warId: number;

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMpwCommonContinueWar.IC): CommonProto.NetMessage.MsgMpwCommonContinueWar.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgMpwCommonContinueWar.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMpwCommonContinueWar.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMpwCommonContinueWar.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMpwCommonContinueWar.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMpwCommonContinueWar.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMpwCommonContinueWar.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMpwCommonContinueWar.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMpwCommonContinueWar.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S warId */
                warId?: (number|null);

                /** S war */
                war?: (CommonProto.WarSerialization.ISerialWar|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMpwCommonContinueWar.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S warId. */
                public warId: number;

                /** S war. */
                public war?: (CommonProto.WarSerialization.ISerialWar|null);

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMpwCommonContinueWar.IS): CommonProto.NetMessage.MsgMpwCommonContinueWar.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgMpwCommonContinueWar.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMpwCommonContinueWar.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMpwCommonContinueWar.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMpwCommonContinueWar.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMpwCommonContinueWar.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMpwCommonContinueWar.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMpwCommonContinueWar.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMpwCommonContinueWar.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgMpwCommonHandleBoot. */
        interface IMsgMpwCommonHandleBoot {

            /** MsgMpwCommonHandleBoot c */
            c?: (CommonProto.NetMessage.MsgMpwCommonHandleBoot.IC|null);

            /** MsgMpwCommonHandleBoot s */
            s?: (CommonProto.NetMessage.MsgMpwCommonHandleBoot.IS|null);
        }

        /** Represents a MsgMpwCommonHandleBoot. */
        class MsgMpwCommonHandleBoot implements IMsgMpwCommonHandleBoot {

            /**
             * Constructs a new MsgMpwCommonHandleBoot.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgMpwCommonHandleBoot);

            /** MsgMpwCommonHandleBoot c. */
            public c?: (CommonProto.NetMessage.MsgMpwCommonHandleBoot.IC|null);

            /** MsgMpwCommonHandleBoot s. */
            public s?: (CommonProto.NetMessage.MsgMpwCommonHandleBoot.IS|null);

            /**
             * Creates a new MsgMpwCommonHandleBoot instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgMpwCommonHandleBoot instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgMpwCommonHandleBoot): CommonProto.NetMessage.MsgMpwCommonHandleBoot;

            /**
             * Encodes the specified MsgMpwCommonHandleBoot message. Does not implicitly {@link CommonProto.NetMessage.MsgMpwCommonHandleBoot.verify|verify} messages.
             * @param message MsgMpwCommonHandleBoot message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgMpwCommonHandleBoot, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgMpwCommonHandleBoot message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMpwCommonHandleBoot.verify|verify} messages.
             * @param message MsgMpwCommonHandleBoot message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgMpwCommonHandleBoot, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgMpwCommonHandleBoot message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgMpwCommonHandleBoot
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMpwCommonHandleBoot;

            /**
             * Decodes a MsgMpwCommonHandleBoot message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgMpwCommonHandleBoot
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMpwCommonHandleBoot;

            /**
             * Verifies a MsgMpwCommonHandleBoot message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgMpwCommonHandleBoot message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgMpwCommonHandleBoot
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMpwCommonHandleBoot;

            /**
             * Creates a plain object from a MsgMpwCommonHandleBoot message. Also converts values to other types if specified.
             * @param message MsgMpwCommonHandleBoot
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgMpwCommonHandleBoot, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgMpwCommonHandleBoot to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgMpwCommonHandleBoot {

            /** Properties of a C. */
            interface IC {

                /** C warId */
                warId?: (number|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMpwCommonHandleBoot.IC);

                /** C warId. */
                public warId: number;

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMpwCommonHandleBoot.IC): CommonProto.NetMessage.MsgMpwCommonHandleBoot.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgMpwCommonHandleBoot.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMpwCommonHandleBoot.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMpwCommonHandleBoot.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMpwCommonHandleBoot.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMpwCommonHandleBoot.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMpwCommonHandleBoot.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMpwCommonHandleBoot.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMpwCommonHandleBoot.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S warId */
                warId?: (number|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMpwCommonHandleBoot.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S warId. */
                public warId: number;

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMpwCommonHandleBoot.IS): CommonProto.NetMessage.MsgMpwCommonHandleBoot.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgMpwCommonHandleBoot.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMpwCommonHandleBoot.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMpwCommonHandleBoot.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMpwCommonHandleBoot.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMpwCommonHandleBoot.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMpwCommonHandleBoot.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMpwCommonHandleBoot.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMpwCommonHandleBoot.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgMpwCommonBroadcastGameStart. */
        interface IMsgMpwCommonBroadcastGameStart {

            /** MsgMpwCommonBroadcastGameStart s */
            s?: (CommonProto.NetMessage.MsgMpwCommonBroadcastGameStart.IS|null);
        }

        /** Represents a MsgMpwCommonBroadcastGameStart. */
        class MsgMpwCommonBroadcastGameStart implements IMsgMpwCommonBroadcastGameStart {

            /**
             * Constructs a new MsgMpwCommonBroadcastGameStart.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgMpwCommonBroadcastGameStart);

            /** MsgMpwCommonBroadcastGameStart s. */
            public s?: (CommonProto.NetMessage.MsgMpwCommonBroadcastGameStart.IS|null);

            /**
             * Creates a new MsgMpwCommonBroadcastGameStart instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgMpwCommonBroadcastGameStart instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgMpwCommonBroadcastGameStart): CommonProto.NetMessage.MsgMpwCommonBroadcastGameStart;

            /**
             * Encodes the specified MsgMpwCommonBroadcastGameStart message. Does not implicitly {@link CommonProto.NetMessage.MsgMpwCommonBroadcastGameStart.verify|verify} messages.
             * @param message MsgMpwCommonBroadcastGameStart message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgMpwCommonBroadcastGameStart, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgMpwCommonBroadcastGameStart message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMpwCommonBroadcastGameStart.verify|verify} messages.
             * @param message MsgMpwCommonBroadcastGameStart message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgMpwCommonBroadcastGameStart, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgMpwCommonBroadcastGameStart message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgMpwCommonBroadcastGameStart
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMpwCommonBroadcastGameStart;

            /**
             * Decodes a MsgMpwCommonBroadcastGameStart message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgMpwCommonBroadcastGameStart
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMpwCommonBroadcastGameStart;

            /**
             * Verifies a MsgMpwCommonBroadcastGameStart message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgMpwCommonBroadcastGameStart message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgMpwCommonBroadcastGameStart
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMpwCommonBroadcastGameStart;

            /**
             * Creates a plain object from a MsgMpwCommonBroadcastGameStart message. Also converts values to other types if specified.
             * @param message MsgMpwCommonBroadcastGameStart
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgMpwCommonBroadcastGameStart, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgMpwCommonBroadcastGameStart to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgMpwCommonBroadcastGameStart {

            /** Properties of a S. */
            interface IS {

                /** S warId */
                warId?: (number|null);

                /** S mapId */
                mapId?: (number|null);

                /** S mcrRoomId */
                mcrRoomId?: (number|null);

                /** S mrrRoomId */
                mrrRoomId?: (number|null);

                /** S mfrRoomId */
                mfrRoomId?: (number|null);

                /** S ccrRoomId */
                ccrRoomId?: (number|null);

                /** S playerInfoList */
                playerInfoList?: (CommonProto.Structure.IWarPlayerInfo[]|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMpwCommonBroadcastGameStart.IS);

                /** S warId. */
                public warId: number;

                /** S mapId. */
                public mapId: number;

                /** S mcrRoomId. */
                public mcrRoomId: number;

                /** S mrrRoomId. */
                public mrrRoomId: number;

                /** S mfrRoomId. */
                public mfrRoomId: number;

                /** S ccrRoomId. */
                public ccrRoomId: number;

                /** S playerInfoList. */
                public playerInfoList: CommonProto.Structure.IWarPlayerInfo[];

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMpwCommonBroadcastGameStart.IS): CommonProto.NetMessage.MsgMpwCommonBroadcastGameStart.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgMpwCommonBroadcastGameStart.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMpwCommonBroadcastGameStart.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMpwCommonBroadcastGameStart.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMpwCommonBroadcastGameStart.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMpwCommonBroadcastGameStart.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMpwCommonBroadcastGameStart.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMpwCommonBroadcastGameStart.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMpwCommonBroadcastGameStart.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgMpwCommonGetWarSettings. */
        interface IMsgMpwCommonGetWarSettings {

            /** MsgMpwCommonGetWarSettings c */
            c?: (CommonProto.NetMessage.MsgMpwCommonGetWarSettings.IC|null);

            /** MsgMpwCommonGetWarSettings s */
            s?: (CommonProto.NetMessage.MsgMpwCommonGetWarSettings.IS|null);
        }

        /** Represents a MsgMpwCommonGetWarSettings. */
        class MsgMpwCommonGetWarSettings implements IMsgMpwCommonGetWarSettings {

            /**
             * Constructs a new MsgMpwCommonGetWarSettings.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgMpwCommonGetWarSettings);

            /** MsgMpwCommonGetWarSettings c. */
            public c?: (CommonProto.NetMessage.MsgMpwCommonGetWarSettings.IC|null);

            /** MsgMpwCommonGetWarSettings s. */
            public s?: (CommonProto.NetMessage.MsgMpwCommonGetWarSettings.IS|null);

            /**
             * Creates a new MsgMpwCommonGetWarSettings instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgMpwCommonGetWarSettings instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgMpwCommonGetWarSettings): CommonProto.NetMessage.MsgMpwCommonGetWarSettings;

            /**
             * Encodes the specified MsgMpwCommonGetWarSettings message. Does not implicitly {@link CommonProto.NetMessage.MsgMpwCommonGetWarSettings.verify|verify} messages.
             * @param message MsgMpwCommonGetWarSettings message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgMpwCommonGetWarSettings, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgMpwCommonGetWarSettings message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMpwCommonGetWarSettings.verify|verify} messages.
             * @param message MsgMpwCommonGetWarSettings message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgMpwCommonGetWarSettings, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgMpwCommonGetWarSettings message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgMpwCommonGetWarSettings
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMpwCommonGetWarSettings;

            /**
             * Decodes a MsgMpwCommonGetWarSettings message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgMpwCommonGetWarSettings
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMpwCommonGetWarSettings;

            /**
             * Verifies a MsgMpwCommonGetWarSettings message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgMpwCommonGetWarSettings message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgMpwCommonGetWarSettings
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMpwCommonGetWarSettings;

            /**
             * Creates a plain object from a MsgMpwCommonGetWarSettings message. Also converts values to other types if specified.
             * @param message MsgMpwCommonGetWarSettings
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgMpwCommonGetWarSettings, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgMpwCommonGetWarSettings to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgMpwCommonGetWarSettings {

            /** Properties of a C. */
            interface IC {

                /** C warId */
                warId?: (number|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMpwCommonGetWarSettings.IC);

                /** C warId. */
                public warId: number;

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMpwCommonGetWarSettings.IC): CommonProto.NetMessage.MsgMpwCommonGetWarSettings.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgMpwCommonGetWarSettings.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMpwCommonGetWarSettings.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMpwCommonGetWarSettings.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMpwCommonGetWarSettings.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMpwCommonGetWarSettings.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMpwCommonGetWarSettings.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMpwCommonGetWarSettings.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMpwCommonGetWarSettings.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S warId */
                warId?: (number|null);

                /** S warSettings */
                warSettings?: (CommonProto.MultiPlayerWar.IMpwWarSettings|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMpwCommonGetWarSettings.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S warId. */
                public warId: number;

                /** S warSettings. */
                public warSettings?: (CommonProto.MultiPlayerWar.IMpwWarSettings|null);

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMpwCommonGetWarSettings.IS): CommonProto.NetMessage.MsgMpwCommonGetWarSettings.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgMpwCommonGetWarSettings.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMpwCommonGetWarSettings.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMpwCommonGetWarSettings.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMpwCommonGetWarSettings.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMpwCommonGetWarSettings.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMpwCommonGetWarSettings.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMpwCommonGetWarSettings.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMpwCommonGetWarSettings.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgMpwCommonGetWarProgressInfo. */
        interface IMsgMpwCommonGetWarProgressInfo {

            /** MsgMpwCommonGetWarProgressInfo c */
            c?: (CommonProto.NetMessage.MsgMpwCommonGetWarProgressInfo.IC|null);

            /** MsgMpwCommonGetWarProgressInfo s */
            s?: (CommonProto.NetMessage.MsgMpwCommonGetWarProgressInfo.IS|null);
        }

        /** Represents a MsgMpwCommonGetWarProgressInfo. */
        class MsgMpwCommonGetWarProgressInfo implements IMsgMpwCommonGetWarProgressInfo {

            /**
             * Constructs a new MsgMpwCommonGetWarProgressInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgMpwCommonGetWarProgressInfo);

            /** MsgMpwCommonGetWarProgressInfo c. */
            public c?: (CommonProto.NetMessage.MsgMpwCommonGetWarProgressInfo.IC|null);

            /** MsgMpwCommonGetWarProgressInfo s. */
            public s?: (CommonProto.NetMessage.MsgMpwCommonGetWarProgressInfo.IS|null);

            /**
             * Creates a new MsgMpwCommonGetWarProgressInfo instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgMpwCommonGetWarProgressInfo instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgMpwCommonGetWarProgressInfo): CommonProto.NetMessage.MsgMpwCommonGetWarProgressInfo;

            /**
             * Encodes the specified MsgMpwCommonGetWarProgressInfo message. Does not implicitly {@link CommonProto.NetMessage.MsgMpwCommonGetWarProgressInfo.verify|verify} messages.
             * @param message MsgMpwCommonGetWarProgressInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgMpwCommonGetWarProgressInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgMpwCommonGetWarProgressInfo message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMpwCommonGetWarProgressInfo.verify|verify} messages.
             * @param message MsgMpwCommonGetWarProgressInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgMpwCommonGetWarProgressInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgMpwCommonGetWarProgressInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgMpwCommonGetWarProgressInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMpwCommonGetWarProgressInfo;

            /**
             * Decodes a MsgMpwCommonGetWarProgressInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgMpwCommonGetWarProgressInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMpwCommonGetWarProgressInfo;

            /**
             * Verifies a MsgMpwCommonGetWarProgressInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgMpwCommonGetWarProgressInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgMpwCommonGetWarProgressInfo
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMpwCommonGetWarProgressInfo;

            /**
             * Creates a plain object from a MsgMpwCommonGetWarProgressInfo message. Also converts values to other types if specified.
             * @param message MsgMpwCommonGetWarProgressInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgMpwCommonGetWarProgressInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgMpwCommonGetWarProgressInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgMpwCommonGetWarProgressInfo {

            /** Properties of a C. */
            interface IC {

                /** C warId */
                warId?: (number|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMpwCommonGetWarProgressInfo.IC);

                /** C warId. */
                public warId: number;

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMpwCommonGetWarProgressInfo.IC): CommonProto.NetMessage.MsgMpwCommonGetWarProgressInfo.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgMpwCommonGetWarProgressInfo.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMpwCommonGetWarProgressInfo.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMpwCommonGetWarProgressInfo.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMpwCommonGetWarProgressInfo.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMpwCommonGetWarProgressInfo.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMpwCommonGetWarProgressInfo.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMpwCommonGetWarProgressInfo.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMpwCommonGetWarProgressInfo.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S warId */
                warId?: (number|null);

                /** S warProgressInfo */
                warProgressInfo?: (CommonProto.MultiPlayerWar.IMpwWarProgressInfo|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMpwCommonGetWarProgressInfo.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S warId. */
                public warId: number;

                /** S warProgressInfo. */
                public warProgressInfo?: (CommonProto.MultiPlayerWar.IMpwWarProgressInfo|null);

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMpwCommonGetWarProgressInfo.IS): CommonProto.NetMessage.MsgMpwCommonGetWarProgressInfo.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgMpwCommonGetWarProgressInfo.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMpwCommonGetWarProgressInfo.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMpwCommonGetWarProgressInfo.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMpwCommonGetWarProgressInfo.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMpwCommonGetWarProgressInfo.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMpwCommonGetWarProgressInfo.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMpwCommonGetWarProgressInfo.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMpwCommonGetWarProgressInfo.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgMpwCommonMarkTile. */
        interface IMsgMpwCommonMarkTile {

            /** MsgMpwCommonMarkTile c */
            c?: (CommonProto.NetMessage.MsgMpwCommonMarkTile.IC|null);

            /** MsgMpwCommonMarkTile s */
            s?: (CommonProto.NetMessage.MsgMpwCommonMarkTile.IS|null);
        }

        /** Represents a MsgMpwCommonMarkTile. */
        class MsgMpwCommonMarkTile implements IMsgMpwCommonMarkTile {

            /**
             * Constructs a new MsgMpwCommonMarkTile.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgMpwCommonMarkTile);

            /** MsgMpwCommonMarkTile c. */
            public c?: (CommonProto.NetMessage.MsgMpwCommonMarkTile.IC|null);

            /** MsgMpwCommonMarkTile s. */
            public s?: (CommonProto.NetMessage.MsgMpwCommonMarkTile.IS|null);

            /**
             * Creates a new MsgMpwCommonMarkTile instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgMpwCommonMarkTile instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgMpwCommonMarkTile): CommonProto.NetMessage.MsgMpwCommonMarkTile;

            /**
             * Encodes the specified MsgMpwCommonMarkTile message. Does not implicitly {@link CommonProto.NetMessage.MsgMpwCommonMarkTile.verify|verify} messages.
             * @param message MsgMpwCommonMarkTile message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgMpwCommonMarkTile, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgMpwCommonMarkTile message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMpwCommonMarkTile.verify|verify} messages.
             * @param message MsgMpwCommonMarkTile message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgMpwCommonMarkTile, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgMpwCommonMarkTile message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgMpwCommonMarkTile
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMpwCommonMarkTile;

            /**
             * Decodes a MsgMpwCommonMarkTile message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgMpwCommonMarkTile
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMpwCommonMarkTile;

            /**
             * Verifies a MsgMpwCommonMarkTile message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgMpwCommonMarkTile message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgMpwCommonMarkTile
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMpwCommonMarkTile;

            /**
             * Creates a plain object from a MsgMpwCommonMarkTile message. Also converts values to other types if specified.
             * @param message MsgMpwCommonMarkTile
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgMpwCommonMarkTile, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgMpwCommonMarkTile to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgMpwCommonMarkTile {

            /** Properties of a C. */
            interface IC {

                /** C warId */
                warId?: (number|null);

                /** C gridId */
                gridId?: (number|null);

                /** C isMark */
                isMark?: (boolean|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMpwCommonMarkTile.IC);

                /** C warId. */
                public warId: number;

                /** C gridId. */
                public gridId: number;

                /** C isMark. */
                public isMark: boolean;

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMpwCommonMarkTile.IC): CommonProto.NetMessage.MsgMpwCommonMarkTile.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgMpwCommonMarkTile.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMpwCommonMarkTile.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMpwCommonMarkTile.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMpwCommonMarkTile.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMpwCommonMarkTile.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMpwCommonMarkTile.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMpwCommonMarkTile.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMpwCommonMarkTile.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S warId */
                warId?: (number|null);

                /** S gridId */
                gridId?: (number|null);

                /** S isMark */
                isMark?: (boolean|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMpwCommonMarkTile.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S warId. */
                public warId: number;

                /** S gridId. */
                public gridId: number;

                /** S isMark. */
                public isMark: boolean;

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMpwCommonMarkTile.IS): CommonProto.NetMessage.MsgMpwCommonMarkTile.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgMpwCommonMarkTile.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMpwCommonMarkTile.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMpwCommonMarkTile.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMpwCommonMarkTile.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMpwCommonMarkTile.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMpwCommonMarkTile.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMpwCommonMarkTile.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMpwCommonMarkTile.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgMpwCommonSyncWar. */
        interface IMsgMpwCommonSyncWar {

            /** MsgMpwCommonSyncWar c */
            c?: (CommonProto.NetMessage.MsgMpwCommonSyncWar.IC|null);

            /** MsgMpwCommonSyncWar s */
            s?: (CommonProto.NetMessage.MsgMpwCommonSyncWar.IS|null);
        }

        /** Represents a MsgMpwCommonSyncWar. */
        class MsgMpwCommonSyncWar implements IMsgMpwCommonSyncWar {

            /**
             * Constructs a new MsgMpwCommonSyncWar.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgMpwCommonSyncWar);

            /** MsgMpwCommonSyncWar c. */
            public c?: (CommonProto.NetMessage.MsgMpwCommonSyncWar.IC|null);

            /** MsgMpwCommonSyncWar s. */
            public s?: (CommonProto.NetMessage.MsgMpwCommonSyncWar.IS|null);

            /**
             * Creates a new MsgMpwCommonSyncWar instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgMpwCommonSyncWar instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgMpwCommonSyncWar): CommonProto.NetMessage.MsgMpwCommonSyncWar;

            /**
             * Encodes the specified MsgMpwCommonSyncWar message. Does not implicitly {@link CommonProto.NetMessage.MsgMpwCommonSyncWar.verify|verify} messages.
             * @param message MsgMpwCommonSyncWar message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgMpwCommonSyncWar, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgMpwCommonSyncWar message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMpwCommonSyncWar.verify|verify} messages.
             * @param message MsgMpwCommonSyncWar message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgMpwCommonSyncWar, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgMpwCommonSyncWar message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgMpwCommonSyncWar
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMpwCommonSyncWar;

            /**
             * Decodes a MsgMpwCommonSyncWar message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgMpwCommonSyncWar
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMpwCommonSyncWar;

            /**
             * Verifies a MsgMpwCommonSyncWar message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgMpwCommonSyncWar message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgMpwCommonSyncWar
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMpwCommonSyncWar;

            /**
             * Creates a plain object from a MsgMpwCommonSyncWar message. Also converts values to other types if specified.
             * @param message MsgMpwCommonSyncWar
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgMpwCommonSyncWar, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgMpwCommonSyncWar to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgMpwCommonSyncWar {

            /** Properties of a C. */
            interface IC {

                /** C warId */
                warId?: (number|null);

                /** C executedActionsCount */
                executedActionsCount?: (number|null);

                /** C requestType */
                requestType?: (number|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMpwCommonSyncWar.IC);

                /** C warId. */
                public warId: number;

                /** C executedActionsCount. */
                public executedActionsCount: number;

                /** C requestType. */
                public requestType: number;

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMpwCommonSyncWar.IC): CommonProto.NetMessage.MsgMpwCommonSyncWar.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgMpwCommonSyncWar.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMpwCommonSyncWar.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMpwCommonSyncWar.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMpwCommonSyncWar.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMpwCommonSyncWar.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMpwCommonSyncWar.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMpwCommonSyncWar.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMpwCommonSyncWar.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S warId */
                warId?: (number|null);

                /** S executedActionsCount */
                executedActionsCount?: (number|null);

                /** S war */
                war?: (CommonProto.WarSerialization.ISerialWar|null);

                /** S status */
                status?: (number|null);

                /** S requestType */
                requestType?: (number|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMpwCommonSyncWar.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S warId. */
                public warId: number;

                /** S executedActionsCount. */
                public executedActionsCount: number;

                /** S war. */
                public war?: (CommonProto.WarSerialization.ISerialWar|null);

                /** S status. */
                public status: number;

                /** S requestType. */
                public requestType: number;

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMpwCommonSyncWar.IS): CommonProto.NetMessage.MsgMpwCommonSyncWar.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgMpwCommonSyncWar.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMpwCommonSyncWar.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMpwCommonSyncWar.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMpwCommonSyncWar.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMpwCommonSyncWar.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMpwCommonSyncWar.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMpwCommonSyncWar.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMpwCommonSyncWar.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgMpwWatchMakeRequest. */
        interface IMsgMpwWatchMakeRequest {

            /** MsgMpwWatchMakeRequest c */
            c?: (CommonProto.NetMessage.MsgMpwWatchMakeRequest.IC|null);

            /** MsgMpwWatchMakeRequest s */
            s?: (CommonProto.NetMessage.MsgMpwWatchMakeRequest.IS|null);
        }

        /** Represents a MsgMpwWatchMakeRequest. */
        class MsgMpwWatchMakeRequest implements IMsgMpwWatchMakeRequest {

            /**
             * Constructs a new MsgMpwWatchMakeRequest.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgMpwWatchMakeRequest);

            /** MsgMpwWatchMakeRequest c. */
            public c?: (CommonProto.NetMessage.MsgMpwWatchMakeRequest.IC|null);

            /** MsgMpwWatchMakeRequest s. */
            public s?: (CommonProto.NetMessage.MsgMpwWatchMakeRequest.IS|null);

            /**
             * Creates a new MsgMpwWatchMakeRequest instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgMpwWatchMakeRequest instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgMpwWatchMakeRequest): CommonProto.NetMessage.MsgMpwWatchMakeRequest;

            /**
             * Encodes the specified MsgMpwWatchMakeRequest message. Does not implicitly {@link CommonProto.NetMessage.MsgMpwWatchMakeRequest.verify|verify} messages.
             * @param message MsgMpwWatchMakeRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgMpwWatchMakeRequest, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgMpwWatchMakeRequest message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMpwWatchMakeRequest.verify|verify} messages.
             * @param message MsgMpwWatchMakeRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgMpwWatchMakeRequest, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgMpwWatchMakeRequest message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgMpwWatchMakeRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMpwWatchMakeRequest;

            /**
             * Decodes a MsgMpwWatchMakeRequest message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgMpwWatchMakeRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMpwWatchMakeRequest;

            /**
             * Verifies a MsgMpwWatchMakeRequest message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgMpwWatchMakeRequest message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgMpwWatchMakeRequest
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMpwWatchMakeRequest;

            /**
             * Creates a plain object from a MsgMpwWatchMakeRequest message. Also converts values to other types if specified.
             * @param message MsgMpwWatchMakeRequest
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgMpwWatchMakeRequest, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgMpwWatchMakeRequest to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgMpwWatchMakeRequest {

            /** Properties of a C. */
            interface IC {

                /** C warId */
                warId?: (number|null);

                /** C dstUserIds */
                dstUserIds?: (number[]|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMpwWatchMakeRequest.IC);

                /** C warId. */
                public warId: number;

                /** C dstUserIds. */
                public dstUserIds: number[];

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMpwWatchMakeRequest.IC): CommonProto.NetMessage.MsgMpwWatchMakeRequest.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgMpwWatchMakeRequest.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMpwWatchMakeRequest.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMpwWatchMakeRequest.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMpwWatchMakeRequest.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMpwWatchMakeRequest.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMpwWatchMakeRequest.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMpwWatchMakeRequest.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMpwWatchMakeRequest.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S warId */
                warId?: (number|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMpwWatchMakeRequest.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S warId. */
                public warId: number;

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMpwWatchMakeRequest.IS): CommonProto.NetMessage.MsgMpwWatchMakeRequest.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgMpwWatchMakeRequest.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMpwWatchMakeRequest.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMpwWatchMakeRequest.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMpwWatchMakeRequest.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMpwWatchMakeRequest.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMpwWatchMakeRequest.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMpwWatchMakeRequest.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMpwWatchMakeRequest.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgMpwWatchHandleRequest. */
        interface IMsgMpwWatchHandleRequest {

            /** MsgMpwWatchHandleRequest c */
            c?: (CommonProto.NetMessage.MsgMpwWatchHandleRequest.IC|null);

            /** MsgMpwWatchHandleRequest s */
            s?: (CommonProto.NetMessage.MsgMpwWatchHandleRequest.IS|null);
        }

        /** Represents a MsgMpwWatchHandleRequest. */
        class MsgMpwWatchHandleRequest implements IMsgMpwWatchHandleRequest {

            /**
             * Constructs a new MsgMpwWatchHandleRequest.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgMpwWatchHandleRequest);

            /** MsgMpwWatchHandleRequest c. */
            public c?: (CommonProto.NetMessage.MsgMpwWatchHandleRequest.IC|null);

            /** MsgMpwWatchHandleRequest s. */
            public s?: (CommonProto.NetMessage.MsgMpwWatchHandleRequest.IS|null);

            /**
             * Creates a new MsgMpwWatchHandleRequest instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgMpwWatchHandleRequest instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgMpwWatchHandleRequest): CommonProto.NetMessage.MsgMpwWatchHandleRequest;

            /**
             * Encodes the specified MsgMpwWatchHandleRequest message. Does not implicitly {@link CommonProto.NetMessage.MsgMpwWatchHandleRequest.verify|verify} messages.
             * @param message MsgMpwWatchHandleRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgMpwWatchHandleRequest, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgMpwWatchHandleRequest message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMpwWatchHandleRequest.verify|verify} messages.
             * @param message MsgMpwWatchHandleRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgMpwWatchHandleRequest, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgMpwWatchHandleRequest message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgMpwWatchHandleRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMpwWatchHandleRequest;

            /**
             * Decodes a MsgMpwWatchHandleRequest message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgMpwWatchHandleRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMpwWatchHandleRequest;

            /**
             * Verifies a MsgMpwWatchHandleRequest message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgMpwWatchHandleRequest message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgMpwWatchHandleRequest
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMpwWatchHandleRequest;

            /**
             * Creates a plain object from a MsgMpwWatchHandleRequest message. Also converts values to other types if specified.
             * @param message MsgMpwWatchHandleRequest
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgMpwWatchHandleRequest, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgMpwWatchHandleRequest to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgMpwWatchHandleRequest {

            /** Properties of a C. */
            interface IC {

                /** C warId */
                warId?: (number|null);

                /** C acceptSrcUserIds */
                acceptSrcUserIds?: (number[]|null);

                /** C declineSrcUserIds */
                declineSrcUserIds?: (number[]|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMpwWatchHandleRequest.IC);

                /** C warId. */
                public warId: number;

                /** C acceptSrcUserIds. */
                public acceptSrcUserIds: number[];

                /** C declineSrcUserIds. */
                public declineSrcUserIds: number[];

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMpwWatchHandleRequest.IC): CommonProto.NetMessage.MsgMpwWatchHandleRequest.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgMpwWatchHandleRequest.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMpwWatchHandleRequest.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMpwWatchHandleRequest.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMpwWatchHandleRequest.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMpwWatchHandleRequest.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMpwWatchHandleRequest.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMpwWatchHandleRequest.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMpwWatchHandleRequest.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S warId */
                warId?: (number|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMpwWatchHandleRequest.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S warId. */
                public warId: number;

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMpwWatchHandleRequest.IS): CommonProto.NetMessage.MsgMpwWatchHandleRequest.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgMpwWatchHandleRequest.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMpwWatchHandleRequest.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMpwWatchHandleRequest.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMpwWatchHandleRequest.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMpwWatchHandleRequest.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMpwWatchHandleRequest.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMpwWatchHandleRequest.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMpwWatchHandleRequest.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgMpwWatchDeleteWatcher. */
        interface IMsgMpwWatchDeleteWatcher {

            /** MsgMpwWatchDeleteWatcher c */
            c?: (CommonProto.NetMessage.MsgMpwWatchDeleteWatcher.IC|null);

            /** MsgMpwWatchDeleteWatcher s */
            s?: (CommonProto.NetMessage.MsgMpwWatchDeleteWatcher.IS|null);
        }

        /** Represents a MsgMpwWatchDeleteWatcher. */
        class MsgMpwWatchDeleteWatcher implements IMsgMpwWatchDeleteWatcher {

            /**
             * Constructs a new MsgMpwWatchDeleteWatcher.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgMpwWatchDeleteWatcher);

            /** MsgMpwWatchDeleteWatcher c. */
            public c?: (CommonProto.NetMessage.MsgMpwWatchDeleteWatcher.IC|null);

            /** MsgMpwWatchDeleteWatcher s. */
            public s?: (CommonProto.NetMessage.MsgMpwWatchDeleteWatcher.IS|null);

            /**
             * Creates a new MsgMpwWatchDeleteWatcher instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgMpwWatchDeleteWatcher instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgMpwWatchDeleteWatcher): CommonProto.NetMessage.MsgMpwWatchDeleteWatcher;

            /**
             * Encodes the specified MsgMpwWatchDeleteWatcher message. Does not implicitly {@link CommonProto.NetMessage.MsgMpwWatchDeleteWatcher.verify|verify} messages.
             * @param message MsgMpwWatchDeleteWatcher message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgMpwWatchDeleteWatcher, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgMpwWatchDeleteWatcher message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMpwWatchDeleteWatcher.verify|verify} messages.
             * @param message MsgMpwWatchDeleteWatcher message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgMpwWatchDeleteWatcher, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgMpwWatchDeleteWatcher message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgMpwWatchDeleteWatcher
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMpwWatchDeleteWatcher;

            /**
             * Decodes a MsgMpwWatchDeleteWatcher message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgMpwWatchDeleteWatcher
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMpwWatchDeleteWatcher;

            /**
             * Verifies a MsgMpwWatchDeleteWatcher message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgMpwWatchDeleteWatcher message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgMpwWatchDeleteWatcher
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMpwWatchDeleteWatcher;

            /**
             * Creates a plain object from a MsgMpwWatchDeleteWatcher message. Also converts values to other types if specified.
             * @param message MsgMpwWatchDeleteWatcher
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgMpwWatchDeleteWatcher, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgMpwWatchDeleteWatcher to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgMpwWatchDeleteWatcher {

            /** Properties of a C. */
            interface IC {

                /** C warId */
                warId?: (number|null);

                /** C watcherUserIds */
                watcherUserIds?: (number[]|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMpwWatchDeleteWatcher.IC);

                /** C warId. */
                public warId: number;

                /** C watcherUserIds. */
                public watcherUserIds: number[];

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMpwWatchDeleteWatcher.IC): CommonProto.NetMessage.MsgMpwWatchDeleteWatcher.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgMpwWatchDeleteWatcher.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMpwWatchDeleteWatcher.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMpwWatchDeleteWatcher.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMpwWatchDeleteWatcher.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMpwWatchDeleteWatcher.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMpwWatchDeleteWatcher.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMpwWatchDeleteWatcher.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMpwWatchDeleteWatcher.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S warId */
                warId?: (number|null);

                /** S watcherUserIds */
                watcherUserIds?: (number[]|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMpwWatchDeleteWatcher.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S warId. */
                public warId: number;

                /** S watcherUserIds. */
                public watcherUserIds: number[];

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMpwWatchDeleteWatcher.IS): CommonProto.NetMessage.MsgMpwWatchDeleteWatcher.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgMpwWatchDeleteWatcher.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMpwWatchDeleteWatcher.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMpwWatchDeleteWatcher.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMpwWatchDeleteWatcher.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMpwWatchDeleteWatcher.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMpwWatchDeleteWatcher.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMpwWatchDeleteWatcher.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMpwWatchDeleteWatcher.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgMpwWatchGetRequestableWarIdArray. */
        interface IMsgMpwWatchGetRequestableWarIdArray {

            /** MsgMpwWatchGetRequestableWarIdArray c */
            c?: (CommonProto.NetMessage.MsgMpwWatchGetRequestableWarIdArray.IC|null);

            /** MsgMpwWatchGetRequestableWarIdArray s */
            s?: (CommonProto.NetMessage.MsgMpwWatchGetRequestableWarIdArray.IS|null);
        }

        /** Represents a MsgMpwWatchGetRequestableWarIdArray. */
        class MsgMpwWatchGetRequestableWarIdArray implements IMsgMpwWatchGetRequestableWarIdArray {

            /**
             * Constructs a new MsgMpwWatchGetRequestableWarIdArray.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgMpwWatchGetRequestableWarIdArray);

            /** MsgMpwWatchGetRequestableWarIdArray c. */
            public c?: (CommonProto.NetMessage.MsgMpwWatchGetRequestableWarIdArray.IC|null);

            /** MsgMpwWatchGetRequestableWarIdArray s. */
            public s?: (CommonProto.NetMessage.MsgMpwWatchGetRequestableWarIdArray.IS|null);

            /**
             * Creates a new MsgMpwWatchGetRequestableWarIdArray instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgMpwWatchGetRequestableWarIdArray instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgMpwWatchGetRequestableWarIdArray): CommonProto.NetMessage.MsgMpwWatchGetRequestableWarIdArray;

            /**
             * Encodes the specified MsgMpwWatchGetRequestableWarIdArray message. Does not implicitly {@link CommonProto.NetMessage.MsgMpwWatchGetRequestableWarIdArray.verify|verify} messages.
             * @param message MsgMpwWatchGetRequestableWarIdArray message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgMpwWatchGetRequestableWarIdArray, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgMpwWatchGetRequestableWarIdArray message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMpwWatchGetRequestableWarIdArray.verify|verify} messages.
             * @param message MsgMpwWatchGetRequestableWarIdArray message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgMpwWatchGetRequestableWarIdArray, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgMpwWatchGetRequestableWarIdArray message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgMpwWatchGetRequestableWarIdArray
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMpwWatchGetRequestableWarIdArray;

            /**
             * Decodes a MsgMpwWatchGetRequestableWarIdArray message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgMpwWatchGetRequestableWarIdArray
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMpwWatchGetRequestableWarIdArray;

            /**
             * Verifies a MsgMpwWatchGetRequestableWarIdArray message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgMpwWatchGetRequestableWarIdArray message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgMpwWatchGetRequestableWarIdArray
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMpwWatchGetRequestableWarIdArray;

            /**
             * Creates a plain object from a MsgMpwWatchGetRequestableWarIdArray message. Also converts values to other types if specified.
             * @param message MsgMpwWatchGetRequestableWarIdArray
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgMpwWatchGetRequestableWarIdArray, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgMpwWatchGetRequestableWarIdArray to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgMpwWatchGetRequestableWarIdArray {

            /** Properties of a C. */
            interface IC {

                /** C warId */
                warId?: (number|null);

                /** C mapName */
                mapName?: (string|null);

                /** C playersCountUnneutral */
                playersCountUnneutral?: (number|null);

                /** C userNickname */
                userNickname?: (string|null);

                /** C coName */
                coName?: (string|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMpwWatchGetRequestableWarIdArray.IC);

                /** C warId. */
                public warId: number;

                /** C mapName. */
                public mapName: string;

                /** C playersCountUnneutral. */
                public playersCountUnneutral: number;

                /** C userNickname. */
                public userNickname: string;

                /** C coName. */
                public coName: string;

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMpwWatchGetRequestableWarIdArray.IC): CommonProto.NetMessage.MsgMpwWatchGetRequestableWarIdArray.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgMpwWatchGetRequestableWarIdArray.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMpwWatchGetRequestableWarIdArray.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMpwWatchGetRequestableWarIdArray.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMpwWatchGetRequestableWarIdArray.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMpwWatchGetRequestableWarIdArray.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMpwWatchGetRequestableWarIdArray.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMpwWatchGetRequestableWarIdArray.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMpwWatchGetRequestableWarIdArray.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S warIdArray */
                warIdArray?: (number[]|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMpwWatchGetRequestableWarIdArray.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S warIdArray. */
                public warIdArray: number[];

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMpwWatchGetRequestableWarIdArray.IS): CommonProto.NetMessage.MsgMpwWatchGetRequestableWarIdArray.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgMpwWatchGetRequestableWarIdArray.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMpwWatchGetRequestableWarIdArray.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMpwWatchGetRequestableWarIdArray.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMpwWatchGetRequestableWarIdArray.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMpwWatchGetRequestableWarIdArray.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMpwWatchGetRequestableWarIdArray.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMpwWatchGetRequestableWarIdArray.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMpwWatchGetRequestableWarIdArray.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgMpwWatchGetRequestedWarIdArray. */
        interface IMsgMpwWatchGetRequestedWarIdArray {

            /** MsgMpwWatchGetRequestedWarIdArray c */
            c?: (CommonProto.NetMessage.MsgMpwWatchGetRequestedWarIdArray.IC|null);

            /** MsgMpwWatchGetRequestedWarIdArray s */
            s?: (CommonProto.NetMessage.MsgMpwWatchGetRequestedWarIdArray.IS|null);
        }

        /** Represents a MsgMpwWatchGetRequestedWarIdArray. */
        class MsgMpwWatchGetRequestedWarIdArray implements IMsgMpwWatchGetRequestedWarIdArray {

            /**
             * Constructs a new MsgMpwWatchGetRequestedWarIdArray.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgMpwWatchGetRequestedWarIdArray);

            /** MsgMpwWatchGetRequestedWarIdArray c. */
            public c?: (CommonProto.NetMessage.MsgMpwWatchGetRequestedWarIdArray.IC|null);

            /** MsgMpwWatchGetRequestedWarIdArray s. */
            public s?: (CommonProto.NetMessage.MsgMpwWatchGetRequestedWarIdArray.IS|null);

            /**
             * Creates a new MsgMpwWatchGetRequestedWarIdArray instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgMpwWatchGetRequestedWarIdArray instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgMpwWatchGetRequestedWarIdArray): CommonProto.NetMessage.MsgMpwWatchGetRequestedWarIdArray;

            /**
             * Encodes the specified MsgMpwWatchGetRequestedWarIdArray message. Does not implicitly {@link CommonProto.NetMessage.MsgMpwWatchGetRequestedWarIdArray.verify|verify} messages.
             * @param message MsgMpwWatchGetRequestedWarIdArray message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgMpwWatchGetRequestedWarIdArray, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgMpwWatchGetRequestedWarIdArray message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMpwWatchGetRequestedWarIdArray.verify|verify} messages.
             * @param message MsgMpwWatchGetRequestedWarIdArray message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgMpwWatchGetRequestedWarIdArray, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgMpwWatchGetRequestedWarIdArray message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgMpwWatchGetRequestedWarIdArray
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMpwWatchGetRequestedWarIdArray;

            /**
             * Decodes a MsgMpwWatchGetRequestedWarIdArray message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgMpwWatchGetRequestedWarIdArray
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMpwWatchGetRequestedWarIdArray;

            /**
             * Verifies a MsgMpwWatchGetRequestedWarIdArray message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgMpwWatchGetRequestedWarIdArray message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgMpwWatchGetRequestedWarIdArray
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMpwWatchGetRequestedWarIdArray;

            /**
             * Creates a plain object from a MsgMpwWatchGetRequestedWarIdArray message. Also converts values to other types if specified.
             * @param message MsgMpwWatchGetRequestedWarIdArray
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgMpwWatchGetRequestedWarIdArray, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgMpwWatchGetRequestedWarIdArray to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgMpwWatchGetRequestedWarIdArray {

            /** Properties of a C. */
            interface IC {
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMpwWatchGetRequestedWarIdArray.IC);

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMpwWatchGetRequestedWarIdArray.IC): CommonProto.NetMessage.MsgMpwWatchGetRequestedWarIdArray.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgMpwWatchGetRequestedWarIdArray.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMpwWatchGetRequestedWarIdArray.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMpwWatchGetRequestedWarIdArray.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMpwWatchGetRequestedWarIdArray.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMpwWatchGetRequestedWarIdArray.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMpwWatchGetRequestedWarIdArray.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMpwWatchGetRequestedWarIdArray.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMpwWatchGetRequestedWarIdArray.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S warIdArray */
                warIdArray?: (number[]|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMpwWatchGetRequestedWarIdArray.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S warIdArray. */
                public warIdArray: number[];

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMpwWatchGetRequestedWarIdArray.IS): CommonProto.NetMessage.MsgMpwWatchGetRequestedWarIdArray.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgMpwWatchGetRequestedWarIdArray.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMpwWatchGetRequestedWarIdArray.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMpwWatchGetRequestedWarIdArray.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMpwWatchGetRequestedWarIdArray.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMpwWatchGetRequestedWarIdArray.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMpwWatchGetRequestedWarIdArray.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMpwWatchGetRequestedWarIdArray.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMpwWatchGetRequestedWarIdArray.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgMpwWatchGetWatchedWarIdArray. */
        interface IMsgMpwWatchGetWatchedWarIdArray {

            /** MsgMpwWatchGetWatchedWarIdArray c */
            c?: (CommonProto.NetMessage.MsgMpwWatchGetWatchedWarIdArray.IC|null);

            /** MsgMpwWatchGetWatchedWarIdArray s */
            s?: (CommonProto.NetMessage.MsgMpwWatchGetWatchedWarIdArray.IS|null);
        }

        /** Represents a MsgMpwWatchGetWatchedWarIdArray. */
        class MsgMpwWatchGetWatchedWarIdArray implements IMsgMpwWatchGetWatchedWarIdArray {

            /**
             * Constructs a new MsgMpwWatchGetWatchedWarIdArray.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgMpwWatchGetWatchedWarIdArray);

            /** MsgMpwWatchGetWatchedWarIdArray c. */
            public c?: (CommonProto.NetMessage.MsgMpwWatchGetWatchedWarIdArray.IC|null);

            /** MsgMpwWatchGetWatchedWarIdArray s. */
            public s?: (CommonProto.NetMessage.MsgMpwWatchGetWatchedWarIdArray.IS|null);

            /**
             * Creates a new MsgMpwWatchGetWatchedWarIdArray instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgMpwWatchGetWatchedWarIdArray instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgMpwWatchGetWatchedWarIdArray): CommonProto.NetMessage.MsgMpwWatchGetWatchedWarIdArray;

            /**
             * Encodes the specified MsgMpwWatchGetWatchedWarIdArray message. Does not implicitly {@link CommonProto.NetMessage.MsgMpwWatchGetWatchedWarIdArray.verify|verify} messages.
             * @param message MsgMpwWatchGetWatchedWarIdArray message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgMpwWatchGetWatchedWarIdArray, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgMpwWatchGetWatchedWarIdArray message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMpwWatchGetWatchedWarIdArray.verify|verify} messages.
             * @param message MsgMpwWatchGetWatchedWarIdArray message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgMpwWatchGetWatchedWarIdArray, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgMpwWatchGetWatchedWarIdArray message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgMpwWatchGetWatchedWarIdArray
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMpwWatchGetWatchedWarIdArray;

            /**
             * Decodes a MsgMpwWatchGetWatchedWarIdArray message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgMpwWatchGetWatchedWarIdArray
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMpwWatchGetWatchedWarIdArray;

            /**
             * Verifies a MsgMpwWatchGetWatchedWarIdArray message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgMpwWatchGetWatchedWarIdArray message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgMpwWatchGetWatchedWarIdArray
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMpwWatchGetWatchedWarIdArray;

            /**
             * Creates a plain object from a MsgMpwWatchGetWatchedWarIdArray message. Also converts values to other types if specified.
             * @param message MsgMpwWatchGetWatchedWarIdArray
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgMpwWatchGetWatchedWarIdArray, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgMpwWatchGetWatchedWarIdArray to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgMpwWatchGetWatchedWarIdArray {

            /** Properties of a C. */
            interface IC {
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMpwWatchGetWatchedWarIdArray.IC);

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMpwWatchGetWatchedWarIdArray.IC): CommonProto.NetMessage.MsgMpwWatchGetWatchedWarIdArray.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgMpwWatchGetWatchedWarIdArray.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMpwWatchGetWatchedWarIdArray.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMpwWatchGetWatchedWarIdArray.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMpwWatchGetWatchedWarIdArray.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMpwWatchGetWatchedWarIdArray.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMpwWatchGetWatchedWarIdArray.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMpwWatchGetWatchedWarIdArray.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMpwWatchGetWatchedWarIdArray.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S warIdArray */
                warIdArray?: (number[]|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMpwWatchGetWatchedWarIdArray.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S warIdArray. */
                public warIdArray: number[];

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMpwWatchGetWatchedWarIdArray.IS): CommonProto.NetMessage.MsgMpwWatchGetWatchedWarIdArray.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgMpwWatchGetWatchedWarIdArray.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMpwWatchGetWatchedWarIdArray.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMpwWatchGetWatchedWarIdArray.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMpwWatchGetWatchedWarIdArray.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMpwWatchGetWatchedWarIdArray.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMpwWatchGetWatchedWarIdArray.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMpwWatchGetWatchedWarIdArray.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMpwWatchGetWatchedWarIdArray.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgMpwWatchGetOngoingWarIdArray. */
        interface IMsgMpwWatchGetOngoingWarIdArray {

            /** MsgMpwWatchGetOngoingWarIdArray c */
            c?: (CommonProto.NetMessage.MsgMpwWatchGetOngoingWarIdArray.IC|null);

            /** MsgMpwWatchGetOngoingWarIdArray s */
            s?: (CommonProto.NetMessage.MsgMpwWatchGetOngoingWarIdArray.IS|null);
        }

        /** Represents a MsgMpwWatchGetOngoingWarIdArray. */
        class MsgMpwWatchGetOngoingWarIdArray implements IMsgMpwWatchGetOngoingWarIdArray {

            /**
             * Constructs a new MsgMpwWatchGetOngoingWarIdArray.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgMpwWatchGetOngoingWarIdArray);

            /** MsgMpwWatchGetOngoingWarIdArray c. */
            public c?: (CommonProto.NetMessage.MsgMpwWatchGetOngoingWarIdArray.IC|null);

            /** MsgMpwWatchGetOngoingWarIdArray s. */
            public s?: (CommonProto.NetMessage.MsgMpwWatchGetOngoingWarIdArray.IS|null);

            /**
             * Creates a new MsgMpwWatchGetOngoingWarIdArray instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgMpwWatchGetOngoingWarIdArray instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgMpwWatchGetOngoingWarIdArray): CommonProto.NetMessage.MsgMpwWatchGetOngoingWarIdArray;

            /**
             * Encodes the specified MsgMpwWatchGetOngoingWarIdArray message. Does not implicitly {@link CommonProto.NetMessage.MsgMpwWatchGetOngoingWarIdArray.verify|verify} messages.
             * @param message MsgMpwWatchGetOngoingWarIdArray message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgMpwWatchGetOngoingWarIdArray, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgMpwWatchGetOngoingWarIdArray message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMpwWatchGetOngoingWarIdArray.verify|verify} messages.
             * @param message MsgMpwWatchGetOngoingWarIdArray message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgMpwWatchGetOngoingWarIdArray, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgMpwWatchGetOngoingWarIdArray message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgMpwWatchGetOngoingWarIdArray
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMpwWatchGetOngoingWarIdArray;

            /**
             * Decodes a MsgMpwWatchGetOngoingWarIdArray message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgMpwWatchGetOngoingWarIdArray
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMpwWatchGetOngoingWarIdArray;

            /**
             * Verifies a MsgMpwWatchGetOngoingWarIdArray message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgMpwWatchGetOngoingWarIdArray message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgMpwWatchGetOngoingWarIdArray
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMpwWatchGetOngoingWarIdArray;

            /**
             * Creates a plain object from a MsgMpwWatchGetOngoingWarIdArray message. Also converts values to other types if specified.
             * @param message MsgMpwWatchGetOngoingWarIdArray
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgMpwWatchGetOngoingWarIdArray, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgMpwWatchGetOngoingWarIdArray to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgMpwWatchGetOngoingWarIdArray {

            /** Properties of a C. */
            interface IC {
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMpwWatchGetOngoingWarIdArray.IC);

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMpwWatchGetOngoingWarIdArray.IC): CommonProto.NetMessage.MsgMpwWatchGetOngoingWarIdArray.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgMpwWatchGetOngoingWarIdArray.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMpwWatchGetOngoingWarIdArray.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMpwWatchGetOngoingWarIdArray.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMpwWatchGetOngoingWarIdArray.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMpwWatchGetOngoingWarIdArray.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMpwWatchGetOngoingWarIdArray.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMpwWatchGetOngoingWarIdArray.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMpwWatchGetOngoingWarIdArray.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S warIdArray */
                warIdArray?: (number[]|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMpwWatchGetOngoingWarIdArray.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S warIdArray. */
                public warIdArray: number[];

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMpwWatchGetOngoingWarIdArray.IS): CommonProto.NetMessage.MsgMpwWatchGetOngoingWarIdArray.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgMpwWatchGetOngoingWarIdArray.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMpwWatchGetOngoingWarIdArray.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMpwWatchGetOngoingWarIdArray.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMpwWatchGetOngoingWarIdArray.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMpwWatchGetOngoingWarIdArray.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMpwWatchGetOngoingWarIdArray.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMpwWatchGetOngoingWarIdArray.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMpwWatchGetOngoingWarIdArray.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgMpwWatchContinueWar. */
        interface IMsgMpwWatchContinueWar {

            /** MsgMpwWatchContinueWar c */
            c?: (CommonProto.NetMessage.MsgMpwWatchContinueWar.IC|null);

            /** MsgMpwWatchContinueWar s */
            s?: (CommonProto.NetMessage.MsgMpwWatchContinueWar.IS|null);
        }

        /** Represents a MsgMpwWatchContinueWar. */
        class MsgMpwWatchContinueWar implements IMsgMpwWatchContinueWar {

            /**
             * Constructs a new MsgMpwWatchContinueWar.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgMpwWatchContinueWar);

            /** MsgMpwWatchContinueWar c. */
            public c?: (CommonProto.NetMessage.MsgMpwWatchContinueWar.IC|null);

            /** MsgMpwWatchContinueWar s. */
            public s?: (CommonProto.NetMessage.MsgMpwWatchContinueWar.IS|null);

            /**
             * Creates a new MsgMpwWatchContinueWar instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgMpwWatchContinueWar instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgMpwWatchContinueWar): CommonProto.NetMessage.MsgMpwWatchContinueWar;

            /**
             * Encodes the specified MsgMpwWatchContinueWar message. Does not implicitly {@link CommonProto.NetMessage.MsgMpwWatchContinueWar.verify|verify} messages.
             * @param message MsgMpwWatchContinueWar message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgMpwWatchContinueWar, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgMpwWatchContinueWar message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMpwWatchContinueWar.verify|verify} messages.
             * @param message MsgMpwWatchContinueWar message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgMpwWatchContinueWar, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgMpwWatchContinueWar message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgMpwWatchContinueWar
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMpwWatchContinueWar;

            /**
             * Decodes a MsgMpwWatchContinueWar message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgMpwWatchContinueWar
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMpwWatchContinueWar;

            /**
             * Verifies a MsgMpwWatchContinueWar message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgMpwWatchContinueWar message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgMpwWatchContinueWar
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMpwWatchContinueWar;

            /**
             * Creates a plain object from a MsgMpwWatchContinueWar message. Also converts values to other types if specified.
             * @param message MsgMpwWatchContinueWar
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgMpwWatchContinueWar, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgMpwWatchContinueWar to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgMpwWatchContinueWar {

            /** Properties of a C. */
            interface IC {

                /** C warId */
                warId?: (number|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMpwWatchContinueWar.IC);

                /** C warId. */
                public warId: number;

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMpwWatchContinueWar.IC): CommonProto.NetMessage.MsgMpwWatchContinueWar.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgMpwWatchContinueWar.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMpwWatchContinueWar.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMpwWatchContinueWar.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMpwWatchContinueWar.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMpwWatchContinueWar.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMpwWatchContinueWar.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMpwWatchContinueWar.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMpwWatchContinueWar.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S warId */
                warId?: (number|null);

                /** S war */
                war?: (CommonProto.WarSerialization.ISerialWar|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMpwWatchContinueWar.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S warId. */
                public warId: number;

                /** S war. */
                public war?: (CommonProto.WarSerialization.ISerialWar|null);

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMpwWatchContinueWar.IS): CommonProto.NetMessage.MsgMpwWatchContinueWar.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgMpwWatchContinueWar.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMpwWatchContinueWar.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMpwWatchContinueWar.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMpwWatchContinueWar.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMpwWatchContinueWar.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMpwWatchContinueWar.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMpwWatchContinueWar.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMpwWatchContinueWar.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgMpwWatchGetIncomingInfo. */
        interface IMsgMpwWatchGetIncomingInfo {

            /** MsgMpwWatchGetIncomingInfo c */
            c?: (CommonProto.NetMessage.MsgMpwWatchGetIncomingInfo.IC|null);

            /** MsgMpwWatchGetIncomingInfo s */
            s?: (CommonProto.NetMessage.MsgMpwWatchGetIncomingInfo.IS|null);
        }

        /** Represents a MsgMpwWatchGetIncomingInfo. */
        class MsgMpwWatchGetIncomingInfo implements IMsgMpwWatchGetIncomingInfo {

            /**
             * Constructs a new MsgMpwWatchGetIncomingInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgMpwWatchGetIncomingInfo);

            /** MsgMpwWatchGetIncomingInfo c. */
            public c?: (CommonProto.NetMessage.MsgMpwWatchGetIncomingInfo.IC|null);

            /** MsgMpwWatchGetIncomingInfo s. */
            public s?: (CommonProto.NetMessage.MsgMpwWatchGetIncomingInfo.IS|null);

            /**
             * Creates a new MsgMpwWatchGetIncomingInfo instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgMpwWatchGetIncomingInfo instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgMpwWatchGetIncomingInfo): CommonProto.NetMessage.MsgMpwWatchGetIncomingInfo;

            /**
             * Encodes the specified MsgMpwWatchGetIncomingInfo message. Does not implicitly {@link CommonProto.NetMessage.MsgMpwWatchGetIncomingInfo.verify|verify} messages.
             * @param message MsgMpwWatchGetIncomingInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgMpwWatchGetIncomingInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgMpwWatchGetIncomingInfo message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMpwWatchGetIncomingInfo.verify|verify} messages.
             * @param message MsgMpwWatchGetIncomingInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgMpwWatchGetIncomingInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgMpwWatchGetIncomingInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgMpwWatchGetIncomingInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMpwWatchGetIncomingInfo;

            /**
             * Decodes a MsgMpwWatchGetIncomingInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgMpwWatchGetIncomingInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMpwWatchGetIncomingInfo;

            /**
             * Verifies a MsgMpwWatchGetIncomingInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgMpwWatchGetIncomingInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgMpwWatchGetIncomingInfo
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMpwWatchGetIncomingInfo;

            /**
             * Creates a plain object from a MsgMpwWatchGetIncomingInfo message. Also converts values to other types if specified.
             * @param message MsgMpwWatchGetIncomingInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgMpwWatchGetIncomingInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgMpwWatchGetIncomingInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgMpwWatchGetIncomingInfo {

            /** Properties of a C. */
            interface IC {

                /** C warId */
                warId?: (number|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMpwWatchGetIncomingInfo.IC);

                /** C warId. */
                public warId: number;

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMpwWatchGetIncomingInfo.IC): CommonProto.NetMessage.MsgMpwWatchGetIncomingInfo.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgMpwWatchGetIncomingInfo.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMpwWatchGetIncomingInfo.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMpwWatchGetIncomingInfo.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMpwWatchGetIncomingInfo.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMpwWatchGetIncomingInfo.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMpwWatchGetIncomingInfo.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMpwWatchGetIncomingInfo.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMpwWatchGetIncomingInfo.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S warId */
                warId?: (number|null);

                /** S incomingInfo */
                incomingInfo?: (CommonProto.MultiPlayerWar.IMpwWatchIncomingInfo|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMpwWatchGetIncomingInfo.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S warId. */
                public warId: number;

                /** S incomingInfo. */
                public incomingInfo?: (CommonProto.MultiPlayerWar.IMpwWatchIncomingInfo|null);

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMpwWatchGetIncomingInfo.IS): CommonProto.NetMessage.MsgMpwWatchGetIncomingInfo.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgMpwWatchGetIncomingInfo.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMpwWatchGetIncomingInfo.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMpwWatchGetIncomingInfo.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMpwWatchGetIncomingInfo.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMpwWatchGetIncomingInfo.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMpwWatchGetIncomingInfo.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMpwWatchGetIncomingInfo.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMpwWatchGetIncomingInfo.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgMpwWatchGetOutgoingInfo. */
        interface IMsgMpwWatchGetOutgoingInfo {

            /** MsgMpwWatchGetOutgoingInfo c */
            c?: (CommonProto.NetMessage.MsgMpwWatchGetOutgoingInfo.IC|null);

            /** MsgMpwWatchGetOutgoingInfo s */
            s?: (CommonProto.NetMessage.MsgMpwWatchGetOutgoingInfo.IS|null);
        }

        /** Represents a MsgMpwWatchGetOutgoingInfo. */
        class MsgMpwWatchGetOutgoingInfo implements IMsgMpwWatchGetOutgoingInfo {

            /**
             * Constructs a new MsgMpwWatchGetOutgoingInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgMpwWatchGetOutgoingInfo);

            /** MsgMpwWatchGetOutgoingInfo c. */
            public c?: (CommonProto.NetMessage.MsgMpwWatchGetOutgoingInfo.IC|null);

            /** MsgMpwWatchGetOutgoingInfo s. */
            public s?: (CommonProto.NetMessage.MsgMpwWatchGetOutgoingInfo.IS|null);

            /**
             * Creates a new MsgMpwWatchGetOutgoingInfo instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgMpwWatchGetOutgoingInfo instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgMpwWatchGetOutgoingInfo): CommonProto.NetMessage.MsgMpwWatchGetOutgoingInfo;

            /**
             * Encodes the specified MsgMpwWatchGetOutgoingInfo message. Does not implicitly {@link CommonProto.NetMessage.MsgMpwWatchGetOutgoingInfo.verify|verify} messages.
             * @param message MsgMpwWatchGetOutgoingInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgMpwWatchGetOutgoingInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgMpwWatchGetOutgoingInfo message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMpwWatchGetOutgoingInfo.verify|verify} messages.
             * @param message MsgMpwWatchGetOutgoingInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgMpwWatchGetOutgoingInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgMpwWatchGetOutgoingInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgMpwWatchGetOutgoingInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMpwWatchGetOutgoingInfo;

            /**
             * Decodes a MsgMpwWatchGetOutgoingInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgMpwWatchGetOutgoingInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMpwWatchGetOutgoingInfo;

            /**
             * Verifies a MsgMpwWatchGetOutgoingInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgMpwWatchGetOutgoingInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgMpwWatchGetOutgoingInfo
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMpwWatchGetOutgoingInfo;

            /**
             * Creates a plain object from a MsgMpwWatchGetOutgoingInfo message. Also converts values to other types if specified.
             * @param message MsgMpwWatchGetOutgoingInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgMpwWatchGetOutgoingInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgMpwWatchGetOutgoingInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgMpwWatchGetOutgoingInfo {

            /** Properties of a C. */
            interface IC {

                /** C warId */
                warId?: (number|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMpwWatchGetOutgoingInfo.IC);

                /** C warId. */
                public warId: number;

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMpwWatchGetOutgoingInfo.IC): CommonProto.NetMessage.MsgMpwWatchGetOutgoingInfo.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgMpwWatchGetOutgoingInfo.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMpwWatchGetOutgoingInfo.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMpwWatchGetOutgoingInfo.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMpwWatchGetOutgoingInfo.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMpwWatchGetOutgoingInfo.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMpwWatchGetOutgoingInfo.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMpwWatchGetOutgoingInfo.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMpwWatchGetOutgoingInfo.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S warId */
                warId?: (number|null);

                /** S outgoingInfo */
                outgoingInfo?: (CommonProto.MultiPlayerWar.IMpwWatchOutgoingInfo|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMpwWatchGetOutgoingInfo.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S warId. */
                public warId: number;

                /** S outgoingInfo. */
                public outgoingInfo?: (CommonProto.MultiPlayerWar.IMpwWatchOutgoingInfo|null);

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMpwWatchGetOutgoingInfo.IS): CommonProto.NetMessage.MsgMpwWatchGetOutgoingInfo.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgMpwWatchGetOutgoingInfo.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMpwWatchGetOutgoingInfo.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMpwWatchGetOutgoingInfo.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMpwWatchGetOutgoingInfo.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMpwWatchGetOutgoingInfo.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMpwWatchGetOutgoingInfo.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMpwWatchGetOutgoingInfo.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMpwWatchGetOutgoingInfo.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgMpwExecuteWarAction. */
        interface IMsgMpwExecuteWarAction {

            /** MsgMpwExecuteWarAction c */
            c?: (CommonProto.NetMessage.MsgMpwExecuteWarAction.IC|null);

            /** MsgMpwExecuteWarAction s */
            s?: (CommonProto.NetMessage.MsgMpwExecuteWarAction.IS|null);
        }

        /** Represents a MsgMpwExecuteWarAction. */
        class MsgMpwExecuteWarAction implements IMsgMpwExecuteWarAction {

            /**
             * Constructs a new MsgMpwExecuteWarAction.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgMpwExecuteWarAction);

            /** MsgMpwExecuteWarAction c. */
            public c?: (CommonProto.NetMessage.MsgMpwExecuteWarAction.IC|null);

            /** MsgMpwExecuteWarAction s. */
            public s?: (CommonProto.NetMessage.MsgMpwExecuteWarAction.IS|null);

            /**
             * Creates a new MsgMpwExecuteWarAction instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgMpwExecuteWarAction instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgMpwExecuteWarAction): CommonProto.NetMessage.MsgMpwExecuteWarAction;

            /**
             * Encodes the specified MsgMpwExecuteWarAction message. Does not implicitly {@link CommonProto.NetMessage.MsgMpwExecuteWarAction.verify|verify} messages.
             * @param message MsgMpwExecuteWarAction message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgMpwExecuteWarAction, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgMpwExecuteWarAction message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMpwExecuteWarAction.verify|verify} messages.
             * @param message MsgMpwExecuteWarAction message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgMpwExecuteWarAction, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgMpwExecuteWarAction message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgMpwExecuteWarAction
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMpwExecuteWarAction;

            /**
             * Decodes a MsgMpwExecuteWarAction message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgMpwExecuteWarAction
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMpwExecuteWarAction;

            /**
             * Verifies a MsgMpwExecuteWarAction message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgMpwExecuteWarAction message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgMpwExecuteWarAction
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMpwExecuteWarAction;

            /**
             * Creates a plain object from a MsgMpwExecuteWarAction message. Also converts values to other types if specified.
             * @param message MsgMpwExecuteWarAction
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgMpwExecuteWarAction, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgMpwExecuteWarAction to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgMpwExecuteWarAction {

            /** Properties of a C. */
            interface IC {

                /** C warId */
                warId?: (number|null);

                /** C actionContainer */
                actionContainer?: (CommonProto.WarAction.IWarActionContainer|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMpwExecuteWarAction.IC);

                /** C warId. */
                public warId: number;

                /** C actionContainer. */
                public actionContainer?: (CommonProto.WarAction.IWarActionContainer|null);

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMpwExecuteWarAction.IC): CommonProto.NetMessage.MsgMpwExecuteWarAction.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgMpwExecuteWarAction.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMpwExecuteWarAction.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMpwExecuteWarAction.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMpwExecuteWarAction.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMpwExecuteWarAction.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMpwExecuteWarAction.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMpwExecuteWarAction.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMpwExecuteWarAction.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S warId */
                warId?: (number|null);

                /** S actionContainer */
                actionContainer?: (CommonProto.WarAction.IWarActionContainer|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMpwExecuteWarAction.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S warId. */
                public warId: number;

                /** S actionContainer. */
                public actionContainer?: (CommonProto.WarAction.IWarActionContainer|null);

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMpwExecuteWarAction.IS): CommonProto.NetMessage.MsgMpwExecuteWarAction.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgMpwExecuteWarAction.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMpwExecuteWarAction.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMpwExecuteWarAction.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMpwExecuteWarAction.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMpwExecuteWarAction.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMpwExecuteWarAction.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMpwExecuteWarAction.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMpwExecuteWarAction.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgMpwGetHalfwayReplayData. */
        interface IMsgMpwGetHalfwayReplayData {

            /** MsgMpwGetHalfwayReplayData c */
            c?: (CommonProto.NetMessage.MsgMpwGetHalfwayReplayData.IC|null);

            /** MsgMpwGetHalfwayReplayData s */
            s?: (CommonProto.NetMessage.MsgMpwGetHalfwayReplayData.IS|null);
        }

        /** Represents a MsgMpwGetHalfwayReplayData. */
        class MsgMpwGetHalfwayReplayData implements IMsgMpwGetHalfwayReplayData {

            /**
             * Constructs a new MsgMpwGetHalfwayReplayData.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgMpwGetHalfwayReplayData);

            /** MsgMpwGetHalfwayReplayData c. */
            public c?: (CommonProto.NetMessage.MsgMpwGetHalfwayReplayData.IC|null);

            /** MsgMpwGetHalfwayReplayData s. */
            public s?: (CommonProto.NetMessage.MsgMpwGetHalfwayReplayData.IS|null);

            /**
             * Creates a new MsgMpwGetHalfwayReplayData instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgMpwGetHalfwayReplayData instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgMpwGetHalfwayReplayData): CommonProto.NetMessage.MsgMpwGetHalfwayReplayData;

            /**
             * Encodes the specified MsgMpwGetHalfwayReplayData message. Does not implicitly {@link CommonProto.NetMessage.MsgMpwGetHalfwayReplayData.verify|verify} messages.
             * @param message MsgMpwGetHalfwayReplayData message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgMpwGetHalfwayReplayData, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgMpwGetHalfwayReplayData message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMpwGetHalfwayReplayData.verify|verify} messages.
             * @param message MsgMpwGetHalfwayReplayData message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgMpwGetHalfwayReplayData, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgMpwGetHalfwayReplayData message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgMpwGetHalfwayReplayData
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMpwGetHalfwayReplayData;

            /**
             * Decodes a MsgMpwGetHalfwayReplayData message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgMpwGetHalfwayReplayData
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMpwGetHalfwayReplayData;

            /**
             * Verifies a MsgMpwGetHalfwayReplayData message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgMpwGetHalfwayReplayData message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgMpwGetHalfwayReplayData
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMpwGetHalfwayReplayData;

            /**
             * Creates a plain object from a MsgMpwGetHalfwayReplayData message. Also converts values to other types if specified.
             * @param message MsgMpwGetHalfwayReplayData
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgMpwGetHalfwayReplayData, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgMpwGetHalfwayReplayData to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgMpwGetHalfwayReplayData {

            /** Properties of a C. */
            interface IC {

                /** C warId */
                warId?: (number|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMpwGetHalfwayReplayData.IC);

                /** C warId. */
                public warId: number;

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMpwGetHalfwayReplayData.IC): CommonProto.NetMessage.MsgMpwGetHalfwayReplayData.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgMpwGetHalfwayReplayData.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMpwGetHalfwayReplayData.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMpwGetHalfwayReplayData.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMpwGetHalfwayReplayData.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMpwGetHalfwayReplayData.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMpwGetHalfwayReplayData.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMpwGetHalfwayReplayData.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMpwGetHalfwayReplayData.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S warId */
                warId?: (number|null);

                /** S warData */
                warData?: (CommonProto.WarSerialization.ISerialWar|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMpwGetHalfwayReplayData.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S warId. */
                public warId: number;

                /** S warData. */
                public warData?: (CommonProto.WarSerialization.ISerialWar|null);

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMpwGetHalfwayReplayData.IS): CommonProto.NetMessage.MsgMpwGetHalfwayReplayData.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgMpwGetHalfwayReplayData.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMpwGetHalfwayReplayData.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMpwGetHalfwayReplayData.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMpwGetHalfwayReplayData.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMpwGetHalfwayReplayData.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMpwGetHalfwayReplayData.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMpwGetHalfwayReplayData.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMpwGetHalfwayReplayData.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgSpmCreateScw. */
        interface IMsgSpmCreateScw {

            /** MsgSpmCreateScw c */
            c?: (CommonProto.NetMessage.MsgSpmCreateScw.IC|null);

            /** MsgSpmCreateScw s */
            s?: (CommonProto.NetMessage.MsgSpmCreateScw.IS|null);
        }

        /** Represents a MsgSpmCreateScw. */
        class MsgSpmCreateScw implements IMsgSpmCreateScw {

            /**
             * Constructs a new MsgSpmCreateScw.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgSpmCreateScw);

            /** MsgSpmCreateScw c. */
            public c?: (CommonProto.NetMessage.MsgSpmCreateScw.IC|null);

            /** MsgSpmCreateScw s. */
            public s?: (CommonProto.NetMessage.MsgSpmCreateScw.IS|null);

            /**
             * Creates a new MsgSpmCreateScw instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgSpmCreateScw instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgSpmCreateScw): CommonProto.NetMessage.MsgSpmCreateScw;

            /**
             * Encodes the specified MsgSpmCreateScw message. Does not implicitly {@link CommonProto.NetMessage.MsgSpmCreateScw.verify|verify} messages.
             * @param message MsgSpmCreateScw message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgSpmCreateScw, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgSpmCreateScw message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgSpmCreateScw.verify|verify} messages.
             * @param message MsgSpmCreateScw message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgSpmCreateScw, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgSpmCreateScw message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgSpmCreateScw
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgSpmCreateScw;

            /**
             * Decodes a MsgSpmCreateScw message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgSpmCreateScw
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgSpmCreateScw;

            /**
             * Verifies a MsgSpmCreateScw message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgSpmCreateScw message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgSpmCreateScw
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgSpmCreateScw;

            /**
             * Creates a plain object from a MsgSpmCreateScw message. Also converts values to other types if specified.
             * @param message MsgSpmCreateScw
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgSpmCreateScw, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgSpmCreateScw to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgSpmCreateScw {

            /** Properties of a C. */
            interface IC {

                /** C slotIndex */
                slotIndex?: (number|null);

                /** C slotExtraData */
                slotExtraData?: (CommonProto.SinglePlayerMode.ISpmWarSaveSlotExtraData|null);

                /** C settingsForCommon */
                settingsForCommon?: (CommonProto.WarSettings.ISettingsForCommon|null);

                /** C settingsForScw */
                settingsForScw?: (CommonProto.WarSettings.ISettingsForScw|null);

                /** C playerInfoList */
                playerInfoList?: (CommonProto.Structure.IDataForPlayerInRoom[]|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgSpmCreateScw.IC);

                /** C slotIndex. */
                public slotIndex: number;

                /** C slotExtraData. */
                public slotExtraData?: (CommonProto.SinglePlayerMode.ISpmWarSaveSlotExtraData|null);

                /** C settingsForCommon. */
                public settingsForCommon?: (CommonProto.WarSettings.ISettingsForCommon|null);

                /** C settingsForScw. */
                public settingsForScw?: (CommonProto.WarSettings.ISettingsForScw|null);

                /** C playerInfoList. */
                public playerInfoList: CommonProto.Structure.IDataForPlayerInRoom[];

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgSpmCreateScw.IC): CommonProto.NetMessage.MsgSpmCreateScw.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgSpmCreateScw.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgSpmCreateScw.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgSpmCreateScw.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgSpmCreateScw.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgSpmCreateScw.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgSpmCreateScw.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgSpmCreateScw.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgSpmCreateScw.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S slotIndex */
                slotIndex?: (number|null);

                /** S warData */
                warData?: (CommonProto.WarSerialization.ISerialWar|null);

                /** S extraData */
                extraData?: (CommonProto.SinglePlayerMode.ISpmWarSaveSlotExtraData|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgSpmCreateScw.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S slotIndex. */
                public slotIndex: number;

                /** S warData. */
                public warData?: (CommonProto.WarSerialization.ISerialWar|null);

                /** S extraData. */
                public extraData?: (CommonProto.SinglePlayerMode.ISpmWarSaveSlotExtraData|null);

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgSpmCreateScw.IS): CommonProto.NetMessage.MsgSpmCreateScw.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgSpmCreateScw.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgSpmCreateScw.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgSpmCreateScw.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgSpmCreateScw.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgSpmCreateScw.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgSpmCreateScw.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgSpmCreateScw.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgSpmCreateScw.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgSpmCreateSfw. */
        interface IMsgSpmCreateSfw {

            /** MsgSpmCreateSfw c */
            c?: (CommonProto.NetMessage.MsgSpmCreateSfw.IC|null);

            /** MsgSpmCreateSfw s */
            s?: (CommonProto.NetMessage.MsgSpmCreateSfw.IS|null);
        }

        /** Represents a MsgSpmCreateSfw. */
        class MsgSpmCreateSfw implements IMsgSpmCreateSfw {

            /**
             * Constructs a new MsgSpmCreateSfw.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgSpmCreateSfw);

            /** MsgSpmCreateSfw c. */
            public c?: (CommonProto.NetMessage.MsgSpmCreateSfw.IC|null);

            /** MsgSpmCreateSfw s. */
            public s?: (CommonProto.NetMessage.MsgSpmCreateSfw.IS|null);

            /**
             * Creates a new MsgSpmCreateSfw instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgSpmCreateSfw instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgSpmCreateSfw): CommonProto.NetMessage.MsgSpmCreateSfw;

            /**
             * Encodes the specified MsgSpmCreateSfw message. Does not implicitly {@link CommonProto.NetMessage.MsgSpmCreateSfw.verify|verify} messages.
             * @param message MsgSpmCreateSfw message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgSpmCreateSfw, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgSpmCreateSfw message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgSpmCreateSfw.verify|verify} messages.
             * @param message MsgSpmCreateSfw message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgSpmCreateSfw, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgSpmCreateSfw message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgSpmCreateSfw
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgSpmCreateSfw;

            /**
             * Decodes a MsgSpmCreateSfw message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgSpmCreateSfw
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgSpmCreateSfw;

            /**
             * Verifies a MsgSpmCreateSfw message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgSpmCreateSfw message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgSpmCreateSfw
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgSpmCreateSfw;

            /**
             * Creates a plain object from a MsgSpmCreateSfw message. Also converts values to other types if specified.
             * @param message MsgSpmCreateSfw
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgSpmCreateSfw, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgSpmCreateSfw to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgSpmCreateSfw {

            /** Properties of a C. */
            interface IC {

                /** C slotIndex */
                slotIndex?: (number|null);

                /** C slotExtraData */
                slotExtraData?: (CommonProto.SinglePlayerMode.ISpmWarSaveSlotExtraData|null);

                /** C warData */
                warData?: (CommonProto.WarSerialization.ISerialWar|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgSpmCreateSfw.IC);

                /** C slotIndex. */
                public slotIndex: number;

                /** C slotExtraData. */
                public slotExtraData?: (CommonProto.SinglePlayerMode.ISpmWarSaveSlotExtraData|null);

                /** C warData. */
                public warData?: (CommonProto.WarSerialization.ISerialWar|null);

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgSpmCreateSfw.IC): CommonProto.NetMessage.MsgSpmCreateSfw.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgSpmCreateSfw.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgSpmCreateSfw.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgSpmCreateSfw.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgSpmCreateSfw.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgSpmCreateSfw.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgSpmCreateSfw.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgSpmCreateSfw.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgSpmCreateSfw.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S slotIndex */
                slotIndex?: (number|null);

                /** S warData */
                warData?: (CommonProto.WarSerialization.ISerialWar|null);

                /** S extraData */
                extraData?: (CommonProto.SinglePlayerMode.ISpmWarSaveSlotExtraData|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgSpmCreateSfw.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S slotIndex. */
                public slotIndex: number;

                /** S warData. */
                public warData?: (CommonProto.WarSerialization.ISerialWar|null);

                /** S extraData. */
                public extraData?: (CommonProto.SinglePlayerMode.ISpmWarSaveSlotExtraData|null);

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgSpmCreateSfw.IS): CommonProto.NetMessage.MsgSpmCreateSfw.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgSpmCreateSfw.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgSpmCreateSfw.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgSpmCreateSfw.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgSpmCreateSfw.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgSpmCreateSfw.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgSpmCreateSfw.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgSpmCreateSfw.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgSpmCreateSfw.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgSpmCreateSrw. */
        interface IMsgSpmCreateSrw {

            /** MsgSpmCreateSrw c */
            c?: (CommonProto.NetMessage.MsgSpmCreateSrw.IC|null);

            /** MsgSpmCreateSrw s */
            s?: (CommonProto.NetMessage.MsgSpmCreateSrw.IS|null);
        }

        /** Represents a MsgSpmCreateSrw. */
        class MsgSpmCreateSrw implements IMsgSpmCreateSrw {

            /**
             * Constructs a new MsgSpmCreateSrw.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgSpmCreateSrw);

            /** MsgSpmCreateSrw c. */
            public c?: (CommonProto.NetMessage.MsgSpmCreateSrw.IC|null);

            /** MsgSpmCreateSrw s. */
            public s?: (CommonProto.NetMessage.MsgSpmCreateSrw.IS|null);

            /**
             * Creates a new MsgSpmCreateSrw instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgSpmCreateSrw instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgSpmCreateSrw): CommonProto.NetMessage.MsgSpmCreateSrw;

            /**
             * Encodes the specified MsgSpmCreateSrw message. Does not implicitly {@link CommonProto.NetMessage.MsgSpmCreateSrw.verify|verify} messages.
             * @param message MsgSpmCreateSrw message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgSpmCreateSrw, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgSpmCreateSrw message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgSpmCreateSrw.verify|verify} messages.
             * @param message MsgSpmCreateSrw message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgSpmCreateSrw, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgSpmCreateSrw message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgSpmCreateSrw
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgSpmCreateSrw;

            /**
             * Decodes a MsgSpmCreateSrw message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgSpmCreateSrw
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgSpmCreateSrw;

            /**
             * Verifies a MsgSpmCreateSrw message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgSpmCreateSrw message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgSpmCreateSrw
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgSpmCreateSrw;

            /**
             * Creates a plain object from a MsgSpmCreateSrw message. Also converts values to other types if specified.
             * @param message MsgSpmCreateSrw
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgSpmCreateSrw, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgSpmCreateSrw to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgSpmCreateSrw {

            /** Properties of a C. */
            interface IC {

                /** C slotIndex */
                slotIndex?: (number|null);

                /** C slotExtraData */
                slotExtraData?: (CommonProto.SinglePlayerMode.ISpmWarSaveSlotExtraData|null);

                /** C settingsForCommon */
                settingsForCommon?: (CommonProto.WarSettings.ISettingsForCommon|null);

                /** C mapId */
                mapId?: (number|null);

                /** C playerInfoList */
                playerInfoList?: (CommonProto.Structure.IDataForPlayerInRoom[]|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgSpmCreateSrw.IC);

                /** C slotIndex. */
                public slotIndex: number;

                /** C slotExtraData. */
                public slotExtraData?: (CommonProto.SinglePlayerMode.ISpmWarSaveSlotExtraData|null);

                /** C settingsForCommon. */
                public settingsForCommon?: (CommonProto.WarSettings.ISettingsForCommon|null);

                /** C mapId. */
                public mapId: number;

                /** C playerInfoList. */
                public playerInfoList: CommonProto.Structure.IDataForPlayerInRoom[];

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgSpmCreateSrw.IC): CommonProto.NetMessage.MsgSpmCreateSrw.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgSpmCreateSrw.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgSpmCreateSrw.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgSpmCreateSrw.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgSpmCreateSrw.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgSpmCreateSrw.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgSpmCreateSrw.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgSpmCreateSrw.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgSpmCreateSrw.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S slotIndex */
                slotIndex?: (number|null);

                /** S warData */
                warData?: (CommonProto.WarSerialization.ISerialWar|null);

                /** S extraData */
                extraData?: (CommonProto.SinglePlayerMode.ISpmWarSaveSlotExtraData|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgSpmCreateSrw.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S slotIndex. */
                public slotIndex: number;

                /** S warData. */
                public warData?: (CommonProto.WarSerialization.ISerialWar|null);

                /** S extraData. */
                public extraData?: (CommonProto.SinglePlayerMode.ISpmWarSaveSlotExtraData|null);

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgSpmCreateSrw.IS): CommonProto.NetMessage.MsgSpmCreateSrw.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgSpmCreateSrw.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgSpmCreateSrw.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgSpmCreateSrw.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgSpmCreateSrw.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgSpmCreateSrw.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgSpmCreateSrw.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgSpmCreateSrw.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgSpmCreateSrw.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgSpmGetWarSaveSlotFullData. */
        interface IMsgSpmGetWarSaveSlotFullData {

            /** MsgSpmGetWarSaveSlotFullData c */
            c?: (CommonProto.NetMessage.MsgSpmGetWarSaveSlotFullData.IC|null);

            /** MsgSpmGetWarSaveSlotFullData s */
            s?: (CommonProto.NetMessage.MsgSpmGetWarSaveSlotFullData.IS|null);
        }

        /** Represents a MsgSpmGetWarSaveSlotFullData. */
        class MsgSpmGetWarSaveSlotFullData implements IMsgSpmGetWarSaveSlotFullData {

            /**
             * Constructs a new MsgSpmGetWarSaveSlotFullData.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgSpmGetWarSaveSlotFullData);

            /** MsgSpmGetWarSaveSlotFullData c. */
            public c?: (CommonProto.NetMessage.MsgSpmGetWarSaveSlotFullData.IC|null);

            /** MsgSpmGetWarSaveSlotFullData s. */
            public s?: (CommonProto.NetMessage.MsgSpmGetWarSaveSlotFullData.IS|null);

            /**
             * Creates a new MsgSpmGetWarSaveSlotFullData instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgSpmGetWarSaveSlotFullData instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgSpmGetWarSaveSlotFullData): CommonProto.NetMessage.MsgSpmGetWarSaveSlotFullData;

            /**
             * Encodes the specified MsgSpmGetWarSaveSlotFullData message. Does not implicitly {@link CommonProto.NetMessage.MsgSpmGetWarSaveSlotFullData.verify|verify} messages.
             * @param message MsgSpmGetWarSaveSlotFullData message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgSpmGetWarSaveSlotFullData, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgSpmGetWarSaveSlotFullData message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgSpmGetWarSaveSlotFullData.verify|verify} messages.
             * @param message MsgSpmGetWarSaveSlotFullData message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgSpmGetWarSaveSlotFullData, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgSpmGetWarSaveSlotFullData message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgSpmGetWarSaveSlotFullData
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgSpmGetWarSaveSlotFullData;

            /**
             * Decodes a MsgSpmGetWarSaveSlotFullData message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgSpmGetWarSaveSlotFullData
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgSpmGetWarSaveSlotFullData;

            /**
             * Verifies a MsgSpmGetWarSaveSlotFullData message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgSpmGetWarSaveSlotFullData message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgSpmGetWarSaveSlotFullData
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgSpmGetWarSaveSlotFullData;

            /**
             * Creates a plain object from a MsgSpmGetWarSaveSlotFullData message. Also converts values to other types if specified.
             * @param message MsgSpmGetWarSaveSlotFullData
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgSpmGetWarSaveSlotFullData, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgSpmGetWarSaveSlotFullData to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgSpmGetWarSaveSlotFullData {

            /** Properties of a C. */
            interface IC {

                /** C slotIndex */
                slotIndex?: (number|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgSpmGetWarSaveSlotFullData.IC);

                /** C slotIndex. */
                public slotIndex: number;

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgSpmGetWarSaveSlotFullData.IC): CommonProto.NetMessage.MsgSpmGetWarSaveSlotFullData.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgSpmGetWarSaveSlotFullData.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgSpmGetWarSaveSlotFullData.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgSpmGetWarSaveSlotFullData.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgSpmGetWarSaveSlotFullData.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgSpmGetWarSaveSlotFullData.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgSpmGetWarSaveSlotFullData.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgSpmGetWarSaveSlotFullData.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgSpmGetWarSaveSlotFullData.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S slotIndex */
                slotIndex?: (number|null);

                /** S slotData */
                slotData?: (CommonProto.SinglePlayerMode.ISpmWarSaveSlotFullData|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgSpmGetWarSaveSlotFullData.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S slotIndex. */
                public slotIndex: number;

                /** S slotData. */
                public slotData?: (CommonProto.SinglePlayerMode.ISpmWarSaveSlotFullData|null);

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgSpmGetWarSaveSlotFullData.IS): CommonProto.NetMessage.MsgSpmGetWarSaveSlotFullData.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgSpmGetWarSaveSlotFullData.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgSpmGetWarSaveSlotFullData.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgSpmGetWarSaveSlotFullData.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgSpmGetWarSaveSlotFullData.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgSpmGetWarSaveSlotFullData.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgSpmGetWarSaveSlotFullData.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgSpmGetWarSaveSlotFullData.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgSpmGetWarSaveSlotFullData.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgSpmDeleteWarSaveSlot. */
        interface IMsgSpmDeleteWarSaveSlot {

            /** MsgSpmDeleteWarSaveSlot c */
            c?: (CommonProto.NetMessage.MsgSpmDeleteWarSaveSlot.IC|null);

            /** MsgSpmDeleteWarSaveSlot s */
            s?: (CommonProto.NetMessage.MsgSpmDeleteWarSaveSlot.IS|null);
        }

        /** Represents a MsgSpmDeleteWarSaveSlot. */
        class MsgSpmDeleteWarSaveSlot implements IMsgSpmDeleteWarSaveSlot {

            /**
             * Constructs a new MsgSpmDeleteWarSaveSlot.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgSpmDeleteWarSaveSlot);

            /** MsgSpmDeleteWarSaveSlot c. */
            public c?: (CommonProto.NetMessage.MsgSpmDeleteWarSaveSlot.IC|null);

            /** MsgSpmDeleteWarSaveSlot s. */
            public s?: (CommonProto.NetMessage.MsgSpmDeleteWarSaveSlot.IS|null);

            /**
             * Creates a new MsgSpmDeleteWarSaveSlot instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgSpmDeleteWarSaveSlot instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgSpmDeleteWarSaveSlot): CommonProto.NetMessage.MsgSpmDeleteWarSaveSlot;

            /**
             * Encodes the specified MsgSpmDeleteWarSaveSlot message. Does not implicitly {@link CommonProto.NetMessage.MsgSpmDeleteWarSaveSlot.verify|verify} messages.
             * @param message MsgSpmDeleteWarSaveSlot message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgSpmDeleteWarSaveSlot, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgSpmDeleteWarSaveSlot message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgSpmDeleteWarSaveSlot.verify|verify} messages.
             * @param message MsgSpmDeleteWarSaveSlot message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgSpmDeleteWarSaveSlot, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgSpmDeleteWarSaveSlot message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgSpmDeleteWarSaveSlot
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgSpmDeleteWarSaveSlot;

            /**
             * Decodes a MsgSpmDeleteWarSaveSlot message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgSpmDeleteWarSaveSlot
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgSpmDeleteWarSaveSlot;

            /**
             * Verifies a MsgSpmDeleteWarSaveSlot message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgSpmDeleteWarSaveSlot message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgSpmDeleteWarSaveSlot
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgSpmDeleteWarSaveSlot;

            /**
             * Creates a plain object from a MsgSpmDeleteWarSaveSlot message. Also converts values to other types if specified.
             * @param message MsgSpmDeleteWarSaveSlot
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgSpmDeleteWarSaveSlot, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgSpmDeleteWarSaveSlot to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgSpmDeleteWarSaveSlot {

            /** Properties of a C. */
            interface IC {

                /** C slotIndex */
                slotIndex?: (number|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgSpmDeleteWarSaveSlot.IC);

                /** C slotIndex. */
                public slotIndex: number;

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgSpmDeleteWarSaveSlot.IC): CommonProto.NetMessage.MsgSpmDeleteWarSaveSlot.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgSpmDeleteWarSaveSlot.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgSpmDeleteWarSaveSlot.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgSpmDeleteWarSaveSlot.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgSpmDeleteWarSaveSlot.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgSpmDeleteWarSaveSlot.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgSpmDeleteWarSaveSlot.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgSpmDeleteWarSaveSlot.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgSpmDeleteWarSaveSlot.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S slotIndex */
                slotIndex?: (number|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgSpmDeleteWarSaveSlot.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S slotIndex. */
                public slotIndex: number;

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgSpmDeleteWarSaveSlot.IS): CommonProto.NetMessage.MsgSpmDeleteWarSaveSlot.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgSpmDeleteWarSaveSlot.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgSpmDeleteWarSaveSlot.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgSpmDeleteWarSaveSlot.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgSpmDeleteWarSaveSlot.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgSpmDeleteWarSaveSlot.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgSpmDeleteWarSaveSlot.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgSpmDeleteWarSaveSlot.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgSpmDeleteWarSaveSlot.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgSpmSaveScw. */
        interface IMsgSpmSaveScw {

            /** MsgSpmSaveScw c */
            c?: (CommonProto.NetMessage.MsgSpmSaveScw.IC|null);

            /** MsgSpmSaveScw s */
            s?: (CommonProto.NetMessage.MsgSpmSaveScw.IS|null);
        }

        /** Represents a MsgSpmSaveScw. */
        class MsgSpmSaveScw implements IMsgSpmSaveScw {

            /**
             * Constructs a new MsgSpmSaveScw.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgSpmSaveScw);

            /** MsgSpmSaveScw c. */
            public c?: (CommonProto.NetMessage.MsgSpmSaveScw.IC|null);

            /** MsgSpmSaveScw s. */
            public s?: (CommonProto.NetMessage.MsgSpmSaveScw.IS|null);

            /**
             * Creates a new MsgSpmSaveScw instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgSpmSaveScw instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgSpmSaveScw): CommonProto.NetMessage.MsgSpmSaveScw;

            /**
             * Encodes the specified MsgSpmSaveScw message. Does not implicitly {@link CommonProto.NetMessage.MsgSpmSaveScw.verify|verify} messages.
             * @param message MsgSpmSaveScw message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgSpmSaveScw, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgSpmSaveScw message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgSpmSaveScw.verify|verify} messages.
             * @param message MsgSpmSaveScw message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgSpmSaveScw, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgSpmSaveScw message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgSpmSaveScw
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgSpmSaveScw;

            /**
             * Decodes a MsgSpmSaveScw message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgSpmSaveScw
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgSpmSaveScw;

            /**
             * Verifies a MsgSpmSaveScw message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgSpmSaveScw message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgSpmSaveScw
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgSpmSaveScw;

            /**
             * Creates a plain object from a MsgSpmSaveScw message. Also converts values to other types if specified.
             * @param message MsgSpmSaveScw
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgSpmSaveScw, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgSpmSaveScw to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgSpmSaveScw {

            /** Properties of a C. */
            interface IC {

                /** C slotIndex */
                slotIndex?: (number|null);

                /** C slotExtraData */
                slotExtraData?: (CommonProto.SinglePlayerMode.ISpmWarSaveSlotExtraData|null);

                /** C warData */
                warData?: (CommonProto.WarSerialization.ISerialWar|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgSpmSaveScw.IC);

                /** C slotIndex. */
                public slotIndex: number;

                /** C slotExtraData. */
                public slotExtraData?: (CommonProto.SinglePlayerMode.ISpmWarSaveSlotExtraData|null);

                /** C warData. */
                public warData?: (CommonProto.WarSerialization.ISerialWar|null);

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgSpmSaveScw.IC): CommonProto.NetMessage.MsgSpmSaveScw.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgSpmSaveScw.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgSpmSaveScw.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgSpmSaveScw.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgSpmSaveScw.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgSpmSaveScw.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgSpmSaveScw.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgSpmSaveScw.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgSpmSaveScw.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S slotIndex */
                slotIndex?: (number|null);

                /** S slotExtraData */
                slotExtraData?: (CommonProto.SinglePlayerMode.ISpmWarSaveSlotExtraData|null);

                /** S warData */
                warData?: (CommonProto.WarSerialization.ISerialWar|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgSpmSaveScw.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S slotIndex. */
                public slotIndex: number;

                /** S slotExtraData. */
                public slotExtraData?: (CommonProto.SinglePlayerMode.ISpmWarSaveSlotExtraData|null);

                /** S warData. */
                public warData?: (CommonProto.WarSerialization.ISerialWar|null);

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgSpmSaveScw.IS): CommonProto.NetMessage.MsgSpmSaveScw.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgSpmSaveScw.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgSpmSaveScw.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgSpmSaveScw.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgSpmSaveScw.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgSpmSaveScw.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgSpmSaveScw.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgSpmSaveScw.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgSpmSaveScw.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgSpmSaveSfw. */
        interface IMsgSpmSaveSfw {

            /** MsgSpmSaveSfw c */
            c?: (CommonProto.NetMessage.MsgSpmSaveSfw.IC|null);

            /** MsgSpmSaveSfw s */
            s?: (CommonProto.NetMessage.MsgSpmSaveSfw.IS|null);
        }

        /** Represents a MsgSpmSaveSfw. */
        class MsgSpmSaveSfw implements IMsgSpmSaveSfw {

            /**
             * Constructs a new MsgSpmSaveSfw.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgSpmSaveSfw);

            /** MsgSpmSaveSfw c. */
            public c?: (CommonProto.NetMessage.MsgSpmSaveSfw.IC|null);

            /** MsgSpmSaveSfw s. */
            public s?: (CommonProto.NetMessage.MsgSpmSaveSfw.IS|null);

            /**
             * Creates a new MsgSpmSaveSfw instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgSpmSaveSfw instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgSpmSaveSfw): CommonProto.NetMessage.MsgSpmSaveSfw;

            /**
             * Encodes the specified MsgSpmSaveSfw message. Does not implicitly {@link CommonProto.NetMessage.MsgSpmSaveSfw.verify|verify} messages.
             * @param message MsgSpmSaveSfw message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgSpmSaveSfw, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgSpmSaveSfw message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgSpmSaveSfw.verify|verify} messages.
             * @param message MsgSpmSaveSfw message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgSpmSaveSfw, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgSpmSaveSfw message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgSpmSaveSfw
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgSpmSaveSfw;

            /**
             * Decodes a MsgSpmSaveSfw message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgSpmSaveSfw
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgSpmSaveSfw;

            /**
             * Verifies a MsgSpmSaveSfw message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgSpmSaveSfw message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgSpmSaveSfw
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgSpmSaveSfw;

            /**
             * Creates a plain object from a MsgSpmSaveSfw message. Also converts values to other types if specified.
             * @param message MsgSpmSaveSfw
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgSpmSaveSfw, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgSpmSaveSfw to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgSpmSaveSfw {

            /** Properties of a C. */
            interface IC {

                /** C slotIndex */
                slotIndex?: (number|null);

                /** C slotExtraData */
                slotExtraData?: (CommonProto.SinglePlayerMode.ISpmWarSaveSlotExtraData|null);

                /** C warData */
                warData?: (CommonProto.WarSerialization.ISerialWar|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgSpmSaveSfw.IC);

                /** C slotIndex. */
                public slotIndex: number;

                /** C slotExtraData. */
                public slotExtraData?: (CommonProto.SinglePlayerMode.ISpmWarSaveSlotExtraData|null);

                /** C warData. */
                public warData?: (CommonProto.WarSerialization.ISerialWar|null);

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgSpmSaveSfw.IC): CommonProto.NetMessage.MsgSpmSaveSfw.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgSpmSaveSfw.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgSpmSaveSfw.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgSpmSaveSfw.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgSpmSaveSfw.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgSpmSaveSfw.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgSpmSaveSfw.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgSpmSaveSfw.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgSpmSaveSfw.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S slotIndex */
                slotIndex?: (number|null);

                /** S slotExtraData */
                slotExtraData?: (CommonProto.SinglePlayerMode.ISpmWarSaveSlotExtraData|null);

                /** S warData */
                warData?: (CommonProto.WarSerialization.ISerialWar|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgSpmSaveSfw.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S slotIndex. */
                public slotIndex: number;

                /** S slotExtraData. */
                public slotExtraData?: (CommonProto.SinglePlayerMode.ISpmWarSaveSlotExtraData|null);

                /** S warData. */
                public warData?: (CommonProto.WarSerialization.ISerialWar|null);

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgSpmSaveSfw.IS): CommonProto.NetMessage.MsgSpmSaveSfw.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgSpmSaveSfw.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgSpmSaveSfw.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgSpmSaveSfw.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgSpmSaveSfw.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgSpmSaveSfw.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgSpmSaveSfw.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgSpmSaveSfw.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgSpmSaveSfw.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgSpmSaveSrw. */
        interface IMsgSpmSaveSrw {

            /** MsgSpmSaveSrw c */
            c?: (CommonProto.NetMessage.MsgSpmSaveSrw.IC|null);

            /** MsgSpmSaveSrw s */
            s?: (CommonProto.NetMessage.MsgSpmSaveSrw.IS|null);
        }

        /** Represents a MsgSpmSaveSrw. */
        class MsgSpmSaveSrw implements IMsgSpmSaveSrw {

            /**
             * Constructs a new MsgSpmSaveSrw.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgSpmSaveSrw);

            /** MsgSpmSaveSrw c. */
            public c?: (CommonProto.NetMessage.MsgSpmSaveSrw.IC|null);

            /** MsgSpmSaveSrw s. */
            public s?: (CommonProto.NetMessage.MsgSpmSaveSrw.IS|null);

            /**
             * Creates a new MsgSpmSaveSrw instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgSpmSaveSrw instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgSpmSaveSrw): CommonProto.NetMessage.MsgSpmSaveSrw;

            /**
             * Encodes the specified MsgSpmSaveSrw message. Does not implicitly {@link CommonProto.NetMessage.MsgSpmSaveSrw.verify|verify} messages.
             * @param message MsgSpmSaveSrw message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgSpmSaveSrw, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgSpmSaveSrw message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgSpmSaveSrw.verify|verify} messages.
             * @param message MsgSpmSaveSrw message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgSpmSaveSrw, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgSpmSaveSrw message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgSpmSaveSrw
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgSpmSaveSrw;

            /**
             * Decodes a MsgSpmSaveSrw message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgSpmSaveSrw
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgSpmSaveSrw;

            /**
             * Verifies a MsgSpmSaveSrw message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgSpmSaveSrw message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgSpmSaveSrw
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgSpmSaveSrw;

            /**
             * Creates a plain object from a MsgSpmSaveSrw message. Also converts values to other types if specified.
             * @param message MsgSpmSaveSrw
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgSpmSaveSrw, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgSpmSaveSrw to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgSpmSaveSrw {

            /** Properties of a C. */
            interface IC {

                /** C slotIndex */
                slotIndex?: (number|null);

                /** C slotExtraData */
                slotExtraData?: (CommonProto.SinglePlayerMode.ISpmWarSaveSlotExtraData|null);

                /** C warData */
                warData?: (CommonProto.WarSerialization.ISerialWar|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgSpmSaveSrw.IC);

                /** C slotIndex. */
                public slotIndex: number;

                /** C slotExtraData. */
                public slotExtraData?: (CommonProto.SinglePlayerMode.ISpmWarSaveSlotExtraData|null);

                /** C warData. */
                public warData?: (CommonProto.WarSerialization.ISerialWar|null);

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgSpmSaveSrw.IC): CommonProto.NetMessage.MsgSpmSaveSrw.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgSpmSaveSrw.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgSpmSaveSrw.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgSpmSaveSrw.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgSpmSaveSrw.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgSpmSaveSrw.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgSpmSaveSrw.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgSpmSaveSrw.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgSpmSaveSrw.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S slotIndex */
                slotIndex?: (number|null);

                /** S slotExtraData */
                slotExtraData?: (CommonProto.SinglePlayerMode.ISpmWarSaveSlotExtraData|null);

                /** S warData */
                warData?: (CommonProto.WarSerialization.ISerialWar|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgSpmSaveSrw.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S slotIndex. */
                public slotIndex: number;

                /** S slotExtraData. */
                public slotExtraData?: (CommonProto.SinglePlayerMode.ISpmWarSaveSlotExtraData|null);

                /** S warData. */
                public warData?: (CommonProto.WarSerialization.ISerialWar|null);

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgSpmSaveSrw.IS): CommonProto.NetMessage.MsgSpmSaveSrw.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgSpmSaveSrw.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgSpmSaveSrw.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgSpmSaveSrw.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgSpmSaveSrw.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgSpmSaveSrw.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgSpmSaveSrw.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgSpmSaveSrw.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgSpmSaveSrw.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgSpmValidateSrw. */
        interface IMsgSpmValidateSrw {

            /** MsgSpmValidateSrw c */
            c?: (CommonProto.NetMessage.MsgSpmValidateSrw.IC|null);

            /** MsgSpmValidateSrw s */
            s?: (CommonProto.NetMessage.MsgSpmValidateSrw.IS|null);
        }

        /** Represents a MsgSpmValidateSrw. */
        class MsgSpmValidateSrw implements IMsgSpmValidateSrw {

            /**
             * Constructs a new MsgSpmValidateSrw.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgSpmValidateSrw);

            /** MsgSpmValidateSrw c. */
            public c?: (CommonProto.NetMessage.MsgSpmValidateSrw.IC|null);

            /** MsgSpmValidateSrw s. */
            public s?: (CommonProto.NetMessage.MsgSpmValidateSrw.IS|null);

            /**
             * Creates a new MsgSpmValidateSrw instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgSpmValidateSrw instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgSpmValidateSrw): CommonProto.NetMessage.MsgSpmValidateSrw;

            /**
             * Encodes the specified MsgSpmValidateSrw message. Does not implicitly {@link CommonProto.NetMessage.MsgSpmValidateSrw.verify|verify} messages.
             * @param message MsgSpmValidateSrw message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgSpmValidateSrw, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgSpmValidateSrw message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgSpmValidateSrw.verify|verify} messages.
             * @param message MsgSpmValidateSrw message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgSpmValidateSrw, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgSpmValidateSrw message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgSpmValidateSrw
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgSpmValidateSrw;

            /**
             * Decodes a MsgSpmValidateSrw message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgSpmValidateSrw
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgSpmValidateSrw;

            /**
             * Verifies a MsgSpmValidateSrw message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgSpmValidateSrw message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgSpmValidateSrw
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgSpmValidateSrw;

            /**
             * Creates a plain object from a MsgSpmValidateSrw message. Also converts values to other types if specified.
             * @param message MsgSpmValidateSrw
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgSpmValidateSrw, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgSpmValidateSrw to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgSpmValidateSrw {

            /** Properties of a C. */
            interface IC {

                /** C warData */
                warData?: (CommonProto.WarSerialization.ISerialWar|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgSpmValidateSrw.IC);

                /** C warData. */
                public warData?: (CommonProto.WarSerialization.ISerialWar|null);

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgSpmValidateSrw.IC): CommonProto.NetMessage.MsgSpmValidateSrw.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgSpmValidateSrw.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgSpmValidateSrw.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgSpmValidateSrw.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgSpmValidateSrw.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgSpmValidateSrw.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgSpmValidateSrw.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgSpmValidateSrw.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgSpmValidateSrw.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S status */
                status?: (number|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgSpmValidateSrw.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S status. */
                public status: number;

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgSpmValidateSrw.IS): CommonProto.NetMessage.MsgSpmValidateSrw.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgSpmValidateSrw.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgSpmValidateSrw.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgSpmValidateSrw.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgSpmValidateSrw.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgSpmValidateSrw.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgSpmValidateSrw.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgSpmValidateSrw.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgSpmValidateSrw.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgSpmGetRankList. */
        interface IMsgSpmGetRankList {

            /** MsgSpmGetRankList c */
            c?: (CommonProto.NetMessage.MsgSpmGetRankList.IC|null);

            /** MsgSpmGetRankList s */
            s?: (CommonProto.NetMessage.MsgSpmGetRankList.IS|null);
        }

        /** Represents a MsgSpmGetRankList. */
        class MsgSpmGetRankList implements IMsgSpmGetRankList {

            /**
             * Constructs a new MsgSpmGetRankList.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgSpmGetRankList);

            /** MsgSpmGetRankList c. */
            public c?: (CommonProto.NetMessage.MsgSpmGetRankList.IC|null);

            /** MsgSpmGetRankList s. */
            public s?: (CommonProto.NetMessage.MsgSpmGetRankList.IS|null);

            /**
             * Creates a new MsgSpmGetRankList instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgSpmGetRankList instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgSpmGetRankList): CommonProto.NetMessage.MsgSpmGetRankList;

            /**
             * Encodes the specified MsgSpmGetRankList message. Does not implicitly {@link CommonProto.NetMessage.MsgSpmGetRankList.verify|verify} messages.
             * @param message MsgSpmGetRankList message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgSpmGetRankList, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgSpmGetRankList message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgSpmGetRankList.verify|verify} messages.
             * @param message MsgSpmGetRankList message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgSpmGetRankList, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgSpmGetRankList message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgSpmGetRankList
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgSpmGetRankList;

            /**
             * Decodes a MsgSpmGetRankList message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgSpmGetRankList
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgSpmGetRankList;

            /**
             * Verifies a MsgSpmGetRankList message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgSpmGetRankList message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgSpmGetRankList
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgSpmGetRankList;

            /**
             * Creates a plain object from a MsgSpmGetRankList message. Also converts values to other types if specified.
             * @param message MsgSpmGetRankList
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgSpmGetRankList, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgSpmGetRankList to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgSpmGetRankList {

            /** Properties of a SpmRankSingleInfo. */
            interface ISpmRankSingleInfo {

                /** SpmRankSingleInfo rankId */
                rankId?: (number|null);

                /** SpmRankSingleInfo userId */
                userId?: (number|null);

                /** SpmRankSingleInfo score */
                score?: (number|null);

                /** SpmRankSingleInfo turnIndex */
                turnIndex?: (number|null);
            }

            /** Represents a SpmRankSingleInfo. */
            class SpmRankSingleInfo implements ISpmRankSingleInfo {

                /**
                 * Constructs a new SpmRankSingleInfo.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgSpmGetRankList.ISpmRankSingleInfo);

                /** SpmRankSingleInfo rankId. */
                public rankId: number;

                /** SpmRankSingleInfo userId. */
                public userId: number;

                /** SpmRankSingleInfo score. */
                public score: number;

                /** SpmRankSingleInfo turnIndex. */
                public turnIndex: number;

                /**
                 * Creates a new SpmRankSingleInfo instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns SpmRankSingleInfo instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgSpmGetRankList.ISpmRankSingleInfo): CommonProto.NetMessage.MsgSpmGetRankList.SpmRankSingleInfo;

                /**
                 * Encodes the specified SpmRankSingleInfo message. Does not implicitly {@link CommonProto.NetMessage.MsgSpmGetRankList.SpmRankSingleInfo.verify|verify} messages.
                 * @param message SpmRankSingleInfo message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgSpmGetRankList.ISpmRankSingleInfo, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified SpmRankSingleInfo message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgSpmGetRankList.SpmRankSingleInfo.verify|verify} messages.
                 * @param message SpmRankSingleInfo message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgSpmGetRankList.ISpmRankSingleInfo, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a SpmRankSingleInfo message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns SpmRankSingleInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgSpmGetRankList.SpmRankSingleInfo;

                /**
                 * Decodes a SpmRankSingleInfo message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns SpmRankSingleInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgSpmGetRankList.SpmRankSingleInfo;

                /**
                 * Verifies a SpmRankSingleInfo message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a SpmRankSingleInfo message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns SpmRankSingleInfo
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgSpmGetRankList.SpmRankSingleInfo;

                /**
                 * Creates a plain object from a SpmRankSingleInfo message. Also converts values to other types if specified.
                 * @param message SpmRankSingleInfo
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgSpmGetRankList.SpmRankSingleInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this SpmRankSingleInfo to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a SpmRankInfoForRule. */
            interface ISpmRankInfoForRule {

                /** SpmRankInfoForRule ruleId */
                ruleId?: (number|null);

                /** SpmRankInfoForRule infoArray */
                infoArray?: (CommonProto.NetMessage.MsgSpmGetRankList.ISpmRankSingleInfo[]|null);
            }

            /** Represents a SpmRankInfoForRule. */
            class SpmRankInfoForRule implements ISpmRankInfoForRule {

                /**
                 * Constructs a new SpmRankInfoForRule.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgSpmGetRankList.ISpmRankInfoForRule);

                /** SpmRankInfoForRule ruleId. */
                public ruleId: number;

                /** SpmRankInfoForRule infoArray. */
                public infoArray: CommonProto.NetMessage.MsgSpmGetRankList.ISpmRankSingleInfo[];

                /**
                 * Creates a new SpmRankInfoForRule instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns SpmRankInfoForRule instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgSpmGetRankList.ISpmRankInfoForRule): CommonProto.NetMessage.MsgSpmGetRankList.SpmRankInfoForRule;

                /**
                 * Encodes the specified SpmRankInfoForRule message. Does not implicitly {@link CommonProto.NetMessage.MsgSpmGetRankList.SpmRankInfoForRule.verify|verify} messages.
                 * @param message SpmRankInfoForRule message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgSpmGetRankList.ISpmRankInfoForRule, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified SpmRankInfoForRule message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgSpmGetRankList.SpmRankInfoForRule.verify|verify} messages.
                 * @param message SpmRankInfoForRule message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgSpmGetRankList.ISpmRankInfoForRule, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a SpmRankInfoForRule message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns SpmRankInfoForRule
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgSpmGetRankList.SpmRankInfoForRule;

                /**
                 * Decodes a SpmRankInfoForRule message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns SpmRankInfoForRule
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgSpmGetRankList.SpmRankInfoForRule;

                /**
                 * Verifies a SpmRankInfoForRule message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a SpmRankInfoForRule message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns SpmRankInfoForRule
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgSpmGetRankList.SpmRankInfoForRule;

                /**
                 * Creates a plain object from a SpmRankInfoForRule message. Also converts values to other types if specified.
                 * @param message SpmRankInfoForRule
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgSpmGetRankList.SpmRankInfoForRule, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this SpmRankInfoForRule to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a C. */
            interface IC {

                /** C mapId */
                mapId?: (number|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgSpmGetRankList.IC);

                /** C mapId. */
                public mapId: number;

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgSpmGetRankList.IC): CommonProto.NetMessage.MsgSpmGetRankList.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgSpmGetRankList.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgSpmGetRankList.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgSpmGetRankList.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgSpmGetRankList.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgSpmGetRankList.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgSpmGetRankList.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgSpmGetRankList.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgSpmGetRankList.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S mapId */
                mapId?: (number|null);

                /** S infoArray */
                infoArray?: (CommonProto.NetMessage.MsgSpmGetRankList.ISpmRankInfoForRule[]|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgSpmGetRankList.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S mapId. */
                public mapId: number;

                /** S infoArray. */
                public infoArray: CommonProto.NetMessage.MsgSpmGetRankList.ISpmRankInfoForRule[];

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgSpmGetRankList.IS): CommonProto.NetMessage.MsgSpmGetRankList.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgSpmGetRankList.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgSpmGetRankList.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgSpmGetRankList.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgSpmGetRankList.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgSpmGetRankList.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgSpmGetRankList.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgSpmGetRankList.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgSpmGetRankList.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgSpmGetReplayData. */
        interface IMsgSpmGetReplayData {

            /** MsgSpmGetReplayData c */
            c?: (CommonProto.NetMessage.MsgSpmGetReplayData.IC|null);

            /** MsgSpmGetReplayData s */
            s?: (CommonProto.NetMessage.MsgSpmGetReplayData.IS|null);
        }

        /** Represents a MsgSpmGetReplayData. */
        class MsgSpmGetReplayData implements IMsgSpmGetReplayData {

            /**
             * Constructs a new MsgSpmGetReplayData.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgSpmGetReplayData);

            /** MsgSpmGetReplayData c. */
            public c?: (CommonProto.NetMessage.MsgSpmGetReplayData.IC|null);

            /** MsgSpmGetReplayData s. */
            public s?: (CommonProto.NetMessage.MsgSpmGetReplayData.IS|null);

            /**
             * Creates a new MsgSpmGetReplayData instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgSpmGetReplayData instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgSpmGetReplayData): CommonProto.NetMessage.MsgSpmGetReplayData;

            /**
             * Encodes the specified MsgSpmGetReplayData message. Does not implicitly {@link CommonProto.NetMessage.MsgSpmGetReplayData.verify|verify} messages.
             * @param message MsgSpmGetReplayData message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgSpmGetReplayData, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgSpmGetReplayData message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgSpmGetReplayData.verify|verify} messages.
             * @param message MsgSpmGetReplayData message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgSpmGetReplayData, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgSpmGetReplayData message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgSpmGetReplayData
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgSpmGetReplayData;

            /**
             * Decodes a MsgSpmGetReplayData message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgSpmGetReplayData
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgSpmGetReplayData;

            /**
             * Verifies a MsgSpmGetReplayData message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgSpmGetReplayData message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgSpmGetReplayData
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgSpmGetReplayData;

            /**
             * Creates a plain object from a MsgSpmGetReplayData message. Also converts values to other types if specified.
             * @param message MsgSpmGetReplayData
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgSpmGetReplayData, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgSpmGetReplayData to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgSpmGetReplayData {

            /** Properties of a C. */
            interface IC {

                /** C rankId */
                rankId?: (number|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgSpmGetReplayData.IC);

                /** C rankId. */
                public rankId: number;

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgSpmGetReplayData.IC): CommonProto.NetMessage.MsgSpmGetReplayData.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgSpmGetReplayData.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgSpmGetReplayData.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgSpmGetReplayData.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgSpmGetReplayData.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgSpmGetReplayData.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgSpmGetReplayData.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgSpmGetReplayData.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgSpmGetReplayData.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S rankId */
                rankId?: (number|null);

                /** S encodedWar */
                encodedWar?: (Uint8Array|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgSpmGetReplayData.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S rankId. */
                public rankId: number;

                /** S encodedWar. */
                public encodedWar: Uint8Array;

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgSpmGetReplayData.IS): CommonProto.NetMessage.MsgSpmGetReplayData.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgSpmGetReplayData.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgSpmGetReplayData.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgSpmGetReplayData.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgSpmGetReplayData.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgSpmGetReplayData.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgSpmGetReplayData.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgSpmGetReplayData.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgSpmGetReplayData.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgSpmDeleteAllScoreAndReplay. */
        interface IMsgSpmDeleteAllScoreAndReplay {

            /** MsgSpmDeleteAllScoreAndReplay c */
            c?: (CommonProto.NetMessage.MsgSpmDeleteAllScoreAndReplay.IC|null);

            /** MsgSpmDeleteAllScoreAndReplay s */
            s?: (CommonProto.NetMessage.MsgSpmDeleteAllScoreAndReplay.IS|null);
        }

        /** Represents a MsgSpmDeleteAllScoreAndReplay. */
        class MsgSpmDeleteAllScoreAndReplay implements IMsgSpmDeleteAllScoreAndReplay {

            /**
             * Constructs a new MsgSpmDeleteAllScoreAndReplay.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgSpmDeleteAllScoreAndReplay);

            /** MsgSpmDeleteAllScoreAndReplay c. */
            public c?: (CommonProto.NetMessage.MsgSpmDeleteAllScoreAndReplay.IC|null);

            /** MsgSpmDeleteAllScoreAndReplay s. */
            public s?: (CommonProto.NetMessage.MsgSpmDeleteAllScoreAndReplay.IS|null);

            /**
             * Creates a new MsgSpmDeleteAllScoreAndReplay instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgSpmDeleteAllScoreAndReplay instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgSpmDeleteAllScoreAndReplay): CommonProto.NetMessage.MsgSpmDeleteAllScoreAndReplay;

            /**
             * Encodes the specified MsgSpmDeleteAllScoreAndReplay message. Does not implicitly {@link CommonProto.NetMessage.MsgSpmDeleteAllScoreAndReplay.verify|verify} messages.
             * @param message MsgSpmDeleteAllScoreAndReplay message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgSpmDeleteAllScoreAndReplay, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgSpmDeleteAllScoreAndReplay message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgSpmDeleteAllScoreAndReplay.verify|verify} messages.
             * @param message MsgSpmDeleteAllScoreAndReplay message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgSpmDeleteAllScoreAndReplay, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgSpmDeleteAllScoreAndReplay message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgSpmDeleteAllScoreAndReplay
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgSpmDeleteAllScoreAndReplay;

            /**
             * Decodes a MsgSpmDeleteAllScoreAndReplay message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgSpmDeleteAllScoreAndReplay
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgSpmDeleteAllScoreAndReplay;

            /**
             * Verifies a MsgSpmDeleteAllScoreAndReplay message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgSpmDeleteAllScoreAndReplay message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgSpmDeleteAllScoreAndReplay
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgSpmDeleteAllScoreAndReplay;

            /**
             * Creates a plain object from a MsgSpmDeleteAllScoreAndReplay message. Also converts values to other types if specified.
             * @param message MsgSpmDeleteAllScoreAndReplay
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgSpmDeleteAllScoreAndReplay, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgSpmDeleteAllScoreAndReplay to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgSpmDeleteAllScoreAndReplay {

            /** Properties of a C. */
            interface IC {
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgSpmDeleteAllScoreAndReplay.IC);

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgSpmDeleteAllScoreAndReplay.IC): CommonProto.NetMessage.MsgSpmDeleteAllScoreAndReplay.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgSpmDeleteAllScoreAndReplay.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgSpmDeleteAllScoreAndReplay.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgSpmDeleteAllScoreAndReplay.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgSpmDeleteAllScoreAndReplay.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgSpmDeleteAllScoreAndReplay.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgSpmDeleteAllScoreAndReplay.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgSpmDeleteAllScoreAndReplay.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgSpmDeleteAllScoreAndReplay.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgSpmDeleteAllScoreAndReplay.IS);

                /** S errorCode. */
                public errorCode: number;

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgSpmDeleteAllScoreAndReplay.IS): CommonProto.NetMessage.MsgSpmDeleteAllScoreAndReplay.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgSpmDeleteAllScoreAndReplay.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgSpmDeleteAllScoreAndReplay.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgSpmDeleteAllScoreAndReplay.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgSpmDeleteAllScoreAndReplay.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgSpmDeleteAllScoreAndReplay.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgSpmDeleteAllScoreAndReplay.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgSpmDeleteAllScoreAndReplay.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgSpmDeleteAllScoreAndReplay.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgMrrSetMaxConcurrentCount. */
        interface IMsgMrrSetMaxConcurrentCount {

            /** MsgMrrSetMaxConcurrentCount c */
            c?: (CommonProto.NetMessage.MsgMrrSetMaxConcurrentCount.IC|null);

            /** MsgMrrSetMaxConcurrentCount s */
            s?: (CommonProto.NetMessage.MsgMrrSetMaxConcurrentCount.IS|null);
        }

        /** Represents a MsgMrrSetMaxConcurrentCount. */
        class MsgMrrSetMaxConcurrentCount implements IMsgMrrSetMaxConcurrentCount {

            /**
             * Constructs a new MsgMrrSetMaxConcurrentCount.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgMrrSetMaxConcurrentCount);

            /** MsgMrrSetMaxConcurrentCount c. */
            public c?: (CommonProto.NetMessage.MsgMrrSetMaxConcurrentCount.IC|null);

            /** MsgMrrSetMaxConcurrentCount s. */
            public s?: (CommonProto.NetMessage.MsgMrrSetMaxConcurrentCount.IS|null);

            /**
             * Creates a new MsgMrrSetMaxConcurrentCount instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgMrrSetMaxConcurrentCount instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgMrrSetMaxConcurrentCount): CommonProto.NetMessage.MsgMrrSetMaxConcurrentCount;

            /**
             * Encodes the specified MsgMrrSetMaxConcurrentCount message. Does not implicitly {@link CommonProto.NetMessage.MsgMrrSetMaxConcurrentCount.verify|verify} messages.
             * @param message MsgMrrSetMaxConcurrentCount message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgMrrSetMaxConcurrentCount, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgMrrSetMaxConcurrentCount message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMrrSetMaxConcurrentCount.verify|verify} messages.
             * @param message MsgMrrSetMaxConcurrentCount message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgMrrSetMaxConcurrentCount, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgMrrSetMaxConcurrentCount message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgMrrSetMaxConcurrentCount
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMrrSetMaxConcurrentCount;

            /**
             * Decodes a MsgMrrSetMaxConcurrentCount message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgMrrSetMaxConcurrentCount
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMrrSetMaxConcurrentCount;

            /**
             * Verifies a MsgMrrSetMaxConcurrentCount message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgMrrSetMaxConcurrentCount message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgMrrSetMaxConcurrentCount
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMrrSetMaxConcurrentCount;

            /**
             * Creates a plain object from a MsgMrrSetMaxConcurrentCount message. Also converts values to other types if specified.
             * @param message MsgMrrSetMaxConcurrentCount
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgMrrSetMaxConcurrentCount, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgMrrSetMaxConcurrentCount to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgMrrSetMaxConcurrentCount {

            /** Properties of a C. */
            interface IC {

                /** C maxCountForStd */
                maxCountForStd?: (number|null);

                /** C maxCountForFog */
                maxCountForFog?: (number|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMrrSetMaxConcurrentCount.IC);

                /** C maxCountForStd. */
                public maxCountForStd: number;

                /** C maxCountForFog. */
                public maxCountForFog: number;

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMrrSetMaxConcurrentCount.IC): CommonProto.NetMessage.MsgMrrSetMaxConcurrentCount.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgMrrSetMaxConcurrentCount.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMrrSetMaxConcurrentCount.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMrrSetMaxConcurrentCount.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMrrSetMaxConcurrentCount.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMrrSetMaxConcurrentCount.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMrrSetMaxConcurrentCount.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMrrSetMaxConcurrentCount.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMrrSetMaxConcurrentCount.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S maxCountForStd */
                maxCountForStd?: (number|null);

                /** S maxCountForFog */
                maxCountForFog?: (number|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMrrSetMaxConcurrentCount.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S maxCountForStd. */
                public maxCountForStd: number;

                /** S maxCountForFog. */
                public maxCountForFog: number;

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMrrSetMaxConcurrentCount.IS): CommonProto.NetMessage.MsgMrrSetMaxConcurrentCount.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgMrrSetMaxConcurrentCount.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMrrSetMaxConcurrentCount.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMrrSetMaxConcurrentCount.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMrrSetMaxConcurrentCount.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMrrSetMaxConcurrentCount.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMrrSetMaxConcurrentCount.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMrrSetMaxConcurrentCount.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMrrSetMaxConcurrentCount.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgMrrGetMaxConcurrentCount. */
        interface IMsgMrrGetMaxConcurrentCount {

            /** MsgMrrGetMaxConcurrentCount c */
            c?: (CommonProto.NetMessage.MsgMrrGetMaxConcurrentCount.IC|null);

            /** MsgMrrGetMaxConcurrentCount s */
            s?: (CommonProto.NetMessage.MsgMrrGetMaxConcurrentCount.IS|null);
        }

        /** Represents a MsgMrrGetMaxConcurrentCount. */
        class MsgMrrGetMaxConcurrentCount implements IMsgMrrGetMaxConcurrentCount {

            /**
             * Constructs a new MsgMrrGetMaxConcurrentCount.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgMrrGetMaxConcurrentCount);

            /** MsgMrrGetMaxConcurrentCount c. */
            public c?: (CommonProto.NetMessage.MsgMrrGetMaxConcurrentCount.IC|null);

            /** MsgMrrGetMaxConcurrentCount s. */
            public s?: (CommonProto.NetMessage.MsgMrrGetMaxConcurrentCount.IS|null);

            /**
             * Creates a new MsgMrrGetMaxConcurrentCount instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgMrrGetMaxConcurrentCount instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgMrrGetMaxConcurrentCount): CommonProto.NetMessage.MsgMrrGetMaxConcurrentCount;

            /**
             * Encodes the specified MsgMrrGetMaxConcurrentCount message. Does not implicitly {@link CommonProto.NetMessage.MsgMrrGetMaxConcurrentCount.verify|verify} messages.
             * @param message MsgMrrGetMaxConcurrentCount message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgMrrGetMaxConcurrentCount, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgMrrGetMaxConcurrentCount message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMrrGetMaxConcurrentCount.verify|verify} messages.
             * @param message MsgMrrGetMaxConcurrentCount message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgMrrGetMaxConcurrentCount, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgMrrGetMaxConcurrentCount message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgMrrGetMaxConcurrentCount
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMrrGetMaxConcurrentCount;

            /**
             * Decodes a MsgMrrGetMaxConcurrentCount message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgMrrGetMaxConcurrentCount
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMrrGetMaxConcurrentCount;

            /**
             * Verifies a MsgMrrGetMaxConcurrentCount message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgMrrGetMaxConcurrentCount message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgMrrGetMaxConcurrentCount
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMrrGetMaxConcurrentCount;

            /**
             * Creates a plain object from a MsgMrrGetMaxConcurrentCount message. Also converts values to other types if specified.
             * @param message MsgMrrGetMaxConcurrentCount
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgMrrGetMaxConcurrentCount, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgMrrGetMaxConcurrentCount to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgMrrGetMaxConcurrentCount {

            /** Properties of a C. */
            interface IC {
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMrrGetMaxConcurrentCount.IC);

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMrrGetMaxConcurrentCount.IC): CommonProto.NetMessage.MsgMrrGetMaxConcurrentCount.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgMrrGetMaxConcurrentCount.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMrrGetMaxConcurrentCount.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMrrGetMaxConcurrentCount.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMrrGetMaxConcurrentCount.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMrrGetMaxConcurrentCount.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMrrGetMaxConcurrentCount.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMrrGetMaxConcurrentCount.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMrrGetMaxConcurrentCount.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S maxCountForStd */
                maxCountForStd?: (number|null);

                /** S maxCountForFog */
                maxCountForFog?: (number|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMrrGetMaxConcurrentCount.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S maxCountForStd. */
                public maxCountForStd: number;

                /** S maxCountForFog. */
                public maxCountForFog: number;

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMrrGetMaxConcurrentCount.IS): CommonProto.NetMessage.MsgMrrGetMaxConcurrentCount.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgMrrGetMaxConcurrentCount.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMrrGetMaxConcurrentCount.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMrrGetMaxConcurrentCount.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMrrGetMaxConcurrentCount.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMrrGetMaxConcurrentCount.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMrrGetMaxConcurrentCount.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMrrGetMaxConcurrentCount.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMrrGetMaxConcurrentCount.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgMrrGetJoinedRoomIdArray. */
        interface IMsgMrrGetJoinedRoomIdArray {

            /** MsgMrrGetJoinedRoomIdArray c */
            c?: (CommonProto.NetMessage.MsgMrrGetJoinedRoomIdArray.IC|null);

            /** MsgMrrGetJoinedRoomIdArray s */
            s?: (CommonProto.NetMessage.MsgMrrGetJoinedRoomIdArray.IS|null);
        }

        /** Represents a MsgMrrGetJoinedRoomIdArray. */
        class MsgMrrGetJoinedRoomIdArray implements IMsgMrrGetJoinedRoomIdArray {

            /**
             * Constructs a new MsgMrrGetJoinedRoomIdArray.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgMrrGetJoinedRoomIdArray);

            /** MsgMrrGetJoinedRoomIdArray c. */
            public c?: (CommonProto.NetMessage.MsgMrrGetJoinedRoomIdArray.IC|null);

            /** MsgMrrGetJoinedRoomIdArray s. */
            public s?: (CommonProto.NetMessage.MsgMrrGetJoinedRoomIdArray.IS|null);

            /**
             * Creates a new MsgMrrGetJoinedRoomIdArray instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgMrrGetJoinedRoomIdArray instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgMrrGetJoinedRoomIdArray): CommonProto.NetMessage.MsgMrrGetJoinedRoomIdArray;

            /**
             * Encodes the specified MsgMrrGetJoinedRoomIdArray message. Does not implicitly {@link CommonProto.NetMessage.MsgMrrGetJoinedRoomIdArray.verify|verify} messages.
             * @param message MsgMrrGetJoinedRoomIdArray message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgMrrGetJoinedRoomIdArray, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgMrrGetJoinedRoomIdArray message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMrrGetJoinedRoomIdArray.verify|verify} messages.
             * @param message MsgMrrGetJoinedRoomIdArray message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgMrrGetJoinedRoomIdArray, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgMrrGetJoinedRoomIdArray message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgMrrGetJoinedRoomIdArray
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMrrGetJoinedRoomIdArray;

            /**
             * Decodes a MsgMrrGetJoinedRoomIdArray message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgMrrGetJoinedRoomIdArray
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMrrGetJoinedRoomIdArray;

            /**
             * Verifies a MsgMrrGetJoinedRoomIdArray message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgMrrGetJoinedRoomIdArray message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgMrrGetJoinedRoomIdArray
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMrrGetJoinedRoomIdArray;

            /**
             * Creates a plain object from a MsgMrrGetJoinedRoomIdArray message. Also converts values to other types if specified.
             * @param message MsgMrrGetJoinedRoomIdArray
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgMrrGetJoinedRoomIdArray, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgMrrGetJoinedRoomIdArray to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgMrrGetJoinedRoomIdArray {

            /** Properties of a C. */
            interface IC {
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMrrGetJoinedRoomIdArray.IC);

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMrrGetJoinedRoomIdArray.IC): CommonProto.NetMessage.MsgMrrGetJoinedRoomIdArray.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgMrrGetJoinedRoomIdArray.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMrrGetJoinedRoomIdArray.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMrrGetJoinedRoomIdArray.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMrrGetJoinedRoomIdArray.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMrrGetJoinedRoomIdArray.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMrrGetJoinedRoomIdArray.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMrrGetJoinedRoomIdArray.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMrrGetJoinedRoomIdArray.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S roomIdArray */
                roomIdArray?: (number[]|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMrrGetJoinedRoomIdArray.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S roomIdArray. */
                public roomIdArray: number[];

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMrrGetJoinedRoomIdArray.IS): CommonProto.NetMessage.MsgMrrGetJoinedRoomIdArray.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgMrrGetJoinedRoomIdArray.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMrrGetJoinedRoomIdArray.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMrrGetJoinedRoomIdArray.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMrrGetJoinedRoomIdArray.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMrrGetJoinedRoomIdArray.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMrrGetJoinedRoomIdArray.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMrrGetJoinedRoomIdArray.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMrrGetJoinedRoomIdArray.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgMrrGetRoomPublicInfo. */
        interface IMsgMrrGetRoomPublicInfo {

            /** MsgMrrGetRoomPublicInfo c */
            c?: (CommonProto.NetMessage.MsgMrrGetRoomPublicInfo.IC|null);

            /** MsgMrrGetRoomPublicInfo s */
            s?: (CommonProto.NetMessage.MsgMrrGetRoomPublicInfo.IS|null);
        }

        /** Represents a MsgMrrGetRoomPublicInfo. */
        class MsgMrrGetRoomPublicInfo implements IMsgMrrGetRoomPublicInfo {

            /**
             * Constructs a new MsgMrrGetRoomPublicInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgMrrGetRoomPublicInfo);

            /** MsgMrrGetRoomPublicInfo c. */
            public c?: (CommonProto.NetMessage.MsgMrrGetRoomPublicInfo.IC|null);

            /** MsgMrrGetRoomPublicInfo s. */
            public s?: (CommonProto.NetMessage.MsgMrrGetRoomPublicInfo.IS|null);

            /**
             * Creates a new MsgMrrGetRoomPublicInfo instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgMrrGetRoomPublicInfo instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgMrrGetRoomPublicInfo): CommonProto.NetMessage.MsgMrrGetRoomPublicInfo;

            /**
             * Encodes the specified MsgMrrGetRoomPublicInfo message. Does not implicitly {@link CommonProto.NetMessage.MsgMrrGetRoomPublicInfo.verify|verify} messages.
             * @param message MsgMrrGetRoomPublicInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgMrrGetRoomPublicInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgMrrGetRoomPublicInfo message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMrrGetRoomPublicInfo.verify|verify} messages.
             * @param message MsgMrrGetRoomPublicInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgMrrGetRoomPublicInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgMrrGetRoomPublicInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgMrrGetRoomPublicInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMrrGetRoomPublicInfo;

            /**
             * Decodes a MsgMrrGetRoomPublicInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgMrrGetRoomPublicInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMrrGetRoomPublicInfo;

            /**
             * Verifies a MsgMrrGetRoomPublicInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgMrrGetRoomPublicInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgMrrGetRoomPublicInfo
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMrrGetRoomPublicInfo;

            /**
             * Creates a plain object from a MsgMrrGetRoomPublicInfo message. Also converts values to other types if specified.
             * @param message MsgMrrGetRoomPublicInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgMrrGetRoomPublicInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgMrrGetRoomPublicInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgMrrGetRoomPublicInfo {

            /** Properties of a C. */
            interface IC {

                /** C roomId */
                roomId?: (number|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMrrGetRoomPublicInfo.IC);

                /** C roomId. */
                public roomId: number;

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMrrGetRoomPublicInfo.IC): CommonProto.NetMessage.MsgMrrGetRoomPublicInfo.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgMrrGetRoomPublicInfo.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMrrGetRoomPublicInfo.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMrrGetRoomPublicInfo.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMrrGetRoomPublicInfo.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMrrGetRoomPublicInfo.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMrrGetRoomPublicInfo.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMrrGetRoomPublicInfo.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMrrGetRoomPublicInfo.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S roomId */
                roomId?: (number|null);

                /** S roomInfo */
                roomInfo?: (CommonProto.MultiRankRoom.IMrrRoomInfo|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMrrGetRoomPublicInfo.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S roomId. */
                public roomId: number;

                /** S roomInfo. */
                public roomInfo?: (CommonProto.MultiRankRoom.IMrrRoomInfo|null);

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMrrGetRoomPublicInfo.IS): CommonProto.NetMessage.MsgMrrGetRoomPublicInfo.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgMrrGetRoomPublicInfo.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMrrGetRoomPublicInfo.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMrrGetRoomPublicInfo.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMrrGetRoomPublicInfo.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMrrGetRoomPublicInfo.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMrrGetRoomPublicInfo.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMrrGetRoomPublicInfo.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMrrGetRoomPublicInfo.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgMrrDeleteRoomByServer. */
        interface IMsgMrrDeleteRoomByServer {

            /** MsgMrrDeleteRoomByServer s */
            s?: (CommonProto.NetMessage.MsgMrrDeleteRoomByServer.IS|null);
        }

        /** Represents a MsgMrrDeleteRoomByServer. */
        class MsgMrrDeleteRoomByServer implements IMsgMrrDeleteRoomByServer {

            /**
             * Constructs a new MsgMrrDeleteRoomByServer.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgMrrDeleteRoomByServer);

            /** MsgMrrDeleteRoomByServer s. */
            public s?: (CommonProto.NetMessage.MsgMrrDeleteRoomByServer.IS|null);

            /**
             * Creates a new MsgMrrDeleteRoomByServer instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgMrrDeleteRoomByServer instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgMrrDeleteRoomByServer): CommonProto.NetMessage.MsgMrrDeleteRoomByServer;

            /**
             * Encodes the specified MsgMrrDeleteRoomByServer message. Does not implicitly {@link CommonProto.NetMessage.MsgMrrDeleteRoomByServer.verify|verify} messages.
             * @param message MsgMrrDeleteRoomByServer message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgMrrDeleteRoomByServer, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgMrrDeleteRoomByServer message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMrrDeleteRoomByServer.verify|verify} messages.
             * @param message MsgMrrDeleteRoomByServer message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgMrrDeleteRoomByServer, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgMrrDeleteRoomByServer message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgMrrDeleteRoomByServer
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMrrDeleteRoomByServer;

            /**
             * Decodes a MsgMrrDeleteRoomByServer message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgMrrDeleteRoomByServer
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMrrDeleteRoomByServer;

            /**
             * Verifies a MsgMrrDeleteRoomByServer message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgMrrDeleteRoomByServer message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgMrrDeleteRoomByServer
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMrrDeleteRoomByServer;

            /**
             * Creates a plain object from a MsgMrrDeleteRoomByServer message. Also converts values to other types if specified.
             * @param message MsgMrrDeleteRoomByServer
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgMrrDeleteRoomByServer, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgMrrDeleteRoomByServer to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgMrrDeleteRoomByServer {

            /** Properties of a S. */
            interface IS {

                /** S roomId */
                roomId?: (number|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMrrDeleteRoomByServer.IS);

                /** S roomId. */
                public roomId: number;

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMrrDeleteRoomByServer.IS): CommonProto.NetMessage.MsgMrrDeleteRoomByServer.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgMrrDeleteRoomByServer.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMrrDeleteRoomByServer.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMrrDeleteRoomByServer.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMrrDeleteRoomByServer.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMrrDeleteRoomByServer.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMrrDeleteRoomByServer.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMrrDeleteRoomByServer.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMrrDeleteRoomByServer.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgMrrSetBannedCoCategoryIdArray. */
        interface IMsgMrrSetBannedCoCategoryIdArray {

            /** MsgMrrSetBannedCoCategoryIdArray c */
            c?: (CommonProto.NetMessage.MsgMrrSetBannedCoCategoryIdArray.IC|null);

            /** MsgMrrSetBannedCoCategoryIdArray s */
            s?: (CommonProto.NetMessage.MsgMrrSetBannedCoCategoryIdArray.IS|null);
        }

        /** Represents a MsgMrrSetBannedCoCategoryIdArray. */
        class MsgMrrSetBannedCoCategoryIdArray implements IMsgMrrSetBannedCoCategoryIdArray {

            /**
             * Constructs a new MsgMrrSetBannedCoCategoryIdArray.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgMrrSetBannedCoCategoryIdArray);

            /** MsgMrrSetBannedCoCategoryIdArray c. */
            public c?: (CommonProto.NetMessage.MsgMrrSetBannedCoCategoryIdArray.IC|null);

            /** MsgMrrSetBannedCoCategoryIdArray s. */
            public s?: (CommonProto.NetMessage.MsgMrrSetBannedCoCategoryIdArray.IS|null);

            /**
             * Creates a new MsgMrrSetBannedCoCategoryIdArray instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgMrrSetBannedCoCategoryIdArray instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgMrrSetBannedCoCategoryIdArray): CommonProto.NetMessage.MsgMrrSetBannedCoCategoryIdArray;

            /**
             * Encodes the specified MsgMrrSetBannedCoCategoryIdArray message. Does not implicitly {@link CommonProto.NetMessage.MsgMrrSetBannedCoCategoryIdArray.verify|verify} messages.
             * @param message MsgMrrSetBannedCoCategoryIdArray message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgMrrSetBannedCoCategoryIdArray, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgMrrSetBannedCoCategoryIdArray message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMrrSetBannedCoCategoryIdArray.verify|verify} messages.
             * @param message MsgMrrSetBannedCoCategoryIdArray message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgMrrSetBannedCoCategoryIdArray, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgMrrSetBannedCoCategoryIdArray message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgMrrSetBannedCoCategoryIdArray
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMrrSetBannedCoCategoryIdArray;

            /**
             * Decodes a MsgMrrSetBannedCoCategoryIdArray message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgMrrSetBannedCoCategoryIdArray
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMrrSetBannedCoCategoryIdArray;

            /**
             * Verifies a MsgMrrSetBannedCoCategoryIdArray message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgMrrSetBannedCoCategoryIdArray message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgMrrSetBannedCoCategoryIdArray
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMrrSetBannedCoCategoryIdArray;

            /**
             * Creates a plain object from a MsgMrrSetBannedCoCategoryIdArray message. Also converts values to other types if specified.
             * @param message MsgMrrSetBannedCoCategoryIdArray
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgMrrSetBannedCoCategoryIdArray, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgMrrSetBannedCoCategoryIdArray to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgMrrSetBannedCoCategoryIdArray {

            /** Properties of a C. */
            interface IC {

                /** C roomId */
                roomId?: (number|null);

                /** C bannedCoCategoryIdArray */
                bannedCoCategoryIdArray?: (number[]|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMrrSetBannedCoCategoryIdArray.IC);

                /** C roomId. */
                public roomId: number;

                /** C bannedCoCategoryIdArray. */
                public bannedCoCategoryIdArray: number[];

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMrrSetBannedCoCategoryIdArray.IC): CommonProto.NetMessage.MsgMrrSetBannedCoCategoryIdArray.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgMrrSetBannedCoCategoryIdArray.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMrrSetBannedCoCategoryIdArray.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMrrSetBannedCoCategoryIdArray.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMrrSetBannedCoCategoryIdArray.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMrrSetBannedCoCategoryIdArray.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMrrSetBannedCoCategoryIdArray.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMrrSetBannedCoCategoryIdArray.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMrrSetBannedCoCategoryIdArray.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S roomId */
                roomId?: (number|null);

                /** S playerIndex */
                playerIndex?: (number|null);

                /** S bannedCoCategoryIdArray */
                bannedCoCategoryIdArray?: (number[]|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMrrSetBannedCoCategoryIdArray.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S roomId. */
                public roomId: number;

                /** S playerIndex. */
                public playerIndex: number;

                /** S bannedCoCategoryIdArray. */
                public bannedCoCategoryIdArray: number[];

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMrrSetBannedCoCategoryIdArray.IS): CommonProto.NetMessage.MsgMrrSetBannedCoCategoryIdArray.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgMrrSetBannedCoCategoryIdArray.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMrrSetBannedCoCategoryIdArray.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMrrSetBannedCoCategoryIdArray.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMrrSetBannedCoCategoryIdArray.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMrrSetBannedCoCategoryIdArray.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMrrSetBannedCoCategoryIdArray.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMrrSetBannedCoCategoryIdArray.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMrrSetBannedCoCategoryIdArray.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgMrrSetSelfSettings. */
        interface IMsgMrrSetSelfSettings {

            /** MsgMrrSetSelfSettings c */
            c?: (CommonProto.NetMessage.MsgMrrSetSelfSettings.IC|null);

            /** MsgMrrSetSelfSettings s */
            s?: (CommonProto.NetMessage.MsgMrrSetSelfSettings.IS|null);
        }

        /** Represents a MsgMrrSetSelfSettings. */
        class MsgMrrSetSelfSettings implements IMsgMrrSetSelfSettings {

            /**
             * Constructs a new MsgMrrSetSelfSettings.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgMrrSetSelfSettings);

            /** MsgMrrSetSelfSettings c. */
            public c?: (CommonProto.NetMessage.MsgMrrSetSelfSettings.IC|null);

            /** MsgMrrSetSelfSettings s. */
            public s?: (CommonProto.NetMessage.MsgMrrSetSelfSettings.IS|null);

            /**
             * Creates a new MsgMrrSetSelfSettings instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgMrrSetSelfSettings instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgMrrSetSelfSettings): CommonProto.NetMessage.MsgMrrSetSelfSettings;

            /**
             * Encodes the specified MsgMrrSetSelfSettings message. Does not implicitly {@link CommonProto.NetMessage.MsgMrrSetSelfSettings.verify|verify} messages.
             * @param message MsgMrrSetSelfSettings message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgMrrSetSelfSettings, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgMrrSetSelfSettings message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMrrSetSelfSettings.verify|verify} messages.
             * @param message MsgMrrSetSelfSettings message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgMrrSetSelfSettings, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgMrrSetSelfSettings message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgMrrSetSelfSettings
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMrrSetSelfSettings;

            /**
             * Decodes a MsgMrrSetSelfSettings message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgMrrSetSelfSettings
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMrrSetSelfSettings;

            /**
             * Verifies a MsgMrrSetSelfSettings message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgMrrSetSelfSettings message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgMrrSetSelfSettings
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMrrSetSelfSettings;

            /**
             * Creates a plain object from a MsgMrrSetSelfSettings message. Also converts values to other types if specified.
             * @param message MsgMrrSetSelfSettings
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgMrrSetSelfSettings, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgMrrSetSelfSettings to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgMrrSetSelfSettings {

            /** Properties of a C. */
            interface IC {

                /** C roomId */
                roomId?: (number|null);

                /** C coId */
                coId?: (number|null);

                /** C unitAndTileSkinId */
                unitAndTileSkinId?: (number|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMrrSetSelfSettings.IC);

                /** C roomId. */
                public roomId: number;

                /** C coId. */
                public coId: number;

                /** C unitAndTileSkinId. */
                public unitAndTileSkinId: number;

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMrrSetSelfSettings.IC): CommonProto.NetMessage.MsgMrrSetSelfSettings.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgMrrSetSelfSettings.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMrrSetSelfSettings.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMrrSetSelfSettings.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMrrSetSelfSettings.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMrrSetSelfSettings.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMrrSetSelfSettings.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMrrSetSelfSettings.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMrrSetSelfSettings.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S roomId */
                roomId?: (number|null);

                /** S coId */
                coId?: (number|null);

                /** S unitAndTileSkinId */
                unitAndTileSkinId?: (number|null);

                /** S playerIndex */
                playerIndex?: (number|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMrrSetSelfSettings.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S roomId. */
                public roomId: number;

                /** S coId. */
                public coId: number;

                /** S unitAndTileSkinId. */
                public unitAndTileSkinId: number;

                /** S playerIndex. */
                public playerIndex: number;

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMrrSetSelfSettings.IS): CommonProto.NetMessage.MsgMrrSetSelfSettings.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgMrrSetSelfSettings.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMrrSetSelfSettings.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMrrSetSelfSettings.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMrrSetSelfSettings.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMrrSetSelfSettings.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMrrSetSelfSettings.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMrrSetSelfSettings.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMrrSetSelfSettings.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgMrrDeleteRoomByGm. */
        interface IMsgMrrDeleteRoomByGm {

            /** MsgMrrDeleteRoomByGm c */
            c?: (CommonProto.NetMessage.MsgMrrDeleteRoomByGm.IC|null);

            /** MsgMrrDeleteRoomByGm s */
            s?: (CommonProto.NetMessage.MsgMrrDeleteRoomByGm.IS|null);
        }

        /** Represents a MsgMrrDeleteRoomByGm. */
        class MsgMrrDeleteRoomByGm implements IMsgMrrDeleteRoomByGm {

            /**
             * Constructs a new MsgMrrDeleteRoomByGm.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgMrrDeleteRoomByGm);

            /** MsgMrrDeleteRoomByGm c. */
            public c?: (CommonProto.NetMessage.MsgMrrDeleteRoomByGm.IC|null);

            /** MsgMrrDeleteRoomByGm s. */
            public s?: (CommonProto.NetMessage.MsgMrrDeleteRoomByGm.IS|null);

            /**
             * Creates a new MsgMrrDeleteRoomByGm instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgMrrDeleteRoomByGm instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgMrrDeleteRoomByGm): CommonProto.NetMessage.MsgMrrDeleteRoomByGm;

            /**
             * Encodes the specified MsgMrrDeleteRoomByGm message. Does not implicitly {@link CommonProto.NetMessage.MsgMrrDeleteRoomByGm.verify|verify} messages.
             * @param message MsgMrrDeleteRoomByGm message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgMrrDeleteRoomByGm, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgMrrDeleteRoomByGm message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMrrDeleteRoomByGm.verify|verify} messages.
             * @param message MsgMrrDeleteRoomByGm message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgMrrDeleteRoomByGm, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgMrrDeleteRoomByGm message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgMrrDeleteRoomByGm
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMrrDeleteRoomByGm;

            /**
             * Decodes a MsgMrrDeleteRoomByGm message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgMrrDeleteRoomByGm
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMrrDeleteRoomByGm;

            /**
             * Verifies a MsgMrrDeleteRoomByGm message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgMrrDeleteRoomByGm message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgMrrDeleteRoomByGm
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMrrDeleteRoomByGm;

            /**
             * Creates a plain object from a MsgMrrDeleteRoomByGm message. Also converts values to other types if specified.
             * @param message MsgMrrDeleteRoomByGm
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgMrrDeleteRoomByGm, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgMrrDeleteRoomByGm to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgMrrDeleteRoomByGm {

            /** Properties of a C. */
            interface IC {

                /** C roomId */
                roomId?: (number|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMrrDeleteRoomByGm.IC);

                /** C roomId. */
                public roomId: number;

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMrrDeleteRoomByGm.IC): CommonProto.NetMessage.MsgMrrDeleteRoomByGm.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgMrrDeleteRoomByGm.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMrrDeleteRoomByGm.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMrrDeleteRoomByGm.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMrrDeleteRoomByGm.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMrrDeleteRoomByGm.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMrrDeleteRoomByGm.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMrrDeleteRoomByGm.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMrrDeleteRoomByGm.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S roomId */
                roomId?: (number|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMrrDeleteRoomByGm.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S roomId. */
                public roomId: number;

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMrrDeleteRoomByGm.IS): CommonProto.NetMessage.MsgMrrDeleteRoomByGm.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgMrrDeleteRoomByGm.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMrrDeleteRoomByGm.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMrrDeleteRoomByGm.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMrrDeleteRoomByGm.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMrrDeleteRoomByGm.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMrrDeleteRoomByGm.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMrrDeleteRoomByGm.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMrrDeleteRoomByGm.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgMfrCreateRoom. */
        interface IMsgMfrCreateRoom {

            /** MsgMfrCreateRoom c */
            c?: (CommonProto.NetMessage.MsgMfrCreateRoom.IC|null);

            /** MsgMfrCreateRoom s */
            s?: (CommonProto.NetMessage.MsgMfrCreateRoom.IS|null);
        }

        /** Represents a MsgMfrCreateRoom. */
        class MsgMfrCreateRoom implements IMsgMfrCreateRoom {

            /**
             * Constructs a new MsgMfrCreateRoom.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgMfrCreateRoom);

            /** MsgMfrCreateRoom c. */
            public c?: (CommonProto.NetMessage.MsgMfrCreateRoom.IC|null);

            /** MsgMfrCreateRoom s. */
            public s?: (CommonProto.NetMessage.MsgMfrCreateRoom.IS|null);

            /**
             * Creates a new MsgMfrCreateRoom instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgMfrCreateRoom instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgMfrCreateRoom): CommonProto.NetMessage.MsgMfrCreateRoom;

            /**
             * Encodes the specified MsgMfrCreateRoom message. Does not implicitly {@link CommonProto.NetMessage.MsgMfrCreateRoom.verify|verify} messages.
             * @param message MsgMfrCreateRoom message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgMfrCreateRoom, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgMfrCreateRoom message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMfrCreateRoom.verify|verify} messages.
             * @param message MsgMfrCreateRoom message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgMfrCreateRoom, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgMfrCreateRoom message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgMfrCreateRoom
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMfrCreateRoom;

            /**
             * Decodes a MsgMfrCreateRoom message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgMfrCreateRoom
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMfrCreateRoom;

            /**
             * Verifies a MsgMfrCreateRoom message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgMfrCreateRoom message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgMfrCreateRoom
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMfrCreateRoom;

            /**
             * Creates a plain object from a MsgMfrCreateRoom message. Also converts values to other types if specified.
             * @param message MsgMfrCreateRoom
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgMfrCreateRoom, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgMfrCreateRoom to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgMfrCreateRoom {

            /** Properties of a C. */
            interface IC {

                /** C settingsForMfw */
                settingsForMfw?: (CommonProto.WarSettings.ISettingsForMfw|null);

                /** C selfPlayerIndex */
                selfPlayerIndex?: (number|null);

                /** C selfCoId */
                selfCoId?: (number|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMfrCreateRoom.IC);

                /** C settingsForMfw. */
                public settingsForMfw?: (CommonProto.WarSettings.ISettingsForMfw|null);

                /** C selfPlayerIndex. */
                public selfPlayerIndex: number;

                /** C selfCoId. */
                public selfCoId: number;

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMfrCreateRoom.IC): CommonProto.NetMessage.MsgMfrCreateRoom.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgMfrCreateRoom.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMfrCreateRoom.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMfrCreateRoom.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMfrCreateRoom.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMfrCreateRoom.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMfrCreateRoom.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMfrCreateRoom.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMfrCreateRoom.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMfrCreateRoom.IS);

                /** S errorCode. */
                public errorCode: number;

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMfrCreateRoom.IS): CommonProto.NetMessage.MsgMfrCreateRoom.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgMfrCreateRoom.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMfrCreateRoom.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMfrCreateRoom.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMfrCreateRoom.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMfrCreateRoom.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMfrCreateRoom.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMfrCreateRoom.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMfrCreateRoom.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgMfrExitRoom. */
        interface IMsgMfrExitRoom {

            /** MsgMfrExitRoom c */
            c?: (CommonProto.NetMessage.MsgMfrExitRoom.IC|null);

            /** MsgMfrExitRoom s */
            s?: (CommonProto.NetMessage.MsgMfrExitRoom.IS|null);
        }

        /** Represents a MsgMfrExitRoom. */
        class MsgMfrExitRoom implements IMsgMfrExitRoom {

            /**
             * Constructs a new MsgMfrExitRoom.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgMfrExitRoom);

            /** MsgMfrExitRoom c. */
            public c?: (CommonProto.NetMessage.MsgMfrExitRoom.IC|null);

            /** MsgMfrExitRoom s. */
            public s?: (CommonProto.NetMessage.MsgMfrExitRoom.IS|null);

            /**
             * Creates a new MsgMfrExitRoom instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgMfrExitRoom instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgMfrExitRoom): CommonProto.NetMessage.MsgMfrExitRoom;

            /**
             * Encodes the specified MsgMfrExitRoom message. Does not implicitly {@link CommonProto.NetMessage.MsgMfrExitRoom.verify|verify} messages.
             * @param message MsgMfrExitRoom message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgMfrExitRoom, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgMfrExitRoom message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMfrExitRoom.verify|verify} messages.
             * @param message MsgMfrExitRoom message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgMfrExitRoom, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgMfrExitRoom message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgMfrExitRoom
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMfrExitRoom;

            /**
             * Decodes a MsgMfrExitRoom message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgMfrExitRoom
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMfrExitRoom;

            /**
             * Verifies a MsgMfrExitRoom message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgMfrExitRoom message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgMfrExitRoom
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMfrExitRoom;

            /**
             * Creates a plain object from a MsgMfrExitRoom message. Also converts values to other types if specified.
             * @param message MsgMfrExitRoom
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgMfrExitRoom, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgMfrExitRoom to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgMfrExitRoom {

            /** Properties of a C. */
            interface IC {

                /** C roomId */
                roomId?: (number|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMfrExitRoom.IC);

                /** C roomId. */
                public roomId: number;

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMfrExitRoom.IC): CommonProto.NetMessage.MsgMfrExitRoom.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgMfrExitRoom.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMfrExitRoom.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMfrExitRoom.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMfrExitRoom.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMfrExitRoom.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMfrExitRoom.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMfrExitRoom.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMfrExitRoom.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S roomId */
                roomId?: (number|null);

                /** S exitType */
                exitType?: (number|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMfrExitRoom.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S roomId. */
                public roomId: number;

                /** S exitType. */
                public exitType: number;

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMfrExitRoom.IS): CommonProto.NetMessage.MsgMfrExitRoom.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgMfrExitRoom.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMfrExitRoom.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMfrExitRoom.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMfrExitRoom.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMfrExitRoom.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMfrExitRoom.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMfrExitRoom.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMfrExitRoom.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgMfrGetRoomStaticInfo. */
        interface IMsgMfrGetRoomStaticInfo {

            /** MsgMfrGetRoomStaticInfo c */
            c?: (CommonProto.NetMessage.MsgMfrGetRoomStaticInfo.IC|null);

            /** MsgMfrGetRoomStaticInfo s */
            s?: (CommonProto.NetMessage.MsgMfrGetRoomStaticInfo.IS|null);
        }

        /** Represents a MsgMfrGetRoomStaticInfo. */
        class MsgMfrGetRoomStaticInfo implements IMsgMfrGetRoomStaticInfo {

            /**
             * Constructs a new MsgMfrGetRoomStaticInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgMfrGetRoomStaticInfo);

            /** MsgMfrGetRoomStaticInfo c. */
            public c?: (CommonProto.NetMessage.MsgMfrGetRoomStaticInfo.IC|null);

            /** MsgMfrGetRoomStaticInfo s. */
            public s?: (CommonProto.NetMessage.MsgMfrGetRoomStaticInfo.IS|null);

            /**
             * Creates a new MsgMfrGetRoomStaticInfo instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgMfrGetRoomStaticInfo instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgMfrGetRoomStaticInfo): CommonProto.NetMessage.MsgMfrGetRoomStaticInfo;

            /**
             * Encodes the specified MsgMfrGetRoomStaticInfo message. Does not implicitly {@link CommonProto.NetMessage.MsgMfrGetRoomStaticInfo.verify|verify} messages.
             * @param message MsgMfrGetRoomStaticInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgMfrGetRoomStaticInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgMfrGetRoomStaticInfo message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMfrGetRoomStaticInfo.verify|verify} messages.
             * @param message MsgMfrGetRoomStaticInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgMfrGetRoomStaticInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgMfrGetRoomStaticInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgMfrGetRoomStaticInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMfrGetRoomStaticInfo;

            /**
             * Decodes a MsgMfrGetRoomStaticInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgMfrGetRoomStaticInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMfrGetRoomStaticInfo;

            /**
             * Verifies a MsgMfrGetRoomStaticInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgMfrGetRoomStaticInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgMfrGetRoomStaticInfo
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMfrGetRoomStaticInfo;

            /**
             * Creates a plain object from a MsgMfrGetRoomStaticInfo message. Also converts values to other types if specified.
             * @param message MsgMfrGetRoomStaticInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgMfrGetRoomStaticInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgMfrGetRoomStaticInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgMfrGetRoomStaticInfo {

            /** Properties of a C. */
            interface IC {

                /** C roomId */
                roomId?: (number|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMfrGetRoomStaticInfo.IC);

                /** C roomId. */
                public roomId: number;

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMfrGetRoomStaticInfo.IC): CommonProto.NetMessage.MsgMfrGetRoomStaticInfo.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgMfrGetRoomStaticInfo.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMfrGetRoomStaticInfo.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMfrGetRoomStaticInfo.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMfrGetRoomStaticInfo.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMfrGetRoomStaticInfo.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMfrGetRoomStaticInfo.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMfrGetRoomStaticInfo.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMfrGetRoomStaticInfo.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S roomId */
                roomId?: (number|null);

                /** S roomStaticInfo */
                roomStaticInfo?: (CommonProto.MultiFreeRoom.IMfrRoomStaticInfo|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMfrGetRoomStaticInfo.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S roomId. */
                public roomId: number;

                /** S roomStaticInfo. */
                public roomStaticInfo?: (CommonProto.MultiFreeRoom.IMfrRoomStaticInfo|null);

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMfrGetRoomStaticInfo.IS): CommonProto.NetMessage.MsgMfrGetRoomStaticInfo.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgMfrGetRoomStaticInfo.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMfrGetRoomStaticInfo.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMfrGetRoomStaticInfo.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMfrGetRoomStaticInfo.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMfrGetRoomStaticInfo.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMfrGetRoomStaticInfo.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMfrGetRoomStaticInfo.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMfrGetRoomStaticInfo.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgMfrGetRoomPlayerInfo. */
        interface IMsgMfrGetRoomPlayerInfo {

            /** MsgMfrGetRoomPlayerInfo c */
            c?: (CommonProto.NetMessage.MsgMfrGetRoomPlayerInfo.IC|null);

            /** MsgMfrGetRoomPlayerInfo s */
            s?: (CommonProto.NetMessage.MsgMfrGetRoomPlayerInfo.IS|null);
        }

        /** Represents a MsgMfrGetRoomPlayerInfo. */
        class MsgMfrGetRoomPlayerInfo implements IMsgMfrGetRoomPlayerInfo {

            /**
             * Constructs a new MsgMfrGetRoomPlayerInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgMfrGetRoomPlayerInfo);

            /** MsgMfrGetRoomPlayerInfo c. */
            public c?: (CommonProto.NetMessage.MsgMfrGetRoomPlayerInfo.IC|null);

            /** MsgMfrGetRoomPlayerInfo s. */
            public s?: (CommonProto.NetMessage.MsgMfrGetRoomPlayerInfo.IS|null);

            /**
             * Creates a new MsgMfrGetRoomPlayerInfo instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgMfrGetRoomPlayerInfo instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgMfrGetRoomPlayerInfo): CommonProto.NetMessage.MsgMfrGetRoomPlayerInfo;

            /**
             * Encodes the specified MsgMfrGetRoomPlayerInfo message. Does not implicitly {@link CommonProto.NetMessage.MsgMfrGetRoomPlayerInfo.verify|verify} messages.
             * @param message MsgMfrGetRoomPlayerInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgMfrGetRoomPlayerInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgMfrGetRoomPlayerInfo message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMfrGetRoomPlayerInfo.verify|verify} messages.
             * @param message MsgMfrGetRoomPlayerInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgMfrGetRoomPlayerInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgMfrGetRoomPlayerInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgMfrGetRoomPlayerInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMfrGetRoomPlayerInfo;

            /**
             * Decodes a MsgMfrGetRoomPlayerInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgMfrGetRoomPlayerInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMfrGetRoomPlayerInfo;

            /**
             * Verifies a MsgMfrGetRoomPlayerInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgMfrGetRoomPlayerInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgMfrGetRoomPlayerInfo
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMfrGetRoomPlayerInfo;

            /**
             * Creates a plain object from a MsgMfrGetRoomPlayerInfo message. Also converts values to other types if specified.
             * @param message MsgMfrGetRoomPlayerInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgMfrGetRoomPlayerInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgMfrGetRoomPlayerInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgMfrGetRoomPlayerInfo {

            /** Properties of a C. */
            interface IC {

                /** C roomId */
                roomId?: (number|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMfrGetRoomPlayerInfo.IC);

                /** C roomId. */
                public roomId: number;

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMfrGetRoomPlayerInfo.IC): CommonProto.NetMessage.MsgMfrGetRoomPlayerInfo.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgMfrGetRoomPlayerInfo.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMfrGetRoomPlayerInfo.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMfrGetRoomPlayerInfo.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMfrGetRoomPlayerInfo.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMfrGetRoomPlayerInfo.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMfrGetRoomPlayerInfo.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMfrGetRoomPlayerInfo.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMfrGetRoomPlayerInfo.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S roomId */
                roomId?: (number|null);

                /** S roomPlayerInfo */
                roomPlayerInfo?: (CommonProto.MultiFreeRoom.IMfrRoomPlayerInfo|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMfrGetRoomPlayerInfo.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S roomId. */
                public roomId: number;

                /** S roomPlayerInfo. */
                public roomPlayerInfo?: (CommonProto.MultiFreeRoom.IMfrRoomPlayerInfo|null);

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMfrGetRoomPlayerInfo.IS): CommonProto.NetMessage.MsgMfrGetRoomPlayerInfo.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgMfrGetRoomPlayerInfo.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMfrGetRoomPlayerInfo.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMfrGetRoomPlayerInfo.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMfrGetRoomPlayerInfo.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMfrGetRoomPlayerInfo.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMfrGetRoomPlayerInfo.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMfrGetRoomPlayerInfo.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMfrGetRoomPlayerInfo.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgMfrJoinRoom. */
        interface IMsgMfrJoinRoom {

            /** MsgMfrJoinRoom c */
            c?: (CommonProto.NetMessage.MsgMfrJoinRoom.IC|null);

            /** MsgMfrJoinRoom s */
            s?: (CommonProto.NetMessage.MsgMfrJoinRoom.IS|null);
        }

        /** Represents a MsgMfrJoinRoom. */
        class MsgMfrJoinRoom implements IMsgMfrJoinRoom {

            /**
             * Constructs a new MsgMfrJoinRoom.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgMfrJoinRoom);

            /** MsgMfrJoinRoom c. */
            public c?: (CommonProto.NetMessage.MsgMfrJoinRoom.IC|null);

            /** MsgMfrJoinRoom s. */
            public s?: (CommonProto.NetMessage.MsgMfrJoinRoom.IS|null);

            /**
             * Creates a new MsgMfrJoinRoom instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgMfrJoinRoom instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgMfrJoinRoom): CommonProto.NetMessage.MsgMfrJoinRoom;

            /**
             * Encodes the specified MsgMfrJoinRoom message. Does not implicitly {@link CommonProto.NetMessage.MsgMfrJoinRoom.verify|verify} messages.
             * @param message MsgMfrJoinRoom message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgMfrJoinRoom, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgMfrJoinRoom message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMfrJoinRoom.verify|verify} messages.
             * @param message MsgMfrJoinRoom message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgMfrJoinRoom, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgMfrJoinRoom message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgMfrJoinRoom
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMfrJoinRoom;

            /**
             * Decodes a MsgMfrJoinRoom message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgMfrJoinRoom
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMfrJoinRoom;

            /**
             * Verifies a MsgMfrJoinRoom message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgMfrJoinRoom message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgMfrJoinRoom
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMfrJoinRoom;

            /**
             * Creates a plain object from a MsgMfrJoinRoom message. Also converts values to other types if specified.
             * @param message MsgMfrJoinRoom
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgMfrJoinRoom, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgMfrJoinRoom to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgMfrJoinRoom {

            /** Properties of a C. */
            interface IC {

                /** C roomId */
                roomId?: (number|null);

                /** C playerIndex */
                playerIndex?: (number|null);

                /** C isReady */
                isReady?: (boolean|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMfrJoinRoom.IC);

                /** C roomId. */
                public roomId: number;

                /** C playerIndex. */
                public playerIndex: number;

                /** C isReady. */
                public isReady: boolean;

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMfrJoinRoom.IC): CommonProto.NetMessage.MsgMfrJoinRoom.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgMfrJoinRoom.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMfrJoinRoom.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMfrJoinRoom.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMfrJoinRoom.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMfrJoinRoom.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMfrJoinRoom.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMfrJoinRoom.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMfrJoinRoom.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S roomId */
                roomId?: (number|null);

                /** S playerIndex */
                playerIndex?: (number|null);

                /** S isReady */
                isReady?: (boolean|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMfrJoinRoom.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S roomId. */
                public roomId: number;

                /** S playerIndex. */
                public playerIndex: number;

                /** S isReady. */
                public isReady: boolean;

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMfrJoinRoom.IS): CommonProto.NetMessage.MsgMfrJoinRoom.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgMfrJoinRoom.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMfrJoinRoom.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMfrJoinRoom.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMfrJoinRoom.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMfrJoinRoom.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMfrJoinRoom.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMfrJoinRoom.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMfrJoinRoom.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgMfrDeleteRoom. */
        interface IMsgMfrDeleteRoom {

            /** MsgMfrDeleteRoom c */
            c?: (CommonProto.NetMessage.MsgMfrDeleteRoom.IC|null);

            /** MsgMfrDeleteRoom s */
            s?: (CommonProto.NetMessage.MsgMfrDeleteRoom.IS|null);
        }

        /** Represents a MsgMfrDeleteRoom. */
        class MsgMfrDeleteRoom implements IMsgMfrDeleteRoom {

            /**
             * Constructs a new MsgMfrDeleteRoom.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgMfrDeleteRoom);

            /** MsgMfrDeleteRoom c. */
            public c?: (CommonProto.NetMessage.MsgMfrDeleteRoom.IC|null);

            /** MsgMfrDeleteRoom s. */
            public s?: (CommonProto.NetMessage.MsgMfrDeleteRoom.IS|null);

            /**
             * Creates a new MsgMfrDeleteRoom instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgMfrDeleteRoom instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgMfrDeleteRoom): CommonProto.NetMessage.MsgMfrDeleteRoom;

            /**
             * Encodes the specified MsgMfrDeleteRoom message. Does not implicitly {@link CommonProto.NetMessage.MsgMfrDeleteRoom.verify|verify} messages.
             * @param message MsgMfrDeleteRoom message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgMfrDeleteRoom, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgMfrDeleteRoom message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMfrDeleteRoom.verify|verify} messages.
             * @param message MsgMfrDeleteRoom message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgMfrDeleteRoom, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgMfrDeleteRoom message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgMfrDeleteRoom
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMfrDeleteRoom;

            /**
             * Decodes a MsgMfrDeleteRoom message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgMfrDeleteRoom
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMfrDeleteRoom;

            /**
             * Verifies a MsgMfrDeleteRoom message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgMfrDeleteRoom message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgMfrDeleteRoom
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMfrDeleteRoom;

            /**
             * Creates a plain object from a MsgMfrDeleteRoom message. Also converts values to other types if specified.
             * @param message MsgMfrDeleteRoom
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgMfrDeleteRoom, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgMfrDeleteRoom to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgMfrDeleteRoom {

            /** Properties of a C. */
            interface IC {

                /** C roomId */
                roomId?: (number|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMfrDeleteRoom.IC);

                /** C roomId. */
                public roomId: number;

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMfrDeleteRoom.IC): CommonProto.NetMessage.MsgMfrDeleteRoom.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgMfrDeleteRoom.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMfrDeleteRoom.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMfrDeleteRoom.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMfrDeleteRoom.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMfrDeleteRoom.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMfrDeleteRoom.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMfrDeleteRoom.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMfrDeleteRoom.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S roomId */
                roomId?: (number|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMfrDeleteRoom.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S roomId. */
                public roomId: number;

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMfrDeleteRoom.IS): CommonProto.NetMessage.MsgMfrDeleteRoom.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgMfrDeleteRoom.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMfrDeleteRoom.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMfrDeleteRoom.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMfrDeleteRoom.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMfrDeleteRoom.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMfrDeleteRoom.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMfrDeleteRoom.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMfrDeleteRoom.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgMfrSetReady. */
        interface IMsgMfrSetReady {

            /** MsgMfrSetReady c */
            c?: (CommonProto.NetMessage.MsgMfrSetReady.IC|null);

            /** MsgMfrSetReady s */
            s?: (CommonProto.NetMessage.MsgMfrSetReady.IS|null);
        }

        /** Represents a MsgMfrSetReady. */
        class MsgMfrSetReady implements IMsgMfrSetReady {

            /**
             * Constructs a new MsgMfrSetReady.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgMfrSetReady);

            /** MsgMfrSetReady c. */
            public c?: (CommonProto.NetMessage.MsgMfrSetReady.IC|null);

            /** MsgMfrSetReady s. */
            public s?: (CommonProto.NetMessage.MsgMfrSetReady.IS|null);

            /**
             * Creates a new MsgMfrSetReady instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgMfrSetReady instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgMfrSetReady): CommonProto.NetMessage.MsgMfrSetReady;

            /**
             * Encodes the specified MsgMfrSetReady message. Does not implicitly {@link CommonProto.NetMessage.MsgMfrSetReady.verify|verify} messages.
             * @param message MsgMfrSetReady message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgMfrSetReady, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgMfrSetReady message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMfrSetReady.verify|verify} messages.
             * @param message MsgMfrSetReady message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgMfrSetReady, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgMfrSetReady message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgMfrSetReady
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMfrSetReady;

            /**
             * Decodes a MsgMfrSetReady message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgMfrSetReady
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMfrSetReady;

            /**
             * Verifies a MsgMfrSetReady message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgMfrSetReady message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgMfrSetReady
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMfrSetReady;

            /**
             * Creates a plain object from a MsgMfrSetReady message. Also converts values to other types if specified.
             * @param message MsgMfrSetReady
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgMfrSetReady, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgMfrSetReady to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgMfrSetReady {

            /** Properties of a C. */
            interface IC {

                /** C roomId */
                roomId?: (number|null);

                /** C isReady */
                isReady?: (boolean|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMfrSetReady.IC);

                /** C roomId. */
                public roomId: number;

                /** C isReady. */
                public isReady: boolean;

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMfrSetReady.IC): CommonProto.NetMessage.MsgMfrSetReady.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgMfrSetReady.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMfrSetReady.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMfrSetReady.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMfrSetReady.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMfrSetReady.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMfrSetReady.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMfrSetReady.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMfrSetReady.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S roomId */
                roomId?: (number|null);

                /** S isReady */
                isReady?: (boolean|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMfrSetReady.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S roomId. */
                public roomId: number;

                /** S isReady. */
                public isReady: boolean;

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMfrSetReady.IS): CommonProto.NetMessage.MsgMfrSetReady.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgMfrSetReady.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMfrSetReady.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMfrSetReady.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMfrSetReady.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMfrSetReady.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMfrSetReady.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMfrSetReady.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMfrSetReady.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgMfrDeletePlayer. */
        interface IMsgMfrDeletePlayer {

            /** MsgMfrDeletePlayer c */
            c?: (CommonProto.NetMessage.MsgMfrDeletePlayer.IC|null);

            /** MsgMfrDeletePlayer s */
            s?: (CommonProto.NetMessage.MsgMfrDeletePlayer.IS|null);
        }

        /** Represents a MsgMfrDeletePlayer. */
        class MsgMfrDeletePlayer implements IMsgMfrDeletePlayer {

            /**
             * Constructs a new MsgMfrDeletePlayer.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgMfrDeletePlayer);

            /** MsgMfrDeletePlayer c. */
            public c?: (CommonProto.NetMessage.MsgMfrDeletePlayer.IC|null);

            /** MsgMfrDeletePlayer s. */
            public s?: (CommonProto.NetMessage.MsgMfrDeletePlayer.IS|null);

            /**
             * Creates a new MsgMfrDeletePlayer instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgMfrDeletePlayer instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgMfrDeletePlayer): CommonProto.NetMessage.MsgMfrDeletePlayer;

            /**
             * Encodes the specified MsgMfrDeletePlayer message. Does not implicitly {@link CommonProto.NetMessage.MsgMfrDeletePlayer.verify|verify} messages.
             * @param message MsgMfrDeletePlayer message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgMfrDeletePlayer, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgMfrDeletePlayer message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMfrDeletePlayer.verify|verify} messages.
             * @param message MsgMfrDeletePlayer message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgMfrDeletePlayer, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgMfrDeletePlayer message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgMfrDeletePlayer
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMfrDeletePlayer;

            /**
             * Decodes a MsgMfrDeletePlayer message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgMfrDeletePlayer
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMfrDeletePlayer;

            /**
             * Verifies a MsgMfrDeletePlayer message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgMfrDeletePlayer message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgMfrDeletePlayer
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMfrDeletePlayer;

            /**
             * Creates a plain object from a MsgMfrDeletePlayer message. Also converts values to other types if specified.
             * @param message MsgMfrDeletePlayer
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgMfrDeletePlayer, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgMfrDeletePlayer to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgMfrDeletePlayer {

            /** Properties of a C. */
            interface IC {

                /** C roomId */
                roomId?: (number|null);

                /** C playerIndex */
                playerIndex?: (number|null);

                /** C forbidReentrance */
                forbidReentrance?: (boolean|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMfrDeletePlayer.IC);

                /** C roomId. */
                public roomId: number;

                /** C playerIndex. */
                public playerIndex: number;

                /** C forbidReentrance. */
                public forbidReentrance: boolean;

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMfrDeletePlayer.IC): CommonProto.NetMessage.MsgMfrDeletePlayer.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgMfrDeletePlayer.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMfrDeletePlayer.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMfrDeletePlayer.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMfrDeletePlayer.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMfrDeletePlayer.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMfrDeletePlayer.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMfrDeletePlayer.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMfrDeletePlayer.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S roomId */
                roomId?: (number|null);

                /** S playerIndex */
                playerIndex?: (number|null);

                /** S forbidReentrance */
                forbidReentrance?: (boolean|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMfrDeletePlayer.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S roomId. */
                public roomId: number;

                /** S playerIndex. */
                public playerIndex: number;

                /** S forbidReentrance. */
                public forbidReentrance: boolean;

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMfrDeletePlayer.IS): CommonProto.NetMessage.MsgMfrDeletePlayer.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgMfrDeletePlayer.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMfrDeletePlayer.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMfrDeletePlayer.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMfrDeletePlayer.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMfrDeletePlayer.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMfrDeletePlayer.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMfrDeletePlayer.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMfrDeletePlayer.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgMfrSetSelfSettings. */
        interface IMsgMfrSetSelfSettings {

            /** MsgMfrSetSelfSettings c */
            c?: (CommonProto.NetMessage.MsgMfrSetSelfSettings.IC|null);

            /** MsgMfrSetSelfSettings s */
            s?: (CommonProto.NetMessage.MsgMfrSetSelfSettings.IS|null);
        }

        /** Represents a MsgMfrSetSelfSettings. */
        class MsgMfrSetSelfSettings implements IMsgMfrSetSelfSettings {

            /**
             * Constructs a new MsgMfrSetSelfSettings.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgMfrSetSelfSettings);

            /** MsgMfrSetSelfSettings c. */
            public c?: (CommonProto.NetMessage.MsgMfrSetSelfSettings.IC|null);

            /** MsgMfrSetSelfSettings s. */
            public s?: (CommonProto.NetMessage.MsgMfrSetSelfSettings.IS|null);

            /**
             * Creates a new MsgMfrSetSelfSettings instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgMfrSetSelfSettings instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgMfrSetSelfSettings): CommonProto.NetMessage.MsgMfrSetSelfSettings;

            /**
             * Encodes the specified MsgMfrSetSelfSettings message. Does not implicitly {@link CommonProto.NetMessage.MsgMfrSetSelfSettings.verify|verify} messages.
             * @param message MsgMfrSetSelfSettings message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgMfrSetSelfSettings, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgMfrSetSelfSettings message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMfrSetSelfSettings.verify|verify} messages.
             * @param message MsgMfrSetSelfSettings message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgMfrSetSelfSettings, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgMfrSetSelfSettings message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgMfrSetSelfSettings
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMfrSetSelfSettings;

            /**
             * Decodes a MsgMfrSetSelfSettings message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgMfrSetSelfSettings
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMfrSetSelfSettings;

            /**
             * Verifies a MsgMfrSetSelfSettings message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgMfrSetSelfSettings message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgMfrSetSelfSettings
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMfrSetSelfSettings;

            /**
             * Creates a plain object from a MsgMfrSetSelfSettings message. Also converts values to other types if specified.
             * @param message MsgMfrSetSelfSettings
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgMfrSetSelfSettings, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgMfrSetSelfSettings to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgMfrSetSelfSettings {

            /** Properties of a C. */
            interface IC {

                /** C roomId */
                roomId?: (number|null);

                /** C playerIndex */
                playerIndex?: (number|null);

                /** C coId */
                coId?: (number|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMfrSetSelfSettings.IC);

                /** C roomId. */
                public roomId: number;

                /** C playerIndex. */
                public playerIndex: number;

                /** C coId. */
                public coId: number;

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMfrSetSelfSettings.IC): CommonProto.NetMessage.MsgMfrSetSelfSettings.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgMfrSetSelfSettings.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMfrSetSelfSettings.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMfrSetSelfSettings.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMfrSetSelfSettings.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMfrSetSelfSettings.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMfrSetSelfSettings.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMfrSetSelfSettings.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMfrSetSelfSettings.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S roomId */
                roomId?: (number|null);

                /** S oldPlayerIndex */
                oldPlayerIndex?: (number|null);

                /** S newPlayerIndex */
                newPlayerIndex?: (number|null);

                /** S coId */
                coId?: (number|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMfrSetSelfSettings.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S roomId. */
                public roomId: number;

                /** S oldPlayerIndex. */
                public oldPlayerIndex: number;

                /** S newPlayerIndex. */
                public newPlayerIndex: number;

                /** S coId. */
                public coId: number;

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMfrSetSelfSettings.IS): CommonProto.NetMessage.MsgMfrSetSelfSettings.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgMfrSetSelfSettings.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMfrSetSelfSettings.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMfrSetSelfSettings.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMfrSetSelfSettings.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMfrSetSelfSettings.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMfrSetSelfSettings.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMfrSetSelfSettings.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMfrSetSelfSettings.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgMfrStartWar. */
        interface IMsgMfrStartWar {

            /** MsgMfrStartWar c */
            c?: (CommonProto.NetMessage.MsgMfrStartWar.IC|null);

            /** MsgMfrStartWar s */
            s?: (CommonProto.NetMessage.MsgMfrStartWar.IS|null);
        }

        /** Represents a MsgMfrStartWar. */
        class MsgMfrStartWar implements IMsgMfrStartWar {

            /**
             * Constructs a new MsgMfrStartWar.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgMfrStartWar);

            /** MsgMfrStartWar c. */
            public c?: (CommonProto.NetMessage.MsgMfrStartWar.IC|null);

            /** MsgMfrStartWar s. */
            public s?: (CommonProto.NetMessage.MsgMfrStartWar.IS|null);

            /**
             * Creates a new MsgMfrStartWar instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgMfrStartWar instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgMfrStartWar): CommonProto.NetMessage.MsgMfrStartWar;

            /**
             * Encodes the specified MsgMfrStartWar message. Does not implicitly {@link CommonProto.NetMessage.MsgMfrStartWar.verify|verify} messages.
             * @param message MsgMfrStartWar message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgMfrStartWar, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgMfrStartWar message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMfrStartWar.verify|verify} messages.
             * @param message MsgMfrStartWar message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgMfrStartWar, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgMfrStartWar message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgMfrStartWar
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMfrStartWar;

            /**
             * Decodes a MsgMfrStartWar message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgMfrStartWar
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMfrStartWar;

            /**
             * Verifies a MsgMfrStartWar message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgMfrStartWar message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgMfrStartWar
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMfrStartWar;

            /**
             * Creates a plain object from a MsgMfrStartWar message. Also converts values to other types if specified.
             * @param message MsgMfrStartWar
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgMfrStartWar, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgMfrStartWar to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgMfrStartWar {

            /** Properties of a C. */
            interface IC {

                /** C roomId */
                roomId?: (number|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMfrStartWar.IC);

                /** C roomId. */
                public roomId: number;

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMfrStartWar.IC): CommonProto.NetMessage.MsgMfrStartWar.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgMfrStartWar.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMfrStartWar.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMfrStartWar.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMfrStartWar.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMfrStartWar.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMfrStartWar.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMfrStartWar.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMfrStartWar.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S roomId */
                roomId?: (number|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgMfrStartWar.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S roomId. */
                public roomId: number;

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgMfrStartWar.IS): CommonProto.NetMessage.MsgMfrStartWar.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgMfrStartWar.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgMfrStartWar.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgMfrStartWar.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgMfrStartWar.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgMfrStartWar.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgMfrStartWar.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgMfrStartWar.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgMfrStartWar.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgCcrCreateRoom. */
        interface IMsgCcrCreateRoom {

            /** MsgCcrCreateRoom c */
            c?: (CommonProto.NetMessage.MsgCcrCreateRoom.IC|null);

            /** MsgCcrCreateRoom s */
            s?: (CommonProto.NetMessage.MsgCcrCreateRoom.IS|null);
        }

        /** Represents a MsgCcrCreateRoom. */
        class MsgCcrCreateRoom implements IMsgCcrCreateRoom {

            /**
             * Constructs a new MsgCcrCreateRoom.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgCcrCreateRoom);

            /** MsgCcrCreateRoom c. */
            public c?: (CommonProto.NetMessage.MsgCcrCreateRoom.IC|null);

            /** MsgCcrCreateRoom s. */
            public s?: (CommonProto.NetMessage.MsgCcrCreateRoom.IS|null);

            /**
             * Creates a new MsgCcrCreateRoom instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgCcrCreateRoom instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgCcrCreateRoom): CommonProto.NetMessage.MsgCcrCreateRoom;

            /**
             * Encodes the specified MsgCcrCreateRoom message. Does not implicitly {@link CommonProto.NetMessage.MsgCcrCreateRoom.verify|verify} messages.
             * @param message MsgCcrCreateRoom message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgCcrCreateRoom, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgCcrCreateRoom message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgCcrCreateRoom.verify|verify} messages.
             * @param message MsgCcrCreateRoom message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgCcrCreateRoom, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgCcrCreateRoom message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgCcrCreateRoom
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgCcrCreateRoom;

            /**
             * Decodes a MsgCcrCreateRoom message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgCcrCreateRoom
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgCcrCreateRoom;

            /**
             * Verifies a MsgCcrCreateRoom message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgCcrCreateRoom message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgCcrCreateRoom
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgCcrCreateRoom;

            /**
             * Creates a plain object from a MsgCcrCreateRoom message. Also converts values to other types if specified.
             * @param message MsgCcrCreateRoom
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgCcrCreateRoom, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgCcrCreateRoom to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgCcrCreateRoom {

            /** Properties of an AiSkinInfo. */
            interface IAiSkinInfo {

                /** AiSkinInfo playerIndex */
                playerIndex?: (number|null);

                /** AiSkinInfo unitAndTileSkinId */
                unitAndTileSkinId?: (number|null);
            }

            /** Represents an AiSkinInfo. */
            class AiSkinInfo implements IAiSkinInfo {

                /**
                 * Constructs a new AiSkinInfo.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgCcrCreateRoom.IAiSkinInfo);

                /** AiSkinInfo playerIndex. */
                public playerIndex: number;

                /** AiSkinInfo unitAndTileSkinId. */
                public unitAndTileSkinId: number;

                /**
                 * Creates a new AiSkinInfo instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns AiSkinInfo instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgCcrCreateRoom.IAiSkinInfo): CommonProto.NetMessage.MsgCcrCreateRoom.AiSkinInfo;

                /**
                 * Encodes the specified AiSkinInfo message. Does not implicitly {@link CommonProto.NetMessage.MsgCcrCreateRoom.AiSkinInfo.verify|verify} messages.
                 * @param message AiSkinInfo message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgCcrCreateRoom.IAiSkinInfo, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified AiSkinInfo message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgCcrCreateRoom.AiSkinInfo.verify|verify} messages.
                 * @param message AiSkinInfo message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgCcrCreateRoom.IAiSkinInfo, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes an AiSkinInfo message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns AiSkinInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgCcrCreateRoom.AiSkinInfo;

                /**
                 * Decodes an AiSkinInfo message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns AiSkinInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgCcrCreateRoom.AiSkinInfo;

                /**
                 * Verifies an AiSkinInfo message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an AiSkinInfo message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns AiSkinInfo
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgCcrCreateRoom.AiSkinInfo;

                /**
                 * Creates a plain object from an AiSkinInfo message. Also converts values to other types if specified.
                 * @param message AiSkinInfo
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgCcrCreateRoom.AiSkinInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this AiSkinInfo to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a C. */
            interface IC {

                /** C settingsForCommon */
                settingsForCommon?: (CommonProto.WarSettings.ISettingsForCommon|null);

                /** C settingsForCcw */
                settingsForCcw?: (CommonProto.WarSettings.ISettingsForCcw|null);

                /** C selfPlayerIndex */
                selfPlayerIndex?: (number|null);

                /** C selfCoId */
                selfCoId?: (number|null);

                /** C selfUnitAndTileSkinId */
                selfUnitAndTileSkinId?: (number|null);

                /** C aiSkinInfoArray */
                aiSkinInfoArray?: (CommonProto.NetMessage.MsgCcrCreateRoom.IAiSkinInfo[]|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgCcrCreateRoom.IC);

                /** C settingsForCommon. */
                public settingsForCommon?: (CommonProto.WarSettings.ISettingsForCommon|null);

                /** C settingsForCcw. */
                public settingsForCcw?: (CommonProto.WarSettings.ISettingsForCcw|null);

                /** C selfPlayerIndex. */
                public selfPlayerIndex: number;

                /** C selfCoId. */
                public selfCoId: number;

                /** C selfUnitAndTileSkinId. */
                public selfUnitAndTileSkinId: number;

                /** C aiSkinInfoArray. */
                public aiSkinInfoArray: CommonProto.NetMessage.MsgCcrCreateRoom.IAiSkinInfo[];

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgCcrCreateRoom.IC): CommonProto.NetMessage.MsgCcrCreateRoom.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgCcrCreateRoom.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgCcrCreateRoom.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgCcrCreateRoom.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgCcrCreateRoom.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgCcrCreateRoom.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgCcrCreateRoom.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgCcrCreateRoom.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgCcrCreateRoom.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgCcrCreateRoom.IS);

                /** S errorCode. */
                public errorCode: number;

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgCcrCreateRoom.IS): CommonProto.NetMessage.MsgCcrCreateRoom.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgCcrCreateRoom.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgCcrCreateRoom.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgCcrCreateRoom.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgCcrCreateRoom.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgCcrCreateRoom.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgCcrCreateRoom.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgCcrCreateRoom.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgCcrCreateRoom.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgCcrExitRoom. */
        interface IMsgCcrExitRoom {

            /** MsgCcrExitRoom c */
            c?: (CommonProto.NetMessage.MsgCcrExitRoom.IC|null);

            /** MsgCcrExitRoom s */
            s?: (CommonProto.NetMessage.MsgCcrExitRoom.IS|null);
        }

        /** Represents a MsgCcrExitRoom. */
        class MsgCcrExitRoom implements IMsgCcrExitRoom {

            /**
             * Constructs a new MsgCcrExitRoom.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgCcrExitRoom);

            /** MsgCcrExitRoom c. */
            public c?: (CommonProto.NetMessage.MsgCcrExitRoom.IC|null);

            /** MsgCcrExitRoom s. */
            public s?: (CommonProto.NetMessage.MsgCcrExitRoom.IS|null);

            /**
             * Creates a new MsgCcrExitRoom instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgCcrExitRoom instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgCcrExitRoom): CommonProto.NetMessage.MsgCcrExitRoom;

            /**
             * Encodes the specified MsgCcrExitRoom message. Does not implicitly {@link CommonProto.NetMessage.MsgCcrExitRoom.verify|verify} messages.
             * @param message MsgCcrExitRoom message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgCcrExitRoom, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgCcrExitRoom message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgCcrExitRoom.verify|verify} messages.
             * @param message MsgCcrExitRoom message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgCcrExitRoom, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgCcrExitRoom message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgCcrExitRoom
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgCcrExitRoom;

            /**
             * Decodes a MsgCcrExitRoom message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgCcrExitRoom
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgCcrExitRoom;

            /**
             * Verifies a MsgCcrExitRoom message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgCcrExitRoom message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgCcrExitRoom
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgCcrExitRoom;

            /**
             * Creates a plain object from a MsgCcrExitRoom message. Also converts values to other types if specified.
             * @param message MsgCcrExitRoom
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgCcrExitRoom, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgCcrExitRoom to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgCcrExitRoom {

            /** Properties of a C. */
            interface IC {

                /** C roomId */
                roomId?: (number|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgCcrExitRoom.IC);

                /** C roomId. */
                public roomId: number;

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgCcrExitRoom.IC): CommonProto.NetMessage.MsgCcrExitRoom.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgCcrExitRoom.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgCcrExitRoom.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgCcrExitRoom.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgCcrExitRoom.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgCcrExitRoom.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgCcrExitRoom.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgCcrExitRoom.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgCcrExitRoom.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S roomId */
                roomId?: (number|null);

                /** S exitType */
                exitType?: (number|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgCcrExitRoom.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S roomId. */
                public roomId: number;

                /** S exitType. */
                public exitType: number;

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgCcrExitRoom.IS): CommonProto.NetMessage.MsgCcrExitRoom.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgCcrExitRoom.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgCcrExitRoom.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgCcrExitRoom.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgCcrExitRoom.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgCcrExitRoom.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgCcrExitRoom.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgCcrExitRoom.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgCcrExitRoom.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgCcrGetRoomStaticInfo. */
        interface IMsgCcrGetRoomStaticInfo {

            /** MsgCcrGetRoomStaticInfo c */
            c?: (CommonProto.NetMessage.MsgCcrGetRoomStaticInfo.IC|null);

            /** MsgCcrGetRoomStaticInfo s */
            s?: (CommonProto.NetMessage.MsgCcrGetRoomStaticInfo.IS|null);
        }

        /** Represents a MsgCcrGetRoomStaticInfo. */
        class MsgCcrGetRoomStaticInfo implements IMsgCcrGetRoomStaticInfo {

            /**
             * Constructs a new MsgCcrGetRoomStaticInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgCcrGetRoomStaticInfo);

            /** MsgCcrGetRoomStaticInfo c. */
            public c?: (CommonProto.NetMessage.MsgCcrGetRoomStaticInfo.IC|null);

            /** MsgCcrGetRoomStaticInfo s. */
            public s?: (CommonProto.NetMessage.MsgCcrGetRoomStaticInfo.IS|null);

            /**
             * Creates a new MsgCcrGetRoomStaticInfo instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgCcrGetRoomStaticInfo instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgCcrGetRoomStaticInfo): CommonProto.NetMessage.MsgCcrGetRoomStaticInfo;

            /**
             * Encodes the specified MsgCcrGetRoomStaticInfo message. Does not implicitly {@link CommonProto.NetMessage.MsgCcrGetRoomStaticInfo.verify|verify} messages.
             * @param message MsgCcrGetRoomStaticInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgCcrGetRoomStaticInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgCcrGetRoomStaticInfo message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgCcrGetRoomStaticInfo.verify|verify} messages.
             * @param message MsgCcrGetRoomStaticInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgCcrGetRoomStaticInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgCcrGetRoomStaticInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgCcrGetRoomStaticInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgCcrGetRoomStaticInfo;

            /**
             * Decodes a MsgCcrGetRoomStaticInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgCcrGetRoomStaticInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgCcrGetRoomStaticInfo;

            /**
             * Verifies a MsgCcrGetRoomStaticInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgCcrGetRoomStaticInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgCcrGetRoomStaticInfo
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgCcrGetRoomStaticInfo;

            /**
             * Creates a plain object from a MsgCcrGetRoomStaticInfo message. Also converts values to other types if specified.
             * @param message MsgCcrGetRoomStaticInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgCcrGetRoomStaticInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgCcrGetRoomStaticInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgCcrGetRoomStaticInfo {

            /** Properties of a C. */
            interface IC {

                /** C roomId */
                roomId?: (number|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgCcrGetRoomStaticInfo.IC);

                /** C roomId. */
                public roomId: number;

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgCcrGetRoomStaticInfo.IC): CommonProto.NetMessage.MsgCcrGetRoomStaticInfo.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgCcrGetRoomStaticInfo.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgCcrGetRoomStaticInfo.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgCcrGetRoomStaticInfo.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgCcrGetRoomStaticInfo.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgCcrGetRoomStaticInfo.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgCcrGetRoomStaticInfo.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgCcrGetRoomStaticInfo.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgCcrGetRoomStaticInfo.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S roomId */
                roomId?: (number|null);

                /** S roomStaticInfo */
                roomStaticInfo?: (CommonProto.CoopCustomRoom.ICcrRoomStaticInfo|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgCcrGetRoomStaticInfo.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S roomId. */
                public roomId: number;

                /** S roomStaticInfo. */
                public roomStaticInfo?: (CommonProto.CoopCustomRoom.ICcrRoomStaticInfo|null);

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgCcrGetRoomStaticInfo.IS): CommonProto.NetMessage.MsgCcrGetRoomStaticInfo.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgCcrGetRoomStaticInfo.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgCcrGetRoomStaticInfo.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgCcrGetRoomStaticInfo.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgCcrGetRoomStaticInfo.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgCcrGetRoomStaticInfo.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgCcrGetRoomStaticInfo.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgCcrGetRoomStaticInfo.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgCcrGetRoomStaticInfo.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgCcrGetRoomPlayerInfo. */
        interface IMsgCcrGetRoomPlayerInfo {

            /** MsgCcrGetRoomPlayerInfo c */
            c?: (CommonProto.NetMessage.MsgCcrGetRoomPlayerInfo.IC|null);

            /** MsgCcrGetRoomPlayerInfo s */
            s?: (CommonProto.NetMessage.MsgCcrGetRoomPlayerInfo.IS|null);
        }

        /** Represents a MsgCcrGetRoomPlayerInfo. */
        class MsgCcrGetRoomPlayerInfo implements IMsgCcrGetRoomPlayerInfo {

            /**
             * Constructs a new MsgCcrGetRoomPlayerInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgCcrGetRoomPlayerInfo);

            /** MsgCcrGetRoomPlayerInfo c. */
            public c?: (CommonProto.NetMessage.MsgCcrGetRoomPlayerInfo.IC|null);

            /** MsgCcrGetRoomPlayerInfo s. */
            public s?: (CommonProto.NetMessage.MsgCcrGetRoomPlayerInfo.IS|null);

            /**
             * Creates a new MsgCcrGetRoomPlayerInfo instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgCcrGetRoomPlayerInfo instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgCcrGetRoomPlayerInfo): CommonProto.NetMessage.MsgCcrGetRoomPlayerInfo;

            /**
             * Encodes the specified MsgCcrGetRoomPlayerInfo message. Does not implicitly {@link CommonProto.NetMessage.MsgCcrGetRoomPlayerInfo.verify|verify} messages.
             * @param message MsgCcrGetRoomPlayerInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgCcrGetRoomPlayerInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgCcrGetRoomPlayerInfo message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgCcrGetRoomPlayerInfo.verify|verify} messages.
             * @param message MsgCcrGetRoomPlayerInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgCcrGetRoomPlayerInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgCcrGetRoomPlayerInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgCcrGetRoomPlayerInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgCcrGetRoomPlayerInfo;

            /**
             * Decodes a MsgCcrGetRoomPlayerInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgCcrGetRoomPlayerInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgCcrGetRoomPlayerInfo;

            /**
             * Verifies a MsgCcrGetRoomPlayerInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgCcrGetRoomPlayerInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgCcrGetRoomPlayerInfo
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgCcrGetRoomPlayerInfo;

            /**
             * Creates a plain object from a MsgCcrGetRoomPlayerInfo message. Also converts values to other types if specified.
             * @param message MsgCcrGetRoomPlayerInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgCcrGetRoomPlayerInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgCcrGetRoomPlayerInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgCcrGetRoomPlayerInfo {

            /** Properties of a C. */
            interface IC {

                /** C roomId */
                roomId?: (number|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgCcrGetRoomPlayerInfo.IC);

                /** C roomId. */
                public roomId: number;

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgCcrGetRoomPlayerInfo.IC): CommonProto.NetMessage.MsgCcrGetRoomPlayerInfo.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgCcrGetRoomPlayerInfo.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgCcrGetRoomPlayerInfo.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgCcrGetRoomPlayerInfo.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgCcrGetRoomPlayerInfo.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgCcrGetRoomPlayerInfo.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgCcrGetRoomPlayerInfo.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgCcrGetRoomPlayerInfo.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgCcrGetRoomPlayerInfo.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S roomId */
                roomId?: (number|null);

                /** S roomPlayerInfo */
                roomPlayerInfo?: (CommonProto.CoopCustomRoom.ICcrRoomPlayerInfo|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgCcrGetRoomPlayerInfo.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S roomId. */
                public roomId: number;

                /** S roomPlayerInfo. */
                public roomPlayerInfo?: (CommonProto.CoopCustomRoom.ICcrRoomPlayerInfo|null);

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgCcrGetRoomPlayerInfo.IS): CommonProto.NetMessage.MsgCcrGetRoomPlayerInfo.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgCcrGetRoomPlayerInfo.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgCcrGetRoomPlayerInfo.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgCcrGetRoomPlayerInfo.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgCcrGetRoomPlayerInfo.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgCcrGetRoomPlayerInfo.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgCcrGetRoomPlayerInfo.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgCcrGetRoomPlayerInfo.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgCcrGetRoomPlayerInfo.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgCcrJoinRoom. */
        interface IMsgCcrJoinRoom {

            /** MsgCcrJoinRoom c */
            c?: (CommonProto.NetMessage.MsgCcrJoinRoom.IC|null);

            /** MsgCcrJoinRoom s */
            s?: (CommonProto.NetMessage.MsgCcrJoinRoom.IS|null);
        }

        /** Represents a MsgCcrJoinRoom. */
        class MsgCcrJoinRoom implements IMsgCcrJoinRoom {

            /**
             * Constructs a new MsgCcrJoinRoom.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgCcrJoinRoom);

            /** MsgCcrJoinRoom c. */
            public c?: (CommonProto.NetMessage.MsgCcrJoinRoom.IC|null);

            /** MsgCcrJoinRoom s. */
            public s?: (CommonProto.NetMessage.MsgCcrJoinRoom.IS|null);

            /**
             * Creates a new MsgCcrJoinRoom instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgCcrJoinRoom instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgCcrJoinRoom): CommonProto.NetMessage.MsgCcrJoinRoom;

            /**
             * Encodes the specified MsgCcrJoinRoom message. Does not implicitly {@link CommonProto.NetMessage.MsgCcrJoinRoom.verify|verify} messages.
             * @param message MsgCcrJoinRoom message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgCcrJoinRoom, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgCcrJoinRoom message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgCcrJoinRoom.verify|verify} messages.
             * @param message MsgCcrJoinRoom message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgCcrJoinRoom, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgCcrJoinRoom message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgCcrJoinRoom
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgCcrJoinRoom;

            /**
             * Decodes a MsgCcrJoinRoom message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgCcrJoinRoom
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgCcrJoinRoom;

            /**
             * Verifies a MsgCcrJoinRoom message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgCcrJoinRoom message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgCcrJoinRoom
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgCcrJoinRoom;

            /**
             * Creates a plain object from a MsgCcrJoinRoom message. Also converts values to other types if specified.
             * @param message MsgCcrJoinRoom
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgCcrJoinRoom, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgCcrJoinRoom to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgCcrJoinRoom {

            /** Properties of a C. */
            interface IC {

                /** C roomId */
                roomId?: (number|null);

                /** C playerIndex */
                playerIndex?: (number|null);

                /** C coId */
                coId?: (number|null);

                /** C isReady */
                isReady?: (boolean|null);

                /** C unitAndTileSkinId */
                unitAndTileSkinId?: (number|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgCcrJoinRoom.IC);

                /** C roomId. */
                public roomId: number;

                /** C playerIndex. */
                public playerIndex: number;

                /** C coId. */
                public coId: number;

                /** C isReady. */
                public isReady: boolean;

                /** C unitAndTileSkinId. */
                public unitAndTileSkinId: number;

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgCcrJoinRoom.IC): CommonProto.NetMessage.MsgCcrJoinRoom.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgCcrJoinRoom.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgCcrJoinRoom.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgCcrJoinRoom.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgCcrJoinRoom.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgCcrJoinRoom.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgCcrJoinRoom.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgCcrJoinRoom.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgCcrJoinRoom.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S roomId */
                roomId?: (number|null);

                /** S playerIndex */
                playerIndex?: (number|null);

                /** S coId */
                coId?: (number|null);

                /** S isReady */
                isReady?: (boolean|null);

                /** S unitAndTileSkinId */
                unitAndTileSkinId?: (number|null);

                /** S userId */
                userId?: (number|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgCcrJoinRoom.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S roomId. */
                public roomId: number;

                /** S playerIndex. */
                public playerIndex: number;

                /** S coId. */
                public coId: number;

                /** S isReady. */
                public isReady: boolean;

                /** S unitAndTileSkinId. */
                public unitAndTileSkinId: number;

                /** S userId. */
                public userId: number;

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgCcrJoinRoom.IS): CommonProto.NetMessage.MsgCcrJoinRoom.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgCcrJoinRoom.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgCcrJoinRoom.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgCcrJoinRoom.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgCcrJoinRoom.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgCcrJoinRoom.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgCcrJoinRoom.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgCcrJoinRoom.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgCcrJoinRoom.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgCcrDeleteRoom. */
        interface IMsgCcrDeleteRoom {

            /** MsgCcrDeleteRoom c */
            c?: (CommonProto.NetMessage.MsgCcrDeleteRoom.IC|null);

            /** MsgCcrDeleteRoom s */
            s?: (CommonProto.NetMessage.MsgCcrDeleteRoom.IS|null);
        }

        /** Represents a MsgCcrDeleteRoom. */
        class MsgCcrDeleteRoom implements IMsgCcrDeleteRoom {

            /**
             * Constructs a new MsgCcrDeleteRoom.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgCcrDeleteRoom);

            /** MsgCcrDeleteRoom c. */
            public c?: (CommonProto.NetMessage.MsgCcrDeleteRoom.IC|null);

            /** MsgCcrDeleteRoom s. */
            public s?: (CommonProto.NetMessage.MsgCcrDeleteRoom.IS|null);

            /**
             * Creates a new MsgCcrDeleteRoom instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgCcrDeleteRoom instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgCcrDeleteRoom): CommonProto.NetMessage.MsgCcrDeleteRoom;

            /**
             * Encodes the specified MsgCcrDeleteRoom message. Does not implicitly {@link CommonProto.NetMessage.MsgCcrDeleteRoom.verify|verify} messages.
             * @param message MsgCcrDeleteRoom message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgCcrDeleteRoom, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgCcrDeleteRoom message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgCcrDeleteRoom.verify|verify} messages.
             * @param message MsgCcrDeleteRoom message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgCcrDeleteRoom, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgCcrDeleteRoom message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgCcrDeleteRoom
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgCcrDeleteRoom;

            /**
             * Decodes a MsgCcrDeleteRoom message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgCcrDeleteRoom
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgCcrDeleteRoom;

            /**
             * Verifies a MsgCcrDeleteRoom message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgCcrDeleteRoom message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgCcrDeleteRoom
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgCcrDeleteRoom;

            /**
             * Creates a plain object from a MsgCcrDeleteRoom message. Also converts values to other types if specified.
             * @param message MsgCcrDeleteRoom
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgCcrDeleteRoom, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgCcrDeleteRoom to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgCcrDeleteRoom {

            /** Properties of a C. */
            interface IC {

                /** C roomId */
                roomId?: (number|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgCcrDeleteRoom.IC);

                /** C roomId. */
                public roomId: number;

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgCcrDeleteRoom.IC): CommonProto.NetMessage.MsgCcrDeleteRoom.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgCcrDeleteRoom.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgCcrDeleteRoom.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgCcrDeleteRoom.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgCcrDeleteRoom.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgCcrDeleteRoom.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgCcrDeleteRoom.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgCcrDeleteRoom.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgCcrDeleteRoom.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S roomId */
                roomId?: (number|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgCcrDeleteRoom.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S roomId. */
                public roomId: number;

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgCcrDeleteRoom.IS): CommonProto.NetMessage.MsgCcrDeleteRoom.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgCcrDeleteRoom.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgCcrDeleteRoom.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgCcrDeleteRoom.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgCcrDeleteRoom.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgCcrDeleteRoom.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgCcrDeleteRoom.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgCcrDeleteRoom.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgCcrDeleteRoom.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgCcrSetReady. */
        interface IMsgCcrSetReady {

            /** MsgCcrSetReady c */
            c?: (CommonProto.NetMessage.MsgCcrSetReady.IC|null);

            /** MsgCcrSetReady s */
            s?: (CommonProto.NetMessage.MsgCcrSetReady.IS|null);
        }

        /** Represents a MsgCcrSetReady. */
        class MsgCcrSetReady implements IMsgCcrSetReady {

            /**
             * Constructs a new MsgCcrSetReady.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgCcrSetReady);

            /** MsgCcrSetReady c. */
            public c?: (CommonProto.NetMessage.MsgCcrSetReady.IC|null);

            /** MsgCcrSetReady s. */
            public s?: (CommonProto.NetMessage.MsgCcrSetReady.IS|null);

            /**
             * Creates a new MsgCcrSetReady instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgCcrSetReady instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgCcrSetReady): CommonProto.NetMessage.MsgCcrSetReady;

            /**
             * Encodes the specified MsgCcrSetReady message. Does not implicitly {@link CommonProto.NetMessage.MsgCcrSetReady.verify|verify} messages.
             * @param message MsgCcrSetReady message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgCcrSetReady, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgCcrSetReady message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgCcrSetReady.verify|verify} messages.
             * @param message MsgCcrSetReady message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgCcrSetReady, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgCcrSetReady message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgCcrSetReady
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgCcrSetReady;

            /**
             * Decodes a MsgCcrSetReady message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgCcrSetReady
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgCcrSetReady;

            /**
             * Verifies a MsgCcrSetReady message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgCcrSetReady message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgCcrSetReady
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgCcrSetReady;

            /**
             * Creates a plain object from a MsgCcrSetReady message. Also converts values to other types if specified.
             * @param message MsgCcrSetReady
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgCcrSetReady, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgCcrSetReady to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgCcrSetReady {

            /** Properties of a C. */
            interface IC {

                /** C roomId */
                roomId?: (number|null);

                /** C isReady */
                isReady?: (boolean|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgCcrSetReady.IC);

                /** C roomId. */
                public roomId: number;

                /** C isReady. */
                public isReady: boolean;

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgCcrSetReady.IC): CommonProto.NetMessage.MsgCcrSetReady.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgCcrSetReady.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgCcrSetReady.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgCcrSetReady.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgCcrSetReady.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgCcrSetReady.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgCcrSetReady.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgCcrSetReady.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgCcrSetReady.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S roomId */
                roomId?: (number|null);

                /** S isReady */
                isReady?: (boolean|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgCcrSetReady.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S roomId. */
                public roomId: number;

                /** S isReady. */
                public isReady: boolean;

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgCcrSetReady.IS): CommonProto.NetMessage.MsgCcrSetReady.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgCcrSetReady.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgCcrSetReady.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgCcrSetReady.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgCcrSetReady.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgCcrSetReady.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgCcrSetReady.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgCcrSetReady.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgCcrSetReady.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgCcrDeletePlayer. */
        interface IMsgCcrDeletePlayer {

            /** MsgCcrDeletePlayer c */
            c?: (CommonProto.NetMessage.MsgCcrDeletePlayer.IC|null);

            /** MsgCcrDeletePlayer s */
            s?: (CommonProto.NetMessage.MsgCcrDeletePlayer.IS|null);
        }

        /** Represents a MsgCcrDeletePlayer. */
        class MsgCcrDeletePlayer implements IMsgCcrDeletePlayer {

            /**
             * Constructs a new MsgCcrDeletePlayer.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgCcrDeletePlayer);

            /** MsgCcrDeletePlayer c. */
            public c?: (CommonProto.NetMessage.MsgCcrDeletePlayer.IC|null);

            /** MsgCcrDeletePlayer s. */
            public s?: (CommonProto.NetMessage.MsgCcrDeletePlayer.IS|null);

            /**
             * Creates a new MsgCcrDeletePlayer instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgCcrDeletePlayer instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgCcrDeletePlayer): CommonProto.NetMessage.MsgCcrDeletePlayer;

            /**
             * Encodes the specified MsgCcrDeletePlayer message. Does not implicitly {@link CommonProto.NetMessage.MsgCcrDeletePlayer.verify|verify} messages.
             * @param message MsgCcrDeletePlayer message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgCcrDeletePlayer, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgCcrDeletePlayer message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgCcrDeletePlayer.verify|verify} messages.
             * @param message MsgCcrDeletePlayer message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgCcrDeletePlayer, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgCcrDeletePlayer message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgCcrDeletePlayer
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgCcrDeletePlayer;

            /**
             * Decodes a MsgCcrDeletePlayer message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgCcrDeletePlayer
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgCcrDeletePlayer;

            /**
             * Verifies a MsgCcrDeletePlayer message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgCcrDeletePlayer message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgCcrDeletePlayer
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgCcrDeletePlayer;

            /**
             * Creates a plain object from a MsgCcrDeletePlayer message. Also converts values to other types if specified.
             * @param message MsgCcrDeletePlayer
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgCcrDeletePlayer, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgCcrDeletePlayer to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgCcrDeletePlayer {

            /** Properties of a C. */
            interface IC {

                /** C roomId */
                roomId?: (number|null);

                /** C playerIndex */
                playerIndex?: (number|null);

                /** C forbidReentrance */
                forbidReentrance?: (boolean|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgCcrDeletePlayer.IC);

                /** C roomId. */
                public roomId: number;

                /** C playerIndex. */
                public playerIndex: number;

                /** C forbidReentrance. */
                public forbidReentrance: boolean;

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgCcrDeletePlayer.IC): CommonProto.NetMessage.MsgCcrDeletePlayer.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgCcrDeletePlayer.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgCcrDeletePlayer.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgCcrDeletePlayer.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgCcrDeletePlayer.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgCcrDeletePlayer.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgCcrDeletePlayer.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgCcrDeletePlayer.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgCcrDeletePlayer.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S roomId */
                roomId?: (number|null);

                /** S playerIndex */
                playerIndex?: (number|null);

                /** S forbidReentrance */
                forbidReentrance?: (boolean|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgCcrDeletePlayer.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S roomId. */
                public roomId: number;

                /** S playerIndex. */
                public playerIndex: number;

                /** S forbidReentrance. */
                public forbidReentrance: boolean;

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgCcrDeletePlayer.IS): CommonProto.NetMessage.MsgCcrDeletePlayer.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgCcrDeletePlayer.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgCcrDeletePlayer.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgCcrDeletePlayer.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgCcrDeletePlayer.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgCcrDeletePlayer.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgCcrDeletePlayer.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgCcrDeletePlayer.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgCcrDeletePlayer.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgCcrSetSelfSettings. */
        interface IMsgCcrSetSelfSettings {

            /** MsgCcrSetSelfSettings c */
            c?: (CommonProto.NetMessage.MsgCcrSetSelfSettings.IC|null);

            /** MsgCcrSetSelfSettings s */
            s?: (CommonProto.NetMessage.MsgCcrSetSelfSettings.IS|null);
        }

        /** Represents a MsgCcrSetSelfSettings. */
        class MsgCcrSetSelfSettings implements IMsgCcrSetSelfSettings {

            /**
             * Constructs a new MsgCcrSetSelfSettings.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgCcrSetSelfSettings);

            /** MsgCcrSetSelfSettings c. */
            public c?: (CommonProto.NetMessage.MsgCcrSetSelfSettings.IC|null);

            /** MsgCcrSetSelfSettings s. */
            public s?: (CommonProto.NetMessage.MsgCcrSetSelfSettings.IS|null);

            /**
             * Creates a new MsgCcrSetSelfSettings instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgCcrSetSelfSettings instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgCcrSetSelfSettings): CommonProto.NetMessage.MsgCcrSetSelfSettings;

            /**
             * Encodes the specified MsgCcrSetSelfSettings message. Does not implicitly {@link CommonProto.NetMessage.MsgCcrSetSelfSettings.verify|verify} messages.
             * @param message MsgCcrSetSelfSettings message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgCcrSetSelfSettings, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgCcrSetSelfSettings message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgCcrSetSelfSettings.verify|verify} messages.
             * @param message MsgCcrSetSelfSettings message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgCcrSetSelfSettings, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgCcrSetSelfSettings message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgCcrSetSelfSettings
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgCcrSetSelfSettings;

            /**
             * Decodes a MsgCcrSetSelfSettings message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgCcrSetSelfSettings
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgCcrSetSelfSettings;

            /**
             * Verifies a MsgCcrSetSelfSettings message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgCcrSetSelfSettings message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgCcrSetSelfSettings
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgCcrSetSelfSettings;

            /**
             * Creates a plain object from a MsgCcrSetSelfSettings message. Also converts values to other types if specified.
             * @param message MsgCcrSetSelfSettings
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgCcrSetSelfSettings, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgCcrSetSelfSettings to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgCcrSetSelfSettings {

            /** Properties of a C. */
            interface IC {

                /** C roomId */
                roomId?: (number|null);

                /** C playerIndex */
                playerIndex?: (number|null);

                /** C coId */
                coId?: (number|null);

                /** C unitAndTileSkinId */
                unitAndTileSkinId?: (number|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgCcrSetSelfSettings.IC);

                /** C roomId. */
                public roomId: number;

                /** C playerIndex. */
                public playerIndex: number;

                /** C coId. */
                public coId: number;

                /** C unitAndTileSkinId. */
                public unitAndTileSkinId: number;

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgCcrSetSelfSettings.IC): CommonProto.NetMessage.MsgCcrSetSelfSettings.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgCcrSetSelfSettings.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgCcrSetSelfSettings.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgCcrSetSelfSettings.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgCcrSetSelfSettings.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgCcrSetSelfSettings.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgCcrSetSelfSettings.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgCcrSetSelfSettings.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgCcrSetSelfSettings.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S roomId */
                roomId?: (number|null);

                /** S oldPlayerIndex */
                oldPlayerIndex?: (number|null);

                /** S newPlayerIndex */
                newPlayerIndex?: (number|null);

                /** S coId */
                coId?: (number|null);

                /** S unitAndTileSkinId */
                unitAndTileSkinId?: (number|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgCcrSetSelfSettings.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S roomId. */
                public roomId: number;

                /** S oldPlayerIndex. */
                public oldPlayerIndex: number;

                /** S newPlayerIndex. */
                public newPlayerIndex: number;

                /** S coId. */
                public coId: number;

                /** S unitAndTileSkinId. */
                public unitAndTileSkinId: number;

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgCcrSetSelfSettings.IS): CommonProto.NetMessage.MsgCcrSetSelfSettings.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgCcrSetSelfSettings.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgCcrSetSelfSettings.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgCcrSetSelfSettings.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgCcrSetSelfSettings.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgCcrSetSelfSettings.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgCcrSetSelfSettings.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgCcrSetSelfSettings.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgCcrSetSelfSettings.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgCcrStartWar. */
        interface IMsgCcrStartWar {

            /** MsgCcrStartWar c */
            c?: (CommonProto.NetMessage.MsgCcrStartWar.IC|null);

            /** MsgCcrStartWar s */
            s?: (CommonProto.NetMessage.MsgCcrStartWar.IS|null);
        }

        /** Represents a MsgCcrStartWar. */
        class MsgCcrStartWar implements IMsgCcrStartWar {

            /**
             * Constructs a new MsgCcrStartWar.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgCcrStartWar);

            /** MsgCcrStartWar c. */
            public c?: (CommonProto.NetMessage.MsgCcrStartWar.IC|null);

            /** MsgCcrStartWar s. */
            public s?: (CommonProto.NetMessage.MsgCcrStartWar.IS|null);

            /**
             * Creates a new MsgCcrStartWar instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgCcrStartWar instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgCcrStartWar): CommonProto.NetMessage.MsgCcrStartWar;

            /**
             * Encodes the specified MsgCcrStartWar message. Does not implicitly {@link CommonProto.NetMessage.MsgCcrStartWar.verify|verify} messages.
             * @param message MsgCcrStartWar message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgCcrStartWar, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgCcrStartWar message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgCcrStartWar.verify|verify} messages.
             * @param message MsgCcrStartWar message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgCcrStartWar, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgCcrStartWar message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgCcrStartWar
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgCcrStartWar;

            /**
             * Decodes a MsgCcrStartWar message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgCcrStartWar
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgCcrStartWar;

            /**
             * Verifies a MsgCcrStartWar message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgCcrStartWar message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgCcrStartWar
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgCcrStartWar;

            /**
             * Creates a plain object from a MsgCcrStartWar message. Also converts values to other types if specified.
             * @param message MsgCcrStartWar
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgCcrStartWar, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgCcrStartWar to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgCcrStartWar {

            /** Properties of a C. */
            interface IC {

                /** C roomId */
                roomId?: (number|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgCcrStartWar.IC);

                /** C roomId. */
                public roomId: number;

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgCcrStartWar.IC): CommonProto.NetMessage.MsgCcrStartWar.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgCcrStartWar.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgCcrStartWar.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgCcrStartWar.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgCcrStartWar.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgCcrStartWar.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgCcrStartWar.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgCcrStartWar.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgCcrStartWar.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S roomId */
                roomId?: (number|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgCcrStartWar.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S roomId. */
                public roomId: number;

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgCcrStartWar.IS): CommonProto.NetMessage.MsgCcrStartWar.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgCcrStartWar.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgCcrStartWar.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgCcrStartWar.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgCcrStartWar.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgCcrStartWar.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgCcrStartWar.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgCcrStartWar.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgCcrStartWar.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgLbSpmOverallGetTopDataArray. */
        interface IMsgLbSpmOverallGetTopDataArray {

            /** MsgLbSpmOverallGetTopDataArray c */
            c?: (CommonProto.NetMessage.MsgLbSpmOverallGetTopDataArray.IC|null);

            /** MsgLbSpmOverallGetTopDataArray s */
            s?: (CommonProto.NetMessage.MsgLbSpmOverallGetTopDataArray.IS|null);
        }

        /** Represents a MsgLbSpmOverallGetTopDataArray. */
        class MsgLbSpmOverallGetTopDataArray implements IMsgLbSpmOverallGetTopDataArray {

            /**
             * Constructs a new MsgLbSpmOverallGetTopDataArray.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgLbSpmOverallGetTopDataArray);

            /** MsgLbSpmOverallGetTopDataArray c. */
            public c?: (CommonProto.NetMessage.MsgLbSpmOverallGetTopDataArray.IC|null);

            /** MsgLbSpmOverallGetTopDataArray s. */
            public s?: (CommonProto.NetMessage.MsgLbSpmOverallGetTopDataArray.IS|null);

            /**
             * Creates a new MsgLbSpmOverallGetTopDataArray instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgLbSpmOverallGetTopDataArray instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgLbSpmOverallGetTopDataArray): CommonProto.NetMessage.MsgLbSpmOverallGetTopDataArray;

            /**
             * Encodes the specified MsgLbSpmOverallGetTopDataArray message. Does not implicitly {@link CommonProto.NetMessage.MsgLbSpmOverallGetTopDataArray.verify|verify} messages.
             * @param message MsgLbSpmOverallGetTopDataArray message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgLbSpmOverallGetTopDataArray, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgLbSpmOverallGetTopDataArray message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgLbSpmOverallGetTopDataArray.verify|verify} messages.
             * @param message MsgLbSpmOverallGetTopDataArray message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgLbSpmOverallGetTopDataArray, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgLbSpmOverallGetTopDataArray message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgLbSpmOverallGetTopDataArray
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgLbSpmOverallGetTopDataArray;

            /**
             * Decodes a MsgLbSpmOverallGetTopDataArray message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgLbSpmOverallGetTopDataArray
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgLbSpmOverallGetTopDataArray;

            /**
             * Verifies a MsgLbSpmOverallGetTopDataArray message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgLbSpmOverallGetTopDataArray message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgLbSpmOverallGetTopDataArray
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgLbSpmOverallGetTopDataArray;

            /**
             * Creates a plain object from a MsgLbSpmOverallGetTopDataArray message. Also converts values to other types if specified.
             * @param message MsgLbSpmOverallGetTopDataArray
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgLbSpmOverallGetTopDataArray, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgLbSpmOverallGetTopDataArray to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgLbSpmOverallGetTopDataArray {

            /** Properties of a C. */
            interface IC {
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgLbSpmOverallGetTopDataArray.IC);

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgLbSpmOverallGetTopDataArray.IC): CommonProto.NetMessage.MsgLbSpmOverallGetTopDataArray.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgLbSpmOverallGetTopDataArray.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgLbSpmOverallGetTopDataArray.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgLbSpmOverallGetTopDataArray.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgLbSpmOverallGetTopDataArray.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgLbSpmOverallGetTopDataArray.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgLbSpmOverallGetTopDataArray.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgLbSpmOverallGetTopDataArray.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgLbSpmOverallGetTopDataArray.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S dataArray */
                dataArray?: (CommonProto.Leaderboard.LeaderboardSpmOverall.ISingleData[]|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgLbSpmOverallGetTopDataArray.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S dataArray. */
                public dataArray: CommonProto.Leaderboard.LeaderboardSpmOverall.ISingleData[];

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgLbSpmOverallGetTopDataArray.IS): CommonProto.NetMessage.MsgLbSpmOverallGetTopDataArray.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgLbSpmOverallGetTopDataArray.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgLbSpmOverallGetTopDataArray.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgLbSpmOverallGetTopDataArray.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgLbSpmOverallGetTopDataArray.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgLbSpmOverallGetTopDataArray.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgLbSpmOverallGetTopDataArray.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgLbSpmOverallGetTopDataArray.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgLbSpmOverallGetTopDataArray.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgLbSpmOverallGetRankIndex. */
        interface IMsgLbSpmOverallGetRankIndex {

            /** MsgLbSpmOverallGetRankIndex c */
            c?: (CommonProto.NetMessage.MsgLbSpmOverallGetRankIndex.IC|null);

            /** MsgLbSpmOverallGetRankIndex s */
            s?: (CommonProto.NetMessage.MsgLbSpmOverallGetRankIndex.IS|null);
        }

        /** Represents a MsgLbSpmOverallGetRankIndex. */
        class MsgLbSpmOverallGetRankIndex implements IMsgLbSpmOverallGetRankIndex {

            /**
             * Constructs a new MsgLbSpmOverallGetRankIndex.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgLbSpmOverallGetRankIndex);

            /** MsgLbSpmOverallGetRankIndex c. */
            public c?: (CommonProto.NetMessage.MsgLbSpmOverallGetRankIndex.IC|null);

            /** MsgLbSpmOverallGetRankIndex s. */
            public s?: (CommonProto.NetMessage.MsgLbSpmOverallGetRankIndex.IS|null);

            /**
             * Creates a new MsgLbSpmOverallGetRankIndex instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgLbSpmOverallGetRankIndex instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgLbSpmOverallGetRankIndex): CommonProto.NetMessage.MsgLbSpmOverallGetRankIndex;

            /**
             * Encodes the specified MsgLbSpmOverallGetRankIndex message. Does not implicitly {@link CommonProto.NetMessage.MsgLbSpmOverallGetRankIndex.verify|verify} messages.
             * @param message MsgLbSpmOverallGetRankIndex message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgLbSpmOverallGetRankIndex, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgLbSpmOverallGetRankIndex message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgLbSpmOverallGetRankIndex.verify|verify} messages.
             * @param message MsgLbSpmOverallGetRankIndex message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgLbSpmOverallGetRankIndex, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgLbSpmOverallGetRankIndex message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgLbSpmOverallGetRankIndex
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgLbSpmOverallGetRankIndex;

            /**
             * Decodes a MsgLbSpmOverallGetRankIndex message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgLbSpmOverallGetRankIndex
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgLbSpmOverallGetRankIndex;

            /**
             * Verifies a MsgLbSpmOverallGetRankIndex message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgLbSpmOverallGetRankIndex message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgLbSpmOverallGetRankIndex
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgLbSpmOverallGetRankIndex;

            /**
             * Creates a plain object from a MsgLbSpmOverallGetRankIndex message. Also converts values to other types if specified.
             * @param message MsgLbSpmOverallGetRankIndex
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgLbSpmOverallGetRankIndex, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgLbSpmOverallGetRankIndex to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgLbSpmOverallGetRankIndex {

            /** Properties of a C. */
            interface IC {

                /** C userId */
                userId?: (number|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgLbSpmOverallGetRankIndex.IC);

                /** C userId. */
                public userId: number;

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgLbSpmOverallGetRankIndex.IC): CommonProto.NetMessage.MsgLbSpmOverallGetRankIndex.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgLbSpmOverallGetRankIndex.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgLbSpmOverallGetRankIndex.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgLbSpmOverallGetRankIndex.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgLbSpmOverallGetRankIndex.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgLbSpmOverallGetRankIndex.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgLbSpmOverallGetRankIndex.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgLbSpmOverallGetRankIndex.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgLbSpmOverallGetRankIndex.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S userId */
                userId?: (number|null);

                /** S rankIndex */
                rankIndex?: (number|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgLbSpmOverallGetRankIndex.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S userId. */
                public userId: number;

                /** S rankIndex. */
                public rankIndex: number;

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgLbSpmOverallGetRankIndex.IS): CommonProto.NetMessage.MsgLbSpmOverallGetRankIndex.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgLbSpmOverallGetRankIndex.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgLbSpmOverallGetRankIndex.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgLbSpmOverallGetRankIndex.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgLbSpmOverallGetRankIndex.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgLbSpmOverallGetRankIndex.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgLbSpmOverallGetRankIndex.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgLbSpmOverallGetRankIndex.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgLbSpmOverallGetRankIndex.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MsgLbMrwGetRankIndex. */
        interface IMsgLbMrwGetRankIndex {

            /** MsgLbMrwGetRankIndex c */
            c?: (CommonProto.NetMessage.MsgLbMrwGetRankIndex.IC|null);

            /** MsgLbMrwGetRankIndex s */
            s?: (CommonProto.NetMessage.MsgLbMrwGetRankIndex.IS|null);
        }

        /** Represents a MsgLbMrwGetRankIndex. */
        class MsgLbMrwGetRankIndex implements IMsgLbMrwGetRankIndex {

            /**
             * Constructs a new MsgLbMrwGetRankIndex.
             * @param [properties] Properties to set
             */
            constructor(properties?: CommonProto.NetMessage.IMsgLbMrwGetRankIndex);

            /** MsgLbMrwGetRankIndex c. */
            public c?: (CommonProto.NetMessage.MsgLbMrwGetRankIndex.IC|null);

            /** MsgLbMrwGetRankIndex s. */
            public s?: (CommonProto.NetMessage.MsgLbMrwGetRankIndex.IS|null);

            /**
             * Creates a new MsgLbMrwGetRankIndex instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsgLbMrwGetRankIndex instance
             */
            public static create(properties?: CommonProto.NetMessage.IMsgLbMrwGetRankIndex): CommonProto.NetMessage.MsgLbMrwGetRankIndex;

            /**
             * Encodes the specified MsgLbMrwGetRankIndex message. Does not implicitly {@link CommonProto.NetMessage.MsgLbMrwGetRankIndex.verify|verify} messages.
             * @param message MsgLbMrwGetRankIndex message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: CommonProto.NetMessage.IMsgLbMrwGetRankIndex, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified MsgLbMrwGetRankIndex message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgLbMrwGetRankIndex.verify|verify} messages.
             * @param message MsgLbMrwGetRankIndex message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: CommonProto.NetMessage.IMsgLbMrwGetRankIndex, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgLbMrwGetRankIndex message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgLbMrwGetRankIndex
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgLbMrwGetRankIndex;

            /**
             * Decodes a MsgLbMrwGetRankIndex message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgLbMrwGetRankIndex
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgLbMrwGetRankIndex;

            /**
             * Verifies a MsgLbMrwGetRankIndex message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgLbMrwGetRankIndex message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgLbMrwGetRankIndex
             */
            public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgLbMrwGetRankIndex;

            /**
             * Creates a plain object from a MsgLbMrwGetRankIndex message. Also converts values to other types if specified.
             * @param message MsgLbMrwGetRankIndex
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: CommonProto.NetMessage.MsgLbMrwGetRankIndex, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgLbMrwGetRankIndex to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MsgLbMrwGetRankIndex {

            /** Properties of a C. */
            interface IC {

                /** C userId */
                userId?: (number|null);

                /** C warType */
                warType?: (number|null);

                /** C playersCountUnneutral */
                playersCountUnneutral?: (number|null);
            }

            /** Represents a C. */
            class C implements IC {

                /**
                 * Constructs a new C.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgLbMrwGetRankIndex.IC);

                /** C userId. */
                public userId: number;

                /** C warType. */
                public warType: number;

                /** C playersCountUnneutral. */
                public playersCountUnneutral: number;

                /**
                 * Creates a new C instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns C instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgLbMrwGetRankIndex.IC): CommonProto.NetMessage.MsgLbMrwGetRankIndex.C;

                /**
                 * Encodes the specified C message. Does not implicitly {@link CommonProto.NetMessage.MsgLbMrwGetRankIndex.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgLbMrwGetRankIndex.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified C message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgLbMrwGetRankIndex.C.verify|verify} messages.
                 * @param message C message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgLbMrwGetRankIndex.IC, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a C message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgLbMrwGetRankIndex.C;

                /**
                 * Decodes a C message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns C
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgLbMrwGetRankIndex.C;

                /**
                 * Verifies a C message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a C message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns C
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgLbMrwGetRankIndex.C;

                /**
                 * Creates a plain object from a C message. Also converts values to other types if specified.
                 * @param message C
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgLbMrwGetRankIndex.C, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this C to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a S. */
            interface IS {

                /** S errorCode */
                errorCode?: (number|null);

                /** S userId */
                userId?: (number|null);

                /** S warType */
                warType?: (number|null);

                /** S playersCountUnneutral */
                playersCountUnneutral?: (number|null);

                /** S rankIndex */
                rankIndex?: (number|null);
            }

            /** Represents a S. */
            class S implements IS {

                /**
                 * Constructs a new S.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: CommonProto.NetMessage.MsgLbMrwGetRankIndex.IS);

                /** S errorCode. */
                public errorCode: number;

                /** S userId. */
                public userId: number;

                /** S warType. */
                public warType: number;

                /** S playersCountUnneutral. */
                public playersCountUnneutral: number;

                /** S rankIndex. */
                public rankIndex: number;

                /**
                 * Creates a new S instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S instance
                 */
                public static create(properties?: CommonProto.NetMessage.MsgLbMrwGetRankIndex.IS): CommonProto.NetMessage.MsgLbMrwGetRankIndex.S;

                /**
                 * Encodes the specified S message. Does not implicitly {@link CommonProto.NetMessage.MsgLbMrwGetRankIndex.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: CommonProto.NetMessage.MsgLbMrwGetRankIndex.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Encodes the specified S message, length delimited. Does not implicitly {@link CommonProto.NetMessage.MsgLbMrwGetRankIndex.S.verify|verify} messages.
                 * @param message S message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: CommonProto.NetMessage.MsgLbMrwGetRankIndex.IS, writer?: protobuf.Writer): protobuf.Writer;

                /**
                 * Decodes a S message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): CommonProto.NetMessage.MsgLbMrwGetRankIndex.S;

                /**
                 * Decodes a S message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): CommonProto.NetMessage.MsgLbMrwGetRankIndex.S;

                /**
                 * Verifies a S message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S
                 */
                public static fromObject(object: { [k: string]: any }): CommonProto.NetMessage.MsgLbMrwGetRankIndex.S;

                /**
                 * Creates a plain object from a S message. Also converts values to other types if specified.
                 * @param message S
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: CommonProto.NetMessage.MsgLbMrwGetRankIndex.S, options?: protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }
    }
}
