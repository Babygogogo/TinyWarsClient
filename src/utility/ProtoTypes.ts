
namespace TinyWars.Utility {
 export namespace ProtoTypes {
/** Properties of a Config. */
export declare interface IConfig {
}

/** Represents a Config. */
export declare class Config implements IConfig {

    /**
     * Constructs a new Config.
     * @param [properties] Properties to set
     */
    constructor(properties?: IConfig);

    /**
     * Creates a new Config instance using the specified properties.
     * @param [properties] Properties to set
     * @returns Config instance
     */
    public static create(properties?: IConfig): Config;

    /**
     * Encodes the specified Config message. Does not implicitly {@link Config.verify|verify} messages.
     * @param message Config message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IConfig, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Encodes the specified Config message, length delimited. Does not implicitly {@link Config.verify|verify} messages.
     * @param message Config message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IConfig, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Decodes a Config message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns Config
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Config;

    /**
     * Decodes a Config message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns Config
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Config;

    /**
     * Verifies a Config message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a Config message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns Config
     */
    public static fromObject(object: { [k: string]: any }): Config;

    /**
     * Creates a plain object from a Config message. Also converts values to other types if specified.
     * @param message Config
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: Config, options?: protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this Config to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export declare namespace Config {

    /** Properties of a TileCategoryCfg. */
    interface ITileCategoryCfg {

        /** TileCategoryCfg category */
        category?: (number|null);

        /** TileCategoryCfg tileTypes */
        tileTypes?: (number[]|null);
    }

    /** Represents a TileCategoryCfg. */
    class TileCategoryCfg implements ITileCategoryCfg {

        /**
         * Constructs a new TileCategoryCfg.
         * @param [properties] Properties to set
         */
        constructor(properties?: Config.ITileCategoryCfg);

        /** TileCategoryCfg category. */
        public category: number;

        /** TileCategoryCfg tileTypes. */
        public tileTypes: number[];

        /**
         * Creates a new TileCategoryCfg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TileCategoryCfg instance
         */
        public static create(properties?: Config.ITileCategoryCfg): Config.TileCategoryCfg;

        /**
         * Encodes the specified TileCategoryCfg message. Does not implicitly {@link Config.TileCategoryCfg.verify|verify} messages.
         * @param message TileCategoryCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Config.ITileCategoryCfg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified TileCategoryCfg message, length delimited. Does not implicitly {@link Config.TileCategoryCfg.verify|verify} messages.
         * @param message TileCategoryCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Config.ITileCategoryCfg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a TileCategoryCfg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TileCategoryCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Config.TileCategoryCfg;

        /**
         * Decodes a TileCategoryCfg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TileCategoryCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Config.TileCategoryCfg;

        /**
         * Verifies a TileCategoryCfg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TileCategoryCfg message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TileCategoryCfg
         */
        public static fromObject(object: { [k: string]: any }): Config.TileCategoryCfg;

        /**
         * Creates a plain object from a TileCategoryCfg message. Also converts values to other types if specified.
         * @param message TileCategoryCfg
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Config.TileCategoryCfg, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TileCategoryCfg to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an UnitCategoryCfg. */
    interface IUnitCategoryCfg {

        /** UnitCategoryCfg category */
        category?: (number|null);

        /** UnitCategoryCfg unitTypes */
        unitTypes?: (number[]|null);
    }

    /** Represents an UnitCategoryCfg. */
    class UnitCategoryCfg implements IUnitCategoryCfg {

        /**
         * Constructs a new UnitCategoryCfg.
         * @param [properties] Properties to set
         */
        constructor(properties?: Config.IUnitCategoryCfg);

        /** UnitCategoryCfg category. */
        public category: number;

        /** UnitCategoryCfg unitTypes. */
        public unitTypes: number[];

        /**
         * Creates a new UnitCategoryCfg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UnitCategoryCfg instance
         */
        public static create(properties?: Config.IUnitCategoryCfg): Config.UnitCategoryCfg;

        /**
         * Encodes the specified UnitCategoryCfg message. Does not implicitly {@link Config.UnitCategoryCfg.verify|verify} messages.
         * @param message UnitCategoryCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Config.IUnitCategoryCfg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified UnitCategoryCfg message, length delimited. Does not implicitly {@link Config.UnitCategoryCfg.verify|verify} messages.
         * @param message UnitCategoryCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Config.IUnitCategoryCfg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an UnitCategoryCfg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UnitCategoryCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Config.UnitCategoryCfg;

        /**
         * Decodes an UnitCategoryCfg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UnitCategoryCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Config.UnitCategoryCfg;

        /**
         * Verifies an UnitCategoryCfg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an UnitCategoryCfg message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UnitCategoryCfg
         */
        public static fromObject(object: { [k: string]: any }): Config.UnitCategoryCfg;

        /**
         * Creates a plain object from an UnitCategoryCfg message. Also converts values to other types if specified.
         * @param message UnitCategoryCfg
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Config.UnitCategoryCfg, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UnitCategoryCfg to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TileTemplateCfg. */
    interface ITileTemplateCfg {

        /** TileTemplateCfg type */
        type?: (number|null);

        /** TileTemplateCfg defenseAmount */
        defenseAmount?: (number|null);

        /** TileTemplateCfg defenseUnitCategory */
        defenseUnitCategory?: (number|null);

        /** TileTemplateCfg maxBuildPoint */
        maxBuildPoint?: (number|null);

        /** TileTemplateCfg maxCapturePoint */
        maxCapturePoint?: (number|null);

        /** TileTemplateCfg isDefeatedOnCapture */
        isDefeatedOnCapture?: (number|null);

        /** TileTemplateCfg repairAmount */
        repairAmount?: (number|null);

        /** TileTemplateCfg repairUnitCategory */
        repairUnitCategory?: (number|null);

        /** TileTemplateCfg incomePerTurn */
        incomePerTurn?: (number|null);

        /** TileTemplateCfg visionRange */
        visionRange?: (number|null);

        /** TileTemplateCfg isVisionEnabledForAllPlayers */
        isVisionEnabledForAllPlayers?: (number|null);

        /** TileTemplateCfg hideUnitCategory */
        hideUnitCategory?: (number|null);

        /** TileTemplateCfg isDestroyedWithAdjacentMeteor */
        isDestroyedWithAdjacentMeteor?: (number|null);

        /** TileTemplateCfg produceUnitCategory */
        produceUnitCategory?: (number|null);

        /** TileTemplateCfg globalAttackBonus */
        globalAttackBonus?: (number|null);

        /** TileTemplateCfg globalDefenseBonus */
        globalDefenseBonus?: (number|null);

        /** TileTemplateCfg maxHp */
        maxHp?: (number|null);

        /** TileTemplateCfg armorType */
        armorType?: (number|null);

        /** TileTemplateCfg isAffectedByLuck */
        isAffectedByLuck?: (number|null);

        /** TileTemplateCfg loadCoUnitCategory */
        loadCoUnitCategory?: (number|null);
    }

    /** Represents a TileTemplateCfg. */
    class TileTemplateCfg implements ITileTemplateCfg {

        /**
         * Constructs a new TileTemplateCfg.
         * @param [properties] Properties to set
         */
        constructor(properties?: Config.ITileTemplateCfg);

        /** TileTemplateCfg type. */
        public type: number;

        /** TileTemplateCfg defenseAmount. */
        public defenseAmount: number;

        /** TileTemplateCfg defenseUnitCategory. */
        public defenseUnitCategory: number;

        /** TileTemplateCfg maxBuildPoint. */
        public maxBuildPoint: number;

        /** TileTemplateCfg maxCapturePoint. */
        public maxCapturePoint: number;

        /** TileTemplateCfg isDefeatedOnCapture. */
        public isDefeatedOnCapture: number;

        /** TileTemplateCfg repairAmount. */
        public repairAmount: number;

        /** TileTemplateCfg repairUnitCategory. */
        public repairUnitCategory: number;

        /** TileTemplateCfg incomePerTurn. */
        public incomePerTurn: number;

        /** TileTemplateCfg visionRange. */
        public visionRange: number;

        /** TileTemplateCfg isVisionEnabledForAllPlayers. */
        public isVisionEnabledForAllPlayers: number;

        /** TileTemplateCfg hideUnitCategory. */
        public hideUnitCategory: number;

        /** TileTemplateCfg isDestroyedWithAdjacentMeteor. */
        public isDestroyedWithAdjacentMeteor: number;

        /** TileTemplateCfg produceUnitCategory. */
        public produceUnitCategory: number;

        /** TileTemplateCfg globalAttackBonus. */
        public globalAttackBonus: number;

        /** TileTemplateCfg globalDefenseBonus. */
        public globalDefenseBonus: number;

        /** TileTemplateCfg maxHp. */
        public maxHp: number;

        /** TileTemplateCfg armorType. */
        public armorType: number;

        /** TileTemplateCfg isAffectedByLuck. */
        public isAffectedByLuck: number;

        /** TileTemplateCfg loadCoUnitCategory. */
        public loadCoUnitCategory: number;

        /**
         * Creates a new TileTemplateCfg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TileTemplateCfg instance
         */
        public static create(properties?: Config.ITileTemplateCfg): Config.TileTemplateCfg;

        /**
         * Encodes the specified TileTemplateCfg message. Does not implicitly {@link Config.TileTemplateCfg.verify|verify} messages.
         * @param message TileTemplateCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Config.ITileTemplateCfg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified TileTemplateCfg message, length delimited. Does not implicitly {@link Config.TileTemplateCfg.verify|verify} messages.
         * @param message TileTemplateCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Config.ITileTemplateCfg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a TileTemplateCfg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TileTemplateCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Config.TileTemplateCfg;

        /**
         * Decodes a TileTemplateCfg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TileTemplateCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Config.TileTemplateCfg;

        /**
         * Verifies a TileTemplateCfg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TileTemplateCfg message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TileTemplateCfg
         */
        public static fromObject(object: { [k: string]: any }): Config.TileTemplateCfg;

        /**
         * Creates a plain object from a TileTemplateCfg message. Also converts values to other types if specified.
         * @param message TileTemplateCfg
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Config.TileTemplateCfg, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TileTemplateCfg to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an UnitTemplateCfg. */
    interface IUnitTemplateCfg {

        /** UnitTemplateCfg type */
        type?: (number|null);

        /** UnitTemplateCfg minAttackRange */
        minAttackRange?: (number|null);

        /** UnitTemplateCfg maxAttackRange */
        maxAttackRange?: (number|null);

        /** UnitTemplateCfg canAttackAfterMove */
        canAttackAfterMove?: (number|null);

        /** UnitTemplateCfg canAttackDivingUnits */
        canAttackDivingUnits?: (number|null);

        /** UnitTemplateCfg primaryWeaponMaxAmmo */
        primaryWeaponMaxAmmo?: (number|null);

        /** UnitTemplateCfg maxHp */
        maxHp?: (number|null);

        /** UnitTemplateCfg armorType */
        armorType?: (number|null);

        /** UnitTemplateCfg isAffectedByLuck */
        isAffectedByLuck?: (number|null);

        /** UnitTemplateCfg moveRange */
        moveRange?: (number|null);

        /** UnitTemplateCfg moveType */
        moveType?: (number|null);

        /** UnitTemplateCfg maxFuel */
        maxFuel?: (number|null);

        /** UnitTemplateCfg fuelConsumptionPerTurn */
        fuelConsumptionPerTurn?: (number|null);

        /** UnitTemplateCfg diveCfgs */
        diveCfgs?: (number[]|null);

        /** UnitTemplateCfg isDestroyedOnOutOfFuel */
        isDestroyedOnOutOfFuel?: (number|null);

        /** UnitTemplateCfg maxLoadUnitsCount */
        maxLoadUnitsCount?: (number|null);

        /** UnitTemplateCfg loadUnitCategory */
        loadUnitCategory?: (number|null);

        /** UnitTemplateCfg canLaunchLoadedUnits */
        canLaunchLoadedUnits?: (number|null);

        /** UnitTemplateCfg canDropLoadedUnits */
        canDropLoadedUnits?: (number|null);

        /** UnitTemplateCfg canSupplyLoadedUnits */
        canSupplyLoadedUnits?: (number|null);

        /** UnitTemplateCfg repairAmountForLoadedUnits */
        repairAmountForLoadedUnits?: (number|null);

        /** UnitTemplateCfg loadableTileCategory */
        loadableTileCategory?: (number|null);

        /** UnitTemplateCfg canSupplyAdjacentUnits */
        canSupplyAdjacentUnits?: (number|null);

        /** UnitTemplateCfg produceUnitType */
        produceUnitType?: (number|null);

        /** UnitTemplateCfg maxProduceMaterial */
        maxProduceMaterial?: (number|null);

        /** UnitTemplateCfg maxBuildMaterial */
        maxBuildMaterial?: (number|null);

        /** UnitTemplateCfg canCaptureTile */
        canCaptureTile?: (number|null);

        /** UnitTemplateCfg canLaunchSilo */
        canLaunchSilo?: (number|null);

        /** UnitTemplateCfg productionCost */
        productionCost?: (number|null);

        /** UnitTemplateCfg visionRange */
        visionRange?: (number|null);

        /** UnitTemplateCfg flareMaxAmmo */
        flareMaxAmmo?: (number|null);

        /** UnitTemplateCfg flareMaxRange */
        flareMaxRange?: (number|null);

        /** UnitTemplateCfg flareRadius */
        flareRadius?: (number|null);
    }

    /** Represents an UnitTemplateCfg. */
    class UnitTemplateCfg implements IUnitTemplateCfg {

        /**
         * Constructs a new UnitTemplateCfg.
         * @param [properties] Properties to set
         */
        constructor(properties?: Config.IUnitTemplateCfg);

        /** UnitTemplateCfg type. */
        public type: number;

        /** UnitTemplateCfg minAttackRange. */
        public minAttackRange: number;

        /** UnitTemplateCfg maxAttackRange. */
        public maxAttackRange: number;

        /** UnitTemplateCfg canAttackAfterMove. */
        public canAttackAfterMove: number;

        /** UnitTemplateCfg canAttackDivingUnits. */
        public canAttackDivingUnits: number;

        /** UnitTemplateCfg primaryWeaponMaxAmmo. */
        public primaryWeaponMaxAmmo: number;

        /** UnitTemplateCfg maxHp. */
        public maxHp: number;

        /** UnitTemplateCfg armorType. */
        public armorType: number;

        /** UnitTemplateCfg isAffectedByLuck. */
        public isAffectedByLuck: number;

        /** UnitTemplateCfg moveRange. */
        public moveRange: number;

        /** UnitTemplateCfg moveType. */
        public moveType: number;

        /** UnitTemplateCfg maxFuel. */
        public maxFuel: number;

        /** UnitTemplateCfg fuelConsumptionPerTurn. */
        public fuelConsumptionPerTurn: number;

        /** UnitTemplateCfg diveCfgs. */
        public diveCfgs: number[];

        /** UnitTemplateCfg isDestroyedOnOutOfFuel. */
        public isDestroyedOnOutOfFuel: number;

        /** UnitTemplateCfg maxLoadUnitsCount. */
        public maxLoadUnitsCount: number;

        /** UnitTemplateCfg loadUnitCategory. */
        public loadUnitCategory: number;

        /** UnitTemplateCfg canLaunchLoadedUnits. */
        public canLaunchLoadedUnits: number;

        /** UnitTemplateCfg canDropLoadedUnits. */
        public canDropLoadedUnits: number;

        /** UnitTemplateCfg canSupplyLoadedUnits. */
        public canSupplyLoadedUnits: number;

        /** UnitTemplateCfg repairAmountForLoadedUnits. */
        public repairAmountForLoadedUnits: number;

        /** UnitTemplateCfg loadableTileCategory. */
        public loadableTileCategory: number;

        /** UnitTemplateCfg canSupplyAdjacentUnits. */
        public canSupplyAdjacentUnits: number;

        /** UnitTemplateCfg produceUnitType. */
        public produceUnitType: number;

        /** UnitTemplateCfg maxProduceMaterial. */
        public maxProduceMaterial: number;

        /** UnitTemplateCfg maxBuildMaterial. */
        public maxBuildMaterial: number;

        /** UnitTemplateCfg canCaptureTile. */
        public canCaptureTile: number;

        /** UnitTemplateCfg canLaunchSilo. */
        public canLaunchSilo: number;

        /** UnitTemplateCfg productionCost. */
        public productionCost: number;

        /** UnitTemplateCfg visionRange. */
        public visionRange: number;

        /** UnitTemplateCfg flareMaxAmmo. */
        public flareMaxAmmo: number;

        /** UnitTemplateCfg flareMaxRange. */
        public flareMaxRange: number;

        /** UnitTemplateCfg flareRadius. */
        public flareRadius: number;

        /**
         * Creates a new UnitTemplateCfg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UnitTemplateCfg instance
         */
        public static create(properties?: Config.IUnitTemplateCfg): Config.UnitTemplateCfg;

        /**
         * Encodes the specified UnitTemplateCfg message. Does not implicitly {@link Config.UnitTemplateCfg.verify|verify} messages.
         * @param message UnitTemplateCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Config.IUnitTemplateCfg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified UnitTemplateCfg message, length delimited. Does not implicitly {@link Config.UnitTemplateCfg.verify|verify} messages.
         * @param message UnitTemplateCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Config.IUnitTemplateCfg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an UnitTemplateCfg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UnitTemplateCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Config.UnitTemplateCfg;

        /**
         * Decodes an UnitTemplateCfg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UnitTemplateCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Config.UnitTemplateCfg;

        /**
         * Verifies an UnitTemplateCfg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an UnitTemplateCfg message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UnitTemplateCfg
         */
        public static fromObject(object: { [k: string]: any }): Config.UnitTemplateCfg;

        /**
         * Creates a plain object from an UnitTemplateCfg message. Also converts values to other types if specified.
         * @param message UnitTemplateCfg
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Config.UnitTemplateCfg, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UnitTemplateCfg to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DamageChartCfg. */
    interface IDamageChartCfg {

        /** DamageChartCfg attackerType */
        attackerType?: (number|null);

        /** DamageChartCfg armorType */
        armorType?: (number|null);

        /** DamageChartCfg weaponType */
        weaponType?: (number|null);

        /** DamageChartCfg damage */
        damage?: (number|null);
    }

    /** Represents a DamageChartCfg. */
    class DamageChartCfg implements IDamageChartCfg {

        /**
         * Constructs a new DamageChartCfg.
         * @param [properties] Properties to set
         */
        constructor(properties?: Config.IDamageChartCfg);

        /** DamageChartCfg attackerType. */
        public attackerType: number;

        /** DamageChartCfg armorType. */
        public armorType: number;

        /** DamageChartCfg weaponType. */
        public weaponType: number;

        /** DamageChartCfg damage. */
        public damage: number;

        /**
         * Creates a new DamageChartCfg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DamageChartCfg instance
         */
        public static create(properties?: Config.IDamageChartCfg): Config.DamageChartCfg;

        /**
         * Encodes the specified DamageChartCfg message. Does not implicitly {@link Config.DamageChartCfg.verify|verify} messages.
         * @param message DamageChartCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Config.IDamageChartCfg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified DamageChartCfg message, length delimited. Does not implicitly {@link Config.DamageChartCfg.verify|verify} messages.
         * @param message DamageChartCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Config.IDamageChartCfg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a DamageChartCfg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DamageChartCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Config.DamageChartCfg;

        /**
         * Decodes a DamageChartCfg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DamageChartCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Config.DamageChartCfg;

        /**
         * Verifies a DamageChartCfg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DamageChartCfg message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DamageChartCfg
         */
        public static fromObject(object: { [k: string]: any }): Config.DamageChartCfg;

        /**
         * Creates a plain object from a DamageChartCfg message. Also converts values to other types if specified.
         * @param message DamageChartCfg
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Config.DamageChartCfg, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DamageChartCfg to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MoveCostCfg. */
    interface IMoveCostCfg {

        /** MoveCostCfg tileType */
        tileType?: (number|null);

        /** MoveCostCfg moveType */
        moveType?: (number|null);

        /** MoveCostCfg cost */
        cost?: (number|null);
    }

    /** Represents a MoveCostCfg. */
    class MoveCostCfg implements IMoveCostCfg {

        /**
         * Constructs a new MoveCostCfg.
         * @param [properties] Properties to set
         */
        constructor(properties?: Config.IMoveCostCfg);

        /** MoveCostCfg tileType. */
        public tileType: number;

        /** MoveCostCfg moveType. */
        public moveType: number;

        /** MoveCostCfg cost. */
        public cost: number;

        /**
         * Creates a new MoveCostCfg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MoveCostCfg instance
         */
        public static create(properties?: Config.IMoveCostCfg): Config.MoveCostCfg;

        /**
         * Encodes the specified MoveCostCfg message. Does not implicitly {@link Config.MoveCostCfg.verify|verify} messages.
         * @param message MoveCostCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Config.IMoveCostCfg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MoveCostCfg message, length delimited. Does not implicitly {@link Config.MoveCostCfg.verify|verify} messages.
         * @param message MoveCostCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Config.IMoveCostCfg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MoveCostCfg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MoveCostCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Config.MoveCostCfg;

        /**
         * Decodes a MoveCostCfg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MoveCostCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Config.MoveCostCfg;

        /**
         * Verifies a MoveCostCfg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MoveCostCfg message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MoveCostCfg
         */
        public static fromObject(object: { [k: string]: any }): Config.MoveCostCfg;

        /**
         * Creates a plain object from a MoveCostCfg message. Also converts values to other types if specified.
         * @param message MoveCostCfg
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Config.MoveCostCfg, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MoveCostCfg to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an UnitPromotionCfg. */
    interface IUnitPromotionCfg {

        /** UnitPromotionCfg promotion */
        promotion?: (number|null);

        /** UnitPromotionCfg attackBonus */
        attackBonus?: (number|null);

        /** UnitPromotionCfg defenseBonus */
        defenseBonus?: (number|null);
    }

    /** Represents an UnitPromotionCfg. */
    class UnitPromotionCfg implements IUnitPromotionCfg {

        /**
         * Constructs a new UnitPromotionCfg.
         * @param [properties] Properties to set
         */
        constructor(properties?: Config.IUnitPromotionCfg);

        /** UnitPromotionCfg promotion. */
        public promotion: number;

        /** UnitPromotionCfg attackBonus. */
        public attackBonus: number;

        /** UnitPromotionCfg defenseBonus. */
        public defenseBonus: number;

        /**
         * Creates a new UnitPromotionCfg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UnitPromotionCfg instance
         */
        public static create(properties?: Config.IUnitPromotionCfg): Config.UnitPromotionCfg;

        /**
         * Encodes the specified UnitPromotionCfg message. Does not implicitly {@link Config.UnitPromotionCfg.verify|verify} messages.
         * @param message UnitPromotionCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Config.IUnitPromotionCfg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified UnitPromotionCfg message, length delimited. Does not implicitly {@link Config.UnitPromotionCfg.verify|verify} messages.
         * @param message UnitPromotionCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Config.IUnitPromotionCfg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an UnitPromotionCfg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UnitPromotionCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Config.UnitPromotionCfg;

        /**
         * Decodes an UnitPromotionCfg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UnitPromotionCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Config.UnitPromotionCfg;

        /**
         * Verifies an UnitPromotionCfg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an UnitPromotionCfg message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UnitPromotionCfg
         */
        public static fromObject(object: { [k: string]: any }): Config.UnitPromotionCfg;

        /**
         * Creates a plain object from an UnitPromotionCfg message. Also converts values to other types if specified.
         * @param message UnitPromotionCfg
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Config.UnitPromotionCfg, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UnitPromotionCfg to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a VisionBonusCfg. */
    interface IVisionBonusCfg {

        /** VisionBonusCfg unitType */
        unitType?: (number|null);

        /** VisionBonusCfg tileType */
        tileType?: (number|null);

        /** VisionBonusCfg visionBonus */
        visionBonus?: (number|null);
    }

    /** Represents a VisionBonusCfg. */
    class VisionBonusCfg implements IVisionBonusCfg {

        /**
         * Constructs a new VisionBonusCfg.
         * @param [properties] Properties to set
         */
        constructor(properties?: Config.IVisionBonusCfg);

        /** VisionBonusCfg unitType. */
        public unitType: number;

        /** VisionBonusCfg tileType. */
        public tileType: number;

        /** VisionBonusCfg visionBonus. */
        public visionBonus: number;

        /**
         * Creates a new VisionBonusCfg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns VisionBonusCfg instance
         */
        public static create(properties?: Config.IVisionBonusCfg): Config.VisionBonusCfg;

        /**
         * Encodes the specified VisionBonusCfg message. Does not implicitly {@link Config.VisionBonusCfg.verify|verify} messages.
         * @param message VisionBonusCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Config.IVisionBonusCfg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified VisionBonusCfg message, length delimited. Does not implicitly {@link Config.VisionBonusCfg.verify|verify} messages.
         * @param message VisionBonusCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Config.IVisionBonusCfg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a VisionBonusCfg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns VisionBonusCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Config.VisionBonusCfg;

        /**
         * Decodes a VisionBonusCfg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns VisionBonusCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Config.VisionBonusCfg;

        /**
         * Verifies a VisionBonusCfg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a VisionBonusCfg message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns VisionBonusCfg
         */
        public static fromObject(object: { [k: string]: any }): Config.VisionBonusCfg;

        /**
         * Creates a plain object from a VisionBonusCfg message. Also converts values to other types if specified.
         * @param message VisionBonusCfg
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Config.VisionBonusCfg, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this VisionBonusCfg to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a BuildableTileCfg. */
    interface IBuildableTileCfg {

        /** BuildableTileCfg unitType */
        unitType?: (number|null);

        /** BuildableTileCfg srcBaseType */
        srcBaseType?: (number|null);

        /** BuildableTileCfg srcObjectType */
        srcObjectType?: (number|null);

        /** BuildableTileCfg dstBaseType */
        dstBaseType?: (number|null);

        /** BuildableTileCfg dstObjectType */
        dstObjectType?: (number|null);
    }

    /** Represents a BuildableTileCfg. */
    class BuildableTileCfg implements IBuildableTileCfg {

        /**
         * Constructs a new BuildableTileCfg.
         * @param [properties] Properties to set
         */
        constructor(properties?: Config.IBuildableTileCfg);

        /** BuildableTileCfg unitType. */
        public unitType: number;

        /** BuildableTileCfg srcBaseType. */
        public srcBaseType: number;

        /** BuildableTileCfg srcObjectType. */
        public srcObjectType: number;

        /** BuildableTileCfg dstBaseType. */
        public dstBaseType: number;

        /** BuildableTileCfg dstObjectType. */
        public dstObjectType: number;

        /**
         * Creates a new BuildableTileCfg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BuildableTileCfg instance
         */
        public static create(properties?: Config.IBuildableTileCfg): Config.BuildableTileCfg;

        /**
         * Encodes the specified BuildableTileCfg message. Does not implicitly {@link Config.BuildableTileCfg.verify|verify} messages.
         * @param message BuildableTileCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Config.IBuildableTileCfg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified BuildableTileCfg message, length delimited. Does not implicitly {@link Config.BuildableTileCfg.verify|verify} messages.
         * @param message BuildableTileCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Config.IBuildableTileCfg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a BuildableTileCfg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BuildableTileCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Config.BuildableTileCfg;

        /**
         * Decodes a BuildableTileCfg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BuildableTileCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Config.BuildableTileCfg;

        /**
         * Verifies a BuildableTileCfg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a BuildableTileCfg message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns BuildableTileCfg
         */
        public static fromObject(object: { [k: string]: any }): Config.BuildableTileCfg;

        /**
         * Creates a plain object from a BuildableTileCfg message. Also converts values to other types if specified.
         * @param message BuildableTileCfg
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Config.BuildableTileCfg, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this BuildableTileCfg to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PlayerRankCfg. */
    interface IPlayerRankCfg {

        /** PlayerRankCfg minScore */
        minScore?: (number|null);

        /** PlayerRankCfg rank */
        rank?: (number|null);
    }

    /** Represents a PlayerRankCfg. */
    class PlayerRankCfg implements IPlayerRankCfg {

        /**
         * Constructs a new PlayerRankCfg.
         * @param [properties] Properties to set
         */
        constructor(properties?: Config.IPlayerRankCfg);

        /** PlayerRankCfg minScore. */
        public minScore: number;

        /** PlayerRankCfg rank. */
        public rank: number;

        /**
         * Creates a new PlayerRankCfg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PlayerRankCfg instance
         */
        public static create(properties?: Config.IPlayerRankCfg): Config.PlayerRankCfg;

        /**
         * Encodes the specified PlayerRankCfg message. Does not implicitly {@link Config.PlayerRankCfg.verify|verify} messages.
         * @param message PlayerRankCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Config.IPlayerRankCfg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified PlayerRankCfg message, length delimited. Does not implicitly {@link Config.PlayerRankCfg.verify|verify} messages.
         * @param message PlayerRankCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Config.IPlayerRankCfg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a PlayerRankCfg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PlayerRankCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Config.PlayerRankCfg;

        /**
         * Decodes a PlayerRankCfg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PlayerRankCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Config.PlayerRankCfg;

        /**
         * Verifies a PlayerRankCfg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PlayerRankCfg message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PlayerRankCfg
         */
        public static fromObject(object: { [k: string]: any }): Config.PlayerRankCfg;

        /**
         * Creates a plain object from a PlayerRankCfg message. Also converts values to other types if specified.
         * @param message PlayerRankCfg
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Config.PlayerRankCfg, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PlayerRankCfg to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CoBasicCfg. */
    interface ICoBasicCfg {

        /** CoBasicCfg coId */
        coId?: (number|null);

        /** CoBasicCfg name */
        name?: (string|null);

        /** CoBasicCfg zoneRadius */
        zoneRadius?: (number|null);

        /** CoBasicCfg boardCostPercentage */
        boardCostPercentage?: (number|null);

        /** CoBasicCfg zoneExpansionEnergyList */
        zoneExpansionEnergyList?: (number[]|null);

        /** CoBasicCfg powerEnergyList */
        powerEnergyList?: (number[]|null);

        /** CoBasicCfg isEnabled */
        isEnabled?: (number|null);

        /** CoBasicCfg designer */
        designer?: (string|null);

        /** CoBasicCfg fullPortrait */
        fullPortrait?: (string|null);

        /** CoBasicCfg tier */
        tier?: (number|null);

        /** CoBasicCfg maxLoadCount */
        maxLoadCount?: (number|null);

        /** CoBasicCfg passiveSkills */
        passiveSkills?: (number[]|null);

        /** CoBasicCfg powerSkills */
        powerSkills?: (number[]|null);

        /** CoBasicCfg superPowerSkills */
        superPowerSkills?: (number[]|null);
    }

    /** Represents a CoBasicCfg. */
    class CoBasicCfg implements ICoBasicCfg {

        /**
         * Constructs a new CoBasicCfg.
         * @param [properties] Properties to set
         */
        constructor(properties?: Config.ICoBasicCfg);

        /** CoBasicCfg coId. */
        public coId: number;

        /** CoBasicCfg name. */
        public name: string;

        /** CoBasicCfg zoneRadius. */
        public zoneRadius: number;

        /** CoBasicCfg boardCostPercentage. */
        public boardCostPercentage: number;

        /** CoBasicCfg zoneExpansionEnergyList. */
        public zoneExpansionEnergyList: number[];

        /** CoBasicCfg powerEnergyList. */
        public powerEnergyList: number[];

        /** CoBasicCfg isEnabled. */
        public isEnabled: number;

        /** CoBasicCfg designer. */
        public designer: string;

        /** CoBasicCfg fullPortrait. */
        public fullPortrait: string;

        /** CoBasicCfg tier. */
        public tier: number;

        /** CoBasicCfg maxLoadCount. */
        public maxLoadCount: number;

        /** CoBasicCfg passiveSkills. */
        public passiveSkills: number[];

        /** CoBasicCfg powerSkills. */
        public powerSkills: number[];

        /** CoBasicCfg superPowerSkills. */
        public superPowerSkills: number[];

        /**
         * Creates a new CoBasicCfg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CoBasicCfg instance
         */
        public static create(properties?: Config.ICoBasicCfg): Config.CoBasicCfg;

        /**
         * Encodes the specified CoBasicCfg message. Does not implicitly {@link Config.CoBasicCfg.verify|verify} messages.
         * @param message CoBasicCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Config.ICoBasicCfg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified CoBasicCfg message, length delimited. Does not implicitly {@link Config.CoBasicCfg.verify|verify} messages.
         * @param message CoBasicCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Config.ICoBasicCfg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CoBasicCfg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CoBasicCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Config.CoBasicCfg;

        /**
         * Decodes a CoBasicCfg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CoBasicCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Config.CoBasicCfg;

        /**
         * Verifies a CoBasicCfg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CoBasicCfg message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CoBasicCfg
         */
        public static fromObject(object: { [k: string]: any }): Config.CoBasicCfg;

        /**
         * Creates a plain object from a CoBasicCfg message. Also converts values to other types if specified.
         * @param message CoBasicCfg
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Config.CoBasicCfg, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CoBasicCfg to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CoSkillCfg. */
    interface ICoSkillCfg {

        /** CoSkillCfg skillId */
        skillId?: (number|null);

        /** CoSkillCfg name */
        name?: (string|null);

        /** CoSkillCfg showZone */
        showZone?: (number|null);

        /** CoSkillCfg desc */
        desc?: (string[]|null);

        /** CoSkillCfg attackBonus */
        attackBonus?: (number[]|null);

        /** CoSkillCfg defenseBonus */
        defenseBonus?: (number[]|null);

        /** CoSkillCfg moveRangeBonus */
        moveRangeBonus?: (number[]|null);

        /** CoSkillCfg maxAttackRangeBonus */
        maxAttackRangeBonus?: (number[]|null);

        /** CoSkillCfg selfHpGain */
        selfHpGain?: (number[]|null);

        /** CoSkillCfg enemyHpGain */
        enemyHpGain?: (number[]|null);

        /** CoSkillCfg selfPrimaryAmmoGain */
        selfPrimaryAmmoGain?: (number[]|null);

        /** CoSkillCfg enemyPrimaryAmmoGain */
        enemyPrimaryAmmoGain?: (number[]|null);

        /** CoSkillCfg selfFuelGain */
        selfFuelGain?: (number[]|null);

        /** CoSkillCfg enemyFuelGain */
        enemyFuelGain?: (number[]|null);

        /** CoSkillCfg selfMaterialGain */
        selfMaterialGain?: (number[]|null);

        /** CoSkillCfg enemyMaterialGain */
        enemyMaterialGain?: (number[]|null);

        /** CoSkillCfg selfHpRecovery */
        selfHpRecovery?: (number[]|null);

        /** CoSkillCfg indiscriminateAreaDamage */
        indiscriminateAreaDamage?: (number[]|null);

        /** CoSkillCfg selfPromotionGain */
        selfPromotionGain?: (number[]|null);

        /** CoSkillCfg unitVisionRangeBonus */
        unitVisionRangeBonus?: (number[]|null);

        /** CoSkillCfg unitTrueVision */
        unitTrueVision?: (number[]|null);

        /** CoSkillCfg attackBonusByPromotion */
        attackBonusByPromotion?: (number[]|null);

        /** CoSkillCfg defenseBonusByPromotion */
        defenseBonusByPromotion?: (number[]|null);

        /** CoSkillCfg promotionBonusByAttack */
        promotionBonusByAttack?: (number[]|null);

        /** CoSkillCfg selfPrimaryAmmoRecovery */
        selfPrimaryAmmoRecovery?: (number[]|null);

        /** CoSkillCfg selfFuelRecovery */
        selfFuelRecovery?: (number[]|null);

        /** CoSkillCfg selfUnitProduction */
        selfUnitProduction?: (number[]|null);
    }

    /** Represents a CoSkillCfg. */
    class CoSkillCfg implements ICoSkillCfg {

        /**
         * Constructs a new CoSkillCfg.
         * @param [properties] Properties to set
         */
        constructor(properties?: Config.ICoSkillCfg);

        /** CoSkillCfg skillId. */
        public skillId: number;

        /** CoSkillCfg name. */
        public name: string;

        /** CoSkillCfg showZone. */
        public showZone: number;

        /** CoSkillCfg desc. */
        public desc: string[];

        /** CoSkillCfg attackBonus. */
        public attackBonus: number[];

        /** CoSkillCfg defenseBonus. */
        public defenseBonus: number[];

        /** CoSkillCfg moveRangeBonus. */
        public moveRangeBonus: number[];

        /** CoSkillCfg maxAttackRangeBonus. */
        public maxAttackRangeBonus: number[];

        /** CoSkillCfg selfHpGain. */
        public selfHpGain: number[];

        /** CoSkillCfg enemyHpGain. */
        public enemyHpGain: number[];

        /** CoSkillCfg selfPrimaryAmmoGain. */
        public selfPrimaryAmmoGain: number[];

        /** CoSkillCfg enemyPrimaryAmmoGain. */
        public enemyPrimaryAmmoGain: number[];

        /** CoSkillCfg selfFuelGain. */
        public selfFuelGain: number[];

        /** CoSkillCfg enemyFuelGain. */
        public enemyFuelGain: number[];

        /** CoSkillCfg selfMaterialGain. */
        public selfMaterialGain: number[];

        /** CoSkillCfg enemyMaterialGain. */
        public enemyMaterialGain: number[];

        /** CoSkillCfg selfHpRecovery. */
        public selfHpRecovery: number[];

        /** CoSkillCfg indiscriminateAreaDamage. */
        public indiscriminateAreaDamage: number[];

        /** CoSkillCfg selfPromotionGain. */
        public selfPromotionGain: number[];

        /** CoSkillCfg unitVisionRangeBonus. */
        public unitVisionRangeBonus: number[];

        /** CoSkillCfg unitTrueVision. */
        public unitTrueVision: number[];

        /** CoSkillCfg attackBonusByPromotion. */
        public attackBonusByPromotion: number[];

        /** CoSkillCfg defenseBonusByPromotion. */
        public defenseBonusByPromotion: number[];

        /** CoSkillCfg promotionBonusByAttack. */
        public promotionBonusByAttack: number[];

        /** CoSkillCfg selfPrimaryAmmoRecovery. */
        public selfPrimaryAmmoRecovery: number[];

        /** CoSkillCfg selfFuelRecovery. */
        public selfFuelRecovery: number[];

        /** CoSkillCfg selfUnitProduction. */
        public selfUnitProduction: number[];

        /**
         * Creates a new CoSkillCfg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CoSkillCfg instance
         */
        public static create(properties?: Config.ICoSkillCfg): Config.CoSkillCfg;

        /**
         * Encodes the specified CoSkillCfg message. Does not implicitly {@link Config.CoSkillCfg.verify|verify} messages.
         * @param message CoSkillCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Config.ICoSkillCfg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified CoSkillCfg message, length delimited. Does not implicitly {@link Config.CoSkillCfg.verify|verify} messages.
         * @param message CoSkillCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Config.ICoSkillCfg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CoSkillCfg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CoSkillCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Config.CoSkillCfg;

        /**
         * Decodes a CoSkillCfg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CoSkillCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Config.CoSkillCfg;

        /**
         * Verifies a CoSkillCfg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CoSkillCfg message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CoSkillCfg
         */
        public static fromObject(object: { [k: string]: any }): Config.CoSkillCfg;

        /**
         * Creates a plain object from a CoSkillCfg message. Also converts values to other types if specified.
         * @param message CoSkillCfg
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Config.CoSkillCfg, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CoSkillCfg to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FullConfig. */
    interface IFullConfig {

        /** FullConfig TileCategory */
        TileCategory?: (Config.ITileCategoryCfg[]|null);

        /** FullConfig UnitCategory */
        UnitCategory?: (Config.IUnitCategoryCfg[]|null);

        /** FullConfig TileTemplate */
        TileTemplate?: (Config.ITileTemplateCfg[]|null);

        /** FullConfig UnitTemplate */
        UnitTemplate?: (Config.IUnitTemplateCfg[]|null);

        /** FullConfig DamageChart */
        DamageChart?: (Config.IDamageChartCfg[]|null);

        /** FullConfig MoveCost */
        MoveCost?: (Config.IMoveCostCfg[]|null);

        /** FullConfig UnitPromotion */
        UnitPromotion?: (Config.IUnitPromotionCfg[]|null);

        /** FullConfig VisionBonus */
        VisionBonus?: (Config.IVisionBonusCfg[]|null);

        /** FullConfig BuildableTile */
        BuildableTile?: (Config.IBuildableTileCfg[]|null);

        /** FullConfig PlayerRank */
        PlayerRank?: (Config.IPlayerRankCfg[]|null);

        /** FullConfig CoBasic */
        CoBasic?: (Config.ICoBasicCfg[]|null);

        /** FullConfig CoSkill */
        CoSkill?: (Config.ICoSkillCfg[]|null);
    }

    /** Represents a FullConfig. */
    class FullConfig implements IFullConfig {

        /**
         * Constructs a new FullConfig.
         * @param [properties] Properties to set
         */
        constructor(properties?: Config.IFullConfig);

        /** FullConfig TileCategory. */
        public TileCategory: Config.ITileCategoryCfg[];

        /** FullConfig UnitCategory. */
        public UnitCategory: Config.IUnitCategoryCfg[];

        /** FullConfig TileTemplate. */
        public TileTemplate: Config.ITileTemplateCfg[];

        /** FullConfig UnitTemplate. */
        public UnitTemplate: Config.IUnitTemplateCfg[];

        /** FullConfig DamageChart. */
        public DamageChart: Config.IDamageChartCfg[];

        /** FullConfig MoveCost. */
        public MoveCost: Config.IMoveCostCfg[];

        /** FullConfig UnitPromotion. */
        public UnitPromotion: Config.IUnitPromotionCfg[];

        /** FullConfig VisionBonus. */
        public VisionBonus: Config.IVisionBonusCfg[];

        /** FullConfig BuildableTile. */
        public BuildableTile: Config.IBuildableTileCfg[];

        /** FullConfig PlayerRank. */
        public PlayerRank: Config.IPlayerRankCfg[];

        /** FullConfig CoBasic. */
        public CoBasic: Config.ICoBasicCfg[];

        /** FullConfig CoSkill. */
        public CoSkill: Config.ICoSkillCfg[];

        /**
         * Creates a new FullConfig instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FullConfig instance
         */
        public static create(properties?: Config.IFullConfig): Config.FullConfig;

        /**
         * Encodes the specified FullConfig message. Does not implicitly {@link Config.FullConfig.verify|verify} messages.
         * @param message FullConfig message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Config.IFullConfig, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified FullConfig message, length delimited. Does not implicitly {@link Config.FullConfig.verify|verify} messages.
         * @param message FullConfig message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Config.IFullConfig, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a FullConfig message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FullConfig
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Config.FullConfig;

        /**
         * Decodes a FullConfig message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FullConfig
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Config.FullConfig;

        /**
         * Verifies a FullConfig message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FullConfig message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FullConfig
         */
        public static fromObject(object: { [k: string]: any }): Config.FullConfig;

        /**
         * Creates a plain object from a FullConfig message. Also converts values to other types if specified.
         * @param message FullConfig
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Config.FullConfig, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FullConfig to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Properties of a Map. */
export declare interface IMap {
}

/** Represents a Map. */
export declare class Map implements IMap {

    /**
     * Constructs a new Map.
     * @param [properties] Properties to set
     */
    constructor(properties?: IMap);

    /**
     * Creates a new Map instance using the specified properties.
     * @param [properties] Properties to set
     * @returns Map instance
     */
    public static create(properties?: IMap): Map;

    /**
     * Encodes the specified Map message. Does not implicitly {@link Map.verify|verify} messages.
     * @param message Map message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IMap, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Encodes the specified Map message, length delimited. Does not implicitly {@link Map.verify|verify} messages.
     * @param message Map message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IMap, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Decodes a Map message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns Map
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Map;

    /**
     * Decodes a Map message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns Map
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Map;

    /**
     * Verifies a Map message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a Map message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns Map
     */
    public static fromObject(object: { [k: string]: any }): Map;

    /**
     * Creates a plain object from a Map message. Also converts values to other types if specified.
     * @param message Map
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: Map, options?: protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this Map to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export declare namespace Map {

    /** Properties of a DataForPlayerStatistics. */
    interface IDataForPlayerStatistics {

        /** DataForPlayerStatistics playerIndex */
        playerIndex?: (number|null);

        /** DataForPlayerStatistics wins */
        wins?: (number|null);

        /** DataForPlayerStatistics loses */
        loses?: (number|null);

        /** DataForPlayerStatistics draws */
        draws?: (number|null);
    }

    /** Represents a DataForPlayerStatistics. */
    class DataForPlayerStatistics implements IDataForPlayerStatistics {

        /**
         * Constructs a new DataForPlayerStatistics.
         * @param [properties] Properties to set
         */
        constructor(properties?: Map.IDataForPlayerStatistics);

        /** DataForPlayerStatistics playerIndex. */
        public playerIndex: number;

        /** DataForPlayerStatistics wins. */
        public wins: number;

        /** DataForPlayerStatistics loses. */
        public loses: number;

        /** DataForPlayerStatistics draws. */
        public draws: number;

        /**
         * Creates a new DataForPlayerStatistics instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DataForPlayerStatistics instance
         */
        public static create(properties?: Map.IDataForPlayerStatistics): Map.DataForPlayerStatistics;

        /**
         * Encodes the specified DataForPlayerStatistics message. Does not implicitly {@link Map.DataForPlayerStatistics.verify|verify} messages.
         * @param message DataForPlayerStatistics message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Map.IDataForPlayerStatistics, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified DataForPlayerStatistics message, length delimited. Does not implicitly {@link Map.DataForPlayerStatistics.verify|verify} messages.
         * @param message DataForPlayerStatistics message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Map.IDataForPlayerStatistics, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a DataForPlayerStatistics message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DataForPlayerStatistics
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Map.DataForPlayerStatistics;

        /**
         * Decodes a DataForPlayerStatistics message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DataForPlayerStatistics
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Map.DataForPlayerStatistics;

        /**
         * Verifies a DataForPlayerStatistics message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DataForPlayerStatistics message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DataForPlayerStatistics
         */
        public static fromObject(object: { [k: string]: any }): Map.DataForPlayerStatistics;

        /**
         * Creates a plain object from a DataForPlayerStatistics message. Also converts values to other types if specified.
         * @param message DataForPlayerStatistics
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Map.DataForPlayerStatistics, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DataForPlayerStatistics to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DataForWarStatistics. */
    interface IDataForWarStatistics {

        /** DataForWarStatistics totalPlayedTimes */
        totalPlayedTimes?: (number|null);

        /** DataForWarStatistics totalTurns */
        totalTurns?: (number|null);

        /** DataForWarStatistics playerStatisticsList */
        playerStatisticsList?: (Map.IDataForPlayerStatistics[]|null);
    }

    /** Represents a DataForWarStatistics. */
    class DataForWarStatistics implements IDataForWarStatistics {

        /**
         * Constructs a new DataForWarStatistics.
         * @param [properties] Properties to set
         */
        constructor(properties?: Map.IDataForWarStatistics);

        /** DataForWarStatistics totalPlayedTimes. */
        public totalPlayedTimes: number;

        /** DataForWarStatistics totalTurns. */
        public totalTurns: number;

        /** DataForWarStatistics playerStatisticsList. */
        public playerStatisticsList: Map.IDataForPlayerStatistics[];

        /**
         * Creates a new DataForWarStatistics instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DataForWarStatistics instance
         */
        public static create(properties?: Map.IDataForWarStatistics): Map.DataForWarStatistics;

        /**
         * Encodes the specified DataForWarStatistics message. Does not implicitly {@link Map.DataForWarStatistics.verify|verify} messages.
         * @param message DataForWarStatistics message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Map.IDataForWarStatistics, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified DataForWarStatistics message, length delimited. Does not implicitly {@link Map.DataForWarStatistics.verify|verify} messages.
         * @param message DataForWarStatistics message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Map.IDataForWarStatistics, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a DataForWarStatistics message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DataForWarStatistics
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Map.DataForWarStatistics;

        /**
         * Decodes a DataForWarStatistics message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DataForWarStatistics
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Map.DataForWarStatistics;

        /**
         * Verifies a DataForWarStatistics message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DataForWarStatistics message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DataForWarStatistics
         */
        public static fromObject(object: { [k: string]: any }): Map.DataForWarStatistics;

        /**
         * Creates a plain object from a DataForWarStatistics message. Also converts values to other types if specified.
         * @param message DataForWarStatistics
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Map.DataForWarStatistics, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DataForWarStatistics to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DataForMapAvailability. */
    interface IDataForMapAvailability {

        /** DataForMapAvailability canMcw */
        canMcw?: (boolean|null);

        /** DataForMapAvailability canScw */
        canScw?: (boolean|null);

        /** DataForMapAvailability canRank */
        canRank?: (boolean|null);

        /** DataForMapAvailability canRankFog */
        canRankFog?: (boolean|null);

        /** DataForMapAvailability canWr */
        canWr?: (boolean|null);
    }

    /** Represents a DataForMapAvailability. */
    class DataForMapAvailability implements IDataForMapAvailability {

        /**
         * Constructs a new DataForMapAvailability.
         * @param [properties] Properties to set
         */
        constructor(properties?: Map.IDataForMapAvailability);

        /** DataForMapAvailability canMcw. */
        public canMcw: boolean;

        /** DataForMapAvailability canScw. */
        public canScw: boolean;

        /** DataForMapAvailability canRank. */
        public canRank: boolean;

        /** DataForMapAvailability canRankFog. */
        public canRankFog: boolean;

        /** DataForMapAvailability canWr. */
        public canWr: boolean;

        /**
         * Creates a new DataForMapAvailability instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DataForMapAvailability instance
         */
        public static create(properties?: Map.IDataForMapAvailability): Map.DataForMapAvailability;

        /**
         * Encodes the specified DataForMapAvailability message. Does not implicitly {@link Map.DataForMapAvailability.verify|verify} messages.
         * @param message DataForMapAvailability message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Map.IDataForMapAvailability, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified DataForMapAvailability message, length delimited. Does not implicitly {@link Map.DataForMapAvailability.verify|verify} messages.
         * @param message DataForMapAvailability message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Map.IDataForMapAvailability, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a DataForMapAvailability message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DataForMapAvailability
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Map.DataForMapAvailability;

        /**
         * Decodes a DataForMapAvailability message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DataForMapAvailability
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Map.DataForMapAvailability;

        /**
         * Verifies a DataForMapAvailability message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DataForMapAvailability message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DataForMapAvailability
         */
        public static fromObject(object: { [k: string]: any }): Map.DataForMapAvailability;

        /**
         * Creates a plain object from a DataForMapAvailability message. Also converts values to other types if specified.
         * @param message DataForMapAvailability
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Map.DataForMapAvailability, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DataForMapAvailability to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MapComplexInfo. */
    interface IMapComplexInfo {

        /** MapComplexInfo availability */
        availability?: (Map.IDataForMapAvailability|null);

        /** MapComplexInfo mcwStatistics */
        mcwStatistics?: (Map.IDataForWarStatistics|null);

        /** MapComplexInfo mcwFogStatistics */
        mcwFogStatistics?: (Map.IDataForWarStatistics|null);

        /** MapComplexInfo rankStatistics */
        rankStatistics?: (Map.IDataForWarStatistics|null);

        /** MapComplexInfo rankFogStatistics */
        rankFogStatistics?: (Map.IDataForWarStatistics|null);
    }

    /** Represents a MapComplexInfo. */
    class MapComplexInfo implements IMapComplexInfo {

        /**
         * Constructs a new MapComplexInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: Map.IMapComplexInfo);

        /** MapComplexInfo availability. */
        public availability?: (Map.IDataForMapAvailability|null);

        /** MapComplexInfo mcwStatistics. */
        public mcwStatistics?: (Map.IDataForWarStatistics|null);

        /** MapComplexInfo mcwFogStatistics. */
        public mcwFogStatistics?: (Map.IDataForWarStatistics|null);

        /** MapComplexInfo rankStatistics. */
        public rankStatistics?: (Map.IDataForWarStatistics|null);

        /** MapComplexInfo rankFogStatistics. */
        public rankFogStatistics?: (Map.IDataForWarStatistics|null);

        /**
         * Creates a new MapComplexInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MapComplexInfo instance
         */
        public static create(properties?: Map.IMapComplexInfo): Map.MapComplexInfo;

        /**
         * Encodes the specified MapComplexInfo message. Does not implicitly {@link Map.MapComplexInfo.verify|verify} messages.
         * @param message MapComplexInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Map.IMapComplexInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MapComplexInfo message, length delimited. Does not implicitly {@link Map.MapComplexInfo.verify|verify} messages.
         * @param message MapComplexInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Map.IMapComplexInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MapComplexInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MapComplexInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Map.MapComplexInfo;

        /**
         * Decodes a MapComplexInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MapComplexInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Map.MapComplexInfo;

        /**
         * Verifies a MapComplexInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MapComplexInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MapComplexInfo
         */
        public static fromObject(object: { [k: string]: any }): Map.MapComplexInfo;

        /**
         * Creates a plain object from a MapComplexInfo message. Also converts values to other types if specified.
         * @param message MapComplexInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Map.MapComplexInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MapComplexInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MapRawData. */
    interface IMapRawData {

        /** MapRawData mapId */
        mapId?: (number|null);

        /** MapRawData designerName */
        designerName?: (string|null);

        /** MapRawData designerUserId */
        designerUserId?: (number|null);

        /** MapRawData mapNameList */
        mapNameList?: (string[]|null);

        /** MapRawData mapWidth */
        mapWidth?: (number|null);

        /** MapRawData mapHeight */
        mapHeight?: (number|null);

        /** MapRawData playersCount */
        playersCount?: (number|null);

        /** MapRawData modifiedTime */
        modifiedTime?: (number|null);

        /** MapRawData tileDataList */
        tileDataList?: (WarSerialization.ISerialTile[]|null);

        /** MapRawData unitDataList */
        unitDataList?: (WarSerialization.ISerialUnit[]|null);

        /** MapRawData warRuleList */
        warRuleList?: (WarRule.IWarRule[]|null);
    }

    /** Represents a MapRawData. */
    class MapRawData implements IMapRawData {

        /**
         * Constructs a new MapRawData.
         * @param [properties] Properties to set
         */
        constructor(properties?: Map.IMapRawData);

        /** MapRawData mapId. */
        public mapId: number;

        /** MapRawData designerName. */
        public designerName: string;

        /** MapRawData designerUserId. */
        public designerUserId: number;

        /** MapRawData mapNameList. */
        public mapNameList: string[];

        /** MapRawData mapWidth. */
        public mapWidth: number;

        /** MapRawData mapHeight. */
        public mapHeight: number;

        /** MapRawData playersCount. */
        public playersCount: number;

        /** MapRawData modifiedTime. */
        public modifiedTime: number;

        /** MapRawData tileDataList. */
        public tileDataList: WarSerialization.ISerialTile[];

        /** MapRawData unitDataList. */
        public unitDataList: WarSerialization.ISerialUnit[];

        /** MapRawData warRuleList. */
        public warRuleList: WarRule.IWarRule[];

        /**
         * Creates a new MapRawData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MapRawData instance
         */
        public static create(properties?: Map.IMapRawData): Map.MapRawData;

        /**
         * Encodes the specified MapRawData message. Does not implicitly {@link Map.MapRawData.verify|verify} messages.
         * @param message MapRawData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Map.IMapRawData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MapRawData message, length delimited. Does not implicitly {@link Map.MapRawData.verify|verify} messages.
         * @param message MapRawData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Map.IMapRawData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MapRawData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MapRawData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Map.MapRawData;

        /**
         * Decodes a MapRawData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MapRawData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Map.MapRawData;

        /**
         * Verifies a MapRawData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MapRawData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MapRawData
         */
        public static fromObject(object: { [k: string]: any }): Map.MapRawData;

        /**
         * Creates a plain object from a MapRawData message. Also converts values to other types if specified.
         * @param message MapRawData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Map.MapRawData, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MapRawData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MapExtraData. */
    interface IMapExtraData {

        /** MapExtraData mapId */
        mapId?: (number|null);

        /** MapExtraData isEnabled */
        isEnabled?: (boolean|null);

        /** MapExtraData totalRating */
        totalRating?: (number|null);

        /** MapExtraData totalRaters */
        totalRaters?: (number|null);

        /** MapExtraData mapComplexInfo */
        mapComplexInfo?: (Map.IMapComplexInfo|null);
    }

    /** Represents a MapExtraData. */
    class MapExtraData implements IMapExtraData {

        /**
         * Constructs a new MapExtraData.
         * @param [properties] Properties to set
         */
        constructor(properties?: Map.IMapExtraData);

        /** MapExtraData mapId. */
        public mapId: number;

        /** MapExtraData isEnabled. */
        public isEnabled: boolean;

        /** MapExtraData totalRating. */
        public totalRating: number;

        /** MapExtraData totalRaters. */
        public totalRaters: number;

        /** MapExtraData mapComplexInfo. */
        public mapComplexInfo?: (Map.IMapComplexInfo|null);

        /**
         * Creates a new MapExtraData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MapExtraData instance
         */
        public static create(properties?: Map.IMapExtraData): Map.MapExtraData;

        /**
         * Encodes the specified MapExtraData message. Does not implicitly {@link Map.MapExtraData.verify|verify} messages.
         * @param message MapExtraData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Map.IMapExtraData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MapExtraData message, length delimited. Does not implicitly {@link Map.MapExtraData.verify|verify} messages.
         * @param message MapExtraData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Map.IMapExtraData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MapExtraData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MapExtraData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Map.MapExtraData;

        /**
         * Decodes a MapExtraData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MapExtraData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Map.MapExtraData;

        /**
         * Verifies a MapExtraData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MapExtraData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MapExtraData
         */
        public static fromObject(object: { [k: string]: any }): Map.MapExtraData;

        /**
         * Creates a plain object from a MapExtraData message. Also converts values to other types if specified.
         * @param message MapExtraData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Map.MapExtraData, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MapExtraData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MapEditorData. */
    interface IMapEditorData {

        /** MapEditorData slotIndex */
        slotIndex?: (number|null);

        /** MapEditorData mapRawData */
        mapRawData?: (Map.IMapRawData|null);

        /** MapEditorData reviewStatus */
        reviewStatus?: (number|null);

        /** MapEditorData reviewComment */
        reviewComment?: (string|null);
    }

    /** Represents a MapEditorData. */
    class MapEditorData implements IMapEditorData {

        /**
         * Constructs a new MapEditorData.
         * @param [properties] Properties to set
         */
        constructor(properties?: Map.IMapEditorData);

        /** MapEditorData slotIndex. */
        public slotIndex: number;

        /** MapEditorData mapRawData. */
        public mapRawData?: (Map.IMapRawData|null);

        /** MapEditorData reviewStatus. */
        public reviewStatus: number;

        /** MapEditorData reviewComment. */
        public reviewComment: string;

        /**
         * Creates a new MapEditorData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MapEditorData instance
         */
        public static create(properties?: Map.IMapEditorData): Map.MapEditorData;

        /**
         * Encodes the specified MapEditorData message. Does not implicitly {@link Map.MapEditorData.verify|verify} messages.
         * @param message MapEditorData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Map.IMapEditorData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MapEditorData message, length delimited. Does not implicitly {@link Map.MapEditorData.verify|verify} messages.
         * @param message MapEditorData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Map.IMapEditorData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MapEditorData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MapEditorData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Map.MapEditorData;

        /**
         * Decodes a MapEditorData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MapEditorData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Map.MapEditorData;

        /**
         * Verifies a MapEditorData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MapEditorData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MapEditorData
         */
        public static fromObject(object: { [k: string]: any }): Map.MapEditorData;

        /**
         * Creates a plain object from a MapEditorData message. Also converts values to other types if specified.
         * @param message MapEditorData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Map.MapEditorData, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MapEditorData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Properties of a WarRule. */
export declare interface IWarRule {
}

/** Represents a WarRule. */
export declare class WarRule implements IWarRule {

    /**
     * Constructs a new WarRule.
     * @param [properties] Properties to set
     */
    constructor(properties?: IWarRule);

    /**
     * Creates a new WarRule instance using the specified properties.
     * @param [properties] Properties to set
     * @returns WarRule instance
     */
    public static create(properties?: IWarRule): WarRule;

    /**
     * Encodes the specified WarRule message. Does not implicitly {@link WarRule.verify|verify} messages.
     * @param message WarRule message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IWarRule, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Encodes the specified WarRule message, length delimited. Does not implicitly {@link WarRule.verify|verify} messages.
     * @param message WarRule message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IWarRule, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Decodes a WarRule message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns WarRule
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarRule;

    /**
     * Decodes a WarRule message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns WarRule
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarRule;

    /**
     * Verifies a WarRule message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a WarRule message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns WarRule
     */
    public static fromObject(object: { [k: string]: any }): WarRule;

    /**
     * Creates a plain object from a WarRule message. Also converts values to other types if specified.
     * @param message WarRule
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: WarRule, options?: protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this WarRule to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export declare namespace WarRule {

    /** Properties of a DataForPlayerRule. */
    interface IDataForPlayerRule {

        /** DataForPlayerRule playerIndex */
        playerIndex?: (number|null);

        /** DataForPlayerRule teamIndex */
        teamIndex?: (number|null);

        /** DataForPlayerRule initialFund */
        initialFund?: (number|null);

        /** DataForPlayerRule incomeMultiplier */
        incomeMultiplier?: (number|null);

        /** DataForPlayerRule initialEnergyPercentage */
        initialEnergyPercentage?: (number|null);

        /** DataForPlayerRule energyGrowthMultiplier */
        energyGrowthMultiplier?: (number|null);

        /** DataForPlayerRule moveRangeModifier */
        moveRangeModifier?: (number|null);

        /** DataForPlayerRule attackPowerModifier */
        attackPowerModifier?: (number|null);

        /** DataForPlayerRule visionRangeModifier */
        visionRangeModifier?: (number|null);

        /** DataForPlayerRule luckLowerLimit */
        luckLowerLimit?: (number|null);

        /** DataForPlayerRule luckUpperLimit */
        luckUpperLimit?: (number|null);

        /** DataForPlayerRule availableCoIdList */
        availableCoIdList?: (number[]|null);
    }

    /** Represents a DataForPlayerRule. */
    class DataForPlayerRule implements IDataForPlayerRule {

        /**
         * Constructs a new DataForPlayerRule.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarRule.IDataForPlayerRule);

        /** DataForPlayerRule playerIndex. */
        public playerIndex: number;

        /** DataForPlayerRule teamIndex. */
        public teamIndex: number;

        /** DataForPlayerRule initialFund. */
        public initialFund: number;

        /** DataForPlayerRule incomeMultiplier. */
        public incomeMultiplier: number;

        /** DataForPlayerRule initialEnergyPercentage. */
        public initialEnergyPercentage: number;

        /** DataForPlayerRule energyGrowthMultiplier. */
        public energyGrowthMultiplier: number;

        /** DataForPlayerRule moveRangeModifier. */
        public moveRangeModifier: number;

        /** DataForPlayerRule attackPowerModifier. */
        public attackPowerModifier: number;

        /** DataForPlayerRule visionRangeModifier. */
        public visionRangeModifier: number;

        /** DataForPlayerRule luckLowerLimit. */
        public luckLowerLimit: number;

        /** DataForPlayerRule luckUpperLimit. */
        public luckUpperLimit: number;

        /** DataForPlayerRule availableCoIdList. */
        public availableCoIdList: number[];

        /**
         * Creates a new DataForPlayerRule instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DataForPlayerRule instance
         */
        public static create(properties?: WarRule.IDataForPlayerRule): WarRule.DataForPlayerRule;

        /**
         * Encodes the specified DataForPlayerRule message. Does not implicitly {@link WarRule.DataForPlayerRule.verify|verify} messages.
         * @param message DataForPlayerRule message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarRule.IDataForPlayerRule, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified DataForPlayerRule message, length delimited. Does not implicitly {@link WarRule.DataForPlayerRule.verify|verify} messages.
         * @param message DataForPlayerRule message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarRule.IDataForPlayerRule, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a DataForPlayerRule message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DataForPlayerRule
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarRule.DataForPlayerRule;

        /**
         * Decodes a DataForPlayerRule message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DataForPlayerRule
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarRule.DataForPlayerRule;

        /**
         * Verifies a DataForPlayerRule message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DataForPlayerRule message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DataForPlayerRule
         */
        public static fromObject(object: { [k: string]: any }): WarRule.DataForPlayerRule;

        /**
         * Creates a plain object from a DataForPlayerRule message. Also converts values to other types if specified.
         * @param message DataForPlayerRule
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarRule.DataForPlayerRule, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DataForPlayerRule to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DataForWarRuleAvailability. */
    interface IDataForWarRuleAvailability {

        /** DataForWarRuleAvailability canMcw */
        canMcw?: (boolean|null);

        /** DataForWarRuleAvailability canScw */
        canScw?: (boolean|null);

        /** DataForWarRuleAvailability canRank */
        canRank?: (boolean|null);

        /** DataForWarRuleAvailability canWr */
        canWr?: (boolean|null);
    }

    /** Represents a DataForWarRuleAvailability. */
    class DataForWarRuleAvailability implements IDataForWarRuleAvailability {

        /**
         * Constructs a new DataForWarRuleAvailability.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarRule.IDataForWarRuleAvailability);

        /** DataForWarRuleAvailability canMcw. */
        public canMcw: boolean;

        /** DataForWarRuleAvailability canScw. */
        public canScw: boolean;

        /** DataForWarRuleAvailability canRank. */
        public canRank: boolean;

        /** DataForWarRuleAvailability canWr. */
        public canWr: boolean;

        /**
         * Creates a new DataForWarRuleAvailability instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DataForWarRuleAvailability instance
         */
        public static create(properties?: WarRule.IDataForWarRuleAvailability): WarRule.DataForWarRuleAvailability;

        /**
         * Encodes the specified DataForWarRuleAvailability message. Does not implicitly {@link WarRule.DataForWarRuleAvailability.verify|verify} messages.
         * @param message DataForWarRuleAvailability message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarRule.IDataForWarRuleAvailability, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified DataForWarRuleAvailability message, length delimited. Does not implicitly {@link WarRule.DataForWarRuleAvailability.verify|verify} messages.
         * @param message DataForWarRuleAvailability message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarRule.IDataForWarRuleAvailability, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a DataForWarRuleAvailability message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DataForWarRuleAvailability
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarRule.DataForWarRuleAvailability;

        /**
         * Decodes a DataForWarRuleAvailability message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DataForWarRuleAvailability
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarRule.DataForWarRuleAvailability;

        /**
         * Verifies a DataForWarRuleAvailability message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DataForWarRuleAvailability message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DataForWarRuleAvailability
         */
        public static fromObject(object: { [k: string]: any }): WarRule.DataForWarRuleAvailability;

        /**
         * Creates a plain object from a DataForWarRuleAvailability message. Also converts values to other types if specified.
         * @param message DataForWarRuleAvailability
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarRule.DataForWarRuleAvailability, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DataForWarRuleAvailability to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RuleForPlayers. */
    interface IRuleForPlayers {

        /** RuleForPlayers playerRuleDataList */
        playerRuleDataList?: (WarRule.IDataForPlayerRule[]|null);
    }

    /** Represents a RuleForPlayers. */
    class RuleForPlayers implements IRuleForPlayers {

        /**
         * Constructs a new RuleForPlayers.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarRule.IRuleForPlayers);

        /** RuleForPlayers playerRuleDataList. */
        public playerRuleDataList: WarRule.IDataForPlayerRule[];

        /**
         * Creates a new RuleForPlayers instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RuleForPlayers instance
         */
        public static create(properties?: WarRule.IRuleForPlayers): WarRule.RuleForPlayers;

        /**
         * Encodes the specified RuleForPlayers message. Does not implicitly {@link WarRule.RuleForPlayers.verify|verify} messages.
         * @param message RuleForPlayers message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarRule.IRuleForPlayers, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified RuleForPlayers message, length delimited. Does not implicitly {@link WarRule.RuleForPlayers.verify|verify} messages.
         * @param message RuleForPlayers message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarRule.IRuleForPlayers, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a RuleForPlayers message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RuleForPlayers
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarRule.RuleForPlayers;

        /**
         * Decodes a RuleForPlayers message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RuleForPlayers
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarRule.RuleForPlayers;

        /**
         * Verifies a RuleForPlayers message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RuleForPlayers message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RuleForPlayers
         */
        public static fromObject(object: { [k: string]: any }): WarRule.RuleForPlayers;

        /**
         * Creates a plain object from a RuleForPlayers message. Also converts values to other types if specified.
         * @param message RuleForPlayers
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarRule.RuleForPlayers, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RuleForPlayers to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RuleForGlobalParams. */
    interface IRuleForGlobalParams {

        /** RuleForGlobalParams hasFogByDefault */
        hasFogByDefault?: (boolean|null);
    }

    /** Represents a RuleForGlobalParams. */
    class RuleForGlobalParams implements IRuleForGlobalParams {

        /**
         * Constructs a new RuleForGlobalParams.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarRule.IRuleForGlobalParams);

        /** RuleForGlobalParams hasFogByDefault. */
        public hasFogByDefault: boolean;

        /**
         * Creates a new RuleForGlobalParams instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RuleForGlobalParams instance
         */
        public static create(properties?: WarRule.IRuleForGlobalParams): WarRule.RuleForGlobalParams;

        /**
         * Encodes the specified RuleForGlobalParams message. Does not implicitly {@link WarRule.RuleForGlobalParams.verify|verify} messages.
         * @param message RuleForGlobalParams message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarRule.IRuleForGlobalParams, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified RuleForGlobalParams message, length delimited. Does not implicitly {@link WarRule.RuleForGlobalParams.verify|verify} messages.
         * @param message RuleForGlobalParams message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarRule.IRuleForGlobalParams, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a RuleForGlobalParams message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RuleForGlobalParams
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarRule.RuleForGlobalParams;

        /**
         * Decodes a RuleForGlobalParams message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RuleForGlobalParams
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarRule.RuleForGlobalParams;

        /**
         * Verifies a RuleForGlobalParams message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RuleForGlobalParams message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RuleForGlobalParams
         */
        public static fromObject(object: { [k: string]: any }): WarRule.RuleForGlobalParams;

        /**
         * Creates a plain object from a RuleForGlobalParams message. Also converts values to other types if specified.
         * @param message RuleForGlobalParams
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarRule.RuleForGlobalParams, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RuleForGlobalParams to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WarRule. */
    interface IWarRule {

        /** WarRule ruleId */
        ruleId?: (number|null);

        /** WarRule ruleNameList */
        ruleNameList?: (string[]|null);

        /** WarRule ruleAvailability */
        ruleAvailability?: (WarRule.IDataForWarRuleAvailability|null);

        /** WarRule ruleForGlobalParams */
        ruleForGlobalParams?: (WarRule.IRuleForGlobalParams|null);

        /** WarRule ruleForPlayers */
        ruleForPlayers?: (WarRule.IRuleForPlayers|null);
    }

    /** Represents a WarRule. */
    class WarRule implements IWarRule {

        /**
         * Constructs a new WarRule.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarRule.IWarRule);

        /** WarRule ruleId. */
        public ruleId: number;

        /** WarRule ruleNameList. */
        public ruleNameList: string[];

        /** WarRule ruleAvailability. */
        public ruleAvailability?: (WarRule.IDataForWarRuleAvailability|null);

        /** WarRule ruleForGlobalParams. */
        public ruleForGlobalParams?: (WarRule.IRuleForGlobalParams|null);

        /** WarRule ruleForPlayers. */
        public ruleForPlayers?: (WarRule.IRuleForPlayers|null);

        /**
         * Creates a new WarRule instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WarRule instance
         */
        public static create(properties?: WarRule.IWarRule): WarRule.WarRule;

        /**
         * Encodes the specified WarRule message. Does not implicitly {@link WarRule.WarRule.verify|verify} messages.
         * @param message WarRule message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarRule.IWarRule, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WarRule message, length delimited. Does not implicitly {@link WarRule.WarRule.verify|verify} messages.
         * @param message WarRule message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarRule.IWarRule, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarRule message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarRule
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarRule.WarRule;

        /**
         * Decodes a WarRule message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WarRule
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarRule.WarRule;

        /**
         * Verifies a WarRule message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WarRule message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WarRule
         */
        public static fromObject(object: { [k: string]: any }): WarRule.WarRule;

        /**
         * Creates a plain object from a WarRule message. Also converts values to other types if specified.
         * @param message WarRule
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarRule.WarRule, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WarRule to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WarRuleList. */
    interface IWarRuleList {

        /** WarRuleList warRuleList */
        warRuleList?: (WarRule.IWarRule[]|null);
    }

    /** Represents a WarRuleList. */
    class WarRuleList implements IWarRuleList {

        /**
         * Constructs a new WarRuleList.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarRule.IWarRuleList);

        /** WarRuleList warRuleList. */
        public warRuleList: WarRule.IWarRule[];

        /**
         * Creates a new WarRuleList instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WarRuleList instance
         */
        public static create(properties?: WarRule.IWarRuleList): WarRule.WarRuleList;

        /**
         * Encodes the specified WarRuleList message. Does not implicitly {@link WarRule.WarRuleList.verify|verify} messages.
         * @param message WarRuleList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarRule.IWarRuleList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WarRuleList message, length delimited. Does not implicitly {@link WarRule.WarRuleList.verify|verify} messages.
         * @param message WarRuleList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarRule.IWarRuleList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarRuleList message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarRuleList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarRule.WarRuleList;

        /**
         * Decodes a WarRuleList message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WarRuleList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarRule.WarRuleList;

        /**
         * Verifies a WarRuleList message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WarRuleList message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WarRuleList
         */
        public static fromObject(object: { [k: string]: any }): WarRule.WarRuleList;

        /**
         * Creates a plain object from a WarRuleList message. Also converts values to other types if specified.
         * @param message WarRuleList
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarRule.WarRuleList, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WarRuleList to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Properties of a WarSettings. */
export declare interface IWarSettings {
}

/** Represents a WarSettings. */
export declare class WarSettings implements IWarSettings {

    /**
     * Constructs a new WarSettings.
     * @param [properties] Properties to set
     */
    constructor(properties?: IWarSettings);

    /**
     * Creates a new WarSettings instance using the specified properties.
     * @param [properties] Properties to set
     * @returns WarSettings instance
     */
    public static create(properties?: IWarSettings): WarSettings;

    /**
     * Encodes the specified WarSettings message. Does not implicitly {@link WarSettings.verify|verify} messages.
     * @param message WarSettings message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IWarSettings, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Encodes the specified WarSettings message, length delimited. Does not implicitly {@link WarSettings.verify|verify} messages.
     * @param message WarSettings message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IWarSettings, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Decodes a WarSettings message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns WarSettings
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarSettings;

    /**
     * Decodes a WarSettings message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns WarSettings
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarSettings;

    /**
     * Verifies a WarSettings message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a WarSettings message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns WarSettings
     */
    public static fromObject(object: { [k: string]: any }): WarSettings;

    /**
     * Creates a plain object from a WarSettings message. Also converts values to other types if specified.
     * @param message WarSettings
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: WarSettings, options?: protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this WarSettings to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export declare namespace WarSettings {

    /** Properties of a SettingsForCommon. */
    interface ISettingsForCommon {

        /** SettingsForCommon configVersion */
        configVersion?: (string|null);

        /** SettingsForCommon mapId */
        mapId?: (number|null);

        /** SettingsForCommon presetWarRuleId */
        presetWarRuleId?: (number|null);

        /** SettingsForCommon warRule */
        warRule?: (WarRule.IWarRule|null);
    }

    /** Represents a SettingsForCommon. */
    class SettingsForCommon implements ISettingsForCommon {

        /**
         * Constructs a new SettingsForCommon.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarSettings.ISettingsForCommon);

        /** SettingsForCommon configVersion. */
        public configVersion: string;

        /** SettingsForCommon mapId. */
        public mapId: number;

        /** SettingsForCommon presetWarRuleId. */
        public presetWarRuleId: number;

        /** SettingsForCommon warRule. */
        public warRule?: (WarRule.IWarRule|null);

        /**
         * Creates a new SettingsForCommon instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SettingsForCommon instance
         */
        public static create(properties?: WarSettings.ISettingsForCommon): WarSettings.SettingsForCommon;

        /**
         * Encodes the specified SettingsForCommon message. Does not implicitly {@link WarSettings.SettingsForCommon.verify|verify} messages.
         * @param message SettingsForCommon message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarSettings.ISettingsForCommon, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SettingsForCommon message, length delimited. Does not implicitly {@link WarSettings.SettingsForCommon.verify|verify} messages.
         * @param message SettingsForCommon message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarSettings.ISettingsForCommon, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SettingsForCommon message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SettingsForCommon
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarSettings.SettingsForCommon;

        /**
         * Decodes a SettingsForCommon message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SettingsForCommon
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarSettings.SettingsForCommon;

        /**
         * Verifies a SettingsForCommon message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SettingsForCommon message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SettingsForCommon
         */
        public static fromObject(object: { [k: string]: any }): WarSettings.SettingsForCommon;

        /**
         * Creates a plain object from a SettingsForCommon message. Also converts values to other types if specified.
         * @param message SettingsForCommon
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarSettings.SettingsForCommon, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SettingsForCommon to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SettingsForMcw. */
    interface ISettingsForMcw {

        /** SettingsForMcw warName */
        warName?: (string|null);

        /** SettingsForMcw warPassword */
        warPassword?: (string|null);

        /** SettingsForMcw warComment */
        warComment?: (string|null);

        /** SettingsForMcw bootTimerParams */
        bootTimerParams?: (number[]|null);
    }

    /** Represents a SettingsForMcw. */
    class SettingsForMcw implements ISettingsForMcw {

        /**
         * Constructs a new SettingsForMcw.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarSettings.ISettingsForMcw);

        /** SettingsForMcw warName. */
        public warName: string;

        /** SettingsForMcw warPassword. */
        public warPassword: string;

        /** SettingsForMcw warComment. */
        public warComment: string;

        /** SettingsForMcw bootTimerParams. */
        public bootTimerParams: number[];

        /**
         * Creates a new SettingsForMcw instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SettingsForMcw instance
         */
        public static create(properties?: WarSettings.ISettingsForMcw): WarSettings.SettingsForMcw;

        /**
         * Encodes the specified SettingsForMcw message. Does not implicitly {@link WarSettings.SettingsForMcw.verify|verify} messages.
         * @param message SettingsForMcw message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarSettings.ISettingsForMcw, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SettingsForMcw message, length delimited. Does not implicitly {@link WarSettings.SettingsForMcw.verify|verify} messages.
         * @param message SettingsForMcw message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarSettings.ISettingsForMcw, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SettingsForMcw message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SettingsForMcw
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarSettings.SettingsForMcw;

        /**
         * Decodes a SettingsForMcw message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SettingsForMcw
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarSettings.SettingsForMcw;

        /**
         * Verifies a SettingsForMcw message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SettingsForMcw message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SettingsForMcw
         */
        public static fromObject(object: { [k: string]: any }): WarSettings.SettingsForMcw;

        /**
         * Creates a plain object from a SettingsForMcw message. Also converts values to other types if specified.
         * @param message SettingsForMcw
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarSettings.SettingsForMcw, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SettingsForMcw to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SettingsForScw. */
    interface ISettingsForScw {

        /** SettingsForScw warType */
        warType?: (number|null);

        /** SettingsForScw saveSlotIndex */
        saveSlotIndex?: (number|null);

        /** SettingsForScw isCheating */
        isCheating?: (boolean|null);
    }

    /** Represents a SettingsForScw. */
    class SettingsForScw implements ISettingsForScw {

        /**
         * Constructs a new SettingsForScw.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarSettings.ISettingsForScw);

        /** SettingsForScw warType. */
        public warType: number;

        /** SettingsForScw saveSlotIndex. */
        public saveSlotIndex: number;

        /** SettingsForScw isCheating. */
        public isCheating: boolean;

        /**
         * Creates a new SettingsForScw instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SettingsForScw instance
         */
        public static create(properties?: WarSettings.ISettingsForScw): WarSettings.SettingsForScw;

        /**
         * Encodes the specified SettingsForScw message. Does not implicitly {@link WarSettings.SettingsForScw.verify|verify} messages.
         * @param message SettingsForScw message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarSettings.ISettingsForScw, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SettingsForScw message, length delimited. Does not implicitly {@link WarSettings.SettingsForScw.verify|verify} messages.
         * @param message SettingsForScw message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarSettings.ISettingsForScw, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SettingsForScw message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SettingsForScw
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarSettings.SettingsForScw;

        /**
         * Decodes a SettingsForScw message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SettingsForScw
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarSettings.SettingsForScw;

        /**
         * Verifies a SettingsForScw message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SettingsForScw message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SettingsForScw
         */
        public static fromObject(object: { [k: string]: any }): WarSettings.SettingsForScw;

        /**
         * Creates a plain object from a SettingsForScw message. Also converts values to other types if specified.
         * @param message SettingsForScw
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarSettings.SettingsForScw, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SettingsForScw to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SettingsForRmw. */
    interface ISettingsForRmw {

        /** SettingsForRmw dataListForBanCo */
        dataListForBanCo?: (Structure.IDataForPlayerBanCo[]|null);
    }

    /** Represents a SettingsForRmw. */
    class SettingsForRmw implements ISettingsForRmw {

        /**
         * Constructs a new SettingsForRmw.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarSettings.ISettingsForRmw);

        /** SettingsForRmw dataListForBanCo. */
        public dataListForBanCo: Structure.IDataForPlayerBanCo[];

        /**
         * Creates a new SettingsForRmw instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SettingsForRmw instance
         */
        public static create(properties?: WarSettings.ISettingsForRmw): WarSettings.SettingsForRmw;

        /**
         * Encodes the specified SettingsForRmw message. Does not implicitly {@link WarSettings.SettingsForRmw.verify|verify} messages.
         * @param message SettingsForRmw message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarSettings.ISettingsForRmw, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SettingsForRmw message, length delimited. Does not implicitly {@link WarSettings.SettingsForRmw.verify|verify} messages.
         * @param message SettingsForRmw message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarSettings.ISettingsForRmw, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SettingsForRmw message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SettingsForRmw
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarSettings.SettingsForRmw;

        /**
         * Decodes a SettingsForRmw message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SettingsForRmw
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarSettings.SettingsForRmw;

        /**
         * Verifies a SettingsForRmw message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SettingsForRmw message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SettingsForRmw
         */
        public static fromObject(object: { [k: string]: any }): WarSettings.SettingsForRmw;

        /**
         * Creates a plain object from a SettingsForRmw message. Also converts values to other types if specified.
         * @param message SettingsForRmw
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarSettings.SettingsForRmw, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SettingsForRmw to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Properties of a WarSerialization. */
export declare interface IWarSerialization {
}

/** Represents a WarSerialization. */
export declare class WarSerialization implements IWarSerialization {

    /**
     * Constructs a new WarSerialization.
     * @param [properties] Properties to set
     */
    constructor(properties?: IWarSerialization);

    /**
     * Creates a new WarSerialization instance using the specified properties.
     * @param [properties] Properties to set
     * @returns WarSerialization instance
     */
    public static create(properties?: IWarSerialization): WarSerialization;

    /**
     * Encodes the specified WarSerialization message. Does not implicitly {@link WarSerialization.verify|verify} messages.
     * @param message WarSerialization message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IWarSerialization, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Encodes the specified WarSerialization message, length delimited. Does not implicitly {@link WarSerialization.verify|verify} messages.
     * @param message WarSerialization message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IWarSerialization, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Decodes a WarSerialization message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns WarSerialization
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarSerialization;

    /**
     * Decodes a WarSerialization message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns WarSerialization
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarSerialization;

    /**
     * Verifies a WarSerialization message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a WarSerialization message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns WarSerialization
     */
    public static fromObject(object: { [k: string]: any }): WarSerialization;

    /**
     * Creates a plain object from a WarSerialization message. Also converts values to other types if specified.
     * @param message WarSerialization
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: WarSerialization, options?: protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this WarSerialization to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export declare namespace WarSerialization {

    /** Properties of a DataForFogMapFromPath. */
    interface IDataForFogMapFromPath {

        /** DataForFogMapFromPath playerIndex */
        playerIndex?: (number|null);

        /** DataForFogMapFromPath visibilityList */
        visibilityList?: (number[]|null);
    }

    /** Represents a DataForFogMapFromPath. */
    class DataForFogMapFromPath implements IDataForFogMapFromPath {

        /**
         * Constructs a new DataForFogMapFromPath.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarSerialization.IDataForFogMapFromPath);

        /** DataForFogMapFromPath playerIndex. */
        public playerIndex: number;

        /** DataForFogMapFromPath visibilityList. */
        public visibilityList: number[];

        /**
         * Creates a new DataForFogMapFromPath instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DataForFogMapFromPath instance
         */
        public static create(properties?: WarSerialization.IDataForFogMapFromPath): WarSerialization.DataForFogMapFromPath;

        /**
         * Encodes the specified DataForFogMapFromPath message. Does not implicitly {@link WarSerialization.DataForFogMapFromPath.verify|verify} messages.
         * @param message DataForFogMapFromPath message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarSerialization.IDataForFogMapFromPath, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified DataForFogMapFromPath message, length delimited. Does not implicitly {@link WarSerialization.DataForFogMapFromPath.verify|verify} messages.
         * @param message DataForFogMapFromPath message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarSerialization.IDataForFogMapFromPath, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a DataForFogMapFromPath message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DataForFogMapFromPath
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarSerialization.DataForFogMapFromPath;

        /**
         * Decodes a DataForFogMapFromPath message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DataForFogMapFromPath
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarSerialization.DataForFogMapFromPath;

        /**
         * Verifies a DataForFogMapFromPath message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DataForFogMapFromPath message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DataForFogMapFromPath
         */
        public static fromObject(object: { [k: string]: any }): WarSerialization.DataForFogMapFromPath;

        /**
         * Creates a plain object from a DataForFogMapFromPath message. Also converts values to other types if specified.
         * @param message DataForFogMapFromPath
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarSerialization.DataForFogMapFromPath, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DataForFogMapFromPath to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SerialTile. */
    interface ISerialTile {

        /** SerialTile gridIndex */
        gridIndex?: (Structure.IGridIndex|null);

        /** SerialTile playerIndex */
        playerIndex?: (number|null);

        /** SerialTile baseType */
        baseType?: (number|null);

        /** SerialTile objectType */
        objectType?: (number|null);

        /** SerialTile baseShapeId */
        baseShapeId?: (number|null);

        /** SerialTile objectShapeId */
        objectShapeId?: (number|null);

        /** SerialTile currentHp */
        currentHp?: (number|null);

        /** SerialTile currentBuildPoint */
        currentBuildPoint?: (number|null);

        /** SerialTile currentCapturePoint */
        currentCapturePoint?: (number|null);
    }

    /** Represents a SerialTile. */
    class SerialTile implements ISerialTile {

        /**
         * Constructs a new SerialTile.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarSerialization.ISerialTile);

        /** SerialTile gridIndex. */
        public gridIndex?: (Structure.IGridIndex|null);

        /** SerialTile playerIndex. */
        public playerIndex: number;

        /** SerialTile baseType. */
        public baseType: number;

        /** SerialTile objectType. */
        public objectType: number;

        /** SerialTile baseShapeId. */
        public baseShapeId: number;

        /** SerialTile objectShapeId. */
        public objectShapeId: number;

        /** SerialTile currentHp. */
        public currentHp: number;

        /** SerialTile currentBuildPoint. */
        public currentBuildPoint: number;

        /** SerialTile currentCapturePoint. */
        public currentCapturePoint: number;

        /**
         * Creates a new SerialTile instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SerialTile instance
         */
        public static create(properties?: WarSerialization.ISerialTile): WarSerialization.SerialTile;

        /**
         * Encodes the specified SerialTile message. Does not implicitly {@link WarSerialization.SerialTile.verify|verify} messages.
         * @param message SerialTile message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarSerialization.ISerialTile, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SerialTile message, length delimited. Does not implicitly {@link WarSerialization.SerialTile.verify|verify} messages.
         * @param message SerialTile message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarSerialization.ISerialTile, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SerialTile message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SerialTile
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarSerialization.SerialTile;

        /**
         * Decodes a SerialTile message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SerialTile
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarSerialization.SerialTile;

        /**
         * Verifies a SerialTile message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SerialTile message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SerialTile
         */
        public static fromObject(object: { [k: string]: any }): WarSerialization.SerialTile;

        /**
         * Creates a plain object from a SerialTile message. Also converts values to other types if specified.
         * @param message SerialTile
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarSerialization.SerialTile, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SerialTile to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SerialUnit. */
    interface ISerialUnit {

        /** SerialUnit gridIndex */
        gridIndex?: (Structure.IGridIndex|null);

        /** SerialUnit playerIndex */
        playerIndex?: (number|null);

        /** SerialUnit unitType */
        unitType?: (number|null);

        /** SerialUnit unitId */
        unitId?: (number|null);

        /** SerialUnit actionState */
        actionState?: (number|null);

        /** SerialUnit primaryWeaponCurrentAmmo */
        primaryWeaponCurrentAmmo?: (number|null);

        /** SerialUnit currentHp */
        currentHp?: (number|null);

        /** SerialUnit isCapturingTile */
        isCapturingTile?: (boolean|null);

        /** SerialUnit isDiving */
        isDiving?: (boolean|null);

        /** SerialUnit flareCurrentAmmo */
        flareCurrentAmmo?: (number|null);

        /** SerialUnit currentFuel */
        currentFuel?: (number|null);

        /** SerialUnit currentBuildMaterial */
        currentBuildMaterial?: (number|null);

        /** SerialUnit currentProduceMaterial */
        currentProduceMaterial?: (number|null);

        /** SerialUnit currentPromotion */
        currentPromotion?: (number|null);

        /** SerialUnit isBuildingTile */
        isBuildingTile?: (boolean|null);

        /** SerialUnit loaderUnitId */
        loaderUnitId?: (number|null);

        /** SerialUnit hasLoadedCo */
        hasLoadedCo?: (boolean|null);
    }

    /** Represents a SerialUnit. */
    class SerialUnit implements ISerialUnit {

        /**
         * Constructs a new SerialUnit.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarSerialization.ISerialUnit);

        /** SerialUnit gridIndex. */
        public gridIndex?: (Structure.IGridIndex|null);

        /** SerialUnit playerIndex. */
        public playerIndex: number;

        /** SerialUnit unitType. */
        public unitType: number;

        /** SerialUnit unitId. */
        public unitId: number;

        /** SerialUnit actionState. */
        public actionState: number;

        /** SerialUnit primaryWeaponCurrentAmmo. */
        public primaryWeaponCurrentAmmo: number;

        /** SerialUnit currentHp. */
        public currentHp: number;

        /** SerialUnit isCapturingTile. */
        public isCapturingTile: boolean;

        /** SerialUnit isDiving. */
        public isDiving: boolean;

        /** SerialUnit flareCurrentAmmo. */
        public flareCurrentAmmo: number;

        /** SerialUnit currentFuel. */
        public currentFuel: number;

        /** SerialUnit currentBuildMaterial. */
        public currentBuildMaterial: number;

        /** SerialUnit currentProduceMaterial. */
        public currentProduceMaterial: number;

        /** SerialUnit currentPromotion. */
        public currentPromotion: number;

        /** SerialUnit isBuildingTile. */
        public isBuildingTile: boolean;

        /** SerialUnit loaderUnitId. */
        public loaderUnitId: number;

        /** SerialUnit hasLoadedCo. */
        public hasLoadedCo: boolean;

        /**
         * Creates a new SerialUnit instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SerialUnit instance
         */
        public static create(properties?: WarSerialization.ISerialUnit): WarSerialization.SerialUnit;

        /**
         * Encodes the specified SerialUnit message. Does not implicitly {@link WarSerialization.SerialUnit.verify|verify} messages.
         * @param message SerialUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarSerialization.ISerialUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SerialUnit message, length delimited. Does not implicitly {@link WarSerialization.SerialUnit.verify|verify} messages.
         * @param message SerialUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarSerialization.ISerialUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SerialUnit message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SerialUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarSerialization.SerialUnit;

        /**
         * Decodes a SerialUnit message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SerialUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarSerialization.SerialUnit;

        /**
         * Verifies a SerialUnit message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SerialUnit message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SerialUnit
         */
        public static fromObject(object: { [k: string]: any }): WarSerialization.SerialUnit;

        /**
         * Creates a plain object from a SerialUnit message. Also converts values to other types if specified.
         * @param message SerialUnit
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarSerialization.SerialUnit, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SerialUnit to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SerialPlayer. */
    interface ISerialPlayer {

        /** SerialPlayer fund */
        fund?: (number|null);

        /** SerialPlayer hasVotedForDraw */
        hasVotedForDraw?: (boolean|null);

        /** SerialPlayer isAlive */
        isAlive?: (boolean|null);

        /** SerialPlayer playerIndex */
        playerIndex?: (number|null);

        /** SerialPlayer teamIndex */
        teamIndex?: (number|null);

        /** SerialPlayer userId */
        userId?: (number|null);

        /** SerialPlayer coId */
        coId?: (number|null);

        /** SerialPlayer coCurrentEnergy */
        coCurrentEnergy?: (number|null);

        /** SerialPlayer coUsingSkillType */
        coUsingSkillType?: (number|null);

        /** SerialPlayer coIsDestroyedInTurn */
        coIsDestroyedInTurn?: (boolean|null);

        /** SerialPlayer watchOngoingSrcUserIdList */
        watchOngoingSrcUserIdList?: (number[]|null);

        /** SerialPlayer watchRequestSrcUserIdList */
        watchRequestSrcUserIdList?: (number[]|null);

        /** SerialPlayer restTimeToBoot */
        restTimeToBoot?: (number|null);

        /** SerialPlayer unitAndTileSkinId */
        unitAndTileSkinId?: (number|null);
    }

    /** Represents a SerialPlayer. */
    class SerialPlayer implements ISerialPlayer {

        /**
         * Constructs a new SerialPlayer.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarSerialization.ISerialPlayer);

        /** SerialPlayer fund. */
        public fund: number;

        /** SerialPlayer hasVotedForDraw. */
        public hasVotedForDraw: boolean;

        /** SerialPlayer isAlive. */
        public isAlive: boolean;

        /** SerialPlayer playerIndex. */
        public playerIndex: number;

        /** SerialPlayer teamIndex. */
        public teamIndex: number;

        /** SerialPlayer userId. */
        public userId: number;

        /** SerialPlayer coId. */
        public coId: number;

        /** SerialPlayer coCurrentEnergy. */
        public coCurrentEnergy: number;

        /** SerialPlayer coUsingSkillType. */
        public coUsingSkillType: number;

        /** SerialPlayer coIsDestroyedInTurn. */
        public coIsDestroyedInTurn: boolean;

        /** SerialPlayer watchOngoingSrcUserIdList. */
        public watchOngoingSrcUserIdList: number[];

        /** SerialPlayer watchRequestSrcUserIdList. */
        public watchRequestSrcUserIdList: number[];

        /** SerialPlayer restTimeToBoot. */
        public restTimeToBoot: number;

        /** SerialPlayer unitAndTileSkinId. */
        public unitAndTileSkinId: number;

        /**
         * Creates a new SerialPlayer instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SerialPlayer instance
         */
        public static create(properties?: WarSerialization.ISerialPlayer): WarSerialization.SerialPlayer;

        /**
         * Encodes the specified SerialPlayer message. Does not implicitly {@link WarSerialization.SerialPlayer.verify|verify} messages.
         * @param message SerialPlayer message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarSerialization.ISerialPlayer, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SerialPlayer message, length delimited. Does not implicitly {@link WarSerialization.SerialPlayer.verify|verify} messages.
         * @param message SerialPlayer message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarSerialization.ISerialPlayer, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SerialPlayer message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SerialPlayer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarSerialization.SerialPlayer;

        /**
         * Decodes a SerialPlayer message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SerialPlayer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarSerialization.SerialPlayer;

        /**
         * Verifies a SerialPlayer message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SerialPlayer message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SerialPlayer
         */
        public static fromObject(object: { [k: string]: any }): WarSerialization.SerialPlayer;

        /**
         * Creates a plain object from a SerialPlayer message. Also converts values to other types if specified.
         * @param message SerialPlayer
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarSerialization.SerialPlayer, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SerialPlayer to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SerialPlayerManager. */
    interface ISerialPlayerManager {

        /** SerialPlayerManager players */
        players?: (WarSerialization.ISerialPlayer[]|null);
    }

    /** Represents a SerialPlayerManager. */
    class SerialPlayerManager implements ISerialPlayerManager {

        /**
         * Constructs a new SerialPlayerManager.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarSerialization.ISerialPlayerManager);

        /** SerialPlayerManager players. */
        public players: WarSerialization.ISerialPlayer[];

        /**
         * Creates a new SerialPlayerManager instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SerialPlayerManager instance
         */
        public static create(properties?: WarSerialization.ISerialPlayerManager): WarSerialization.SerialPlayerManager;

        /**
         * Encodes the specified SerialPlayerManager message. Does not implicitly {@link WarSerialization.SerialPlayerManager.verify|verify} messages.
         * @param message SerialPlayerManager message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarSerialization.ISerialPlayerManager, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SerialPlayerManager message, length delimited. Does not implicitly {@link WarSerialization.SerialPlayerManager.verify|verify} messages.
         * @param message SerialPlayerManager message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarSerialization.ISerialPlayerManager, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SerialPlayerManager message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SerialPlayerManager
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarSerialization.SerialPlayerManager;

        /**
         * Decodes a SerialPlayerManager message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SerialPlayerManager
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarSerialization.SerialPlayerManager;

        /**
         * Verifies a SerialPlayerManager message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SerialPlayerManager message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SerialPlayerManager
         */
        public static fromObject(object: { [k: string]: any }): WarSerialization.SerialPlayerManager;

        /**
         * Creates a plain object from a SerialPlayerManager message. Also converts values to other types if specified.
         * @param message SerialPlayerManager
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarSerialization.SerialPlayerManager, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SerialPlayerManager to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SerialTurnManager. */
    interface ISerialTurnManager {

        /** SerialTurnManager turnIndex */
        turnIndex?: (number|null);

        /** SerialTurnManager playerIndex */
        playerIndex?: (number|null);

        /** SerialTurnManager turnPhaseCode */
        turnPhaseCode?: (number|null);

        /** SerialTurnManager enterTurnTime */
        enterTurnTime?: (number|null);
    }

    /** Represents a SerialTurnManager. */
    class SerialTurnManager implements ISerialTurnManager {

        /**
         * Constructs a new SerialTurnManager.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarSerialization.ISerialTurnManager);

        /** SerialTurnManager turnIndex. */
        public turnIndex: number;

        /** SerialTurnManager playerIndex. */
        public playerIndex: number;

        /** SerialTurnManager turnPhaseCode. */
        public turnPhaseCode: number;

        /** SerialTurnManager enterTurnTime. */
        public enterTurnTime: number;

        /**
         * Creates a new SerialTurnManager instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SerialTurnManager instance
         */
        public static create(properties?: WarSerialization.ISerialTurnManager): WarSerialization.SerialTurnManager;

        /**
         * Encodes the specified SerialTurnManager message. Does not implicitly {@link WarSerialization.SerialTurnManager.verify|verify} messages.
         * @param message SerialTurnManager message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarSerialization.ISerialTurnManager, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SerialTurnManager message, length delimited. Does not implicitly {@link WarSerialization.SerialTurnManager.verify|verify} messages.
         * @param message SerialTurnManager message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarSerialization.ISerialTurnManager, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SerialTurnManager message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SerialTurnManager
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarSerialization.SerialTurnManager;

        /**
         * Decodes a SerialTurnManager message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SerialTurnManager
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarSerialization.SerialTurnManager;

        /**
         * Verifies a SerialTurnManager message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SerialTurnManager message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SerialTurnManager
         */
        public static fromObject(object: { [k: string]: any }): WarSerialization.SerialTurnManager;

        /**
         * Creates a plain object from a SerialTurnManager message. Also converts values to other types if specified.
         * @param message SerialTurnManager
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarSerialization.SerialTurnManager, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SerialTurnManager to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SerialTileMap. */
    interface ISerialTileMap {

        /** SerialTileMap tiles */
        tiles?: (WarSerialization.ISerialTile[]|null);
    }

    /** Represents a SerialTileMap. */
    class SerialTileMap implements ISerialTileMap {

        /**
         * Constructs a new SerialTileMap.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarSerialization.ISerialTileMap);

        /** SerialTileMap tiles. */
        public tiles: WarSerialization.ISerialTile[];

        /**
         * Creates a new SerialTileMap instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SerialTileMap instance
         */
        public static create(properties?: WarSerialization.ISerialTileMap): WarSerialization.SerialTileMap;

        /**
         * Encodes the specified SerialTileMap message. Does not implicitly {@link WarSerialization.SerialTileMap.verify|verify} messages.
         * @param message SerialTileMap message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarSerialization.ISerialTileMap, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SerialTileMap message, length delimited. Does not implicitly {@link WarSerialization.SerialTileMap.verify|verify} messages.
         * @param message SerialTileMap message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarSerialization.ISerialTileMap, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SerialTileMap message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SerialTileMap
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarSerialization.SerialTileMap;

        /**
         * Decodes a SerialTileMap message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SerialTileMap
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarSerialization.SerialTileMap;

        /**
         * Verifies a SerialTileMap message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SerialTileMap message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SerialTileMap
         */
        public static fromObject(object: { [k: string]: any }): WarSerialization.SerialTileMap;

        /**
         * Creates a plain object from a SerialTileMap message. Also converts values to other types if specified.
         * @param message SerialTileMap
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarSerialization.SerialTileMap, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SerialTileMap to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SerialUnitMap. */
    interface ISerialUnitMap {

        /** SerialUnitMap nextUnitId */
        nextUnitId?: (number|null);

        /** SerialUnitMap units */
        units?: (WarSerialization.ISerialUnit[]|null);
    }

    /** Represents a SerialUnitMap. */
    class SerialUnitMap implements ISerialUnitMap {

        /**
         * Constructs a new SerialUnitMap.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarSerialization.ISerialUnitMap);

        /** SerialUnitMap nextUnitId. */
        public nextUnitId: number;

        /** SerialUnitMap units. */
        public units: WarSerialization.ISerialUnit[];

        /**
         * Creates a new SerialUnitMap instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SerialUnitMap instance
         */
        public static create(properties?: WarSerialization.ISerialUnitMap): WarSerialization.SerialUnitMap;

        /**
         * Encodes the specified SerialUnitMap message. Does not implicitly {@link WarSerialization.SerialUnitMap.verify|verify} messages.
         * @param message SerialUnitMap message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarSerialization.ISerialUnitMap, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SerialUnitMap message, length delimited. Does not implicitly {@link WarSerialization.SerialUnitMap.verify|verify} messages.
         * @param message SerialUnitMap message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarSerialization.ISerialUnitMap, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SerialUnitMap message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SerialUnitMap
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarSerialization.SerialUnitMap;

        /**
         * Decodes a SerialUnitMap message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SerialUnitMap
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarSerialization.SerialUnitMap;

        /**
         * Verifies a SerialUnitMap message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SerialUnitMap message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SerialUnitMap
         */
        public static fromObject(object: { [k: string]: any }): WarSerialization.SerialUnitMap;

        /**
         * Creates a plain object from a SerialUnitMap message. Also converts values to other types if specified.
         * @param message SerialUnitMap
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarSerialization.SerialUnitMap, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SerialUnitMap to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SerialFogMap. */
    interface ISerialFogMap {

        /** SerialFogMap forceFogCode */
        forceFogCode?: (number|null);

        /** SerialFogMap forceExpirePlayerIndex */
        forceExpirePlayerIndex?: (number|null);

        /** SerialFogMap forceExpireTurnIndex */
        forceExpireTurnIndex?: (number|null);

        /** SerialFogMap mapsFromPath */
        mapsFromPath?: (WarSerialization.IDataForFogMapFromPath[]|null);
    }

    /** Represents a SerialFogMap. */
    class SerialFogMap implements ISerialFogMap {

        /**
         * Constructs a new SerialFogMap.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarSerialization.ISerialFogMap);

        /** SerialFogMap forceFogCode. */
        public forceFogCode: number;

        /** SerialFogMap forceExpirePlayerIndex. */
        public forceExpirePlayerIndex: number;

        /** SerialFogMap forceExpireTurnIndex. */
        public forceExpireTurnIndex: number;

        /** SerialFogMap mapsFromPath. */
        public mapsFromPath: WarSerialization.IDataForFogMapFromPath[];

        /**
         * Creates a new SerialFogMap instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SerialFogMap instance
         */
        public static create(properties?: WarSerialization.ISerialFogMap): WarSerialization.SerialFogMap;

        /**
         * Encodes the specified SerialFogMap message. Does not implicitly {@link WarSerialization.SerialFogMap.verify|verify} messages.
         * @param message SerialFogMap message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarSerialization.ISerialFogMap, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SerialFogMap message, length delimited. Does not implicitly {@link WarSerialization.SerialFogMap.verify|verify} messages.
         * @param message SerialFogMap message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarSerialization.ISerialFogMap, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SerialFogMap message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SerialFogMap
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarSerialization.SerialFogMap;

        /**
         * Decodes a SerialFogMap message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SerialFogMap
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarSerialization.SerialFogMap;

        /**
         * Verifies a SerialFogMap message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SerialFogMap message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SerialFogMap
         */
        public static fromObject(object: { [k: string]: any }): WarSerialization.SerialFogMap;

        /**
         * Creates a plain object from a SerialFogMap message. Also converts values to other types if specified.
         * @param message SerialFogMap
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarSerialization.SerialFogMap, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SerialFogMap to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SerialField. */
    interface ISerialField {

        /** SerialField fogMap */
        fogMap?: (WarSerialization.ISerialFogMap|null);

        /** SerialField tileMap */
        tileMap?: (WarSerialization.ISerialTileMap|null);

        /** SerialField unitMap */
        unitMap?: (WarSerialization.ISerialUnitMap|null);
    }

    /** Represents a SerialField. */
    class SerialField implements ISerialField {

        /**
         * Constructs a new SerialField.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarSerialization.ISerialField);

        /** SerialField fogMap. */
        public fogMap?: (WarSerialization.ISerialFogMap|null);

        /** SerialField tileMap. */
        public tileMap?: (WarSerialization.ISerialTileMap|null);

        /** SerialField unitMap. */
        public unitMap?: (WarSerialization.ISerialUnitMap|null);

        /**
         * Creates a new SerialField instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SerialField instance
         */
        public static create(properties?: WarSerialization.ISerialField): WarSerialization.SerialField;

        /**
         * Encodes the specified SerialField message. Does not implicitly {@link WarSerialization.SerialField.verify|verify} messages.
         * @param message SerialField message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarSerialization.ISerialField, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SerialField message, length delimited. Does not implicitly {@link WarSerialization.SerialField.verify|verify} messages.
         * @param message SerialField message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarSerialization.ISerialField, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SerialField message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SerialField
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarSerialization.SerialField;

        /**
         * Decodes a SerialField message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SerialField
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarSerialization.SerialField;

        /**
         * Verifies a SerialField message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SerialField message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SerialField
         */
        public static fromObject(object: { [k: string]: any }): WarSerialization.SerialField;

        /**
         * Creates a plain object from a SerialField message. Also converts values to other types if specified.
         * @param message SerialField
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarSerialization.SerialField, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SerialField to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SerialWar. */
    interface ISerialWar {

        /** SerialWar settingsForCommon */
        settingsForCommon?: (WarSettings.ISettingsForCommon|null);

        /** SerialWar settingsForMcw */
        settingsForMcw?: (WarSettings.ISettingsForMcw|null);

        /** SerialWar settingsForScw */
        settingsForScw?: (WarSettings.ISettingsForScw|null);

        /** SerialWar settingsForRmw */
        settingsForRmw?: (WarSettings.ISettingsForRmw|null);

        /** SerialWar warId */
        warId?: (number|null);

        /** SerialWar seedRandomInitialState */
        seedRandomInitialState?: (Structure.ISeedRandomState|null);

        /** SerialWar seedRandomCurrentState */
        seedRandomCurrentState?: (Structure.ISeedRandomState|null);

        /** SerialWar executedActions */
        executedActions?: (WarAction.IActionContainer[]|null);

        /** SerialWar executedActionsCount */
        executedActionsCount?: (number|null);

        /** SerialWar remainingVotesForDraw */
        remainingVotesForDraw?: (number|null);

        /** SerialWar playerManager */
        playerManager?: (WarSerialization.ISerialPlayerManager|null);

        /** SerialWar turnManager */
        turnManager?: (WarSerialization.ISerialTurnManager|null);

        /** SerialWar field */
        field?: (WarSerialization.ISerialField|null);
    }

    /** Represents a SerialWar. */
    class SerialWar implements ISerialWar {

        /**
         * Constructs a new SerialWar.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarSerialization.ISerialWar);

        /** SerialWar settingsForCommon. */
        public settingsForCommon?: (WarSettings.ISettingsForCommon|null);

        /** SerialWar settingsForMcw. */
        public settingsForMcw?: (WarSettings.ISettingsForMcw|null);

        /** SerialWar settingsForScw. */
        public settingsForScw?: (WarSettings.ISettingsForScw|null);

        /** SerialWar settingsForRmw. */
        public settingsForRmw?: (WarSettings.ISettingsForRmw|null);

        /** SerialWar warId. */
        public warId: number;

        /** SerialWar seedRandomInitialState. */
        public seedRandomInitialState?: (Structure.ISeedRandomState|null);

        /** SerialWar seedRandomCurrentState. */
        public seedRandomCurrentState?: (Structure.ISeedRandomState|null);

        /** SerialWar executedActions. */
        public executedActions: WarAction.IActionContainer[];

        /** SerialWar executedActionsCount. */
        public executedActionsCount: number;

        /** SerialWar remainingVotesForDraw. */
        public remainingVotesForDraw: number;

        /** SerialWar playerManager. */
        public playerManager?: (WarSerialization.ISerialPlayerManager|null);

        /** SerialWar turnManager. */
        public turnManager?: (WarSerialization.ISerialTurnManager|null);

        /** SerialWar field. */
        public field?: (WarSerialization.ISerialField|null);

        /**
         * Creates a new SerialWar instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SerialWar instance
         */
        public static create(properties?: WarSerialization.ISerialWar): WarSerialization.SerialWar;

        /**
         * Encodes the specified SerialWar message. Does not implicitly {@link WarSerialization.SerialWar.verify|verify} messages.
         * @param message SerialWar message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarSerialization.ISerialWar, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SerialWar message, length delimited. Does not implicitly {@link WarSerialization.SerialWar.verify|verify} messages.
         * @param message SerialWar message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarSerialization.ISerialWar, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SerialWar message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SerialWar
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarSerialization.SerialWar;

        /**
         * Decodes a SerialWar message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SerialWar
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarSerialization.SerialWar;

        /**
         * Verifies a SerialWar message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SerialWar message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SerialWar
         */
        public static fromObject(object: { [k: string]: any }): WarSerialization.SerialWar;

        /**
         * Creates a plain object from a SerialWar message. Also converts values to other types if specified.
         * @param message SerialWar
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarSerialization.SerialWar, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SerialWar to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Properties of a WarAction. */
export declare interface IWarAction {
}

/** Represents a WarAction. */
export declare class WarAction implements IWarAction {

    /**
     * Constructs a new WarAction.
     * @param [properties] Properties to set
     */
    constructor(properties?: IWarAction);

    /**
     * Creates a new WarAction instance using the specified properties.
     * @param [properties] Properties to set
     * @returns WarAction instance
     */
    public static create(properties?: IWarAction): WarAction;

    /**
     * Encodes the specified WarAction message. Does not implicitly {@link WarAction.verify|verify} messages.
     * @param message WarAction message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IWarAction, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Encodes the specified WarAction message, length delimited. Does not implicitly {@link WarAction.verify|verify} messages.
     * @param message WarAction message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IWarAction, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Decodes a WarAction message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns WarAction
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction;

    /**
     * Decodes a WarAction message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns WarAction
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction;

    /**
     * Verifies a WarAction message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a WarAction message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns WarAction
     */
    public static fromObject(object: { [k: string]: any }): WarAction;

    /**
     * Creates a plain object from a WarAction message. Also converts values to other types if specified.
     * @param message WarAction
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: WarAction, options?: protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this WarAction to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export declare namespace WarAction {

    /** Properties of an ActionPlayerBeginTurn. */
    interface IActionPlayerBeginTurn {

        /** ActionPlayerBeginTurn extraData */
        extraData?: (WarAction.ActionPlayerBeginTurn.IExtraDataForPlayerBeginTurn|null);
    }

    /** Represents an ActionPlayerBeginTurn. */
    class ActionPlayerBeginTurn implements IActionPlayerBeginTurn {

        /**
         * Constructs a new ActionPlayerBeginTurn.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarAction.IActionPlayerBeginTurn);

        /** ActionPlayerBeginTurn extraData. */
        public extraData?: (WarAction.ActionPlayerBeginTurn.IExtraDataForPlayerBeginTurn|null);

        /**
         * Creates a new ActionPlayerBeginTurn instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActionPlayerBeginTurn instance
         */
        public static create(properties?: WarAction.IActionPlayerBeginTurn): WarAction.ActionPlayerBeginTurn;

        /**
         * Encodes the specified ActionPlayerBeginTurn message. Does not implicitly {@link WarAction.ActionPlayerBeginTurn.verify|verify} messages.
         * @param message ActionPlayerBeginTurn message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarAction.IActionPlayerBeginTurn, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified ActionPlayerBeginTurn message, length delimited. Does not implicitly {@link WarAction.ActionPlayerBeginTurn.verify|verify} messages.
         * @param message ActionPlayerBeginTurn message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarAction.IActionPlayerBeginTurn, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an ActionPlayerBeginTurn message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActionPlayerBeginTurn
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.ActionPlayerBeginTurn;

        /**
         * Decodes an ActionPlayerBeginTurn message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActionPlayerBeginTurn
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.ActionPlayerBeginTurn;

        /**
         * Verifies an ActionPlayerBeginTurn message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActionPlayerBeginTurn message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActionPlayerBeginTurn
         */
        public static fromObject(object: { [k: string]: any }): WarAction.ActionPlayerBeginTurn;

        /**
         * Creates a plain object from an ActionPlayerBeginTurn message. Also converts values to other types if specified.
         * @param message ActionPlayerBeginTurn
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarAction.ActionPlayerBeginTurn, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActionPlayerBeginTurn to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace ActionPlayerBeginTurn {

        /** Properties of an ExtraDataForPlayerBeginTurn. */
        interface IExtraDataForPlayerBeginTurn {

            /** ExtraDataForPlayerBeginTurn remainingFund */
            remainingFund?: (number|null);

            /** ExtraDataForPlayerBeginTurn isDefeated */
            isDefeated?: (boolean|null);

            /** ExtraDataForPlayerBeginTurn recoveryDataByTile */
            recoveryDataByTile?: (Structure.IDataForModifyUnit[]|null);

            /** ExtraDataForPlayerBeginTurn recoveryDataByUnit */
            recoveryDataByUnit?: (Structure.IDataForModifyUnit[]|null);

            /** ExtraDataForPlayerBeginTurn recoveryDataByCo */
            recoveryDataByCo?: (Structure.IDataForModifyUnit[]|null);
        }

        /** Represents an ExtraDataForPlayerBeginTurn. */
        class ExtraDataForPlayerBeginTurn implements IExtraDataForPlayerBeginTurn {

            /**
             * Constructs a new ExtraDataForPlayerBeginTurn.
             * @param [properties] Properties to set
             */
            constructor(properties?: WarAction.ActionPlayerBeginTurn.IExtraDataForPlayerBeginTurn);

            /** ExtraDataForPlayerBeginTurn remainingFund. */
            public remainingFund: number;

            /** ExtraDataForPlayerBeginTurn isDefeated. */
            public isDefeated: boolean;

            /** ExtraDataForPlayerBeginTurn recoveryDataByTile. */
            public recoveryDataByTile: Structure.IDataForModifyUnit[];

            /** ExtraDataForPlayerBeginTurn recoveryDataByUnit. */
            public recoveryDataByUnit: Structure.IDataForModifyUnit[];

            /** ExtraDataForPlayerBeginTurn recoveryDataByCo. */
            public recoveryDataByCo: Structure.IDataForModifyUnit[];

            /**
             * Creates a new ExtraDataForPlayerBeginTurn instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ExtraDataForPlayerBeginTurn instance
             */
            public static create(properties?: WarAction.ActionPlayerBeginTurn.IExtraDataForPlayerBeginTurn): WarAction.ActionPlayerBeginTurn.ExtraDataForPlayerBeginTurn;

            /**
             * Encodes the specified ExtraDataForPlayerBeginTurn message. Does not implicitly {@link WarAction.ActionPlayerBeginTurn.ExtraDataForPlayerBeginTurn.verify|verify} messages.
             * @param message ExtraDataForPlayerBeginTurn message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: WarAction.ActionPlayerBeginTurn.IExtraDataForPlayerBeginTurn, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified ExtraDataForPlayerBeginTurn message, length delimited. Does not implicitly {@link WarAction.ActionPlayerBeginTurn.ExtraDataForPlayerBeginTurn.verify|verify} messages.
             * @param message ExtraDataForPlayerBeginTurn message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: WarAction.ActionPlayerBeginTurn.IExtraDataForPlayerBeginTurn, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an ExtraDataForPlayerBeginTurn message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ExtraDataForPlayerBeginTurn
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.ActionPlayerBeginTurn.ExtraDataForPlayerBeginTurn;

            /**
             * Decodes an ExtraDataForPlayerBeginTurn message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ExtraDataForPlayerBeginTurn
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.ActionPlayerBeginTurn.ExtraDataForPlayerBeginTurn;

            /**
             * Verifies an ExtraDataForPlayerBeginTurn message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ExtraDataForPlayerBeginTurn message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ExtraDataForPlayerBeginTurn
             */
            public static fromObject(object: { [k: string]: any }): WarAction.ActionPlayerBeginTurn.ExtraDataForPlayerBeginTurn;

            /**
             * Creates a plain object from an ExtraDataForPlayerBeginTurn message. Also converts values to other types if specified.
             * @param message ExtraDataForPlayerBeginTurn
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: WarAction.ActionPlayerBeginTurn.ExtraDataForPlayerBeginTurn, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ExtraDataForPlayerBeginTurn to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of an ActionPlayerEndTurn. */
    interface IActionPlayerEndTurn {

        /** ActionPlayerEndTurn extraData */
        extraData?: (WarAction.ActionPlayerEndTurn.IExtraDataForPlayerEndTurn|null);
    }

    /** Represents an ActionPlayerEndTurn. */
    class ActionPlayerEndTurn implements IActionPlayerEndTurn {

        /**
         * Constructs a new ActionPlayerEndTurn.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarAction.IActionPlayerEndTurn);

        /** ActionPlayerEndTurn extraData. */
        public extraData?: (WarAction.ActionPlayerEndTurn.IExtraDataForPlayerEndTurn|null);

        /**
         * Creates a new ActionPlayerEndTurn instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActionPlayerEndTurn instance
         */
        public static create(properties?: WarAction.IActionPlayerEndTurn): WarAction.ActionPlayerEndTurn;

        /**
         * Encodes the specified ActionPlayerEndTurn message. Does not implicitly {@link WarAction.ActionPlayerEndTurn.verify|verify} messages.
         * @param message ActionPlayerEndTurn message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarAction.IActionPlayerEndTurn, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified ActionPlayerEndTurn message, length delimited. Does not implicitly {@link WarAction.ActionPlayerEndTurn.verify|verify} messages.
         * @param message ActionPlayerEndTurn message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarAction.IActionPlayerEndTurn, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an ActionPlayerEndTurn message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActionPlayerEndTurn
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.ActionPlayerEndTurn;

        /**
         * Decodes an ActionPlayerEndTurn message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActionPlayerEndTurn
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.ActionPlayerEndTurn;

        /**
         * Verifies an ActionPlayerEndTurn message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActionPlayerEndTurn message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActionPlayerEndTurn
         */
        public static fromObject(object: { [k: string]: any }): WarAction.ActionPlayerEndTurn;

        /**
         * Creates a plain object from an ActionPlayerEndTurn message. Also converts values to other types if specified.
         * @param message ActionPlayerEndTurn
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarAction.ActionPlayerEndTurn, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActionPlayerEndTurn to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace ActionPlayerEndTurn {

        /** Properties of an ExtraDataForPlayerEndTurn. */
        interface IExtraDataForPlayerEndTurn {

            /** ExtraDataForPlayerEndTurn restTimeToBootForCurrentPlayer */
            restTimeToBootForCurrentPlayer?: (number|null);
        }

        /** Represents an ExtraDataForPlayerEndTurn. */
        class ExtraDataForPlayerEndTurn implements IExtraDataForPlayerEndTurn {

            /**
             * Constructs a new ExtraDataForPlayerEndTurn.
             * @param [properties] Properties to set
             */
            constructor(properties?: WarAction.ActionPlayerEndTurn.IExtraDataForPlayerEndTurn);

            /** ExtraDataForPlayerEndTurn restTimeToBootForCurrentPlayer. */
            public restTimeToBootForCurrentPlayer: number;

            /**
             * Creates a new ExtraDataForPlayerEndTurn instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ExtraDataForPlayerEndTurn instance
             */
            public static create(properties?: WarAction.ActionPlayerEndTurn.IExtraDataForPlayerEndTurn): WarAction.ActionPlayerEndTurn.ExtraDataForPlayerEndTurn;

            /**
             * Encodes the specified ExtraDataForPlayerEndTurn message. Does not implicitly {@link WarAction.ActionPlayerEndTurn.ExtraDataForPlayerEndTurn.verify|verify} messages.
             * @param message ExtraDataForPlayerEndTurn message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: WarAction.ActionPlayerEndTurn.IExtraDataForPlayerEndTurn, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified ExtraDataForPlayerEndTurn message, length delimited. Does not implicitly {@link WarAction.ActionPlayerEndTurn.ExtraDataForPlayerEndTurn.verify|verify} messages.
             * @param message ExtraDataForPlayerEndTurn message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: WarAction.ActionPlayerEndTurn.IExtraDataForPlayerEndTurn, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an ExtraDataForPlayerEndTurn message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ExtraDataForPlayerEndTurn
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.ActionPlayerEndTurn.ExtraDataForPlayerEndTurn;

            /**
             * Decodes an ExtraDataForPlayerEndTurn message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ExtraDataForPlayerEndTurn
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.ActionPlayerEndTurn.ExtraDataForPlayerEndTurn;

            /**
             * Verifies an ExtraDataForPlayerEndTurn message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ExtraDataForPlayerEndTurn message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ExtraDataForPlayerEndTurn
             */
            public static fromObject(object: { [k: string]: any }): WarAction.ActionPlayerEndTurn.ExtraDataForPlayerEndTurn;

            /**
             * Creates a plain object from an ExtraDataForPlayerEndTurn message. Also converts values to other types if specified.
             * @param message ExtraDataForPlayerEndTurn
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: WarAction.ActionPlayerEndTurn.ExtraDataForPlayerEndTurn, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ExtraDataForPlayerEndTurn to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of an ActionPlayerSurrender. */
    interface IActionPlayerSurrender {

        /** ActionPlayerSurrender isBoot */
        isBoot?: (boolean|null);
    }

    /** Represents an ActionPlayerSurrender. */
    class ActionPlayerSurrender implements IActionPlayerSurrender {

        /**
         * Constructs a new ActionPlayerSurrender.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarAction.IActionPlayerSurrender);

        /** ActionPlayerSurrender isBoot. */
        public isBoot: boolean;

        /**
         * Creates a new ActionPlayerSurrender instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActionPlayerSurrender instance
         */
        public static create(properties?: WarAction.IActionPlayerSurrender): WarAction.ActionPlayerSurrender;

        /**
         * Encodes the specified ActionPlayerSurrender message. Does not implicitly {@link WarAction.ActionPlayerSurrender.verify|verify} messages.
         * @param message ActionPlayerSurrender message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarAction.IActionPlayerSurrender, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified ActionPlayerSurrender message, length delimited. Does not implicitly {@link WarAction.ActionPlayerSurrender.verify|verify} messages.
         * @param message ActionPlayerSurrender message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarAction.IActionPlayerSurrender, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an ActionPlayerSurrender message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActionPlayerSurrender
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.ActionPlayerSurrender;

        /**
         * Decodes an ActionPlayerSurrender message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActionPlayerSurrender
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.ActionPlayerSurrender;

        /**
         * Verifies an ActionPlayerSurrender message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActionPlayerSurrender message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActionPlayerSurrender
         */
        public static fromObject(object: { [k: string]: any }): WarAction.ActionPlayerSurrender;

        /**
         * Creates a plain object from an ActionPlayerSurrender message. Also converts values to other types if specified.
         * @param message ActionPlayerSurrender
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarAction.ActionPlayerSurrender, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActionPlayerSurrender to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActionPlayerProduceUnit. */
    interface IActionPlayerProduceUnit {

        /** ActionPlayerProduceUnit gridIndex */
        gridIndex?: (Structure.IGridIndex|null);

        /** ActionPlayerProduceUnit unitType */
        unitType?: (number|null);

        /** ActionPlayerProduceUnit unitHp */
        unitHp?: (number|null);

        /** ActionPlayerProduceUnit extraData */
        extraData?: (WarAction.ActionPlayerProduceUnit.IExtraDataForPlayerProduceUnit|null);
    }

    /** Represents an ActionPlayerProduceUnit. */
    class ActionPlayerProduceUnit implements IActionPlayerProduceUnit {

        /**
         * Constructs a new ActionPlayerProduceUnit.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarAction.IActionPlayerProduceUnit);

        /** ActionPlayerProduceUnit gridIndex. */
        public gridIndex?: (Structure.IGridIndex|null);

        /** ActionPlayerProduceUnit unitType. */
        public unitType: number;

        /** ActionPlayerProduceUnit unitHp. */
        public unitHp: number;

        /** ActionPlayerProduceUnit extraData. */
        public extraData?: (WarAction.ActionPlayerProduceUnit.IExtraDataForPlayerProduceUnit|null);

        /**
         * Creates a new ActionPlayerProduceUnit instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActionPlayerProduceUnit instance
         */
        public static create(properties?: WarAction.IActionPlayerProduceUnit): WarAction.ActionPlayerProduceUnit;

        /**
         * Encodes the specified ActionPlayerProduceUnit message. Does not implicitly {@link WarAction.ActionPlayerProduceUnit.verify|verify} messages.
         * @param message ActionPlayerProduceUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarAction.IActionPlayerProduceUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified ActionPlayerProduceUnit message, length delimited. Does not implicitly {@link WarAction.ActionPlayerProduceUnit.verify|verify} messages.
         * @param message ActionPlayerProduceUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarAction.IActionPlayerProduceUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an ActionPlayerProduceUnit message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActionPlayerProduceUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.ActionPlayerProduceUnit;

        /**
         * Decodes an ActionPlayerProduceUnit message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActionPlayerProduceUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.ActionPlayerProduceUnit;

        /**
         * Verifies an ActionPlayerProduceUnit message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActionPlayerProduceUnit message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActionPlayerProduceUnit
         */
        public static fromObject(object: { [k: string]: any }): WarAction.ActionPlayerProduceUnit;

        /**
         * Creates a plain object from an ActionPlayerProduceUnit message. Also converts values to other types if specified.
         * @param message ActionPlayerProduceUnit
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarAction.ActionPlayerProduceUnit, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActionPlayerProduceUnit to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace ActionPlayerProduceUnit {

        /** Properties of an ExtraDataForPlayerProduceUnit. */
        interface IExtraDataForPlayerProduceUnit {

            /** ExtraDataForPlayerProduceUnit discoveredUnits */
            discoveredUnits?: (WarSerialization.ISerialUnit[]|null);

            /** ExtraDataForPlayerProduceUnit discoveredTiles */
            discoveredTiles?: (WarSerialization.ISerialTile[]|null);

            /** ExtraDataForPlayerProduceUnit cost */
            cost?: (number|null);

            /** ExtraDataForPlayerProduceUnit unitData */
            unitData?: (WarSerialization.ISerialUnit|null);
        }

        /** Represents an ExtraDataForPlayerProduceUnit. */
        class ExtraDataForPlayerProduceUnit implements IExtraDataForPlayerProduceUnit {

            /**
             * Constructs a new ExtraDataForPlayerProduceUnit.
             * @param [properties] Properties to set
             */
            constructor(properties?: WarAction.ActionPlayerProduceUnit.IExtraDataForPlayerProduceUnit);

            /** ExtraDataForPlayerProduceUnit discoveredUnits. */
            public discoveredUnits: WarSerialization.ISerialUnit[];

            /** ExtraDataForPlayerProduceUnit discoveredTiles. */
            public discoveredTiles: WarSerialization.ISerialTile[];

            /** ExtraDataForPlayerProduceUnit cost. */
            public cost: number;

            /** ExtraDataForPlayerProduceUnit unitData. */
            public unitData?: (WarSerialization.ISerialUnit|null);

            /**
             * Creates a new ExtraDataForPlayerProduceUnit instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ExtraDataForPlayerProduceUnit instance
             */
            public static create(properties?: WarAction.ActionPlayerProduceUnit.IExtraDataForPlayerProduceUnit): WarAction.ActionPlayerProduceUnit.ExtraDataForPlayerProduceUnit;

            /**
             * Encodes the specified ExtraDataForPlayerProduceUnit message. Does not implicitly {@link WarAction.ActionPlayerProduceUnit.ExtraDataForPlayerProduceUnit.verify|verify} messages.
             * @param message ExtraDataForPlayerProduceUnit message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: WarAction.ActionPlayerProduceUnit.IExtraDataForPlayerProduceUnit, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified ExtraDataForPlayerProduceUnit message, length delimited. Does not implicitly {@link WarAction.ActionPlayerProduceUnit.ExtraDataForPlayerProduceUnit.verify|verify} messages.
             * @param message ExtraDataForPlayerProduceUnit message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: WarAction.ActionPlayerProduceUnit.IExtraDataForPlayerProduceUnit, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an ExtraDataForPlayerProduceUnit message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ExtraDataForPlayerProduceUnit
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.ActionPlayerProduceUnit.ExtraDataForPlayerProduceUnit;

            /**
             * Decodes an ExtraDataForPlayerProduceUnit message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ExtraDataForPlayerProduceUnit
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.ActionPlayerProduceUnit.ExtraDataForPlayerProduceUnit;

            /**
             * Verifies an ExtraDataForPlayerProduceUnit message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ExtraDataForPlayerProduceUnit message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ExtraDataForPlayerProduceUnit
             */
            public static fromObject(object: { [k: string]: any }): WarAction.ActionPlayerProduceUnit.ExtraDataForPlayerProduceUnit;

            /**
             * Creates a plain object from an ExtraDataForPlayerProduceUnit message. Also converts values to other types if specified.
             * @param message ExtraDataForPlayerProduceUnit
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: WarAction.ActionPlayerProduceUnit.ExtraDataForPlayerProduceUnit, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ExtraDataForPlayerProduceUnit to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of an ActionPlayerDeleteUnit. */
    interface IActionPlayerDeleteUnit {

        /** ActionPlayerDeleteUnit gridIndex */
        gridIndex?: (Structure.IGridIndex|null);
    }

    /** Represents an ActionPlayerDeleteUnit. */
    class ActionPlayerDeleteUnit implements IActionPlayerDeleteUnit {

        /**
         * Constructs a new ActionPlayerDeleteUnit.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarAction.IActionPlayerDeleteUnit);

        /** ActionPlayerDeleteUnit gridIndex. */
        public gridIndex?: (Structure.IGridIndex|null);

        /**
         * Creates a new ActionPlayerDeleteUnit instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActionPlayerDeleteUnit instance
         */
        public static create(properties?: WarAction.IActionPlayerDeleteUnit): WarAction.ActionPlayerDeleteUnit;

        /**
         * Encodes the specified ActionPlayerDeleteUnit message. Does not implicitly {@link WarAction.ActionPlayerDeleteUnit.verify|verify} messages.
         * @param message ActionPlayerDeleteUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarAction.IActionPlayerDeleteUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified ActionPlayerDeleteUnit message, length delimited. Does not implicitly {@link WarAction.ActionPlayerDeleteUnit.verify|verify} messages.
         * @param message ActionPlayerDeleteUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarAction.IActionPlayerDeleteUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an ActionPlayerDeleteUnit message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActionPlayerDeleteUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.ActionPlayerDeleteUnit;

        /**
         * Decodes an ActionPlayerDeleteUnit message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActionPlayerDeleteUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.ActionPlayerDeleteUnit;

        /**
         * Verifies an ActionPlayerDeleteUnit message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActionPlayerDeleteUnit message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActionPlayerDeleteUnit
         */
        public static fromObject(object: { [k: string]: any }): WarAction.ActionPlayerDeleteUnit;

        /**
         * Creates a plain object from an ActionPlayerDeleteUnit message. Also converts values to other types if specified.
         * @param message ActionPlayerDeleteUnit
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarAction.ActionPlayerDeleteUnit, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActionPlayerDeleteUnit to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActionPlayerVoteForDraw. */
    interface IActionPlayerVoteForDraw {

        /** ActionPlayerVoteForDraw isAgree */
        isAgree?: (boolean|null);
    }

    /** Represents an ActionPlayerVoteForDraw. */
    class ActionPlayerVoteForDraw implements IActionPlayerVoteForDraw {

        /**
         * Constructs a new ActionPlayerVoteForDraw.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarAction.IActionPlayerVoteForDraw);

        /** ActionPlayerVoteForDraw isAgree. */
        public isAgree: boolean;

        /**
         * Creates a new ActionPlayerVoteForDraw instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActionPlayerVoteForDraw instance
         */
        public static create(properties?: WarAction.IActionPlayerVoteForDraw): WarAction.ActionPlayerVoteForDraw;

        /**
         * Encodes the specified ActionPlayerVoteForDraw message. Does not implicitly {@link WarAction.ActionPlayerVoteForDraw.verify|verify} messages.
         * @param message ActionPlayerVoteForDraw message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarAction.IActionPlayerVoteForDraw, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified ActionPlayerVoteForDraw message, length delimited. Does not implicitly {@link WarAction.ActionPlayerVoteForDraw.verify|verify} messages.
         * @param message ActionPlayerVoteForDraw message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarAction.IActionPlayerVoteForDraw, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an ActionPlayerVoteForDraw message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActionPlayerVoteForDraw
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.ActionPlayerVoteForDraw;

        /**
         * Decodes an ActionPlayerVoteForDraw message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActionPlayerVoteForDraw
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.ActionPlayerVoteForDraw;

        /**
         * Verifies an ActionPlayerVoteForDraw message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActionPlayerVoteForDraw message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActionPlayerVoteForDraw
         */
        public static fromObject(object: { [k: string]: any }): WarAction.ActionPlayerVoteForDraw;

        /**
         * Creates a plain object from an ActionPlayerVoteForDraw message. Also converts values to other types if specified.
         * @param message ActionPlayerVoteForDraw
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarAction.ActionPlayerVoteForDraw, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActionPlayerVoteForDraw to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActionUnitWait. */
    interface IActionUnitWait {

        /** ActionUnitWait path */
        path?: (Structure.IMovePath|null);

        /** ActionUnitWait launchUnitId */
        launchUnitId?: (number|null);

        /** ActionUnitWait extraData */
        extraData?: (WarAction.ActionUnitWait.IExtraDataForUnitWait|null);
    }

    /** Represents an ActionUnitWait. */
    class ActionUnitWait implements IActionUnitWait {

        /**
         * Constructs a new ActionUnitWait.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarAction.IActionUnitWait);

        /** ActionUnitWait path. */
        public path?: (Structure.IMovePath|null);

        /** ActionUnitWait launchUnitId. */
        public launchUnitId: number;

        /** ActionUnitWait extraData. */
        public extraData?: (WarAction.ActionUnitWait.IExtraDataForUnitWait|null);

        /**
         * Creates a new ActionUnitWait instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActionUnitWait instance
         */
        public static create(properties?: WarAction.IActionUnitWait): WarAction.ActionUnitWait;

        /**
         * Encodes the specified ActionUnitWait message. Does not implicitly {@link WarAction.ActionUnitWait.verify|verify} messages.
         * @param message ActionUnitWait message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarAction.IActionUnitWait, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified ActionUnitWait message, length delimited. Does not implicitly {@link WarAction.ActionUnitWait.verify|verify} messages.
         * @param message ActionUnitWait message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarAction.IActionUnitWait, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an ActionUnitWait message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActionUnitWait
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.ActionUnitWait;

        /**
         * Decodes an ActionUnitWait message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActionUnitWait
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.ActionUnitWait;

        /**
         * Verifies an ActionUnitWait message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActionUnitWait message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActionUnitWait
         */
        public static fromObject(object: { [k: string]: any }): WarAction.ActionUnitWait;

        /**
         * Creates a plain object from an ActionUnitWait message. Also converts values to other types if specified.
         * @param message ActionUnitWait
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarAction.ActionUnitWait, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActionUnitWait to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace ActionUnitWait {

        /** Properties of an ExtraDataForUnitWait. */
        interface IExtraDataForUnitWait {

            /** ExtraDataForUnitWait discoveredUnits */
            discoveredUnits?: (WarSerialization.ISerialUnit[]|null);

            /** ExtraDataForUnitWait discoveredTiles */
            discoveredTiles?: (WarSerialization.ISerialTile[]|null);

            /** ExtraDataForUnitWait actingUnits */
            actingUnits?: (WarSerialization.ISerialUnit[]|null);
        }

        /** Represents an ExtraDataForUnitWait. */
        class ExtraDataForUnitWait implements IExtraDataForUnitWait {

            /**
             * Constructs a new ExtraDataForUnitWait.
             * @param [properties] Properties to set
             */
            constructor(properties?: WarAction.ActionUnitWait.IExtraDataForUnitWait);

            /** ExtraDataForUnitWait discoveredUnits. */
            public discoveredUnits: WarSerialization.ISerialUnit[];

            /** ExtraDataForUnitWait discoveredTiles. */
            public discoveredTiles: WarSerialization.ISerialTile[];

            /** ExtraDataForUnitWait actingUnits. */
            public actingUnits: WarSerialization.ISerialUnit[];

            /**
             * Creates a new ExtraDataForUnitWait instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ExtraDataForUnitWait instance
             */
            public static create(properties?: WarAction.ActionUnitWait.IExtraDataForUnitWait): WarAction.ActionUnitWait.ExtraDataForUnitWait;

            /**
             * Encodes the specified ExtraDataForUnitWait message. Does not implicitly {@link WarAction.ActionUnitWait.ExtraDataForUnitWait.verify|verify} messages.
             * @param message ExtraDataForUnitWait message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: WarAction.ActionUnitWait.IExtraDataForUnitWait, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified ExtraDataForUnitWait message, length delimited. Does not implicitly {@link WarAction.ActionUnitWait.ExtraDataForUnitWait.verify|verify} messages.
             * @param message ExtraDataForUnitWait message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: WarAction.ActionUnitWait.IExtraDataForUnitWait, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an ExtraDataForUnitWait message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ExtraDataForUnitWait
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.ActionUnitWait.ExtraDataForUnitWait;

            /**
             * Decodes an ExtraDataForUnitWait message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ExtraDataForUnitWait
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.ActionUnitWait.ExtraDataForUnitWait;

            /**
             * Verifies an ExtraDataForUnitWait message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ExtraDataForUnitWait message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ExtraDataForUnitWait
             */
            public static fromObject(object: { [k: string]: any }): WarAction.ActionUnitWait.ExtraDataForUnitWait;

            /**
             * Creates a plain object from an ExtraDataForUnitWait message. Also converts values to other types if specified.
             * @param message ExtraDataForUnitWait
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: WarAction.ActionUnitWait.ExtraDataForUnitWait, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ExtraDataForUnitWait to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of an ActionUnitBeLoaded. */
    interface IActionUnitBeLoaded {

        /** ActionUnitBeLoaded path */
        path?: (Structure.IMovePath|null);

        /** ActionUnitBeLoaded launchUnitId */
        launchUnitId?: (number|null);

        /** ActionUnitBeLoaded extraData */
        extraData?: (WarAction.ActionUnitBeLoaded.IExtraDataForUnitBeLoaded|null);
    }

    /** Represents an ActionUnitBeLoaded. */
    class ActionUnitBeLoaded implements IActionUnitBeLoaded {

        /**
         * Constructs a new ActionUnitBeLoaded.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarAction.IActionUnitBeLoaded);

        /** ActionUnitBeLoaded path. */
        public path?: (Structure.IMovePath|null);

        /** ActionUnitBeLoaded launchUnitId. */
        public launchUnitId: number;

        /** ActionUnitBeLoaded extraData. */
        public extraData?: (WarAction.ActionUnitBeLoaded.IExtraDataForUnitBeLoaded|null);

        /**
         * Creates a new ActionUnitBeLoaded instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActionUnitBeLoaded instance
         */
        public static create(properties?: WarAction.IActionUnitBeLoaded): WarAction.ActionUnitBeLoaded;

        /**
         * Encodes the specified ActionUnitBeLoaded message. Does not implicitly {@link WarAction.ActionUnitBeLoaded.verify|verify} messages.
         * @param message ActionUnitBeLoaded message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarAction.IActionUnitBeLoaded, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified ActionUnitBeLoaded message, length delimited. Does not implicitly {@link WarAction.ActionUnitBeLoaded.verify|verify} messages.
         * @param message ActionUnitBeLoaded message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarAction.IActionUnitBeLoaded, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an ActionUnitBeLoaded message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActionUnitBeLoaded
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.ActionUnitBeLoaded;

        /**
         * Decodes an ActionUnitBeLoaded message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActionUnitBeLoaded
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.ActionUnitBeLoaded;

        /**
         * Verifies an ActionUnitBeLoaded message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActionUnitBeLoaded message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActionUnitBeLoaded
         */
        public static fromObject(object: { [k: string]: any }): WarAction.ActionUnitBeLoaded;

        /**
         * Creates a plain object from an ActionUnitBeLoaded message. Also converts values to other types if specified.
         * @param message ActionUnitBeLoaded
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarAction.ActionUnitBeLoaded, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActionUnitBeLoaded to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace ActionUnitBeLoaded {

        /** Properties of an ExtraDataForUnitBeLoaded. */
        interface IExtraDataForUnitBeLoaded {

            /** ExtraDataForUnitBeLoaded discoveredUnits */
            discoveredUnits?: (WarSerialization.ISerialUnit[]|null);

            /** ExtraDataForUnitBeLoaded discoveredTiles */
            discoveredTiles?: (WarSerialization.ISerialTile[]|null);

            /** ExtraDataForUnitBeLoaded actingUnits */
            actingUnits?: (WarSerialization.ISerialUnit[]|null);
        }

        /** Represents an ExtraDataForUnitBeLoaded. */
        class ExtraDataForUnitBeLoaded implements IExtraDataForUnitBeLoaded {

            /**
             * Constructs a new ExtraDataForUnitBeLoaded.
             * @param [properties] Properties to set
             */
            constructor(properties?: WarAction.ActionUnitBeLoaded.IExtraDataForUnitBeLoaded);

            /** ExtraDataForUnitBeLoaded discoveredUnits. */
            public discoveredUnits: WarSerialization.ISerialUnit[];

            /** ExtraDataForUnitBeLoaded discoveredTiles. */
            public discoveredTiles: WarSerialization.ISerialTile[];

            /** ExtraDataForUnitBeLoaded actingUnits. */
            public actingUnits: WarSerialization.ISerialUnit[];

            /**
             * Creates a new ExtraDataForUnitBeLoaded instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ExtraDataForUnitBeLoaded instance
             */
            public static create(properties?: WarAction.ActionUnitBeLoaded.IExtraDataForUnitBeLoaded): WarAction.ActionUnitBeLoaded.ExtraDataForUnitBeLoaded;

            /**
             * Encodes the specified ExtraDataForUnitBeLoaded message. Does not implicitly {@link WarAction.ActionUnitBeLoaded.ExtraDataForUnitBeLoaded.verify|verify} messages.
             * @param message ExtraDataForUnitBeLoaded message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: WarAction.ActionUnitBeLoaded.IExtraDataForUnitBeLoaded, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified ExtraDataForUnitBeLoaded message, length delimited. Does not implicitly {@link WarAction.ActionUnitBeLoaded.ExtraDataForUnitBeLoaded.verify|verify} messages.
             * @param message ExtraDataForUnitBeLoaded message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: WarAction.ActionUnitBeLoaded.IExtraDataForUnitBeLoaded, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an ExtraDataForUnitBeLoaded message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ExtraDataForUnitBeLoaded
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.ActionUnitBeLoaded.ExtraDataForUnitBeLoaded;

            /**
             * Decodes an ExtraDataForUnitBeLoaded message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ExtraDataForUnitBeLoaded
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.ActionUnitBeLoaded.ExtraDataForUnitBeLoaded;

            /**
             * Verifies an ExtraDataForUnitBeLoaded message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ExtraDataForUnitBeLoaded message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ExtraDataForUnitBeLoaded
             */
            public static fromObject(object: { [k: string]: any }): WarAction.ActionUnitBeLoaded.ExtraDataForUnitBeLoaded;

            /**
             * Creates a plain object from an ExtraDataForUnitBeLoaded message. Also converts values to other types if specified.
             * @param message ExtraDataForUnitBeLoaded
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: WarAction.ActionUnitBeLoaded.ExtraDataForUnitBeLoaded, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ExtraDataForUnitBeLoaded to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of an ActionUnitCaptureTile. */
    interface IActionUnitCaptureTile {

        /** ActionUnitCaptureTile path */
        path?: (Structure.IMovePath|null);

        /** ActionUnitCaptureTile launchUnitId */
        launchUnitId?: (number|null);

        /** ActionUnitCaptureTile extraData */
        extraData?: (WarAction.ActionUnitCaptureTile.IExtraDataForUnitCaptureTile|null);
    }

    /** Represents an ActionUnitCaptureTile. */
    class ActionUnitCaptureTile implements IActionUnitCaptureTile {

        /**
         * Constructs a new ActionUnitCaptureTile.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarAction.IActionUnitCaptureTile);

        /** ActionUnitCaptureTile path. */
        public path?: (Structure.IMovePath|null);

        /** ActionUnitCaptureTile launchUnitId. */
        public launchUnitId: number;

        /** ActionUnitCaptureTile extraData. */
        public extraData?: (WarAction.ActionUnitCaptureTile.IExtraDataForUnitCaptureTile|null);

        /**
         * Creates a new ActionUnitCaptureTile instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActionUnitCaptureTile instance
         */
        public static create(properties?: WarAction.IActionUnitCaptureTile): WarAction.ActionUnitCaptureTile;

        /**
         * Encodes the specified ActionUnitCaptureTile message. Does not implicitly {@link WarAction.ActionUnitCaptureTile.verify|verify} messages.
         * @param message ActionUnitCaptureTile message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarAction.IActionUnitCaptureTile, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified ActionUnitCaptureTile message, length delimited. Does not implicitly {@link WarAction.ActionUnitCaptureTile.verify|verify} messages.
         * @param message ActionUnitCaptureTile message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarAction.IActionUnitCaptureTile, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an ActionUnitCaptureTile message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActionUnitCaptureTile
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.ActionUnitCaptureTile;

        /**
         * Decodes an ActionUnitCaptureTile message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActionUnitCaptureTile
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.ActionUnitCaptureTile;

        /**
         * Verifies an ActionUnitCaptureTile message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActionUnitCaptureTile message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActionUnitCaptureTile
         */
        public static fromObject(object: { [k: string]: any }): WarAction.ActionUnitCaptureTile;

        /**
         * Creates a plain object from an ActionUnitCaptureTile message. Also converts values to other types if specified.
         * @param message ActionUnitCaptureTile
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarAction.ActionUnitCaptureTile, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActionUnitCaptureTile to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace ActionUnitCaptureTile {

        /** Properties of an ExtraDataForUnitCaptureTile. */
        interface IExtraDataForUnitCaptureTile {

            /** ExtraDataForUnitCaptureTile discoveredUnits */
            discoveredUnits?: (WarSerialization.ISerialUnit[]|null);

            /** ExtraDataForUnitCaptureTile discoveredTiles */
            discoveredTiles?: (WarSerialization.ISerialTile[]|null);

            /** ExtraDataForUnitCaptureTile actingUnits */
            actingUnits?: (WarSerialization.ISerialUnit[]|null);

            /** ExtraDataForUnitCaptureTile actingTiles */
            actingTiles?: (WarSerialization.ISerialTile[]|null);
        }

        /** Represents an ExtraDataForUnitCaptureTile. */
        class ExtraDataForUnitCaptureTile implements IExtraDataForUnitCaptureTile {

            /**
             * Constructs a new ExtraDataForUnitCaptureTile.
             * @param [properties] Properties to set
             */
            constructor(properties?: WarAction.ActionUnitCaptureTile.IExtraDataForUnitCaptureTile);

            /** ExtraDataForUnitCaptureTile discoveredUnits. */
            public discoveredUnits: WarSerialization.ISerialUnit[];

            /** ExtraDataForUnitCaptureTile discoveredTiles. */
            public discoveredTiles: WarSerialization.ISerialTile[];

            /** ExtraDataForUnitCaptureTile actingUnits. */
            public actingUnits: WarSerialization.ISerialUnit[];

            /** ExtraDataForUnitCaptureTile actingTiles. */
            public actingTiles: WarSerialization.ISerialTile[];

            /**
             * Creates a new ExtraDataForUnitCaptureTile instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ExtraDataForUnitCaptureTile instance
             */
            public static create(properties?: WarAction.ActionUnitCaptureTile.IExtraDataForUnitCaptureTile): WarAction.ActionUnitCaptureTile.ExtraDataForUnitCaptureTile;

            /**
             * Encodes the specified ExtraDataForUnitCaptureTile message. Does not implicitly {@link WarAction.ActionUnitCaptureTile.ExtraDataForUnitCaptureTile.verify|verify} messages.
             * @param message ExtraDataForUnitCaptureTile message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: WarAction.ActionUnitCaptureTile.IExtraDataForUnitCaptureTile, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified ExtraDataForUnitCaptureTile message, length delimited. Does not implicitly {@link WarAction.ActionUnitCaptureTile.ExtraDataForUnitCaptureTile.verify|verify} messages.
             * @param message ExtraDataForUnitCaptureTile message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: WarAction.ActionUnitCaptureTile.IExtraDataForUnitCaptureTile, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an ExtraDataForUnitCaptureTile message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ExtraDataForUnitCaptureTile
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.ActionUnitCaptureTile.ExtraDataForUnitCaptureTile;

            /**
             * Decodes an ExtraDataForUnitCaptureTile message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ExtraDataForUnitCaptureTile
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.ActionUnitCaptureTile.ExtraDataForUnitCaptureTile;

            /**
             * Verifies an ExtraDataForUnitCaptureTile message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ExtraDataForUnitCaptureTile message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ExtraDataForUnitCaptureTile
             */
            public static fromObject(object: { [k: string]: any }): WarAction.ActionUnitCaptureTile.ExtraDataForUnitCaptureTile;

            /**
             * Creates a plain object from an ExtraDataForUnitCaptureTile message. Also converts values to other types if specified.
             * @param message ExtraDataForUnitCaptureTile
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: WarAction.ActionUnitCaptureTile.ExtraDataForUnitCaptureTile, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ExtraDataForUnitCaptureTile to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of an ActionUnitAttackTile. */
    interface IActionUnitAttackTile {

        /** ActionUnitAttackTile path */
        path?: (Structure.IMovePath|null);

        /** ActionUnitAttackTile launchUnitId */
        launchUnitId?: (number|null);

        /** ActionUnitAttackTile targetGridIndex */
        targetGridIndex?: (Structure.IGridIndex|null);

        /** ActionUnitAttackTile extraData */
        extraData?: (WarAction.ActionUnitAttackTile.IExtraDataForUnitAttackTile|null);
    }

    /** Represents an ActionUnitAttackTile. */
    class ActionUnitAttackTile implements IActionUnitAttackTile {

        /**
         * Constructs a new ActionUnitAttackTile.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarAction.IActionUnitAttackTile);

        /** ActionUnitAttackTile path. */
        public path?: (Structure.IMovePath|null);

        /** ActionUnitAttackTile launchUnitId. */
        public launchUnitId: number;

        /** ActionUnitAttackTile targetGridIndex. */
        public targetGridIndex?: (Structure.IGridIndex|null);

        /** ActionUnitAttackTile extraData. */
        public extraData?: (WarAction.ActionUnitAttackTile.IExtraDataForUnitAttackTile|null);

        /**
         * Creates a new ActionUnitAttackTile instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActionUnitAttackTile instance
         */
        public static create(properties?: WarAction.IActionUnitAttackTile): WarAction.ActionUnitAttackTile;

        /**
         * Encodes the specified ActionUnitAttackTile message. Does not implicitly {@link WarAction.ActionUnitAttackTile.verify|verify} messages.
         * @param message ActionUnitAttackTile message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarAction.IActionUnitAttackTile, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified ActionUnitAttackTile message, length delimited. Does not implicitly {@link WarAction.ActionUnitAttackTile.verify|verify} messages.
         * @param message ActionUnitAttackTile message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarAction.IActionUnitAttackTile, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an ActionUnitAttackTile message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActionUnitAttackTile
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.ActionUnitAttackTile;

        /**
         * Decodes an ActionUnitAttackTile message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActionUnitAttackTile
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.ActionUnitAttackTile;

        /**
         * Verifies an ActionUnitAttackTile message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActionUnitAttackTile message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActionUnitAttackTile
         */
        public static fromObject(object: { [k: string]: any }): WarAction.ActionUnitAttackTile;

        /**
         * Creates a plain object from an ActionUnitAttackTile message. Also converts values to other types if specified.
         * @param message ActionUnitAttackTile
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarAction.ActionUnitAttackTile, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActionUnitAttackTile to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace ActionUnitAttackTile {

        /** Properties of an ExtraDataForUnitAttackTile. */
        interface IExtraDataForUnitAttackTile {

            /** ExtraDataForUnitAttackTile discoveredUnits */
            discoveredUnits?: (WarSerialization.ISerialUnit[]|null);

            /** ExtraDataForUnitAttackTile discoveredTiles */
            discoveredTiles?: (WarSerialization.ISerialTile[]|null);

            /** ExtraDataForUnitAttackTile actingUnits */
            actingUnits?: (WarSerialization.ISerialUnit[]|null);

            /** ExtraDataForUnitAttackTile attackDamage */
            attackDamage?: (number|null);
        }

        /** Represents an ExtraDataForUnitAttackTile. */
        class ExtraDataForUnitAttackTile implements IExtraDataForUnitAttackTile {

            /**
             * Constructs a new ExtraDataForUnitAttackTile.
             * @param [properties] Properties to set
             */
            constructor(properties?: WarAction.ActionUnitAttackTile.IExtraDataForUnitAttackTile);

            /** ExtraDataForUnitAttackTile discoveredUnits. */
            public discoveredUnits: WarSerialization.ISerialUnit[];

            /** ExtraDataForUnitAttackTile discoveredTiles. */
            public discoveredTiles: WarSerialization.ISerialTile[];

            /** ExtraDataForUnitAttackTile actingUnits. */
            public actingUnits: WarSerialization.ISerialUnit[];

            /** ExtraDataForUnitAttackTile attackDamage. */
            public attackDamage: number;

            /**
             * Creates a new ExtraDataForUnitAttackTile instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ExtraDataForUnitAttackTile instance
             */
            public static create(properties?: WarAction.ActionUnitAttackTile.IExtraDataForUnitAttackTile): WarAction.ActionUnitAttackTile.ExtraDataForUnitAttackTile;

            /**
             * Encodes the specified ExtraDataForUnitAttackTile message. Does not implicitly {@link WarAction.ActionUnitAttackTile.ExtraDataForUnitAttackTile.verify|verify} messages.
             * @param message ExtraDataForUnitAttackTile message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: WarAction.ActionUnitAttackTile.IExtraDataForUnitAttackTile, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified ExtraDataForUnitAttackTile message, length delimited. Does not implicitly {@link WarAction.ActionUnitAttackTile.ExtraDataForUnitAttackTile.verify|verify} messages.
             * @param message ExtraDataForUnitAttackTile message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: WarAction.ActionUnitAttackTile.IExtraDataForUnitAttackTile, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an ExtraDataForUnitAttackTile message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ExtraDataForUnitAttackTile
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.ActionUnitAttackTile.ExtraDataForUnitAttackTile;

            /**
             * Decodes an ExtraDataForUnitAttackTile message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ExtraDataForUnitAttackTile
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.ActionUnitAttackTile.ExtraDataForUnitAttackTile;

            /**
             * Verifies an ExtraDataForUnitAttackTile message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ExtraDataForUnitAttackTile message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ExtraDataForUnitAttackTile
             */
            public static fromObject(object: { [k: string]: any }): WarAction.ActionUnitAttackTile.ExtraDataForUnitAttackTile;

            /**
             * Creates a plain object from an ExtraDataForUnitAttackTile message. Also converts values to other types if specified.
             * @param message ExtraDataForUnitAttackTile
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: WarAction.ActionUnitAttackTile.ExtraDataForUnitAttackTile, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ExtraDataForUnitAttackTile to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of an ActionUnitAttackUnit. */
    interface IActionUnitAttackUnit {

        /** ActionUnitAttackUnit path */
        path?: (Structure.IMovePath|null);

        /** ActionUnitAttackUnit launchUnitId */
        launchUnitId?: (number|null);

        /** ActionUnitAttackUnit targetGridIndex */
        targetGridIndex?: (Structure.IGridIndex|null);

        /** ActionUnitAttackUnit extraData */
        extraData?: (WarAction.ActionUnitAttackUnit.IExtraDataForUnitAttackUnit|null);
    }

    /** Represents an ActionUnitAttackUnit. */
    class ActionUnitAttackUnit implements IActionUnitAttackUnit {

        /**
         * Constructs a new ActionUnitAttackUnit.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarAction.IActionUnitAttackUnit);

        /** ActionUnitAttackUnit path. */
        public path?: (Structure.IMovePath|null);

        /** ActionUnitAttackUnit launchUnitId. */
        public launchUnitId: number;

        /** ActionUnitAttackUnit targetGridIndex. */
        public targetGridIndex?: (Structure.IGridIndex|null);

        /** ActionUnitAttackUnit extraData. */
        public extraData?: (WarAction.ActionUnitAttackUnit.IExtraDataForUnitAttackUnit|null);

        /**
         * Creates a new ActionUnitAttackUnit instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActionUnitAttackUnit instance
         */
        public static create(properties?: WarAction.IActionUnitAttackUnit): WarAction.ActionUnitAttackUnit;

        /**
         * Encodes the specified ActionUnitAttackUnit message. Does not implicitly {@link WarAction.ActionUnitAttackUnit.verify|verify} messages.
         * @param message ActionUnitAttackUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarAction.IActionUnitAttackUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified ActionUnitAttackUnit message, length delimited. Does not implicitly {@link WarAction.ActionUnitAttackUnit.verify|verify} messages.
         * @param message ActionUnitAttackUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarAction.IActionUnitAttackUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an ActionUnitAttackUnit message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActionUnitAttackUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.ActionUnitAttackUnit;

        /**
         * Decodes an ActionUnitAttackUnit message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActionUnitAttackUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.ActionUnitAttackUnit;

        /**
         * Verifies an ActionUnitAttackUnit message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActionUnitAttackUnit message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActionUnitAttackUnit
         */
        public static fromObject(object: { [k: string]: any }): WarAction.ActionUnitAttackUnit;

        /**
         * Creates a plain object from an ActionUnitAttackUnit message. Also converts values to other types if specified.
         * @param message ActionUnitAttackUnit
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarAction.ActionUnitAttackUnit, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActionUnitAttackUnit to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace ActionUnitAttackUnit {

        /** Properties of an ExtraDataForUnitAttackUnit. */
        interface IExtraDataForUnitAttackUnit {

            /** ExtraDataForUnitAttackUnit discoveredUnits */
            discoveredUnits?: (WarSerialization.ISerialUnit[]|null);

            /** ExtraDataForUnitAttackUnit discoveredTiles */
            discoveredTiles?: (WarSerialization.ISerialTile[]|null);

            /** ExtraDataForUnitAttackUnit actingUnits */
            actingUnits?: (WarSerialization.ISerialUnit[]|null);

            /** ExtraDataForUnitAttackUnit attackDamage */
            attackDamage?: (number|null);

            /** ExtraDataForUnitAttackUnit counterDamage */
            counterDamage?: (number|null);

            /** ExtraDataForUnitAttackUnit lostPlayerIndex */
            lostPlayerIndex?: (number|null);

            /** ExtraDataForUnitAttackUnit attackerUnitAfterAction */
            attackerUnitAfterAction?: (WarSerialization.ISerialUnit|null);

            /** ExtraDataForUnitAttackUnit targetUnitAfterAction */
            targetUnitAfterAction?: (WarSerialization.ISerialUnit|null);

            /** ExtraDataForUnitAttackUnit attackerCoEnergyAfterAction */
            attackerCoEnergyAfterAction?: (number|null);

            /** ExtraDataForUnitAttackUnit targetCoEnergyAfterAction */
            targetCoEnergyAfterAction?: (number|null);
        }

        /** Represents an ExtraDataForUnitAttackUnit. */
        class ExtraDataForUnitAttackUnit implements IExtraDataForUnitAttackUnit {

            /**
             * Constructs a new ExtraDataForUnitAttackUnit.
             * @param [properties] Properties to set
             */
            constructor(properties?: WarAction.ActionUnitAttackUnit.IExtraDataForUnitAttackUnit);

            /** ExtraDataForUnitAttackUnit discoveredUnits. */
            public discoveredUnits: WarSerialization.ISerialUnit[];

            /** ExtraDataForUnitAttackUnit discoveredTiles. */
            public discoveredTiles: WarSerialization.ISerialTile[];

            /** ExtraDataForUnitAttackUnit actingUnits. */
            public actingUnits: WarSerialization.ISerialUnit[];

            /** ExtraDataForUnitAttackUnit attackDamage. */
            public attackDamage: number;

            /** ExtraDataForUnitAttackUnit counterDamage. */
            public counterDamage: number;

            /** ExtraDataForUnitAttackUnit lostPlayerIndex. */
            public lostPlayerIndex: number;

            /** ExtraDataForUnitAttackUnit attackerUnitAfterAction. */
            public attackerUnitAfterAction?: (WarSerialization.ISerialUnit|null);

            /** ExtraDataForUnitAttackUnit targetUnitAfterAction. */
            public targetUnitAfterAction?: (WarSerialization.ISerialUnit|null);

            /** ExtraDataForUnitAttackUnit attackerCoEnergyAfterAction. */
            public attackerCoEnergyAfterAction: number;

            /** ExtraDataForUnitAttackUnit targetCoEnergyAfterAction. */
            public targetCoEnergyAfterAction: number;

            /**
             * Creates a new ExtraDataForUnitAttackUnit instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ExtraDataForUnitAttackUnit instance
             */
            public static create(properties?: WarAction.ActionUnitAttackUnit.IExtraDataForUnitAttackUnit): WarAction.ActionUnitAttackUnit.ExtraDataForUnitAttackUnit;

            /**
             * Encodes the specified ExtraDataForUnitAttackUnit message. Does not implicitly {@link WarAction.ActionUnitAttackUnit.ExtraDataForUnitAttackUnit.verify|verify} messages.
             * @param message ExtraDataForUnitAttackUnit message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: WarAction.ActionUnitAttackUnit.IExtraDataForUnitAttackUnit, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified ExtraDataForUnitAttackUnit message, length delimited. Does not implicitly {@link WarAction.ActionUnitAttackUnit.ExtraDataForUnitAttackUnit.verify|verify} messages.
             * @param message ExtraDataForUnitAttackUnit message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: WarAction.ActionUnitAttackUnit.IExtraDataForUnitAttackUnit, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an ExtraDataForUnitAttackUnit message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ExtraDataForUnitAttackUnit
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.ActionUnitAttackUnit.ExtraDataForUnitAttackUnit;

            /**
             * Decodes an ExtraDataForUnitAttackUnit message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ExtraDataForUnitAttackUnit
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.ActionUnitAttackUnit.ExtraDataForUnitAttackUnit;

            /**
             * Verifies an ExtraDataForUnitAttackUnit message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ExtraDataForUnitAttackUnit message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ExtraDataForUnitAttackUnit
             */
            public static fromObject(object: { [k: string]: any }): WarAction.ActionUnitAttackUnit.ExtraDataForUnitAttackUnit;

            /**
             * Creates a plain object from an ExtraDataForUnitAttackUnit message. Also converts values to other types if specified.
             * @param message ExtraDataForUnitAttackUnit
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: WarAction.ActionUnitAttackUnit.ExtraDataForUnitAttackUnit, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ExtraDataForUnitAttackUnit to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of an ActionUnitDropUnit. */
    interface IActionUnitDropUnit {

        /** ActionUnitDropUnit path */
        path?: (Structure.IMovePath|null);

        /** ActionUnitDropUnit launchUnitId */
        launchUnitId?: (number|null);

        /** ActionUnitDropUnit dropDestinations */
        dropDestinations?: (Structure.IDropDestination[]|null);

        /** ActionUnitDropUnit isDropBlocked */
        isDropBlocked?: (boolean|null);

        /** ActionUnitDropUnit extraData */
        extraData?: (WarAction.ActionUnitDropUnit.IExtraDataForUnitDropUnit|null);
    }

    /** Represents an ActionUnitDropUnit. */
    class ActionUnitDropUnit implements IActionUnitDropUnit {

        /**
         * Constructs a new ActionUnitDropUnit.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarAction.IActionUnitDropUnit);

        /** ActionUnitDropUnit path. */
        public path?: (Structure.IMovePath|null);

        /** ActionUnitDropUnit launchUnitId. */
        public launchUnitId: number;

        /** ActionUnitDropUnit dropDestinations. */
        public dropDestinations: Structure.IDropDestination[];

        /** ActionUnitDropUnit isDropBlocked. */
        public isDropBlocked: boolean;

        /** ActionUnitDropUnit extraData. */
        public extraData?: (WarAction.ActionUnitDropUnit.IExtraDataForUnitDropUnit|null);

        /**
         * Creates a new ActionUnitDropUnit instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActionUnitDropUnit instance
         */
        public static create(properties?: WarAction.IActionUnitDropUnit): WarAction.ActionUnitDropUnit;

        /**
         * Encodes the specified ActionUnitDropUnit message. Does not implicitly {@link WarAction.ActionUnitDropUnit.verify|verify} messages.
         * @param message ActionUnitDropUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarAction.IActionUnitDropUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified ActionUnitDropUnit message, length delimited. Does not implicitly {@link WarAction.ActionUnitDropUnit.verify|verify} messages.
         * @param message ActionUnitDropUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarAction.IActionUnitDropUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an ActionUnitDropUnit message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActionUnitDropUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.ActionUnitDropUnit;

        /**
         * Decodes an ActionUnitDropUnit message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActionUnitDropUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.ActionUnitDropUnit;

        /**
         * Verifies an ActionUnitDropUnit message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActionUnitDropUnit message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActionUnitDropUnit
         */
        public static fromObject(object: { [k: string]: any }): WarAction.ActionUnitDropUnit;

        /**
         * Creates a plain object from an ActionUnitDropUnit message. Also converts values to other types if specified.
         * @param message ActionUnitDropUnit
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarAction.ActionUnitDropUnit, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActionUnitDropUnit to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace ActionUnitDropUnit {

        /** Properties of an ExtraDataForUnitDropUnit. */
        interface IExtraDataForUnitDropUnit {

            /** ExtraDataForUnitDropUnit discoveredUnits */
            discoveredUnits?: (WarSerialization.ISerialUnit[]|null);

            /** ExtraDataForUnitDropUnit discoveredTiles */
            discoveredTiles?: (WarSerialization.ISerialTile[]|null);

            /** ExtraDataForUnitDropUnit actingUnits */
            actingUnits?: (WarSerialization.ISerialUnit[]|null);
        }

        /** Represents an ExtraDataForUnitDropUnit. */
        class ExtraDataForUnitDropUnit implements IExtraDataForUnitDropUnit {

            /**
             * Constructs a new ExtraDataForUnitDropUnit.
             * @param [properties] Properties to set
             */
            constructor(properties?: WarAction.ActionUnitDropUnit.IExtraDataForUnitDropUnit);

            /** ExtraDataForUnitDropUnit discoveredUnits. */
            public discoveredUnits: WarSerialization.ISerialUnit[];

            /** ExtraDataForUnitDropUnit discoveredTiles. */
            public discoveredTiles: WarSerialization.ISerialTile[];

            /** ExtraDataForUnitDropUnit actingUnits. */
            public actingUnits: WarSerialization.ISerialUnit[];

            /**
             * Creates a new ExtraDataForUnitDropUnit instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ExtraDataForUnitDropUnit instance
             */
            public static create(properties?: WarAction.ActionUnitDropUnit.IExtraDataForUnitDropUnit): WarAction.ActionUnitDropUnit.ExtraDataForUnitDropUnit;

            /**
             * Encodes the specified ExtraDataForUnitDropUnit message. Does not implicitly {@link WarAction.ActionUnitDropUnit.ExtraDataForUnitDropUnit.verify|verify} messages.
             * @param message ExtraDataForUnitDropUnit message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: WarAction.ActionUnitDropUnit.IExtraDataForUnitDropUnit, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified ExtraDataForUnitDropUnit message, length delimited. Does not implicitly {@link WarAction.ActionUnitDropUnit.ExtraDataForUnitDropUnit.verify|verify} messages.
             * @param message ExtraDataForUnitDropUnit message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: WarAction.ActionUnitDropUnit.IExtraDataForUnitDropUnit, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an ExtraDataForUnitDropUnit message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ExtraDataForUnitDropUnit
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.ActionUnitDropUnit.ExtraDataForUnitDropUnit;

            /**
             * Decodes an ExtraDataForUnitDropUnit message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ExtraDataForUnitDropUnit
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.ActionUnitDropUnit.ExtraDataForUnitDropUnit;

            /**
             * Verifies an ExtraDataForUnitDropUnit message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ExtraDataForUnitDropUnit message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ExtraDataForUnitDropUnit
             */
            public static fromObject(object: { [k: string]: any }): WarAction.ActionUnitDropUnit.ExtraDataForUnitDropUnit;

            /**
             * Creates a plain object from an ExtraDataForUnitDropUnit message. Also converts values to other types if specified.
             * @param message ExtraDataForUnitDropUnit
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: WarAction.ActionUnitDropUnit.ExtraDataForUnitDropUnit, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ExtraDataForUnitDropUnit to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of an ActionUnitBuildTile. */
    interface IActionUnitBuildTile {

        /** ActionUnitBuildTile path */
        path?: (Structure.IMovePath|null);

        /** ActionUnitBuildTile launchUnitId */
        launchUnitId?: (number|null);

        /** ActionUnitBuildTile extraData */
        extraData?: (WarAction.ActionUnitBuildTile.IExtraDataForUnitBuildTile|null);
    }

    /** Represents an ActionUnitBuildTile. */
    class ActionUnitBuildTile implements IActionUnitBuildTile {

        /**
         * Constructs a new ActionUnitBuildTile.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarAction.IActionUnitBuildTile);

        /** ActionUnitBuildTile path. */
        public path?: (Structure.IMovePath|null);

        /** ActionUnitBuildTile launchUnitId. */
        public launchUnitId: number;

        /** ActionUnitBuildTile extraData. */
        public extraData?: (WarAction.ActionUnitBuildTile.IExtraDataForUnitBuildTile|null);

        /**
         * Creates a new ActionUnitBuildTile instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActionUnitBuildTile instance
         */
        public static create(properties?: WarAction.IActionUnitBuildTile): WarAction.ActionUnitBuildTile;

        /**
         * Encodes the specified ActionUnitBuildTile message. Does not implicitly {@link WarAction.ActionUnitBuildTile.verify|verify} messages.
         * @param message ActionUnitBuildTile message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarAction.IActionUnitBuildTile, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified ActionUnitBuildTile message, length delimited. Does not implicitly {@link WarAction.ActionUnitBuildTile.verify|verify} messages.
         * @param message ActionUnitBuildTile message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarAction.IActionUnitBuildTile, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an ActionUnitBuildTile message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActionUnitBuildTile
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.ActionUnitBuildTile;

        /**
         * Decodes an ActionUnitBuildTile message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActionUnitBuildTile
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.ActionUnitBuildTile;

        /**
         * Verifies an ActionUnitBuildTile message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActionUnitBuildTile message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActionUnitBuildTile
         */
        public static fromObject(object: { [k: string]: any }): WarAction.ActionUnitBuildTile;

        /**
         * Creates a plain object from an ActionUnitBuildTile message. Also converts values to other types if specified.
         * @param message ActionUnitBuildTile
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarAction.ActionUnitBuildTile, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActionUnitBuildTile to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace ActionUnitBuildTile {

        /** Properties of an ExtraDataForUnitBuildTile. */
        interface IExtraDataForUnitBuildTile {

            /** ExtraDataForUnitBuildTile discoveredUnits */
            discoveredUnits?: (WarSerialization.ISerialUnit[]|null);

            /** ExtraDataForUnitBuildTile discoveredTiles */
            discoveredTiles?: (WarSerialization.ISerialTile[]|null);

            /** ExtraDataForUnitBuildTile actingUnits */
            actingUnits?: (WarSerialization.ISerialUnit[]|null);

            /** ExtraDataForUnitBuildTile actingTiles */
            actingTiles?: (WarSerialization.ISerialTile[]|null);
        }

        /** Represents an ExtraDataForUnitBuildTile. */
        class ExtraDataForUnitBuildTile implements IExtraDataForUnitBuildTile {

            /**
             * Constructs a new ExtraDataForUnitBuildTile.
             * @param [properties] Properties to set
             */
            constructor(properties?: WarAction.ActionUnitBuildTile.IExtraDataForUnitBuildTile);

            /** ExtraDataForUnitBuildTile discoveredUnits. */
            public discoveredUnits: WarSerialization.ISerialUnit[];

            /** ExtraDataForUnitBuildTile discoveredTiles. */
            public discoveredTiles: WarSerialization.ISerialTile[];

            /** ExtraDataForUnitBuildTile actingUnits. */
            public actingUnits: WarSerialization.ISerialUnit[];

            /** ExtraDataForUnitBuildTile actingTiles. */
            public actingTiles: WarSerialization.ISerialTile[];

            /**
             * Creates a new ExtraDataForUnitBuildTile instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ExtraDataForUnitBuildTile instance
             */
            public static create(properties?: WarAction.ActionUnitBuildTile.IExtraDataForUnitBuildTile): WarAction.ActionUnitBuildTile.ExtraDataForUnitBuildTile;

            /**
             * Encodes the specified ExtraDataForUnitBuildTile message. Does not implicitly {@link WarAction.ActionUnitBuildTile.ExtraDataForUnitBuildTile.verify|verify} messages.
             * @param message ExtraDataForUnitBuildTile message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: WarAction.ActionUnitBuildTile.IExtraDataForUnitBuildTile, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified ExtraDataForUnitBuildTile message, length delimited. Does not implicitly {@link WarAction.ActionUnitBuildTile.ExtraDataForUnitBuildTile.verify|verify} messages.
             * @param message ExtraDataForUnitBuildTile message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: WarAction.ActionUnitBuildTile.IExtraDataForUnitBuildTile, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an ExtraDataForUnitBuildTile message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ExtraDataForUnitBuildTile
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.ActionUnitBuildTile.ExtraDataForUnitBuildTile;

            /**
             * Decodes an ExtraDataForUnitBuildTile message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ExtraDataForUnitBuildTile
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.ActionUnitBuildTile.ExtraDataForUnitBuildTile;

            /**
             * Verifies an ExtraDataForUnitBuildTile message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ExtraDataForUnitBuildTile message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ExtraDataForUnitBuildTile
             */
            public static fromObject(object: { [k: string]: any }): WarAction.ActionUnitBuildTile.ExtraDataForUnitBuildTile;

            /**
             * Creates a plain object from an ExtraDataForUnitBuildTile message. Also converts values to other types if specified.
             * @param message ExtraDataForUnitBuildTile
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: WarAction.ActionUnitBuildTile.ExtraDataForUnitBuildTile, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ExtraDataForUnitBuildTile to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of an ActionUnitDive. */
    interface IActionUnitDive {

        /** ActionUnitDive path */
        path?: (Structure.IMovePath|null);

        /** ActionUnitDive launchUnitId */
        launchUnitId?: (number|null);

        /** ActionUnitDive extraData */
        extraData?: (WarAction.ActionUnitDive.IExtraDataForUnitDive|null);
    }

    /** Represents an ActionUnitDive. */
    class ActionUnitDive implements IActionUnitDive {

        /**
         * Constructs a new ActionUnitDive.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarAction.IActionUnitDive);

        /** ActionUnitDive path. */
        public path?: (Structure.IMovePath|null);

        /** ActionUnitDive launchUnitId. */
        public launchUnitId: number;

        /** ActionUnitDive extraData. */
        public extraData?: (WarAction.ActionUnitDive.IExtraDataForUnitDive|null);

        /**
         * Creates a new ActionUnitDive instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActionUnitDive instance
         */
        public static create(properties?: WarAction.IActionUnitDive): WarAction.ActionUnitDive;

        /**
         * Encodes the specified ActionUnitDive message. Does not implicitly {@link WarAction.ActionUnitDive.verify|verify} messages.
         * @param message ActionUnitDive message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarAction.IActionUnitDive, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified ActionUnitDive message, length delimited. Does not implicitly {@link WarAction.ActionUnitDive.verify|verify} messages.
         * @param message ActionUnitDive message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarAction.IActionUnitDive, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an ActionUnitDive message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActionUnitDive
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.ActionUnitDive;

        /**
         * Decodes an ActionUnitDive message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActionUnitDive
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.ActionUnitDive;

        /**
         * Verifies an ActionUnitDive message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActionUnitDive message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActionUnitDive
         */
        public static fromObject(object: { [k: string]: any }): WarAction.ActionUnitDive;

        /**
         * Creates a plain object from an ActionUnitDive message. Also converts values to other types if specified.
         * @param message ActionUnitDive
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarAction.ActionUnitDive, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActionUnitDive to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace ActionUnitDive {

        /** Properties of an ExtraDataForUnitDive. */
        interface IExtraDataForUnitDive {

            /** ExtraDataForUnitDive discoveredUnits */
            discoveredUnits?: (WarSerialization.ISerialUnit[]|null);

            /** ExtraDataForUnitDive discoveredTiles */
            discoveredTiles?: (WarSerialization.ISerialTile[]|null);

            /** ExtraDataForUnitDive actingUnits */
            actingUnits?: (WarSerialization.ISerialUnit[]|null);
        }

        /** Represents an ExtraDataForUnitDive. */
        class ExtraDataForUnitDive implements IExtraDataForUnitDive {

            /**
             * Constructs a new ExtraDataForUnitDive.
             * @param [properties] Properties to set
             */
            constructor(properties?: WarAction.ActionUnitDive.IExtraDataForUnitDive);

            /** ExtraDataForUnitDive discoveredUnits. */
            public discoveredUnits: WarSerialization.ISerialUnit[];

            /** ExtraDataForUnitDive discoveredTiles. */
            public discoveredTiles: WarSerialization.ISerialTile[];

            /** ExtraDataForUnitDive actingUnits. */
            public actingUnits: WarSerialization.ISerialUnit[];

            /**
             * Creates a new ExtraDataForUnitDive instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ExtraDataForUnitDive instance
             */
            public static create(properties?: WarAction.ActionUnitDive.IExtraDataForUnitDive): WarAction.ActionUnitDive.ExtraDataForUnitDive;

            /**
             * Encodes the specified ExtraDataForUnitDive message. Does not implicitly {@link WarAction.ActionUnitDive.ExtraDataForUnitDive.verify|verify} messages.
             * @param message ExtraDataForUnitDive message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: WarAction.ActionUnitDive.IExtraDataForUnitDive, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified ExtraDataForUnitDive message, length delimited. Does not implicitly {@link WarAction.ActionUnitDive.ExtraDataForUnitDive.verify|verify} messages.
             * @param message ExtraDataForUnitDive message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: WarAction.ActionUnitDive.IExtraDataForUnitDive, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an ExtraDataForUnitDive message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ExtraDataForUnitDive
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.ActionUnitDive.ExtraDataForUnitDive;

            /**
             * Decodes an ExtraDataForUnitDive message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ExtraDataForUnitDive
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.ActionUnitDive.ExtraDataForUnitDive;

            /**
             * Verifies an ExtraDataForUnitDive message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ExtraDataForUnitDive message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ExtraDataForUnitDive
             */
            public static fromObject(object: { [k: string]: any }): WarAction.ActionUnitDive.ExtraDataForUnitDive;

            /**
             * Creates a plain object from an ExtraDataForUnitDive message. Also converts values to other types if specified.
             * @param message ExtraDataForUnitDive
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: WarAction.ActionUnitDive.ExtraDataForUnitDive, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ExtraDataForUnitDive to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of an ActionUnitSurface. */
    interface IActionUnitSurface {

        /** ActionUnitSurface path */
        path?: (Structure.IMovePath|null);

        /** ActionUnitSurface launchUnitId */
        launchUnitId?: (number|null);

        /** ActionUnitSurface extraData */
        extraData?: (WarAction.ActionUnitSurface.IExtraDataForUnitSurface|null);
    }

    /** Represents an ActionUnitSurface. */
    class ActionUnitSurface implements IActionUnitSurface {

        /**
         * Constructs a new ActionUnitSurface.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarAction.IActionUnitSurface);

        /** ActionUnitSurface path. */
        public path?: (Structure.IMovePath|null);

        /** ActionUnitSurface launchUnitId. */
        public launchUnitId: number;

        /** ActionUnitSurface extraData. */
        public extraData?: (WarAction.ActionUnitSurface.IExtraDataForUnitSurface|null);

        /**
         * Creates a new ActionUnitSurface instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActionUnitSurface instance
         */
        public static create(properties?: WarAction.IActionUnitSurface): WarAction.ActionUnitSurface;

        /**
         * Encodes the specified ActionUnitSurface message. Does not implicitly {@link WarAction.ActionUnitSurface.verify|verify} messages.
         * @param message ActionUnitSurface message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarAction.IActionUnitSurface, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified ActionUnitSurface message, length delimited. Does not implicitly {@link WarAction.ActionUnitSurface.verify|verify} messages.
         * @param message ActionUnitSurface message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarAction.IActionUnitSurface, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an ActionUnitSurface message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActionUnitSurface
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.ActionUnitSurface;

        /**
         * Decodes an ActionUnitSurface message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActionUnitSurface
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.ActionUnitSurface;

        /**
         * Verifies an ActionUnitSurface message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActionUnitSurface message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActionUnitSurface
         */
        public static fromObject(object: { [k: string]: any }): WarAction.ActionUnitSurface;

        /**
         * Creates a plain object from an ActionUnitSurface message. Also converts values to other types if specified.
         * @param message ActionUnitSurface
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarAction.ActionUnitSurface, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActionUnitSurface to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace ActionUnitSurface {

        /** Properties of an ExtraDataForUnitSurface. */
        interface IExtraDataForUnitSurface {

            /** ExtraDataForUnitSurface discoveredUnits */
            discoveredUnits?: (WarSerialization.ISerialUnit[]|null);

            /** ExtraDataForUnitSurface discoveredTiles */
            discoveredTiles?: (WarSerialization.ISerialTile[]|null);

            /** ExtraDataForUnitSurface actingUnits */
            actingUnits?: (WarSerialization.ISerialUnit[]|null);
        }

        /** Represents an ExtraDataForUnitSurface. */
        class ExtraDataForUnitSurface implements IExtraDataForUnitSurface {

            /**
             * Constructs a new ExtraDataForUnitSurface.
             * @param [properties] Properties to set
             */
            constructor(properties?: WarAction.ActionUnitSurface.IExtraDataForUnitSurface);

            /** ExtraDataForUnitSurface discoveredUnits. */
            public discoveredUnits: WarSerialization.ISerialUnit[];

            /** ExtraDataForUnitSurface discoveredTiles. */
            public discoveredTiles: WarSerialization.ISerialTile[];

            /** ExtraDataForUnitSurface actingUnits. */
            public actingUnits: WarSerialization.ISerialUnit[];

            /**
             * Creates a new ExtraDataForUnitSurface instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ExtraDataForUnitSurface instance
             */
            public static create(properties?: WarAction.ActionUnitSurface.IExtraDataForUnitSurface): WarAction.ActionUnitSurface.ExtraDataForUnitSurface;

            /**
             * Encodes the specified ExtraDataForUnitSurface message. Does not implicitly {@link WarAction.ActionUnitSurface.ExtraDataForUnitSurface.verify|verify} messages.
             * @param message ExtraDataForUnitSurface message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: WarAction.ActionUnitSurface.IExtraDataForUnitSurface, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified ExtraDataForUnitSurface message, length delimited. Does not implicitly {@link WarAction.ActionUnitSurface.ExtraDataForUnitSurface.verify|verify} messages.
             * @param message ExtraDataForUnitSurface message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: WarAction.ActionUnitSurface.IExtraDataForUnitSurface, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an ExtraDataForUnitSurface message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ExtraDataForUnitSurface
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.ActionUnitSurface.ExtraDataForUnitSurface;

            /**
             * Decodes an ExtraDataForUnitSurface message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ExtraDataForUnitSurface
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.ActionUnitSurface.ExtraDataForUnitSurface;

            /**
             * Verifies an ExtraDataForUnitSurface message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ExtraDataForUnitSurface message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ExtraDataForUnitSurface
             */
            public static fromObject(object: { [k: string]: any }): WarAction.ActionUnitSurface.ExtraDataForUnitSurface;

            /**
             * Creates a plain object from an ExtraDataForUnitSurface message. Also converts values to other types if specified.
             * @param message ExtraDataForUnitSurface
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: WarAction.ActionUnitSurface.ExtraDataForUnitSurface, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ExtraDataForUnitSurface to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of an ActionUnitJoinUnit. */
    interface IActionUnitJoinUnit {

        /** ActionUnitJoinUnit path */
        path?: (Structure.IMovePath|null);

        /** ActionUnitJoinUnit launchUnitId */
        launchUnitId?: (number|null);

        /** ActionUnitJoinUnit extraData */
        extraData?: (WarAction.ActionUnitJoinUnit.IExtraDataForUnitJoinUnit|null);
    }

    /** Represents an ActionUnitJoinUnit. */
    class ActionUnitJoinUnit implements IActionUnitJoinUnit {

        /**
         * Constructs a new ActionUnitJoinUnit.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarAction.IActionUnitJoinUnit);

        /** ActionUnitJoinUnit path. */
        public path?: (Structure.IMovePath|null);

        /** ActionUnitJoinUnit launchUnitId. */
        public launchUnitId: number;

        /** ActionUnitJoinUnit extraData. */
        public extraData?: (WarAction.ActionUnitJoinUnit.IExtraDataForUnitJoinUnit|null);

        /**
         * Creates a new ActionUnitJoinUnit instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActionUnitJoinUnit instance
         */
        public static create(properties?: WarAction.IActionUnitJoinUnit): WarAction.ActionUnitJoinUnit;

        /**
         * Encodes the specified ActionUnitJoinUnit message. Does not implicitly {@link WarAction.ActionUnitJoinUnit.verify|verify} messages.
         * @param message ActionUnitJoinUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarAction.IActionUnitJoinUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified ActionUnitJoinUnit message, length delimited. Does not implicitly {@link WarAction.ActionUnitJoinUnit.verify|verify} messages.
         * @param message ActionUnitJoinUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarAction.IActionUnitJoinUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an ActionUnitJoinUnit message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActionUnitJoinUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.ActionUnitJoinUnit;

        /**
         * Decodes an ActionUnitJoinUnit message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActionUnitJoinUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.ActionUnitJoinUnit;

        /**
         * Verifies an ActionUnitJoinUnit message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActionUnitJoinUnit message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActionUnitJoinUnit
         */
        public static fromObject(object: { [k: string]: any }): WarAction.ActionUnitJoinUnit;

        /**
         * Creates a plain object from an ActionUnitJoinUnit message. Also converts values to other types if specified.
         * @param message ActionUnitJoinUnit
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarAction.ActionUnitJoinUnit, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActionUnitJoinUnit to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace ActionUnitJoinUnit {

        /** Properties of an ExtraDataForUnitJoinUnit. */
        interface IExtraDataForUnitJoinUnit {

            /** ExtraDataForUnitJoinUnit discoveredUnits */
            discoveredUnits?: (WarSerialization.ISerialUnit[]|null);

            /** ExtraDataForUnitJoinUnit discoveredTiles */
            discoveredTiles?: (WarSerialization.ISerialTile[]|null);

            /** ExtraDataForUnitJoinUnit actingUnits */
            actingUnits?: (WarSerialization.ISerialUnit[]|null);
        }

        /** Represents an ExtraDataForUnitJoinUnit. */
        class ExtraDataForUnitJoinUnit implements IExtraDataForUnitJoinUnit {

            /**
             * Constructs a new ExtraDataForUnitJoinUnit.
             * @param [properties] Properties to set
             */
            constructor(properties?: WarAction.ActionUnitJoinUnit.IExtraDataForUnitJoinUnit);

            /** ExtraDataForUnitJoinUnit discoveredUnits. */
            public discoveredUnits: WarSerialization.ISerialUnit[];

            /** ExtraDataForUnitJoinUnit discoveredTiles. */
            public discoveredTiles: WarSerialization.ISerialTile[];

            /** ExtraDataForUnitJoinUnit actingUnits. */
            public actingUnits: WarSerialization.ISerialUnit[];

            /**
             * Creates a new ExtraDataForUnitJoinUnit instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ExtraDataForUnitJoinUnit instance
             */
            public static create(properties?: WarAction.ActionUnitJoinUnit.IExtraDataForUnitJoinUnit): WarAction.ActionUnitJoinUnit.ExtraDataForUnitJoinUnit;

            /**
             * Encodes the specified ExtraDataForUnitJoinUnit message. Does not implicitly {@link WarAction.ActionUnitJoinUnit.ExtraDataForUnitJoinUnit.verify|verify} messages.
             * @param message ExtraDataForUnitJoinUnit message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: WarAction.ActionUnitJoinUnit.IExtraDataForUnitJoinUnit, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified ExtraDataForUnitJoinUnit message, length delimited. Does not implicitly {@link WarAction.ActionUnitJoinUnit.ExtraDataForUnitJoinUnit.verify|verify} messages.
             * @param message ExtraDataForUnitJoinUnit message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: WarAction.ActionUnitJoinUnit.IExtraDataForUnitJoinUnit, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an ExtraDataForUnitJoinUnit message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ExtraDataForUnitJoinUnit
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.ActionUnitJoinUnit.ExtraDataForUnitJoinUnit;

            /**
             * Decodes an ExtraDataForUnitJoinUnit message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ExtraDataForUnitJoinUnit
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.ActionUnitJoinUnit.ExtraDataForUnitJoinUnit;

            /**
             * Verifies an ExtraDataForUnitJoinUnit message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ExtraDataForUnitJoinUnit message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ExtraDataForUnitJoinUnit
             */
            public static fromObject(object: { [k: string]: any }): WarAction.ActionUnitJoinUnit.ExtraDataForUnitJoinUnit;

            /**
             * Creates a plain object from an ExtraDataForUnitJoinUnit message. Also converts values to other types if specified.
             * @param message ExtraDataForUnitJoinUnit
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: WarAction.ActionUnitJoinUnit.ExtraDataForUnitJoinUnit, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ExtraDataForUnitJoinUnit to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of an ActionUnitLaunchFlare. */
    interface IActionUnitLaunchFlare {

        /** ActionUnitLaunchFlare path */
        path?: (Structure.IMovePath|null);

        /** ActionUnitLaunchFlare launchUnitId */
        launchUnitId?: (number|null);

        /** ActionUnitLaunchFlare targetGridIndex */
        targetGridIndex?: (Structure.IGridIndex|null);

        /** ActionUnitLaunchFlare extraData */
        extraData?: (WarAction.ActionUnitLaunchFlare.IExtraDataForUnitLaunchFlare|null);
    }

    /** Represents an ActionUnitLaunchFlare. */
    class ActionUnitLaunchFlare implements IActionUnitLaunchFlare {

        /**
         * Constructs a new ActionUnitLaunchFlare.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarAction.IActionUnitLaunchFlare);

        /** ActionUnitLaunchFlare path. */
        public path?: (Structure.IMovePath|null);

        /** ActionUnitLaunchFlare launchUnitId. */
        public launchUnitId: number;

        /** ActionUnitLaunchFlare targetGridIndex. */
        public targetGridIndex?: (Structure.IGridIndex|null);

        /** ActionUnitLaunchFlare extraData. */
        public extraData?: (WarAction.ActionUnitLaunchFlare.IExtraDataForUnitLaunchFlare|null);

        /**
         * Creates a new ActionUnitLaunchFlare instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActionUnitLaunchFlare instance
         */
        public static create(properties?: WarAction.IActionUnitLaunchFlare): WarAction.ActionUnitLaunchFlare;

        /**
         * Encodes the specified ActionUnitLaunchFlare message. Does not implicitly {@link WarAction.ActionUnitLaunchFlare.verify|verify} messages.
         * @param message ActionUnitLaunchFlare message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarAction.IActionUnitLaunchFlare, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified ActionUnitLaunchFlare message, length delimited. Does not implicitly {@link WarAction.ActionUnitLaunchFlare.verify|verify} messages.
         * @param message ActionUnitLaunchFlare message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarAction.IActionUnitLaunchFlare, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an ActionUnitLaunchFlare message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActionUnitLaunchFlare
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.ActionUnitLaunchFlare;

        /**
         * Decodes an ActionUnitLaunchFlare message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActionUnitLaunchFlare
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.ActionUnitLaunchFlare;

        /**
         * Verifies an ActionUnitLaunchFlare message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActionUnitLaunchFlare message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActionUnitLaunchFlare
         */
        public static fromObject(object: { [k: string]: any }): WarAction.ActionUnitLaunchFlare;

        /**
         * Creates a plain object from an ActionUnitLaunchFlare message. Also converts values to other types if specified.
         * @param message ActionUnitLaunchFlare
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarAction.ActionUnitLaunchFlare, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActionUnitLaunchFlare to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace ActionUnitLaunchFlare {

        /** Properties of an ExtraDataForUnitLaunchFlare. */
        interface IExtraDataForUnitLaunchFlare {

            /** ExtraDataForUnitLaunchFlare discoveredUnits */
            discoveredUnits?: (WarSerialization.ISerialUnit[]|null);

            /** ExtraDataForUnitLaunchFlare discoveredTiles */
            discoveredTiles?: (WarSerialization.ISerialTile[]|null);

            /** ExtraDataForUnitLaunchFlare actingUnits */
            actingUnits?: (WarSerialization.ISerialUnit[]|null);
        }

        /** Represents an ExtraDataForUnitLaunchFlare. */
        class ExtraDataForUnitLaunchFlare implements IExtraDataForUnitLaunchFlare {

            /**
             * Constructs a new ExtraDataForUnitLaunchFlare.
             * @param [properties] Properties to set
             */
            constructor(properties?: WarAction.ActionUnitLaunchFlare.IExtraDataForUnitLaunchFlare);

            /** ExtraDataForUnitLaunchFlare discoveredUnits. */
            public discoveredUnits: WarSerialization.ISerialUnit[];

            /** ExtraDataForUnitLaunchFlare discoveredTiles. */
            public discoveredTiles: WarSerialization.ISerialTile[];

            /** ExtraDataForUnitLaunchFlare actingUnits. */
            public actingUnits: WarSerialization.ISerialUnit[];

            /**
             * Creates a new ExtraDataForUnitLaunchFlare instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ExtraDataForUnitLaunchFlare instance
             */
            public static create(properties?: WarAction.ActionUnitLaunchFlare.IExtraDataForUnitLaunchFlare): WarAction.ActionUnitLaunchFlare.ExtraDataForUnitLaunchFlare;

            /**
             * Encodes the specified ExtraDataForUnitLaunchFlare message. Does not implicitly {@link WarAction.ActionUnitLaunchFlare.ExtraDataForUnitLaunchFlare.verify|verify} messages.
             * @param message ExtraDataForUnitLaunchFlare message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: WarAction.ActionUnitLaunchFlare.IExtraDataForUnitLaunchFlare, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified ExtraDataForUnitLaunchFlare message, length delimited. Does not implicitly {@link WarAction.ActionUnitLaunchFlare.ExtraDataForUnitLaunchFlare.verify|verify} messages.
             * @param message ExtraDataForUnitLaunchFlare message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: WarAction.ActionUnitLaunchFlare.IExtraDataForUnitLaunchFlare, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an ExtraDataForUnitLaunchFlare message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ExtraDataForUnitLaunchFlare
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.ActionUnitLaunchFlare.ExtraDataForUnitLaunchFlare;

            /**
             * Decodes an ExtraDataForUnitLaunchFlare message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ExtraDataForUnitLaunchFlare
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.ActionUnitLaunchFlare.ExtraDataForUnitLaunchFlare;

            /**
             * Verifies an ExtraDataForUnitLaunchFlare message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ExtraDataForUnitLaunchFlare message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ExtraDataForUnitLaunchFlare
             */
            public static fromObject(object: { [k: string]: any }): WarAction.ActionUnitLaunchFlare.ExtraDataForUnitLaunchFlare;

            /**
             * Creates a plain object from an ExtraDataForUnitLaunchFlare message. Also converts values to other types if specified.
             * @param message ExtraDataForUnitLaunchFlare
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: WarAction.ActionUnitLaunchFlare.ExtraDataForUnitLaunchFlare, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ExtraDataForUnitLaunchFlare to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of an ActionUnitLaunchSilo. */
    interface IActionUnitLaunchSilo {

        /** ActionUnitLaunchSilo path */
        path?: (Structure.IMovePath|null);

        /** ActionUnitLaunchSilo launchUnitId */
        launchUnitId?: (number|null);

        /** ActionUnitLaunchSilo targetGridIndex */
        targetGridIndex?: (Structure.IGridIndex|null);

        /** ActionUnitLaunchSilo extraData */
        extraData?: (WarAction.ActionUnitLaunchSilo.IExtraDataForUnitLaunchSilo|null);
    }

    /** Represents an ActionUnitLaunchSilo. */
    class ActionUnitLaunchSilo implements IActionUnitLaunchSilo {

        /**
         * Constructs a new ActionUnitLaunchSilo.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarAction.IActionUnitLaunchSilo);

        /** ActionUnitLaunchSilo path. */
        public path?: (Structure.IMovePath|null);

        /** ActionUnitLaunchSilo launchUnitId. */
        public launchUnitId: number;

        /** ActionUnitLaunchSilo targetGridIndex. */
        public targetGridIndex?: (Structure.IGridIndex|null);

        /** ActionUnitLaunchSilo extraData. */
        public extraData?: (WarAction.ActionUnitLaunchSilo.IExtraDataForUnitLaunchSilo|null);

        /**
         * Creates a new ActionUnitLaunchSilo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActionUnitLaunchSilo instance
         */
        public static create(properties?: WarAction.IActionUnitLaunchSilo): WarAction.ActionUnitLaunchSilo;

        /**
         * Encodes the specified ActionUnitLaunchSilo message. Does not implicitly {@link WarAction.ActionUnitLaunchSilo.verify|verify} messages.
         * @param message ActionUnitLaunchSilo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarAction.IActionUnitLaunchSilo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified ActionUnitLaunchSilo message, length delimited. Does not implicitly {@link WarAction.ActionUnitLaunchSilo.verify|verify} messages.
         * @param message ActionUnitLaunchSilo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarAction.IActionUnitLaunchSilo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an ActionUnitLaunchSilo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActionUnitLaunchSilo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.ActionUnitLaunchSilo;

        /**
         * Decodes an ActionUnitLaunchSilo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActionUnitLaunchSilo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.ActionUnitLaunchSilo;

        /**
         * Verifies an ActionUnitLaunchSilo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActionUnitLaunchSilo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActionUnitLaunchSilo
         */
        public static fromObject(object: { [k: string]: any }): WarAction.ActionUnitLaunchSilo;

        /**
         * Creates a plain object from an ActionUnitLaunchSilo message. Also converts values to other types if specified.
         * @param message ActionUnitLaunchSilo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarAction.ActionUnitLaunchSilo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActionUnitLaunchSilo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace ActionUnitLaunchSilo {

        /** Properties of an ExtraDataForUnitLaunchSilo. */
        interface IExtraDataForUnitLaunchSilo {

            /** ExtraDataForUnitLaunchSilo discoveredUnits */
            discoveredUnits?: (WarSerialization.ISerialUnit[]|null);

            /** ExtraDataForUnitLaunchSilo discoveredTiles */
            discoveredTiles?: (WarSerialization.ISerialTile[]|null);

            /** ExtraDataForUnitLaunchSilo actingUnits */
            actingUnits?: (WarSerialization.ISerialUnit[]|null);
        }

        /** Represents an ExtraDataForUnitLaunchSilo. */
        class ExtraDataForUnitLaunchSilo implements IExtraDataForUnitLaunchSilo {

            /**
             * Constructs a new ExtraDataForUnitLaunchSilo.
             * @param [properties] Properties to set
             */
            constructor(properties?: WarAction.ActionUnitLaunchSilo.IExtraDataForUnitLaunchSilo);

            /** ExtraDataForUnitLaunchSilo discoveredUnits. */
            public discoveredUnits: WarSerialization.ISerialUnit[];

            /** ExtraDataForUnitLaunchSilo discoveredTiles. */
            public discoveredTiles: WarSerialization.ISerialTile[];

            /** ExtraDataForUnitLaunchSilo actingUnits. */
            public actingUnits: WarSerialization.ISerialUnit[];

            /**
             * Creates a new ExtraDataForUnitLaunchSilo instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ExtraDataForUnitLaunchSilo instance
             */
            public static create(properties?: WarAction.ActionUnitLaunchSilo.IExtraDataForUnitLaunchSilo): WarAction.ActionUnitLaunchSilo.ExtraDataForUnitLaunchSilo;

            /**
             * Encodes the specified ExtraDataForUnitLaunchSilo message. Does not implicitly {@link WarAction.ActionUnitLaunchSilo.ExtraDataForUnitLaunchSilo.verify|verify} messages.
             * @param message ExtraDataForUnitLaunchSilo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: WarAction.ActionUnitLaunchSilo.IExtraDataForUnitLaunchSilo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified ExtraDataForUnitLaunchSilo message, length delimited. Does not implicitly {@link WarAction.ActionUnitLaunchSilo.ExtraDataForUnitLaunchSilo.verify|verify} messages.
             * @param message ExtraDataForUnitLaunchSilo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: WarAction.ActionUnitLaunchSilo.IExtraDataForUnitLaunchSilo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an ExtraDataForUnitLaunchSilo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ExtraDataForUnitLaunchSilo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.ActionUnitLaunchSilo.ExtraDataForUnitLaunchSilo;

            /**
             * Decodes an ExtraDataForUnitLaunchSilo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ExtraDataForUnitLaunchSilo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.ActionUnitLaunchSilo.ExtraDataForUnitLaunchSilo;

            /**
             * Verifies an ExtraDataForUnitLaunchSilo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ExtraDataForUnitLaunchSilo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ExtraDataForUnitLaunchSilo
             */
            public static fromObject(object: { [k: string]: any }): WarAction.ActionUnitLaunchSilo.ExtraDataForUnitLaunchSilo;

            /**
             * Creates a plain object from an ExtraDataForUnitLaunchSilo message. Also converts values to other types if specified.
             * @param message ExtraDataForUnitLaunchSilo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: WarAction.ActionUnitLaunchSilo.ExtraDataForUnitLaunchSilo, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ExtraDataForUnitLaunchSilo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of an ActionUnitProduceUnit. */
    interface IActionUnitProduceUnit {

        /** ActionUnitProduceUnit path */
        path?: (Structure.IMovePath|null);

        /** ActionUnitProduceUnit launchUnitId */
        launchUnitId?: (number|null);

        /** ActionUnitProduceUnit extraData */
        extraData?: (WarAction.ActionUnitProduceUnit.IExtraDataForUnitProduceUnit|null);
    }

    /** Represents an ActionUnitProduceUnit. */
    class ActionUnitProduceUnit implements IActionUnitProduceUnit {

        /**
         * Constructs a new ActionUnitProduceUnit.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarAction.IActionUnitProduceUnit);

        /** ActionUnitProduceUnit path. */
        public path?: (Structure.IMovePath|null);

        /** ActionUnitProduceUnit launchUnitId. */
        public launchUnitId: number;

        /** ActionUnitProduceUnit extraData. */
        public extraData?: (WarAction.ActionUnitProduceUnit.IExtraDataForUnitProduceUnit|null);

        /**
         * Creates a new ActionUnitProduceUnit instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActionUnitProduceUnit instance
         */
        public static create(properties?: WarAction.IActionUnitProduceUnit): WarAction.ActionUnitProduceUnit;

        /**
         * Encodes the specified ActionUnitProduceUnit message. Does not implicitly {@link WarAction.ActionUnitProduceUnit.verify|verify} messages.
         * @param message ActionUnitProduceUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarAction.IActionUnitProduceUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified ActionUnitProduceUnit message, length delimited. Does not implicitly {@link WarAction.ActionUnitProduceUnit.verify|verify} messages.
         * @param message ActionUnitProduceUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarAction.IActionUnitProduceUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an ActionUnitProduceUnit message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActionUnitProduceUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.ActionUnitProduceUnit;

        /**
         * Decodes an ActionUnitProduceUnit message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActionUnitProduceUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.ActionUnitProduceUnit;

        /**
         * Verifies an ActionUnitProduceUnit message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActionUnitProduceUnit message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActionUnitProduceUnit
         */
        public static fromObject(object: { [k: string]: any }): WarAction.ActionUnitProduceUnit;

        /**
         * Creates a plain object from an ActionUnitProduceUnit message. Also converts values to other types if specified.
         * @param message ActionUnitProduceUnit
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarAction.ActionUnitProduceUnit, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActionUnitProduceUnit to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace ActionUnitProduceUnit {

        /** Properties of an ExtraDataForUnitProduceUnit. */
        interface IExtraDataForUnitProduceUnit {

            /** ExtraDataForUnitProduceUnit discoveredUnits */
            discoveredUnits?: (WarSerialization.ISerialUnit[]|null);

            /** ExtraDataForUnitProduceUnit discoveredTiles */
            discoveredTiles?: (WarSerialization.ISerialTile[]|null);

            /** ExtraDataForUnitProduceUnit actingUnits */
            actingUnits?: (WarSerialization.ISerialUnit[]|null);

            /** ExtraDataForUnitProduceUnit cost */
            cost?: (number|null);
        }

        /** Represents an ExtraDataForUnitProduceUnit. */
        class ExtraDataForUnitProduceUnit implements IExtraDataForUnitProduceUnit {

            /**
             * Constructs a new ExtraDataForUnitProduceUnit.
             * @param [properties] Properties to set
             */
            constructor(properties?: WarAction.ActionUnitProduceUnit.IExtraDataForUnitProduceUnit);

            /** ExtraDataForUnitProduceUnit discoveredUnits. */
            public discoveredUnits: WarSerialization.ISerialUnit[];

            /** ExtraDataForUnitProduceUnit discoveredTiles. */
            public discoveredTiles: WarSerialization.ISerialTile[];

            /** ExtraDataForUnitProduceUnit actingUnits. */
            public actingUnits: WarSerialization.ISerialUnit[];

            /** ExtraDataForUnitProduceUnit cost. */
            public cost: number;

            /**
             * Creates a new ExtraDataForUnitProduceUnit instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ExtraDataForUnitProduceUnit instance
             */
            public static create(properties?: WarAction.ActionUnitProduceUnit.IExtraDataForUnitProduceUnit): WarAction.ActionUnitProduceUnit.ExtraDataForUnitProduceUnit;

            /**
             * Encodes the specified ExtraDataForUnitProduceUnit message. Does not implicitly {@link WarAction.ActionUnitProduceUnit.ExtraDataForUnitProduceUnit.verify|verify} messages.
             * @param message ExtraDataForUnitProduceUnit message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: WarAction.ActionUnitProduceUnit.IExtraDataForUnitProduceUnit, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified ExtraDataForUnitProduceUnit message, length delimited. Does not implicitly {@link WarAction.ActionUnitProduceUnit.ExtraDataForUnitProduceUnit.verify|verify} messages.
             * @param message ExtraDataForUnitProduceUnit message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: WarAction.ActionUnitProduceUnit.IExtraDataForUnitProduceUnit, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an ExtraDataForUnitProduceUnit message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ExtraDataForUnitProduceUnit
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.ActionUnitProduceUnit.ExtraDataForUnitProduceUnit;

            /**
             * Decodes an ExtraDataForUnitProduceUnit message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ExtraDataForUnitProduceUnit
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.ActionUnitProduceUnit.ExtraDataForUnitProduceUnit;

            /**
             * Verifies an ExtraDataForUnitProduceUnit message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ExtraDataForUnitProduceUnit message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ExtraDataForUnitProduceUnit
             */
            public static fromObject(object: { [k: string]: any }): WarAction.ActionUnitProduceUnit.ExtraDataForUnitProduceUnit;

            /**
             * Creates a plain object from an ExtraDataForUnitProduceUnit message. Also converts values to other types if specified.
             * @param message ExtraDataForUnitProduceUnit
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: WarAction.ActionUnitProduceUnit.ExtraDataForUnitProduceUnit, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ExtraDataForUnitProduceUnit to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of an ActionUnitSupplyUnit. */
    interface IActionUnitSupplyUnit {

        /** ActionUnitSupplyUnit path */
        path?: (Structure.IMovePath|null);

        /** ActionUnitSupplyUnit launchUnitId */
        launchUnitId?: (number|null);

        /** ActionUnitSupplyUnit extraData */
        extraData?: (WarAction.ActionUnitSupplyUnit.IExtraDataForUnitSupplyUnit|null);
    }

    /** Represents an ActionUnitSupplyUnit. */
    class ActionUnitSupplyUnit implements IActionUnitSupplyUnit {

        /**
         * Constructs a new ActionUnitSupplyUnit.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarAction.IActionUnitSupplyUnit);

        /** ActionUnitSupplyUnit path. */
        public path?: (Structure.IMovePath|null);

        /** ActionUnitSupplyUnit launchUnitId. */
        public launchUnitId: number;

        /** ActionUnitSupplyUnit extraData. */
        public extraData?: (WarAction.ActionUnitSupplyUnit.IExtraDataForUnitSupplyUnit|null);

        /**
         * Creates a new ActionUnitSupplyUnit instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActionUnitSupplyUnit instance
         */
        public static create(properties?: WarAction.IActionUnitSupplyUnit): WarAction.ActionUnitSupplyUnit;

        /**
         * Encodes the specified ActionUnitSupplyUnit message. Does not implicitly {@link WarAction.ActionUnitSupplyUnit.verify|verify} messages.
         * @param message ActionUnitSupplyUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarAction.IActionUnitSupplyUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified ActionUnitSupplyUnit message, length delimited. Does not implicitly {@link WarAction.ActionUnitSupplyUnit.verify|verify} messages.
         * @param message ActionUnitSupplyUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarAction.IActionUnitSupplyUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an ActionUnitSupplyUnit message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActionUnitSupplyUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.ActionUnitSupplyUnit;

        /**
         * Decodes an ActionUnitSupplyUnit message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActionUnitSupplyUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.ActionUnitSupplyUnit;

        /**
         * Verifies an ActionUnitSupplyUnit message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActionUnitSupplyUnit message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActionUnitSupplyUnit
         */
        public static fromObject(object: { [k: string]: any }): WarAction.ActionUnitSupplyUnit;

        /**
         * Creates a plain object from an ActionUnitSupplyUnit message. Also converts values to other types if specified.
         * @param message ActionUnitSupplyUnit
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarAction.ActionUnitSupplyUnit, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActionUnitSupplyUnit to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace ActionUnitSupplyUnit {

        /** Properties of an ExtraDataForUnitSupplyUnit. */
        interface IExtraDataForUnitSupplyUnit {

            /** ExtraDataForUnitSupplyUnit discoveredUnits */
            discoveredUnits?: (WarSerialization.ISerialUnit[]|null);

            /** ExtraDataForUnitSupplyUnit discoveredTiles */
            discoveredTiles?: (WarSerialization.ISerialTile[]|null);

            /** ExtraDataForUnitSupplyUnit actingUnits */
            actingUnits?: (WarSerialization.ISerialUnit[]|null);
        }

        /** Represents an ExtraDataForUnitSupplyUnit. */
        class ExtraDataForUnitSupplyUnit implements IExtraDataForUnitSupplyUnit {

            /**
             * Constructs a new ExtraDataForUnitSupplyUnit.
             * @param [properties] Properties to set
             */
            constructor(properties?: WarAction.ActionUnitSupplyUnit.IExtraDataForUnitSupplyUnit);

            /** ExtraDataForUnitSupplyUnit discoveredUnits. */
            public discoveredUnits: WarSerialization.ISerialUnit[];

            /** ExtraDataForUnitSupplyUnit discoveredTiles. */
            public discoveredTiles: WarSerialization.ISerialTile[];

            /** ExtraDataForUnitSupplyUnit actingUnits. */
            public actingUnits: WarSerialization.ISerialUnit[];

            /**
             * Creates a new ExtraDataForUnitSupplyUnit instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ExtraDataForUnitSupplyUnit instance
             */
            public static create(properties?: WarAction.ActionUnitSupplyUnit.IExtraDataForUnitSupplyUnit): WarAction.ActionUnitSupplyUnit.ExtraDataForUnitSupplyUnit;

            /**
             * Encodes the specified ExtraDataForUnitSupplyUnit message. Does not implicitly {@link WarAction.ActionUnitSupplyUnit.ExtraDataForUnitSupplyUnit.verify|verify} messages.
             * @param message ExtraDataForUnitSupplyUnit message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: WarAction.ActionUnitSupplyUnit.IExtraDataForUnitSupplyUnit, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified ExtraDataForUnitSupplyUnit message, length delimited. Does not implicitly {@link WarAction.ActionUnitSupplyUnit.ExtraDataForUnitSupplyUnit.verify|verify} messages.
             * @param message ExtraDataForUnitSupplyUnit message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: WarAction.ActionUnitSupplyUnit.IExtraDataForUnitSupplyUnit, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an ExtraDataForUnitSupplyUnit message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ExtraDataForUnitSupplyUnit
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.ActionUnitSupplyUnit.ExtraDataForUnitSupplyUnit;

            /**
             * Decodes an ExtraDataForUnitSupplyUnit message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ExtraDataForUnitSupplyUnit
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.ActionUnitSupplyUnit.ExtraDataForUnitSupplyUnit;

            /**
             * Verifies an ExtraDataForUnitSupplyUnit message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ExtraDataForUnitSupplyUnit message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ExtraDataForUnitSupplyUnit
             */
            public static fromObject(object: { [k: string]: any }): WarAction.ActionUnitSupplyUnit.ExtraDataForUnitSupplyUnit;

            /**
             * Creates a plain object from an ExtraDataForUnitSupplyUnit message. Also converts values to other types if specified.
             * @param message ExtraDataForUnitSupplyUnit
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: WarAction.ActionUnitSupplyUnit.ExtraDataForUnitSupplyUnit, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ExtraDataForUnitSupplyUnit to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of an ActionUnitLoadCo. */
    interface IActionUnitLoadCo {

        /** ActionUnitLoadCo path */
        path?: (Structure.IMovePath|null);

        /** ActionUnitLoadCo launchUnitId */
        launchUnitId?: (number|null);

        /** ActionUnitLoadCo extraData */
        extraData?: (WarAction.ActionUnitLoadCo.IExtraDataForUnitLoadCo|null);
    }

    /** Represents an ActionUnitLoadCo. */
    class ActionUnitLoadCo implements IActionUnitLoadCo {

        /**
         * Constructs a new ActionUnitLoadCo.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarAction.IActionUnitLoadCo);

        /** ActionUnitLoadCo path. */
        public path?: (Structure.IMovePath|null);

        /** ActionUnitLoadCo launchUnitId. */
        public launchUnitId: number;

        /** ActionUnitLoadCo extraData. */
        public extraData?: (WarAction.ActionUnitLoadCo.IExtraDataForUnitLoadCo|null);

        /**
         * Creates a new ActionUnitLoadCo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActionUnitLoadCo instance
         */
        public static create(properties?: WarAction.IActionUnitLoadCo): WarAction.ActionUnitLoadCo;

        /**
         * Encodes the specified ActionUnitLoadCo message. Does not implicitly {@link WarAction.ActionUnitLoadCo.verify|verify} messages.
         * @param message ActionUnitLoadCo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarAction.IActionUnitLoadCo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified ActionUnitLoadCo message, length delimited. Does not implicitly {@link WarAction.ActionUnitLoadCo.verify|verify} messages.
         * @param message ActionUnitLoadCo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarAction.IActionUnitLoadCo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an ActionUnitLoadCo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActionUnitLoadCo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.ActionUnitLoadCo;

        /**
         * Decodes an ActionUnitLoadCo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActionUnitLoadCo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.ActionUnitLoadCo;

        /**
         * Verifies an ActionUnitLoadCo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActionUnitLoadCo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActionUnitLoadCo
         */
        public static fromObject(object: { [k: string]: any }): WarAction.ActionUnitLoadCo;

        /**
         * Creates a plain object from an ActionUnitLoadCo message. Also converts values to other types if specified.
         * @param message ActionUnitLoadCo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarAction.ActionUnitLoadCo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActionUnitLoadCo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace ActionUnitLoadCo {

        /** Properties of an ExtraDataForUnitLoadCo. */
        interface IExtraDataForUnitLoadCo {

            /** ExtraDataForUnitLoadCo discoveredUnits */
            discoveredUnits?: (WarSerialization.ISerialUnit[]|null);

            /** ExtraDataForUnitLoadCo discoveredTiles */
            discoveredTiles?: (WarSerialization.ISerialTile[]|null);

            /** ExtraDataForUnitLoadCo actingUnits */
            actingUnits?: (WarSerialization.ISerialUnit[]|null);
        }

        /** Represents an ExtraDataForUnitLoadCo. */
        class ExtraDataForUnitLoadCo implements IExtraDataForUnitLoadCo {

            /**
             * Constructs a new ExtraDataForUnitLoadCo.
             * @param [properties] Properties to set
             */
            constructor(properties?: WarAction.ActionUnitLoadCo.IExtraDataForUnitLoadCo);

            /** ExtraDataForUnitLoadCo discoveredUnits. */
            public discoveredUnits: WarSerialization.ISerialUnit[];

            /** ExtraDataForUnitLoadCo discoveredTiles. */
            public discoveredTiles: WarSerialization.ISerialTile[];

            /** ExtraDataForUnitLoadCo actingUnits. */
            public actingUnits: WarSerialization.ISerialUnit[];

            /**
             * Creates a new ExtraDataForUnitLoadCo instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ExtraDataForUnitLoadCo instance
             */
            public static create(properties?: WarAction.ActionUnitLoadCo.IExtraDataForUnitLoadCo): WarAction.ActionUnitLoadCo.ExtraDataForUnitLoadCo;

            /**
             * Encodes the specified ExtraDataForUnitLoadCo message. Does not implicitly {@link WarAction.ActionUnitLoadCo.ExtraDataForUnitLoadCo.verify|verify} messages.
             * @param message ExtraDataForUnitLoadCo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: WarAction.ActionUnitLoadCo.IExtraDataForUnitLoadCo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified ExtraDataForUnitLoadCo message, length delimited. Does not implicitly {@link WarAction.ActionUnitLoadCo.ExtraDataForUnitLoadCo.verify|verify} messages.
             * @param message ExtraDataForUnitLoadCo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: WarAction.ActionUnitLoadCo.IExtraDataForUnitLoadCo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an ExtraDataForUnitLoadCo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ExtraDataForUnitLoadCo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.ActionUnitLoadCo.ExtraDataForUnitLoadCo;

            /**
             * Decodes an ExtraDataForUnitLoadCo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ExtraDataForUnitLoadCo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.ActionUnitLoadCo.ExtraDataForUnitLoadCo;

            /**
             * Verifies an ExtraDataForUnitLoadCo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ExtraDataForUnitLoadCo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ExtraDataForUnitLoadCo
             */
            public static fromObject(object: { [k: string]: any }): WarAction.ActionUnitLoadCo.ExtraDataForUnitLoadCo;

            /**
             * Creates a plain object from an ExtraDataForUnitLoadCo message. Also converts values to other types if specified.
             * @param message ExtraDataForUnitLoadCo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: WarAction.ActionUnitLoadCo.ExtraDataForUnitLoadCo, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ExtraDataForUnitLoadCo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of an ActionUnitUseCoSkill. */
    interface IActionUnitUseCoSkill {

        /** ActionUnitUseCoSkill path */
        path?: (Structure.IMovePath|null);

        /** ActionUnitUseCoSkill launchUnitId */
        launchUnitId?: (number|null);

        /** ActionUnitUseCoSkill skillType */
        skillType?: (number|null);

        /** ActionUnitUseCoSkill extraData */
        extraData?: (WarAction.ActionUnitUseCoSkill.IExtraDataForUnitUseCoSkill|null);
    }

    /** Represents an ActionUnitUseCoSkill. */
    class ActionUnitUseCoSkill implements IActionUnitUseCoSkill {

        /**
         * Constructs a new ActionUnitUseCoSkill.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarAction.IActionUnitUseCoSkill);

        /** ActionUnitUseCoSkill path. */
        public path?: (Structure.IMovePath|null);

        /** ActionUnitUseCoSkill launchUnitId. */
        public launchUnitId: number;

        /** ActionUnitUseCoSkill skillType. */
        public skillType: number;

        /** ActionUnitUseCoSkill extraData. */
        public extraData?: (WarAction.ActionUnitUseCoSkill.IExtraDataForUnitUseCoSkill|null);

        /**
         * Creates a new ActionUnitUseCoSkill instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActionUnitUseCoSkill instance
         */
        public static create(properties?: WarAction.IActionUnitUseCoSkill): WarAction.ActionUnitUseCoSkill;

        /**
         * Encodes the specified ActionUnitUseCoSkill message. Does not implicitly {@link WarAction.ActionUnitUseCoSkill.verify|verify} messages.
         * @param message ActionUnitUseCoSkill message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarAction.IActionUnitUseCoSkill, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified ActionUnitUseCoSkill message, length delimited. Does not implicitly {@link WarAction.ActionUnitUseCoSkill.verify|verify} messages.
         * @param message ActionUnitUseCoSkill message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarAction.IActionUnitUseCoSkill, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an ActionUnitUseCoSkill message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActionUnitUseCoSkill
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.ActionUnitUseCoSkill;

        /**
         * Decodes an ActionUnitUseCoSkill message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActionUnitUseCoSkill
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.ActionUnitUseCoSkill;

        /**
         * Verifies an ActionUnitUseCoSkill message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActionUnitUseCoSkill message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActionUnitUseCoSkill
         */
        public static fromObject(object: { [k: string]: any }): WarAction.ActionUnitUseCoSkill;

        /**
         * Creates a plain object from an ActionUnitUseCoSkill message. Also converts values to other types if specified.
         * @param message ActionUnitUseCoSkill
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarAction.ActionUnitUseCoSkill, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActionUnitUseCoSkill to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace ActionUnitUseCoSkill {

        /** Properties of an ExtraDataForUnitUseCoSkill. */
        interface IExtraDataForUnitUseCoSkill {

            /** ExtraDataForUnitUseCoSkill discoveredUnits */
            discoveredUnits?: (WarSerialization.ISerialUnit[]|null);

            /** ExtraDataForUnitUseCoSkill discoveredTiles */
            discoveredTiles?: (WarSerialization.ISerialTile[]|null);

            /** ExtraDataForUnitUseCoSkill actingUnits */
            actingUnits?: (WarSerialization.ISerialUnit[]|null);

            /** ExtraDataForUnitUseCoSkill skillDataList */
            skillDataList?: (Structure.IDataForUseCoSkill[]|null);
        }

        /** Represents an ExtraDataForUnitUseCoSkill. */
        class ExtraDataForUnitUseCoSkill implements IExtraDataForUnitUseCoSkill {

            /**
             * Constructs a new ExtraDataForUnitUseCoSkill.
             * @param [properties] Properties to set
             */
            constructor(properties?: WarAction.ActionUnitUseCoSkill.IExtraDataForUnitUseCoSkill);

            /** ExtraDataForUnitUseCoSkill discoveredUnits. */
            public discoveredUnits: WarSerialization.ISerialUnit[];

            /** ExtraDataForUnitUseCoSkill discoveredTiles. */
            public discoveredTiles: WarSerialization.ISerialTile[];

            /** ExtraDataForUnitUseCoSkill actingUnits. */
            public actingUnits: WarSerialization.ISerialUnit[];

            /** ExtraDataForUnitUseCoSkill skillDataList. */
            public skillDataList: Structure.IDataForUseCoSkill[];

            /**
             * Creates a new ExtraDataForUnitUseCoSkill instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ExtraDataForUnitUseCoSkill instance
             */
            public static create(properties?: WarAction.ActionUnitUseCoSkill.IExtraDataForUnitUseCoSkill): WarAction.ActionUnitUseCoSkill.ExtraDataForUnitUseCoSkill;

            /**
             * Encodes the specified ExtraDataForUnitUseCoSkill message. Does not implicitly {@link WarAction.ActionUnitUseCoSkill.ExtraDataForUnitUseCoSkill.verify|verify} messages.
             * @param message ExtraDataForUnitUseCoSkill message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: WarAction.ActionUnitUseCoSkill.IExtraDataForUnitUseCoSkill, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified ExtraDataForUnitUseCoSkill message, length delimited. Does not implicitly {@link WarAction.ActionUnitUseCoSkill.ExtraDataForUnitUseCoSkill.verify|verify} messages.
             * @param message ExtraDataForUnitUseCoSkill message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: WarAction.ActionUnitUseCoSkill.IExtraDataForUnitUseCoSkill, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an ExtraDataForUnitUseCoSkill message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ExtraDataForUnitUseCoSkill
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.ActionUnitUseCoSkill.ExtraDataForUnitUseCoSkill;

            /**
             * Decodes an ExtraDataForUnitUseCoSkill message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ExtraDataForUnitUseCoSkill
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.ActionUnitUseCoSkill.ExtraDataForUnitUseCoSkill;

            /**
             * Verifies an ExtraDataForUnitUseCoSkill message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ExtraDataForUnitUseCoSkill message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ExtraDataForUnitUseCoSkill
             */
            public static fromObject(object: { [k: string]: any }): WarAction.ActionUnitUseCoSkill.ExtraDataForUnitUseCoSkill;

            /**
             * Creates a plain object from an ExtraDataForUnitUseCoSkill message. Also converts values to other types if specified.
             * @param message ExtraDataForUnitUseCoSkill
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: WarAction.ActionUnitUseCoSkill.ExtraDataForUnitUseCoSkill, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ExtraDataForUnitUseCoSkill to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of an ActionContainer. */
    interface IActionContainer {

        /** ActionContainer actionId */
        actionId?: (number|null);

        /** ActionContainer ActionPlayerBeginTurn */
        ActionPlayerBeginTurn?: (WarAction.IActionPlayerBeginTurn|null);

        /** ActionContainer ActionPlayerEndTurn */
        ActionPlayerEndTurn?: (WarAction.IActionPlayerEndTurn|null);

        /** ActionContainer ActionPlayerSurrender */
        ActionPlayerSurrender?: (WarAction.IActionPlayerSurrender|null);

        /** ActionContainer ActionPlayerProduceUnit */
        ActionPlayerProduceUnit?: (WarAction.IActionPlayerProduceUnit|null);

        /** ActionContainer ActionPlayerDeleteUnit */
        ActionPlayerDeleteUnit?: (WarAction.IActionPlayerDeleteUnit|null);

        /** ActionContainer ActionPlayerVoteForDraw */
        ActionPlayerVoteForDraw?: (WarAction.IActionPlayerVoteForDraw|null);

        /** ActionContainer ActionUnitWait */
        ActionUnitWait?: (WarAction.IActionUnitWait|null);

        /** ActionContainer ActionUnitBeLoaded */
        ActionUnitBeLoaded?: (WarAction.IActionUnitBeLoaded|null);

        /** ActionContainer ActionUnitCaptureTile */
        ActionUnitCaptureTile?: (WarAction.IActionUnitCaptureTile|null);

        /** ActionContainer ActionUnitAttackTile */
        ActionUnitAttackTile?: (WarAction.IActionUnitAttackTile|null);

        /** ActionContainer ActionUnitAttackUnit */
        ActionUnitAttackUnit?: (WarAction.IActionUnitAttackUnit|null);

        /** ActionContainer ActionUnitDropUnit */
        ActionUnitDropUnit?: (WarAction.IActionUnitDropUnit|null);

        /** ActionContainer ActionUnitBuildTile */
        ActionUnitBuildTile?: (WarAction.IActionUnitBuildTile|null);

        /** ActionContainer ActionUnitDive */
        ActionUnitDive?: (WarAction.IActionUnitDive|null);

        /** ActionContainer ActionUnitSurface */
        ActionUnitSurface?: (WarAction.IActionUnitSurface|null);

        /** ActionContainer ActionUnitJoinUnit */
        ActionUnitJoinUnit?: (WarAction.IActionUnitJoinUnit|null);

        /** ActionContainer ActionUnitLaunchFlare */
        ActionUnitLaunchFlare?: (WarAction.IActionUnitLaunchFlare|null);

        /** ActionContainer ActionUnitLaunchSilo */
        ActionUnitLaunchSilo?: (WarAction.IActionUnitLaunchSilo|null);

        /** ActionContainer ActionUnitProduceUnit */
        ActionUnitProduceUnit?: (WarAction.IActionUnitProduceUnit|null);

        /** ActionContainer ActionUnitSupplyUnit */
        ActionUnitSupplyUnit?: (WarAction.IActionUnitSupplyUnit|null);

        /** ActionContainer ActionUnitLoadCo */
        ActionUnitLoadCo?: (WarAction.IActionUnitLoadCo|null);

        /** ActionContainer ActionUnitUseCoSkill */
        ActionUnitUseCoSkill?: (WarAction.IActionUnitUseCoSkill|null);
    }

    /** Represents an ActionContainer. */
    class ActionContainer implements IActionContainer {

        /**
         * Constructs a new ActionContainer.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarAction.IActionContainer);

        /** ActionContainer actionId. */
        public actionId: number;

        /** ActionContainer ActionPlayerBeginTurn. */
        public ActionPlayerBeginTurn?: (WarAction.IActionPlayerBeginTurn|null);

        /** ActionContainer ActionPlayerEndTurn. */
        public ActionPlayerEndTurn?: (WarAction.IActionPlayerEndTurn|null);

        /** ActionContainer ActionPlayerSurrender. */
        public ActionPlayerSurrender?: (WarAction.IActionPlayerSurrender|null);

        /** ActionContainer ActionPlayerProduceUnit. */
        public ActionPlayerProduceUnit?: (WarAction.IActionPlayerProduceUnit|null);

        /** ActionContainer ActionPlayerDeleteUnit. */
        public ActionPlayerDeleteUnit?: (WarAction.IActionPlayerDeleteUnit|null);

        /** ActionContainer ActionPlayerVoteForDraw. */
        public ActionPlayerVoteForDraw?: (WarAction.IActionPlayerVoteForDraw|null);

        /** ActionContainer ActionUnitWait. */
        public ActionUnitWait?: (WarAction.IActionUnitWait|null);

        /** ActionContainer ActionUnitBeLoaded. */
        public ActionUnitBeLoaded?: (WarAction.IActionUnitBeLoaded|null);

        /** ActionContainer ActionUnitCaptureTile. */
        public ActionUnitCaptureTile?: (WarAction.IActionUnitCaptureTile|null);

        /** ActionContainer ActionUnitAttackTile. */
        public ActionUnitAttackTile?: (WarAction.IActionUnitAttackTile|null);

        /** ActionContainer ActionUnitAttackUnit. */
        public ActionUnitAttackUnit?: (WarAction.IActionUnitAttackUnit|null);

        /** ActionContainer ActionUnitDropUnit. */
        public ActionUnitDropUnit?: (WarAction.IActionUnitDropUnit|null);

        /** ActionContainer ActionUnitBuildTile. */
        public ActionUnitBuildTile?: (WarAction.IActionUnitBuildTile|null);

        /** ActionContainer ActionUnitDive. */
        public ActionUnitDive?: (WarAction.IActionUnitDive|null);

        /** ActionContainer ActionUnitSurface. */
        public ActionUnitSurface?: (WarAction.IActionUnitSurface|null);

        /** ActionContainer ActionUnitJoinUnit. */
        public ActionUnitJoinUnit?: (WarAction.IActionUnitJoinUnit|null);

        /** ActionContainer ActionUnitLaunchFlare. */
        public ActionUnitLaunchFlare?: (WarAction.IActionUnitLaunchFlare|null);

        /** ActionContainer ActionUnitLaunchSilo. */
        public ActionUnitLaunchSilo?: (WarAction.IActionUnitLaunchSilo|null);

        /** ActionContainer ActionUnitProduceUnit. */
        public ActionUnitProduceUnit?: (WarAction.IActionUnitProduceUnit|null);

        /** ActionContainer ActionUnitSupplyUnit. */
        public ActionUnitSupplyUnit?: (WarAction.IActionUnitSupplyUnit|null);

        /** ActionContainer ActionUnitLoadCo. */
        public ActionUnitLoadCo?: (WarAction.IActionUnitLoadCo|null);

        /** ActionContainer ActionUnitUseCoSkill. */
        public ActionUnitUseCoSkill?: (WarAction.IActionUnitUseCoSkill|null);

        /**
         * Creates a new ActionContainer instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActionContainer instance
         */
        public static create(properties?: WarAction.IActionContainer): WarAction.ActionContainer;

        /**
         * Encodes the specified ActionContainer message. Does not implicitly {@link WarAction.ActionContainer.verify|verify} messages.
         * @param message ActionContainer message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarAction.IActionContainer, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified ActionContainer message, length delimited. Does not implicitly {@link WarAction.ActionContainer.verify|verify} messages.
         * @param message ActionContainer message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarAction.IActionContainer, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an ActionContainer message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActionContainer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.ActionContainer;

        /**
         * Decodes an ActionContainer message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActionContainer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.ActionContainer;

        /**
         * Verifies an ActionContainer message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActionContainer message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActionContainer
         */
        public static fromObject(object: { [k: string]: any }): WarAction.ActionContainer;

        /**
         * Creates a plain object from an ActionContainer message. Also converts values to other types if specified.
         * @param message ActionContainer
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarAction.ActionContainer, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActionContainer to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Properties of a Structure. */
export declare interface IStructure {
}

/** Represents a Structure. */
export declare class Structure implements IStructure {

    /**
     * Constructs a new Structure.
     * @param [properties] Properties to set
     */
    constructor(properties?: IStructure);

    /**
     * Creates a new Structure instance using the specified properties.
     * @param [properties] Properties to set
     * @returns Structure instance
     */
    public static create(properties?: IStructure): Structure;

    /**
     * Encodes the specified Structure message. Does not implicitly {@link Structure.verify|verify} messages.
     * @param message Structure message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IStructure, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Encodes the specified Structure message, length delimited. Does not implicitly {@link Structure.verify|verify} messages.
     * @param message Structure message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IStructure, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Decodes a Structure message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns Structure
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Structure;

    /**
     * Decodes a Structure message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns Structure
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Structure;

    /**
     * Verifies a Structure message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a Structure message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns Structure
     */
    public static fromObject(object: { [k: string]: any }): Structure;

    /**
     * Creates a plain object from a Structure message. Also converts values to other types if specified.
     * @param message Structure
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: Structure, options?: protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this Structure to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export declare namespace Structure {

    /** Properties of a GridIndex. */
    interface IGridIndex {

        /** GridIndex x */
        x?: (number|null);

        /** GridIndex y */
        y?: (number|null);
    }

    /** Represents a GridIndex. */
    class GridIndex implements IGridIndex {

        /**
         * Constructs a new GridIndex.
         * @param [properties] Properties to set
         */
        constructor(properties?: Structure.IGridIndex);

        /** GridIndex x. */
        public x: number;

        /** GridIndex y. */
        public y: number;

        /**
         * Creates a new GridIndex instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GridIndex instance
         */
        public static create(properties?: Structure.IGridIndex): Structure.GridIndex;

        /**
         * Encodes the specified GridIndex message. Does not implicitly {@link Structure.GridIndex.verify|verify} messages.
         * @param message GridIndex message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Structure.IGridIndex, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified GridIndex message, length delimited. Does not implicitly {@link Structure.GridIndex.verify|verify} messages.
         * @param message GridIndex message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Structure.IGridIndex, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GridIndex message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GridIndex
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Structure.GridIndex;

        /**
         * Decodes a GridIndex message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GridIndex
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Structure.GridIndex;

        /**
         * Verifies a GridIndex message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GridIndex message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GridIndex
         */
        public static fromObject(object: { [k: string]: any }): Structure.GridIndex;

        /**
         * Creates a plain object from a GridIndex message. Also converts values to other types if specified.
         * @param message GridIndex
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Structure.GridIndex, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GridIndex to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MovePath. */
    interface IMovePath {

        /** MovePath nodes */
        nodes?: (Structure.IGridIndex[]|null);

        /** MovePath isBlocked */
        isBlocked?: (boolean|null);

        /** MovePath fuelConsumption */
        fuelConsumption?: (number|null);
    }

    /** Represents a MovePath. */
    class MovePath implements IMovePath {

        /**
         * Constructs a new MovePath.
         * @param [properties] Properties to set
         */
        constructor(properties?: Structure.IMovePath);

        /** MovePath nodes. */
        public nodes: Structure.IGridIndex[];

        /** MovePath isBlocked. */
        public isBlocked: boolean;

        /** MovePath fuelConsumption. */
        public fuelConsumption: number;

        /**
         * Creates a new MovePath instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MovePath instance
         */
        public static create(properties?: Structure.IMovePath): Structure.MovePath;

        /**
         * Encodes the specified MovePath message. Does not implicitly {@link Structure.MovePath.verify|verify} messages.
         * @param message MovePath message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Structure.IMovePath, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MovePath message, length delimited. Does not implicitly {@link Structure.MovePath.verify|verify} messages.
         * @param message MovePath message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Structure.IMovePath, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MovePath message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MovePath
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Structure.MovePath;

        /**
         * Decodes a MovePath message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MovePath
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Structure.MovePath;

        /**
         * Verifies a MovePath message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MovePath message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MovePath
         */
        public static fromObject(object: { [k: string]: any }): Structure.MovePath;

        /**
         * Creates a plain object from a MovePath message. Also converts values to other types if specified.
         * @param message MovePath
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Structure.MovePath, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MovePath to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DropDestination. */
    interface IDropDestination {

        /** DropDestination unitId */
        unitId?: (number|null);

        /** DropDestination gridIndex */
        gridIndex?: (Structure.IGridIndex|null);
    }

    /** Represents a DropDestination. */
    class DropDestination implements IDropDestination {

        /**
         * Constructs a new DropDestination.
         * @param [properties] Properties to set
         */
        constructor(properties?: Structure.IDropDestination);

        /** DropDestination unitId. */
        public unitId: number;

        /** DropDestination gridIndex. */
        public gridIndex?: (Structure.IGridIndex|null);

        /**
         * Creates a new DropDestination instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DropDestination instance
         */
        public static create(properties?: Structure.IDropDestination): Structure.DropDestination;

        /**
         * Encodes the specified DropDestination message. Does not implicitly {@link Structure.DropDestination.verify|verify} messages.
         * @param message DropDestination message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Structure.IDropDestination, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified DropDestination message, length delimited. Does not implicitly {@link Structure.DropDestination.verify|verify} messages.
         * @param message DropDestination message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Structure.IDropDestination, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a DropDestination message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DropDestination
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Structure.DropDestination;

        /**
         * Decodes a DropDestination message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DropDestination
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Structure.DropDestination;

        /**
         * Verifies a DropDestination message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DropDestination message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DropDestination
         */
        public static fromObject(object: { [k: string]: any }): Structure.DropDestination;

        /**
         * Creates a plain object from a DropDestination message. Also converts values to other types if specified.
         * @param message DropDestination
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Structure.DropDestination, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DropDestination to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SeedRandomState. */
    interface ISeedRandomState {

        /** SeedRandomState i */
        i?: (number|null);

        /** SeedRandomState j */
        j?: (number|null);

        /** SeedRandomState S */
        S?: (number[]|null);
    }

    /** Represents a SeedRandomState. */
    class SeedRandomState implements ISeedRandomState {

        /**
         * Constructs a new SeedRandomState.
         * @param [properties] Properties to set
         */
        constructor(properties?: Structure.ISeedRandomState);

        /** SeedRandomState i. */
        public i: number;

        /** SeedRandomState j. */
        public j: number;

        /** SeedRandomState S. */
        public S: number[];

        /**
         * Creates a new SeedRandomState instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SeedRandomState instance
         */
        public static create(properties?: Structure.ISeedRandomState): Structure.SeedRandomState;

        /**
         * Encodes the specified SeedRandomState message. Does not implicitly {@link Structure.SeedRandomState.verify|verify} messages.
         * @param message SeedRandomState message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Structure.ISeedRandomState, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SeedRandomState message, length delimited. Does not implicitly {@link Structure.SeedRandomState.verify|verify} messages.
         * @param message SeedRandomState message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Structure.ISeedRandomState, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SeedRandomState message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SeedRandomState
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Structure.SeedRandomState;

        /**
         * Decodes a SeedRandomState message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SeedRandomState
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Structure.SeedRandomState;

        /**
         * Verifies a SeedRandomState message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SeedRandomState message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SeedRandomState
         */
        public static fromObject(object: { [k: string]: any }): Structure.SeedRandomState;

        /**
         * Creates a plain object from a SeedRandomState message. Also converts values to other types if specified.
         * @param message SeedRandomState
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Structure.SeedRandomState, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SeedRandomState to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WarPlayerInfo. */
    interface IWarPlayerInfo {

        /** WarPlayerInfo playerIndex */
        playerIndex?: (number|null);

        /** WarPlayerInfo userId */
        userId?: (number|null);

        /** WarPlayerInfo coId */
        coId?: (number|null);

        /** WarPlayerInfo teamIndex */
        teamIndex?: (number|null);

        /** WarPlayerInfo isAlive */
        isAlive?: (boolean|null);

        /** WarPlayerInfo restTimeToBoot */
        restTimeToBoot?: (number|null);

        /** WarPlayerInfo unitAndTileSkinId */
        unitAndTileSkinId?: (number|null);
    }

    /** Represents a WarPlayerInfo. */
    class WarPlayerInfo implements IWarPlayerInfo {

        /**
         * Constructs a new WarPlayerInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: Structure.IWarPlayerInfo);

        /** WarPlayerInfo playerIndex. */
        public playerIndex: number;

        /** WarPlayerInfo userId. */
        public userId: number;

        /** WarPlayerInfo coId. */
        public coId: number;

        /** WarPlayerInfo teamIndex. */
        public teamIndex: number;

        /** WarPlayerInfo isAlive. */
        public isAlive: boolean;

        /** WarPlayerInfo restTimeToBoot. */
        public restTimeToBoot: number;

        /** WarPlayerInfo unitAndTileSkinId. */
        public unitAndTileSkinId: number;

        /**
         * Creates a new WarPlayerInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WarPlayerInfo instance
         */
        public static create(properties?: Structure.IWarPlayerInfo): Structure.WarPlayerInfo;

        /**
         * Encodes the specified WarPlayerInfo message. Does not implicitly {@link Structure.WarPlayerInfo.verify|verify} messages.
         * @param message WarPlayerInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Structure.IWarPlayerInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WarPlayerInfo message, length delimited. Does not implicitly {@link Structure.WarPlayerInfo.verify|verify} messages.
         * @param message WarPlayerInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Structure.IWarPlayerInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarPlayerInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarPlayerInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Structure.WarPlayerInfo;

        /**
         * Decodes a WarPlayerInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WarPlayerInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Structure.WarPlayerInfo;

        /**
         * Verifies a WarPlayerInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WarPlayerInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WarPlayerInfo
         */
        public static fromObject(object: { [k: string]: any }): Structure.WarPlayerInfo;

        /**
         * Creates a plain object from a WarPlayerInfo message. Also converts values to other types if specified.
         * @param message WarPlayerInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Structure.WarPlayerInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WarPlayerInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DataForModifyUnit. */
    interface IDataForModifyUnit {

        /** DataForModifyUnit unitId */
        unitId?: (number|null);

        /** DataForModifyUnit gridIndex */
        gridIndex?: (Structure.IGridIndex|null);

        /** DataForModifyUnit deltaHp */
        deltaHp?: (number|null);

        /** DataForModifyUnit deltaPrimaryWeaponAmmo */
        deltaPrimaryWeaponAmmo?: (number|null);

        /** DataForModifyUnit deltaFuel */
        deltaFuel?: (number|null);

        /** DataForModifyUnit deltaFlareAmmo */
        deltaFlareAmmo?: (number|null);
    }

    /** Represents a DataForModifyUnit. */
    class DataForModifyUnit implements IDataForModifyUnit {

        /**
         * Constructs a new DataForModifyUnit.
         * @param [properties] Properties to set
         */
        constructor(properties?: Structure.IDataForModifyUnit);

        /** DataForModifyUnit unitId. */
        public unitId: number;

        /** DataForModifyUnit gridIndex. */
        public gridIndex?: (Structure.IGridIndex|null);

        /** DataForModifyUnit deltaHp. */
        public deltaHp: number;

        /** DataForModifyUnit deltaPrimaryWeaponAmmo. */
        public deltaPrimaryWeaponAmmo: number;

        /** DataForModifyUnit deltaFuel. */
        public deltaFuel: number;

        /** DataForModifyUnit deltaFlareAmmo. */
        public deltaFlareAmmo: number;

        /**
         * Creates a new DataForModifyUnit instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DataForModifyUnit instance
         */
        public static create(properties?: Structure.IDataForModifyUnit): Structure.DataForModifyUnit;

        /**
         * Encodes the specified DataForModifyUnit message. Does not implicitly {@link Structure.DataForModifyUnit.verify|verify} messages.
         * @param message DataForModifyUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Structure.IDataForModifyUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified DataForModifyUnit message, length delimited. Does not implicitly {@link Structure.DataForModifyUnit.verify|verify} messages.
         * @param message DataForModifyUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Structure.IDataForModifyUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a DataForModifyUnit message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DataForModifyUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Structure.DataForModifyUnit;

        /**
         * Decodes a DataForModifyUnit message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DataForModifyUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Structure.DataForModifyUnit;

        /**
         * Verifies a DataForModifyUnit message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DataForModifyUnit message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DataForModifyUnit
         */
        public static fromObject(object: { [k: string]: any }): Structure.DataForModifyUnit;

        /**
         * Creates a plain object from a DataForModifyUnit message. Also converts values to other types if specified.
         * @param message DataForModifyUnit
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Structure.DataForModifyUnit, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DataForModifyUnit to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DataForUseCoSkill. */
    interface IDataForUseCoSkill {

        /** DataForUseCoSkill skillIndex */
        skillIndex?: (number|null);

        /** DataForUseCoSkill indiscriminateAreaDamageCenter */
        indiscriminateAreaDamageCenter?: (Structure.IGridIndex|null);
    }

    /** Represents a DataForUseCoSkill. */
    class DataForUseCoSkill implements IDataForUseCoSkill {

        /**
         * Constructs a new DataForUseCoSkill.
         * @param [properties] Properties to set
         */
        constructor(properties?: Structure.IDataForUseCoSkill);

        /** DataForUseCoSkill skillIndex. */
        public skillIndex: number;

        /** DataForUseCoSkill indiscriminateAreaDamageCenter. */
        public indiscriminateAreaDamageCenter?: (Structure.IGridIndex|null);

        /**
         * Creates a new DataForUseCoSkill instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DataForUseCoSkill instance
         */
        public static create(properties?: Structure.IDataForUseCoSkill): Structure.DataForUseCoSkill;

        /**
         * Encodes the specified DataForUseCoSkill message. Does not implicitly {@link Structure.DataForUseCoSkill.verify|verify} messages.
         * @param message DataForUseCoSkill message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Structure.IDataForUseCoSkill, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified DataForUseCoSkill message, length delimited. Does not implicitly {@link Structure.DataForUseCoSkill.verify|verify} messages.
         * @param message DataForUseCoSkill message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Structure.IDataForUseCoSkill, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a DataForUseCoSkill message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DataForUseCoSkill
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Structure.DataForUseCoSkill;

        /**
         * Decodes a DataForUseCoSkill message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DataForUseCoSkill
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Structure.DataForUseCoSkill;

        /**
         * Verifies a DataForUseCoSkill message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DataForUseCoSkill message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DataForUseCoSkill
         */
        public static fromObject(object: { [k: string]: any }): Structure.DataForUseCoSkill;

        /**
         * Creates a plain object from a DataForUseCoSkill message. Also converts values to other types if specified.
         * @param message DataForUseCoSkill
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Structure.DataForUseCoSkill, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DataForUseCoSkill to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DataForReviewWarRule. */
    interface IDataForReviewWarRule {

        /** DataForReviewWarRule mapId */
        mapId?: (number|null);

        /** DataForReviewWarRule submitterUserId */
        submitterUserId?: (number|null);

        /** DataForReviewWarRule submitTimestamp */
        submitTimestamp?: (number|null);

        /** DataForReviewWarRule reviewStatus */
        reviewStatus?: (number|null);

        /** DataForReviewWarRule reviewComment */
        reviewComment?: (string|null);

        /** DataForReviewWarRule warRuleList */
        warRuleList?: (WarRule.IWarRuleList|null);
    }

    /** Represents a DataForReviewWarRule. */
    class DataForReviewWarRule implements IDataForReviewWarRule {

        /**
         * Constructs a new DataForReviewWarRule.
         * @param [properties] Properties to set
         */
        constructor(properties?: Structure.IDataForReviewWarRule);

        /** DataForReviewWarRule mapId. */
        public mapId: number;

        /** DataForReviewWarRule submitterUserId. */
        public submitterUserId: number;

        /** DataForReviewWarRule submitTimestamp. */
        public submitTimestamp: number;

        /** DataForReviewWarRule reviewStatus. */
        public reviewStatus: number;

        /** DataForReviewWarRule reviewComment. */
        public reviewComment: string;

        /** DataForReviewWarRule warRuleList. */
        public warRuleList?: (WarRule.IWarRuleList|null);

        /**
         * Creates a new DataForReviewWarRule instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DataForReviewWarRule instance
         */
        public static create(properties?: Structure.IDataForReviewWarRule): Structure.DataForReviewWarRule;

        /**
         * Encodes the specified DataForReviewWarRule message. Does not implicitly {@link Structure.DataForReviewWarRule.verify|verify} messages.
         * @param message DataForReviewWarRule message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Structure.IDataForReviewWarRule, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified DataForReviewWarRule message, length delimited. Does not implicitly {@link Structure.DataForReviewWarRule.verify|verify} messages.
         * @param message DataForReviewWarRule message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Structure.IDataForReviewWarRule, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a DataForReviewWarRule message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DataForReviewWarRule
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Structure.DataForReviewWarRule;

        /**
         * Decodes a DataForReviewWarRule message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DataForReviewWarRule
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Structure.DataForReviewWarRule;

        /**
         * Verifies a DataForReviewWarRule message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DataForReviewWarRule message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DataForReviewWarRule
         */
        public static fromObject(object: { [k: string]: any }): Structure.DataForReviewWarRule;

        /**
         * Creates a plain object from a DataForReviewWarRule message. Also converts values to other types if specified.
         * @param message DataForReviewWarRule
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Structure.DataForReviewWarRule, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DataForReviewWarRule to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DataForPlayerInRoom. */
    interface IDataForPlayerInRoom {

        /** DataForPlayerInRoom playerIndex */
        playerIndex?: (number|null);

        /** DataForPlayerInRoom userId */
        userId?: (number|null);

        /** DataForPlayerInRoom coId */
        coId?: (number|null);

        /** DataForPlayerInRoom isReady */
        isReady?: (boolean|null);

        /** DataForPlayerInRoom unitAndTileSkinId */
        unitAndTileSkinId?: (number|null);
    }

    /** Represents a DataForPlayerInRoom. */
    class DataForPlayerInRoom implements IDataForPlayerInRoom {

        /**
         * Constructs a new DataForPlayerInRoom.
         * @param [properties] Properties to set
         */
        constructor(properties?: Structure.IDataForPlayerInRoom);

        /** DataForPlayerInRoom playerIndex. */
        public playerIndex: number;

        /** DataForPlayerInRoom userId. */
        public userId: number;

        /** DataForPlayerInRoom coId. */
        public coId: number;

        /** DataForPlayerInRoom isReady. */
        public isReady: boolean;

        /** DataForPlayerInRoom unitAndTileSkinId. */
        public unitAndTileSkinId: number;

        /**
         * Creates a new DataForPlayerInRoom instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DataForPlayerInRoom instance
         */
        public static create(properties?: Structure.IDataForPlayerInRoom): Structure.DataForPlayerInRoom;

        /**
         * Encodes the specified DataForPlayerInRoom message. Does not implicitly {@link Structure.DataForPlayerInRoom.verify|verify} messages.
         * @param message DataForPlayerInRoom message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Structure.IDataForPlayerInRoom, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified DataForPlayerInRoom message, length delimited. Does not implicitly {@link Structure.DataForPlayerInRoom.verify|verify} messages.
         * @param message DataForPlayerInRoom message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Structure.IDataForPlayerInRoom, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a DataForPlayerInRoom message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DataForPlayerInRoom
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Structure.DataForPlayerInRoom;

        /**
         * Decodes a DataForPlayerInRoom message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DataForPlayerInRoom
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Structure.DataForPlayerInRoom;

        /**
         * Verifies a DataForPlayerInRoom message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DataForPlayerInRoom message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DataForPlayerInRoom
         */
        public static fromObject(object: { [k: string]: any }): Structure.DataForPlayerInRoom;

        /**
         * Creates a plain object from a DataForPlayerInRoom message. Also converts values to other types if specified.
         * @param message DataForPlayerInRoom
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Structure.DataForPlayerInRoom, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DataForPlayerInRoom to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DataForPlayerBanCo. */
    interface IDataForPlayerBanCo {

        /** DataForPlayerBanCo playerIndex */
        playerIndex?: (number|null);

        /** DataForPlayerBanCo bannedCoIdList */
        bannedCoIdList?: (number[]|null);
    }

    /** Represents a DataForPlayerBanCo. */
    class DataForPlayerBanCo implements IDataForPlayerBanCo {

        /**
         * Constructs a new DataForPlayerBanCo.
         * @param [properties] Properties to set
         */
        constructor(properties?: Structure.IDataForPlayerBanCo);

        /** DataForPlayerBanCo playerIndex. */
        public playerIndex: number;

        /** DataForPlayerBanCo bannedCoIdList. */
        public bannedCoIdList: number[];

        /**
         * Creates a new DataForPlayerBanCo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DataForPlayerBanCo instance
         */
        public static create(properties?: Structure.IDataForPlayerBanCo): Structure.DataForPlayerBanCo;

        /**
         * Encodes the specified DataForPlayerBanCo message. Does not implicitly {@link Structure.DataForPlayerBanCo.verify|verify} messages.
         * @param message DataForPlayerBanCo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Structure.IDataForPlayerBanCo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified DataForPlayerBanCo message, length delimited. Does not implicitly {@link Structure.DataForPlayerBanCo.verify|verify} messages.
         * @param message DataForPlayerBanCo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Structure.IDataForPlayerBanCo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a DataForPlayerBanCo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DataForPlayerBanCo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Structure.DataForPlayerBanCo;

        /**
         * Decodes a DataForPlayerBanCo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DataForPlayerBanCo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Structure.DataForPlayerBanCo;

        /**
         * Verifies a DataForPlayerBanCo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DataForPlayerBanCo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DataForPlayerBanCo
         */
        public static fromObject(object: { [k: string]: any }): Structure.DataForPlayerBanCo;

        /**
         * Creates a plain object from a DataForPlayerBanCo message. Also converts values to other types if specified.
         * @param message DataForPlayerBanCo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Structure.DataForPlayerBanCo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DataForPlayerBanCo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Properties of a MultiCustomRoom. */
export declare interface IMultiCustomRoom {
}

/** Represents a MultiCustomRoom. */
export declare class MultiCustomRoom implements IMultiCustomRoom {

    /**
     * Constructs a new MultiCustomRoom.
     * @param [properties] Properties to set
     */
    constructor(properties?: IMultiCustomRoom);

    /**
     * Creates a new MultiCustomRoom instance using the specified properties.
     * @param [properties] Properties to set
     * @returns MultiCustomRoom instance
     */
    public static create(properties?: IMultiCustomRoom): MultiCustomRoom;

    /**
     * Encodes the specified MultiCustomRoom message. Does not implicitly {@link MultiCustomRoom.verify|verify} messages.
     * @param message MultiCustomRoom message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IMultiCustomRoom, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Encodes the specified MultiCustomRoom message, length delimited. Does not implicitly {@link MultiCustomRoom.verify|verify} messages.
     * @param message MultiCustomRoom message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IMultiCustomRoom, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Decodes a MultiCustomRoom message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns MultiCustomRoom
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): MultiCustomRoom;

    /**
     * Decodes a MultiCustomRoom message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns MultiCustomRoom
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): MultiCustomRoom;

    /**
     * Verifies a MultiCustomRoom message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a MultiCustomRoom message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns MultiCustomRoom
     */
    public static fromObject(object: { [k: string]: any }): MultiCustomRoom;

    /**
     * Creates a plain object from a MultiCustomRoom message. Also converts values to other types if specified.
     * @param message MultiCustomRoom
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: MultiCustomRoom, options?: protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this MultiCustomRoom to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export declare namespace MultiCustomRoom {

    /** Properties of a McrRoomInfo. */
    interface IMcrRoomInfo {

        /** McrRoomInfo roomId */
        roomId?: (number|null);

        /** McrRoomInfo createTime */
        createTime?: (number|null);

        /** McrRoomInfo creatorUserId */
        creatorUserId?: (number|null);

        /** McrRoomInfo ownerPlayerIndex */
        ownerPlayerIndex?: (number|null);

        /** McrRoomInfo settingsForCommon */
        settingsForCommon?: (WarSettings.ISettingsForCommon|null);

        /** McrRoomInfo settingsForMcw */
        settingsForMcw?: (WarSettings.ISettingsForMcw|null);

        /** McrRoomInfo playerDataList */
        playerDataList?: (Structure.IDataForPlayerInRoom[]|null);
    }

    /** Represents a McrRoomInfo. */
    class McrRoomInfo implements IMcrRoomInfo {

        /**
         * Constructs a new McrRoomInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: MultiCustomRoom.IMcrRoomInfo);

        /** McrRoomInfo roomId. */
        public roomId: number;

        /** McrRoomInfo createTime. */
        public createTime: number;

        /** McrRoomInfo creatorUserId. */
        public creatorUserId: number;

        /** McrRoomInfo ownerPlayerIndex. */
        public ownerPlayerIndex: number;

        /** McrRoomInfo settingsForCommon. */
        public settingsForCommon?: (WarSettings.ISettingsForCommon|null);

        /** McrRoomInfo settingsForMcw. */
        public settingsForMcw?: (WarSettings.ISettingsForMcw|null);

        /** McrRoomInfo playerDataList. */
        public playerDataList: Structure.IDataForPlayerInRoom[];

        /**
         * Creates a new McrRoomInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns McrRoomInfo instance
         */
        public static create(properties?: MultiCustomRoom.IMcrRoomInfo): MultiCustomRoom.McrRoomInfo;

        /**
         * Encodes the specified McrRoomInfo message. Does not implicitly {@link MultiCustomRoom.McrRoomInfo.verify|verify} messages.
         * @param message McrRoomInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: MultiCustomRoom.IMcrRoomInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified McrRoomInfo message, length delimited. Does not implicitly {@link MultiCustomRoom.McrRoomInfo.verify|verify} messages.
         * @param message McrRoomInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: MultiCustomRoom.IMcrRoomInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a McrRoomInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns McrRoomInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): MultiCustomRoom.McrRoomInfo;

        /**
         * Decodes a McrRoomInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns McrRoomInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): MultiCustomRoom.McrRoomInfo;

        /**
         * Verifies a McrRoomInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a McrRoomInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns McrRoomInfo
         */
        public static fromObject(object: { [k: string]: any }): MultiCustomRoom.McrRoomInfo;

        /**
         * Creates a plain object from a McrRoomInfo message. Also converts values to other types if specified.
         * @param message McrRoomInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: MultiCustomRoom.McrRoomInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this McrRoomInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Properties of a MultiCustomWar. */
export declare interface IMultiCustomWar {
}

/** Represents a MultiCustomWar. */
export declare class MultiCustomWar implements IMultiCustomWar {

    /**
     * Constructs a new MultiCustomWar.
     * @param [properties] Properties to set
     */
    constructor(properties?: IMultiCustomWar);

    /**
     * Creates a new MultiCustomWar instance using the specified properties.
     * @param [properties] Properties to set
     * @returns MultiCustomWar instance
     */
    public static create(properties?: IMultiCustomWar): MultiCustomWar;

    /**
     * Encodes the specified MultiCustomWar message. Does not implicitly {@link MultiCustomWar.verify|verify} messages.
     * @param message MultiCustomWar message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IMultiCustomWar, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Encodes the specified MultiCustomWar message, length delimited. Does not implicitly {@link MultiCustomWar.verify|verify} messages.
     * @param message MultiCustomWar message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IMultiCustomWar, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Decodes a MultiCustomWar message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns MultiCustomWar
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): MultiCustomWar;

    /**
     * Decodes a MultiCustomWar message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns MultiCustomWar
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): MultiCustomWar;

    /**
     * Verifies a MultiCustomWar message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a MultiCustomWar message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns MultiCustomWar
     */
    public static fromObject(object: { [k: string]: any }): MultiCustomWar;

    /**
     * Creates a plain object from a MultiCustomWar message. Also converts values to other types if specified.
     * @param message MultiCustomWar
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: MultiCustomWar, options?: protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this MultiCustomWar to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export declare namespace MultiCustomWar {

    /** Properties of a McwWatchRequesterInfo. */
    interface IMcwWatchRequesterInfo {

        /** McwWatchRequesterInfo userId */
        userId?: (number|null);

        /** McwWatchRequesterInfo isRequestingOthers */
        isRequestingOthers?: (boolean|null);

        /** McwWatchRequesterInfo isWatchingOthers */
        isWatchingOthers?: (boolean|null);
    }

    /** Represents a McwWatchRequesterInfo. */
    class McwWatchRequesterInfo implements IMcwWatchRequesterInfo {

        /**
         * Constructs a new McwWatchRequesterInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: MultiCustomWar.IMcwWatchRequesterInfo);

        /** McwWatchRequesterInfo userId. */
        public userId: number;

        /** McwWatchRequesterInfo isRequestingOthers. */
        public isRequestingOthers: boolean;

        /** McwWatchRequesterInfo isWatchingOthers. */
        public isWatchingOthers: boolean;

        /**
         * Creates a new McwWatchRequesterInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns McwWatchRequesterInfo instance
         */
        public static create(properties?: MultiCustomWar.IMcwWatchRequesterInfo): MultiCustomWar.McwWatchRequesterInfo;

        /**
         * Encodes the specified McwWatchRequesterInfo message. Does not implicitly {@link MultiCustomWar.McwWatchRequesterInfo.verify|verify} messages.
         * @param message McwWatchRequesterInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: MultiCustomWar.IMcwWatchRequesterInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified McwWatchRequesterInfo message, length delimited. Does not implicitly {@link MultiCustomWar.McwWatchRequesterInfo.verify|verify} messages.
         * @param message McwWatchRequesterInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: MultiCustomWar.IMcwWatchRequesterInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a McwWatchRequesterInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns McwWatchRequesterInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): MultiCustomWar.McwWatchRequesterInfo;

        /**
         * Decodes a McwWatchRequesterInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns McwWatchRequesterInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): MultiCustomWar.McwWatchRequesterInfo;

        /**
         * Verifies a McwWatchRequesterInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a McwWatchRequesterInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns McwWatchRequesterInfo
         */
        public static fromObject(object: { [k: string]: any }): MultiCustomWar.McwWatchRequesterInfo;

        /**
         * Creates a plain object from a McwWatchRequesterInfo message. Also converts values to other types if specified.
         * @param message McwWatchRequesterInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: MultiCustomWar.McwWatchRequesterInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this McwWatchRequesterInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a McwWatchInfo. */
    interface IMcwWatchInfo {

        /** McwWatchInfo warInfo */
        warInfo?: (MultiCustomWar.IMcwWarInfo|null);

        /** McwWatchInfo ongoingDstUserIds */
        ongoingDstUserIds?: (number[]|null);

        /** McwWatchInfo requestDstUserIds */
        requestDstUserIds?: (number[]|null);

        /** McwWatchInfo ongoingSrcUserIds */
        ongoingSrcUserIds?: (number[]|null);

        /** McwWatchInfo requestSrcUserIds */
        requestSrcUserIds?: (number[]|null);

        /** McwWatchInfo requesterInfos */
        requesterInfos?: (MultiCustomWar.IMcwWatchRequesterInfo[]|null);
    }

    /** Represents a McwWatchInfo. */
    class McwWatchInfo implements IMcwWatchInfo {

        /**
         * Constructs a new McwWatchInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: MultiCustomWar.IMcwWatchInfo);

        /** McwWatchInfo warInfo. */
        public warInfo?: (MultiCustomWar.IMcwWarInfo|null);

        /** McwWatchInfo ongoingDstUserIds. */
        public ongoingDstUserIds: number[];

        /** McwWatchInfo requestDstUserIds. */
        public requestDstUserIds: number[];

        /** McwWatchInfo ongoingSrcUserIds. */
        public ongoingSrcUserIds: number[];

        /** McwWatchInfo requestSrcUserIds. */
        public requestSrcUserIds: number[];

        /** McwWatchInfo requesterInfos. */
        public requesterInfos: MultiCustomWar.IMcwWatchRequesterInfo[];

        /**
         * Creates a new McwWatchInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns McwWatchInfo instance
         */
        public static create(properties?: MultiCustomWar.IMcwWatchInfo): MultiCustomWar.McwWatchInfo;

        /**
         * Encodes the specified McwWatchInfo message. Does not implicitly {@link MultiCustomWar.McwWatchInfo.verify|verify} messages.
         * @param message McwWatchInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: MultiCustomWar.IMcwWatchInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified McwWatchInfo message, length delimited. Does not implicitly {@link MultiCustomWar.McwWatchInfo.verify|verify} messages.
         * @param message McwWatchInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: MultiCustomWar.IMcwWatchInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a McwWatchInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns McwWatchInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): MultiCustomWar.McwWatchInfo;

        /**
         * Decodes a McwWatchInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns McwWatchInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): MultiCustomWar.McwWatchInfo;

        /**
         * Verifies a McwWatchInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a McwWatchInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns McwWatchInfo
         */
        public static fromObject(object: { [k: string]: any }): MultiCustomWar.McwWatchInfo;

        /**
         * Creates a plain object from a McwWatchInfo message. Also converts values to other types if specified.
         * @param message McwWatchInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: MultiCustomWar.McwWatchInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this McwWatchInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a McwReplayInfo. */
    interface IMcwReplayInfo {

        /** McwReplayInfo replayId */
        replayId?: (number|null);

        /** McwReplayInfo configVersion */
        configVersion?: (string|null);

        /** McwReplayInfo mapId */
        mapId?: (number|null);

        /** McwReplayInfo hasFog */
        hasFog?: (boolean|null);

        /** McwReplayInfo turnIndex */
        turnIndex?: (number|null);

        /** McwReplayInfo executedActionsCount */
        executedActionsCount?: (number|null);

        /** McwReplayInfo warEndTime */
        warEndTime?: (number|null);

        /** McwReplayInfo totalRating */
        totalRating?: (number|null);

        /** McwReplayInfo totalRaters */
        totalRaters?: (number|null);

        /** McwReplayInfo myRating */
        myRating?: (number|null);

        /** McwReplayInfo playerInfoList */
        playerInfoList?: (Structure.IWarPlayerInfo[]|null);
    }

    /** Represents a McwReplayInfo. */
    class McwReplayInfo implements IMcwReplayInfo {

        /**
         * Constructs a new McwReplayInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: MultiCustomWar.IMcwReplayInfo);

        /** McwReplayInfo replayId. */
        public replayId: number;

        /** McwReplayInfo configVersion. */
        public configVersion: string;

        /** McwReplayInfo mapId. */
        public mapId: number;

        /** McwReplayInfo hasFog. */
        public hasFog: boolean;

        /** McwReplayInfo turnIndex. */
        public turnIndex: number;

        /** McwReplayInfo executedActionsCount. */
        public executedActionsCount: number;

        /** McwReplayInfo warEndTime. */
        public warEndTime: number;

        /** McwReplayInfo totalRating. */
        public totalRating: number;

        /** McwReplayInfo totalRaters. */
        public totalRaters: number;

        /** McwReplayInfo myRating. */
        public myRating: number;

        /** McwReplayInfo playerInfoList. */
        public playerInfoList: Structure.IWarPlayerInfo[];

        /**
         * Creates a new McwReplayInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns McwReplayInfo instance
         */
        public static create(properties?: MultiCustomWar.IMcwReplayInfo): MultiCustomWar.McwReplayInfo;

        /**
         * Encodes the specified McwReplayInfo message. Does not implicitly {@link MultiCustomWar.McwReplayInfo.verify|verify} messages.
         * @param message McwReplayInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: MultiCustomWar.IMcwReplayInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified McwReplayInfo message, length delimited. Does not implicitly {@link MultiCustomWar.McwReplayInfo.verify|verify} messages.
         * @param message McwReplayInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: MultiCustomWar.IMcwReplayInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a McwReplayInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns McwReplayInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): MultiCustomWar.McwReplayInfo;

        /**
         * Decodes a McwReplayInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns McwReplayInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): MultiCustomWar.McwReplayInfo;

        /**
         * Verifies a McwReplayInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a McwReplayInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns McwReplayInfo
         */
        public static fromObject(object: { [k: string]: any }): MultiCustomWar.McwReplayInfo;

        /**
         * Creates a plain object from a McwReplayInfo message. Also converts values to other types if specified.
         * @param message McwReplayInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: MultiCustomWar.McwReplayInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this McwReplayInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a McwWarInfo. */
    interface IMcwWarInfo {

        /** McwWarInfo settingsForCommon */
        settingsForCommon?: (WarSettings.ISettingsForCommon|null);

        /** McwWarInfo settingsForMcw */
        settingsForMcw?: (WarSettings.ISettingsForMcw|null);

        /** McwWarInfo warId */
        warId?: (number|null);

        /** McwWarInfo playerInfoList */
        playerInfoList?: (Structure.IWarPlayerInfo[]|null);

        /** McwWarInfo playerIndexInTurn */
        playerIndexInTurn?: (number|null);

        /** McwWarInfo turnIndex */
        turnIndex?: (number|null);

        /** McwWarInfo enterTurnTime */
        enterTurnTime?: (number|null);
    }

    /** Represents a McwWarInfo. */
    class McwWarInfo implements IMcwWarInfo {

        /**
         * Constructs a new McwWarInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: MultiCustomWar.IMcwWarInfo);

        /** McwWarInfo settingsForCommon. */
        public settingsForCommon?: (WarSettings.ISettingsForCommon|null);

        /** McwWarInfo settingsForMcw. */
        public settingsForMcw?: (WarSettings.ISettingsForMcw|null);

        /** McwWarInfo warId. */
        public warId: number;

        /** McwWarInfo playerInfoList. */
        public playerInfoList: Structure.IWarPlayerInfo[];

        /** McwWarInfo playerIndexInTurn. */
        public playerIndexInTurn: number;

        /** McwWarInfo turnIndex. */
        public turnIndex: number;

        /** McwWarInfo enterTurnTime. */
        public enterTurnTime: number;

        /**
         * Creates a new McwWarInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns McwWarInfo instance
         */
        public static create(properties?: MultiCustomWar.IMcwWarInfo): MultiCustomWar.McwWarInfo;

        /**
         * Encodes the specified McwWarInfo message. Does not implicitly {@link MultiCustomWar.McwWarInfo.verify|verify} messages.
         * @param message McwWarInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: MultiCustomWar.IMcwWarInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified McwWarInfo message, length delimited. Does not implicitly {@link MultiCustomWar.McwWarInfo.verify|verify} messages.
         * @param message McwWarInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: MultiCustomWar.IMcwWarInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a McwWarInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns McwWarInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): MultiCustomWar.McwWarInfo;

        /**
         * Decodes a McwWarInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns McwWarInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): MultiCustomWar.McwWarInfo;

        /**
         * Verifies a McwWarInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a McwWarInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns McwWarInfo
         */
        public static fromObject(object: { [k: string]: any }): MultiCustomWar.McwWarInfo;

        /**
         * Creates a plain object from a McwWarInfo message. Also converts values to other types if specified.
         * @param message McwWarInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: MultiCustomWar.McwWarInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this McwWarInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Properties of a SingleCustomRoom. */
export declare interface ISingleCustomRoom {
}

/** Represents a SingleCustomRoom. */
export declare class SingleCustomRoom implements ISingleCustomRoom {

    /**
     * Constructs a new SingleCustomRoom.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISingleCustomRoom);

    /**
     * Creates a new SingleCustomRoom instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SingleCustomRoom instance
     */
    public static create(properties?: ISingleCustomRoom): SingleCustomRoom;

    /**
     * Encodes the specified SingleCustomRoom message. Does not implicitly {@link SingleCustomRoom.verify|verify} messages.
     * @param message SingleCustomRoom message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISingleCustomRoom, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Encodes the specified SingleCustomRoom message, length delimited. Does not implicitly {@link SingleCustomRoom.verify|verify} messages.
     * @param message SingleCustomRoom message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISingleCustomRoom, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Decodes a SingleCustomRoom message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SingleCustomRoom
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): SingleCustomRoom;

    /**
     * Decodes a SingleCustomRoom message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SingleCustomRoom
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): SingleCustomRoom;

    /**
     * Verifies a SingleCustomRoom message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SingleCustomRoom message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SingleCustomRoom
     */
    public static fromObject(object: { [k: string]: any }): SingleCustomRoom;

    /**
     * Creates a plain object from a SingleCustomRoom message. Also converts values to other types if specified.
     * @param message SingleCustomRoom
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SingleCustomRoom, options?: protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SingleCustomRoom to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export declare namespace SingleCustomRoom {

    /** Properties of a ScrSaveSlotInfo. */
    interface IScrSaveSlotInfo {

        /** ScrSaveSlotInfo saveSlotIndex */
        saveSlotIndex?: (number|null);

        /** ScrSaveSlotInfo mapId */
        mapId?: (number|null);

        /** ScrSaveSlotInfo warType */
        warType?: (number|null);

        /** ScrSaveSlotInfo configVersion */
        configVersion?: (string|null);
    }

    /** Represents a ScrSaveSlotInfo. */
    class ScrSaveSlotInfo implements IScrSaveSlotInfo {

        /**
         * Constructs a new ScrSaveSlotInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: SingleCustomRoom.IScrSaveSlotInfo);

        /** ScrSaveSlotInfo saveSlotIndex. */
        public saveSlotIndex: number;

        /** ScrSaveSlotInfo mapId. */
        public mapId: number;

        /** ScrSaveSlotInfo warType. */
        public warType: number;

        /** ScrSaveSlotInfo configVersion. */
        public configVersion: string;

        /**
         * Creates a new ScrSaveSlotInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ScrSaveSlotInfo instance
         */
        public static create(properties?: SingleCustomRoom.IScrSaveSlotInfo): SingleCustomRoom.ScrSaveSlotInfo;

        /**
         * Encodes the specified ScrSaveSlotInfo message. Does not implicitly {@link SingleCustomRoom.ScrSaveSlotInfo.verify|verify} messages.
         * @param message ScrSaveSlotInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: SingleCustomRoom.IScrSaveSlotInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified ScrSaveSlotInfo message, length delimited. Does not implicitly {@link SingleCustomRoom.ScrSaveSlotInfo.verify|verify} messages.
         * @param message ScrSaveSlotInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: SingleCustomRoom.IScrSaveSlotInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a ScrSaveSlotInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ScrSaveSlotInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): SingleCustomRoom.ScrSaveSlotInfo;

        /**
         * Decodes a ScrSaveSlotInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ScrSaveSlotInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): SingleCustomRoom.ScrSaveSlotInfo;

        /**
         * Verifies a ScrSaveSlotInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ScrSaveSlotInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ScrSaveSlotInfo
         */
        public static fromObject(object: { [k: string]: any }): SingleCustomRoom.ScrSaveSlotInfo;

        /**
         * Creates a plain object from a ScrSaveSlotInfo message. Also converts values to other types if specified.
         * @param message ScrSaveSlotInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: SingleCustomRoom.ScrSaveSlotInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ScrSaveSlotInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Properties of a Chat. */
export declare interface IChat {
}

/** Represents a Chat. */
export declare class Chat implements IChat {

    /**
     * Constructs a new Chat.
     * @param [properties] Properties to set
     */
    constructor(properties?: IChat);

    /**
     * Creates a new Chat instance using the specified properties.
     * @param [properties] Properties to set
     * @returns Chat instance
     */
    public static create(properties?: IChat): Chat;

    /**
     * Encodes the specified Chat message. Does not implicitly {@link Chat.verify|verify} messages.
     * @param message Chat message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IChat, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Encodes the specified Chat message, length delimited. Does not implicitly {@link Chat.verify|verify} messages.
     * @param message Chat message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IChat, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Decodes a Chat message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns Chat
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Chat;

    /**
     * Decodes a Chat message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns Chat
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Chat;

    /**
     * Verifies a Chat message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a Chat message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns Chat
     */
    public static fromObject(object: { [k: string]: any }): Chat;

    /**
     * Creates a plain object from a Chat message. Also converts values to other types if specified.
     * @param message Chat
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: Chat, options?: protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this Chat to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export declare namespace Chat {

    /** Properties of a ChatMessage. */
    interface IChatMessage {

        /** ChatMessage fromUserId */
        fromUserId?: (number|null);

        /** ChatMessage toCategory */
        toCategory?: (number|null);

        /** ChatMessage toTarget */
        toTarget?: (number|null);

        /** ChatMessage content */
        content?: (string|null);

        /** ChatMessage timestamp */
        timestamp?: (number|null);
    }

    /** Represents a ChatMessage. */
    class ChatMessage implements IChatMessage {

        /**
         * Constructs a new ChatMessage.
         * @param [properties] Properties to set
         */
        constructor(properties?: Chat.IChatMessage);

        /** ChatMessage fromUserId. */
        public fromUserId: number;

        /** ChatMessage toCategory. */
        public toCategory: number;

        /** ChatMessage toTarget. */
        public toTarget: number;

        /** ChatMessage content. */
        public content: string;

        /** ChatMessage timestamp. */
        public timestamp: number;

        /**
         * Creates a new ChatMessage instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ChatMessage instance
         */
        public static create(properties?: Chat.IChatMessage): Chat.ChatMessage;

        /**
         * Encodes the specified ChatMessage message. Does not implicitly {@link Chat.ChatMessage.verify|verify} messages.
         * @param message ChatMessage message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Chat.IChatMessage, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified ChatMessage message, length delimited. Does not implicitly {@link Chat.ChatMessage.verify|verify} messages.
         * @param message ChatMessage message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Chat.IChatMessage, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a ChatMessage message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ChatMessage
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Chat.ChatMessage;

        /**
         * Decodes a ChatMessage message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ChatMessage
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Chat.ChatMessage;

        /**
         * Verifies a ChatMessage message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ChatMessage message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ChatMessage
         */
        public static fromObject(object: { [k: string]: any }): Chat.ChatMessage;

        /**
         * Creates a plain object from a ChatMessage message. Also converts values to other types if specified.
         * @param message ChatMessage
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Chat.ChatMessage, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ChatMessage to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ChatReadProgress. */
    interface IChatReadProgress {

        /** ChatReadProgress toCategory */
        toCategory?: (number|null);

        /** ChatReadProgress toTarget */
        toTarget?: (number|null);

        /** ChatReadProgress timestamp */
        timestamp?: (number|null);
    }

    /** Represents a ChatReadProgress. */
    class ChatReadProgress implements IChatReadProgress {

        /**
         * Constructs a new ChatReadProgress.
         * @param [properties] Properties to set
         */
        constructor(properties?: Chat.IChatReadProgress);

        /** ChatReadProgress toCategory. */
        public toCategory: number;

        /** ChatReadProgress toTarget. */
        public toTarget: number;

        /** ChatReadProgress timestamp. */
        public timestamp: number;

        /**
         * Creates a new ChatReadProgress instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ChatReadProgress instance
         */
        public static create(properties?: Chat.IChatReadProgress): Chat.ChatReadProgress;

        /**
         * Encodes the specified ChatReadProgress message. Does not implicitly {@link Chat.ChatReadProgress.verify|verify} messages.
         * @param message ChatReadProgress message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Chat.IChatReadProgress, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified ChatReadProgress message, length delimited. Does not implicitly {@link Chat.ChatReadProgress.verify|verify} messages.
         * @param message ChatReadProgress message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Chat.IChatReadProgress, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a ChatReadProgress message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ChatReadProgress
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Chat.ChatReadProgress;

        /**
         * Decodes a ChatReadProgress message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ChatReadProgress
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Chat.ChatReadProgress;

        /**
         * Verifies a ChatReadProgress message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ChatReadProgress message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ChatReadProgress
         */
        public static fromObject(object: { [k: string]: any }): Chat.ChatReadProgress;

        /**
         * Creates a plain object from a ChatReadProgress message. Also converts values to other types if specified.
         * @param message ChatReadProgress
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Chat.ChatReadProgress, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ChatReadProgress to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Properties of a User. */
export declare interface IUser {
}

/** Represents a User. */
export declare class User implements IUser {

    /**
     * Constructs a new User.
     * @param [properties] Properties to set
     */
    constructor(properties?: IUser);

    /**
     * Creates a new User instance using the specified properties.
     * @param [properties] Properties to set
     * @returns User instance
     */
    public static create(properties?: IUser): User;

    /**
     * Encodes the specified User message. Does not implicitly {@link User.verify|verify} messages.
     * @param message User message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IUser, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Encodes the specified User message, length delimited. Does not implicitly {@link User.verify|verify} messages.
     * @param message User message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IUser, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Decodes a User message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns User
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): User;

    /**
     * Decodes a User message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns User
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): User;

    /**
     * Verifies a User message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a User message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns User
     */
    public static fromObject(object: { [k: string]: any }): User;

    /**
     * Creates a plain object from a User message. Also converts values to other types if specified.
     * @param message User
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: User, options?: protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this User to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export declare namespace User {

    /** Properties of a DataForWarStatistics. */
    interface IDataForWarStatistics {

        /** DataForWarStatistics playersCount */
        playersCount?: (number|null);

        /** DataForWarStatistics wins */
        wins?: (number|null);

        /** DataForWarStatistics loses */
        loses?: (number|null);

        /** DataForWarStatistics draws */
        draws?: (number|null);
    }

    /** Represents a DataForWarStatistics. */
    class DataForWarStatistics implements IDataForWarStatistics {

        /**
         * Constructs a new DataForWarStatistics.
         * @param [properties] Properties to set
         */
        constructor(properties?: User.IDataForWarStatistics);

        /** DataForWarStatistics playersCount. */
        public playersCount: number;

        /** DataForWarStatistics wins. */
        public wins: number;

        /** DataForWarStatistics loses. */
        public loses: number;

        /** DataForWarStatistics draws. */
        public draws: number;

        /**
         * Creates a new DataForWarStatistics instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DataForWarStatistics instance
         */
        public static create(properties?: User.IDataForWarStatistics): User.DataForWarStatistics;

        /**
         * Encodes the specified DataForWarStatistics message. Does not implicitly {@link User.DataForWarStatistics.verify|verify} messages.
         * @param message DataForWarStatistics message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: User.IDataForWarStatistics, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified DataForWarStatistics message, length delimited. Does not implicitly {@link User.DataForWarStatistics.verify|verify} messages.
         * @param message DataForWarStatistics message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: User.IDataForWarStatistics, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a DataForWarStatistics message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DataForWarStatistics
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): User.DataForWarStatistics;

        /**
         * Decodes a DataForWarStatistics message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DataForWarStatistics
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): User.DataForWarStatistics;

        /**
         * Verifies a DataForWarStatistics message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DataForWarStatistics message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DataForWarStatistics
         */
        public static fromObject(object: { [k: string]: any }): User.DataForWarStatistics;

        /**
         * Creates a plain object from a DataForWarStatistics message. Also converts values to other types if specified.
         * @param message DataForWarStatistics
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: User.DataForWarStatistics, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DataForWarStatistics to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a UserBriefInfo. */
    interface IUserBriefInfo {

        /** UserBriefInfo userId */
        userId?: (number|null);

        /** UserBriefInfo nickname */
        nickname?: (string|null);
    }

    /** Represents a UserBriefInfo. */
    class UserBriefInfo implements IUserBriefInfo {

        /**
         * Constructs a new UserBriefInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: User.IUserBriefInfo);

        /** UserBriefInfo userId. */
        public userId: number;

        /** UserBriefInfo nickname. */
        public nickname: string;

        /**
         * Creates a new UserBriefInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UserBriefInfo instance
         */
        public static create(properties?: User.IUserBriefInfo): User.UserBriefInfo;

        /**
         * Encodes the specified UserBriefInfo message. Does not implicitly {@link User.UserBriefInfo.verify|verify} messages.
         * @param message UserBriefInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: User.IUserBriefInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified UserBriefInfo message, length delimited. Does not implicitly {@link User.UserBriefInfo.verify|verify} messages.
         * @param message UserBriefInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: User.IUserBriefInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a UserBriefInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UserBriefInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): User.UserBriefInfo;

        /**
         * Decodes a UserBriefInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UserBriefInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): User.UserBriefInfo;

        /**
         * Verifies a UserBriefInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a UserBriefInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UserBriefInfo
         */
        public static fromObject(object: { [k: string]: any }): User.UserBriefInfo;

        /**
         * Creates a plain object from a UserBriefInfo message. Also converts values to other types if specified.
         * @param message UserBriefInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: User.UserBriefInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UserBriefInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a UserPrivilege. */
    interface IUserPrivilege {

        /** UserPrivilege isAdmin */
        isAdmin?: (boolean|null);

        /** UserPrivilege canLogin */
        canLogin?: (boolean|null);

        /** UserPrivilege isMapCommittee */
        isMapCommittee?: (boolean|null);
    }

    /** Represents a UserPrivilege. */
    class UserPrivilege implements IUserPrivilege {

        /**
         * Constructs a new UserPrivilege.
         * @param [properties] Properties to set
         */
        constructor(properties?: User.IUserPrivilege);

        /** UserPrivilege isAdmin. */
        public isAdmin: boolean;

        /** UserPrivilege canLogin. */
        public canLogin: boolean;

        /** UserPrivilege isMapCommittee. */
        public isMapCommittee: boolean;

        /**
         * Creates a new UserPrivilege instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UserPrivilege instance
         */
        public static create(properties?: User.IUserPrivilege): User.UserPrivilege;

        /**
         * Encodes the specified UserPrivilege message. Does not implicitly {@link User.UserPrivilege.verify|verify} messages.
         * @param message UserPrivilege message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: User.IUserPrivilege, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified UserPrivilege message, length delimited. Does not implicitly {@link User.UserPrivilege.verify|verify} messages.
         * @param message UserPrivilege message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: User.IUserPrivilege, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a UserPrivilege message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UserPrivilege
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): User.UserPrivilege;

        /**
         * Decodes a UserPrivilege message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UserPrivilege
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): User.UserPrivilege;

        /**
         * Verifies a UserPrivilege message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a UserPrivilege message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UserPrivilege
         */
        public static fromObject(object: { [k: string]: any }): User.UserPrivilege;

        /**
         * Creates a plain object from a UserPrivilege message. Also converts values to other types if specified.
         * @param message UserPrivilege
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: User.UserPrivilege, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UserPrivilege to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a UserComplexInfo. */
    interface IUserComplexInfo {

        /** UserComplexInfo userPrivilege */
        userPrivilege?: (User.IUserPrivilege|null);

        /** UserComplexInfo mcwStatisticsList */
        mcwStatisticsList?: (User.IDataForWarStatistics[]|null);

        /** UserComplexInfo mcwFogStatisticsList */
        mcwFogStatisticsList?: (User.IDataForWarStatistics[]|null);

        /** UserComplexInfo rankStatisticsList */
        rankStatisticsList?: (User.IDataForWarStatistics[]|null);

        /** UserComplexInfo rankFogStatisticsList */
        rankFogStatisticsList?: (User.IDataForWarStatistics[]|null);
    }

    /** Represents a UserComplexInfo. */
    class UserComplexInfo implements IUserComplexInfo {

        /**
         * Constructs a new UserComplexInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: User.IUserComplexInfo);

        /** UserComplexInfo userPrivilege. */
        public userPrivilege?: (User.IUserPrivilege|null);

        /** UserComplexInfo mcwStatisticsList. */
        public mcwStatisticsList: User.IDataForWarStatistics[];

        /** UserComplexInfo mcwFogStatisticsList. */
        public mcwFogStatisticsList: User.IDataForWarStatistics[];

        /** UserComplexInfo rankStatisticsList. */
        public rankStatisticsList: User.IDataForWarStatistics[];

        /** UserComplexInfo rankFogStatisticsList. */
        public rankFogStatisticsList: User.IDataForWarStatistics[];

        /**
         * Creates a new UserComplexInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UserComplexInfo instance
         */
        public static create(properties?: User.IUserComplexInfo): User.UserComplexInfo;

        /**
         * Encodes the specified UserComplexInfo message. Does not implicitly {@link User.UserComplexInfo.verify|verify} messages.
         * @param message UserComplexInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: User.IUserComplexInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified UserComplexInfo message, length delimited. Does not implicitly {@link User.UserComplexInfo.verify|verify} messages.
         * @param message UserComplexInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: User.IUserComplexInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a UserComplexInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UserComplexInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): User.UserComplexInfo;

        /**
         * Decodes a UserComplexInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UserComplexInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): User.UserComplexInfo;

        /**
         * Verifies a UserComplexInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a UserComplexInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UserComplexInfo
         */
        public static fromObject(object: { [k: string]: any }): User.UserComplexInfo;

        /**
         * Creates a plain object from a UserComplexInfo message. Also converts values to other types if specified.
         * @param message UserComplexInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: User.UserComplexInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UserComplexInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a UserPublicInfo. */
    interface IUserPublicInfo {

        /** UserPublicInfo userId */
        userId?: (number|null);

        /** UserPublicInfo nickname */
        nickname?: (string|null);

        /** UserPublicInfo registerTime */
        registerTime?: (number|null);

        /** UserPublicInfo lastLoginTime */
        lastLoginTime?: (number|null);

        /** UserPublicInfo loginCount */
        loginCount?: (number|null);

        /** UserPublicInfo onlineTime */
        onlineTime?: (number|null);

        /** UserPublicInfo discordId */
        discordId?: (string|null);

        /** UserPublicInfo userPrivilege */
        userPrivilege?: (User.IUserPrivilege|null);

        /** UserPublicInfo mcwStatisticsList */
        mcwStatisticsList?: (User.IDataForWarStatistics[]|null);

        /** UserPublicInfo mcwFogStatisticsList */
        mcwFogStatisticsList?: (User.IDataForWarStatistics[]|null);

        /** UserPublicInfo rankStatisticsList */
        rankStatisticsList?: (User.IDataForWarStatistics[]|null);

        /** UserPublicInfo rankFogStatisticsList */
        rankFogStatisticsList?: (User.IDataForWarStatistics[]|null);
    }

    /** Represents a UserPublicInfo. */
    class UserPublicInfo implements IUserPublicInfo {

        /**
         * Constructs a new UserPublicInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: User.IUserPublicInfo);

        /** UserPublicInfo userId. */
        public userId: number;

        /** UserPublicInfo nickname. */
        public nickname: string;

        /** UserPublicInfo registerTime. */
        public registerTime: number;

        /** UserPublicInfo lastLoginTime. */
        public lastLoginTime: number;

        /** UserPublicInfo loginCount. */
        public loginCount: number;

        /** UserPublicInfo onlineTime. */
        public onlineTime: number;

        /** UserPublicInfo discordId. */
        public discordId: string;

        /** UserPublicInfo userPrivilege. */
        public userPrivilege?: (User.IUserPrivilege|null);

        /** UserPublicInfo mcwStatisticsList. */
        public mcwStatisticsList: User.IDataForWarStatistics[];

        /** UserPublicInfo mcwFogStatisticsList. */
        public mcwFogStatisticsList: User.IDataForWarStatistics[];

        /** UserPublicInfo rankStatisticsList. */
        public rankStatisticsList: User.IDataForWarStatistics[];

        /** UserPublicInfo rankFogStatisticsList. */
        public rankFogStatisticsList: User.IDataForWarStatistics[];

        /**
         * Creates a new UserPublicInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UserPublicInfo instance
         */
        public static create(properties?: User.IUserPublicInfo): User.UserPublicInfo;

        /**
         * Encodes the specified UserPublicInfo message. Does not implicitly {@link User.UserPublicInfo.verify|verify} messages.
         * @param message UserPublicInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: User.IUserPublicInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified UserPublicInfo message, length delimited. Does not implicitly {@link User.UserPublicInfo.verify|verify} messages.
         * @param message UserPublicInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: User.IUserPublicInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a UserPublicInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UserPublicInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): User.UserPublicInfo;

        /**
         * Decodes a UserPublicInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UserPublicInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): User.UserPublicInfo;

        /**
         * Verifies a UserPublicInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a UserPublicInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UserPublicInfo
         */
        public static fromObject(object: { [k: string]: any }): User.UserPublicInfo;

        /**
         * Creates a plain object from a UserPublicInfo message. Also converts values to other types if specified.
         * @param message UserPublicInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: User.UserPublicInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UserPublicInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a UserPrivateInfo. */
    interface IUserPrivateInfo {

        /** UserPrivateInfo account */
        account?: (string|null);

        /** UserPrivateInfo password */
        password?: (string|null);

        /** UserPrivateInfo lastLoginIp */
        lastLoginIp?: (string|null);
    }

    /** Represents a UserPrivateInfo. */
    class UserPrivateInfo implements IUserPrivateInfo {

        /**
         * Constructs a new UserPrivateInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: User.IUserPrivateInfo);

        /** UserPrivateInfo account. */
        public account: string;

        /** UserPrivateInfo password. */
        public password: string;

        /** UserPrivateInfo lastLoginIp. */
        public lastLoginIp: string;

        /**
         * Creates a new UserPrivateInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UserPrivateInfo instance
         */
        public static create(properties?: User.IUserPrivateInfo): User.UserPrivateInfo;

        /**
         * Encodes the specified UserPrivateInfo message. Does not implicitly {@link User.UserPrivateInfo.verify|verify} messages.
         * @param message UserPrivateInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: User.IUserPrivateInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified UserPrivateInfo message, length delimited. Does not implicitly {@link User.UserPrivateInfo.verify|verify} messages.
         * @param message UserPrivateInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: User.IUserPrivateInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a UserPrivateInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UserPrivateInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): User.UserPrivateInfo;

        /**
         * Decodes a UserPrivateInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UserPrivateInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): User.UserPrivateInfo;

        /**
         * Verifies a UserPrivateInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a UserPrivateInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UserPrivateInfo
         */
        public static fromObject(object: { [k: string]: any }): User.UserPrivateInfo;

        /**
         * Creates a plain object from a UserPrivateInfo message. Also converts values to other types if specified.
         * @param message UserPrivateInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: User.UserPrivateInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UserPrivateInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a UserFullInfo. */
    interface IUserFullInfo {

        /** UserFullInfo userPublicInfo */
        userPublicInfo?: (User.IUserPublicInfo|null);

        /** UserFullInfo userPrivateInfo */
        userPrivateInfo?: (User.IUserPrivateInfo|null);
    }

    /** Represents a UserFullInfo. */
    class UserFullInfo implements IUserFullInfo {

        /**
         * Constructs a new UserFullInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: User.IUserFullInfo);

        /** UserFullInfo userPublicInfo. */
        public userPublicInfo?: (User.IUserPublicInfo|null);

        /** UserFullInfo userPrivateInfo. */
        public userPrivateInfo?: (User.IUserPrivateInfo|null);

        /**
         * Creates a new UserFullInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UserFullInfo instance
         */
        public static create(properties?: User.IUserFullInfo): User.UserFullInfo;

        /**
         * Encodes the specified UserFullInfo message. Does not implicitly {@link User.UserFullInfo.verify|verify} messages.
         * @param message UserFullInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: User.IUserFullInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified UserFullInfo message, length delimited. Does not implicitly {@link User.UserFullInfo.verify|verify} messages.
         * @param message UserFullInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: User.IUserFullInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a UserFullInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UserFullInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): User.UserFullInfo;

        /**
         * Decodes a UserFullInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UserFullInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): User.UserFullInfo;

        /**
         * Verifies a UserFullInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a UserFullInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UserFullInfo
         */
        public static fromObject(object: { [k: string]: any }): User.UserFullInfo;

        /**
         * Creates a plain object from a UserFullInfo message. Also converts values to other types if specified.
         * @param message UserFullInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: User.UserFullInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UserFullInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Properties of a NetMessage. */
export declare interface INetMessage {
}

/** Represents a NetMessage. */
export declare class NetMessage implements INetMessage {

    /**
     * Constructs a new NetMessage.
     * @param [properties] Properties to set
     */
    constructor(properties?: INetMessage);

    /**
     * Creates a new NetMessage instance using the specified properties.
     * @param [properties] Properties to set
     * @returns NetMessage instance
     */
    public static create(properties?: INetMessage): NetMessage;

    /**
     * Encodes the specified NetMessage message. Does not implicitly {@link NetMessage.verify|verify} messages.
     * @param message NetMessage message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: INetMessage, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Encodes the specified NetMessage message, length delimited. Does not implicitly {@link NetMessage.verify|verify} messages.
     * @param message NetMessage message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: INetMessage, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Decodes a NetMessage message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns NetMessage
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage;

    /**
     * Decodes a NetMessage message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns NetMessage
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage;

    /**
     * Verifies a NetMessage message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a NetMessage message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns NetMessage
     */
    public static fromObject(object: { [k: string]: any }): NetMessage;

    /**
     * Creates a plain object from a NetMessage message. Also converts values to other types if specified.
     * @param message NetMessage
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: NetMessage, options?: protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this NetMessage to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export declare namespace NetMessage {

    /** Properties of a MessageContainer. */
    interface IMessageContainer {

        /** MessageContainer MsgCommonHeartbeat */
        MsgCommonHeartbeat?: (NetMessage.IMsgCommonHeartbeat|null);

        /** MessageContainer MsgCommonError */
        MsgCommonError?: (NetMessage.IMsgCommonError|null);

        /** MessageContainer MsgCommonServerDisconnect */
        MsgCommonServerDisconnect?: (NetMessage.IMsgCommonServerDisconnect|null);

        /** MessageContainer MsgCommonLatestConfigVersion */
        MsgCommonLatestConfigVersion?: (NetMessage.IMsgCommonLatestConfigVersion|null);

        /** MessageContainer MsgCommonGetServerStatus */
        MsgCommonGetServerStatus?: (NetMessage.IMsgCommonGetServerStatus|null);

        /** MessageContainer MsgUserRegister */
        MsgUserRegister?: (NetMessage.IMsgUserRegister|null);

        /** MessageContainer MsgUserLogin */
        MsgUserLogin?: (NetMessage.IMsgUserLogin|null);

        /** MessageContainer MsgUserLogout */
        MsgUserLogout?: (NetMessage.IMsgUserLogout|null);

        /** MessageContainer MsgUserGetPublicInfo */
        MsgUserGetPublicInfo?: (NetMessage.IMsgUserGetPublicInfo|null);

        /** MessageContainer MsgUserGetOnlineUsers */
        MsgUserGetOnlineUsers?: (NetMessage.IMsgUserGetOnlineUsers|null);

        /** MessageContainer MsgUserSetNickname */
        MsgUserSetNickname?: (NetMessage.IMsgUserSetNickname|null);

        /** MessageContainer MsgUserSetDiscordId */
        MsgUserSetDiscordId?: (NetMessage.IMsgUserSetDiscordId|null);

        /** MessageContainer MsgMapGetEnabledExtraDataList */
        MsgMapGetEnabledExtraDataList?: (NetMessage.IMsgMapGetEnabledExtraDataList|null);

        /** MessageContainer MsgMapGetExtraData */
        MsgMapGetExtraData?: (NetMessage.IMsgMapGetExtraData|null);

        /** MessageContainer MsgMapGetRawData */
        MsgMapGetRawData?: (NetMessage.IMsgMapGetRawData|null);

        /** MessageContainer MsgMeGetMapDataList */
        MsgMeGetMapDataList?: (NetMessage.IMsgMeGetMapDataList|null);

        /** MessageContainer MsgMeGetMapData */
        MsgMeGetMapData?: (NetMessage.IMsgMeGetMapData|null);

        /** MessageContainer MsgMeSubmitMap */
        MsgMeSubmitMap?: (NetMessage.IMsgMeSubmitMap|null);

        /** MessageContainer MsgMeSubmitWarRule */
        MsgMeSubmitWarRule?: (NetMessage.IMsgMeSubmitWarRule|null);

        /** MessageContainer MsgMeGetSubmittedWarRuleList */
        MsgMeGetSubmittedWarRuleList?: (NetMessage.IMsgMeGetSubmittedWarRuleList|null);

        /** MessageContainer MsgChatAddMessage */
        MsgChatAddMessage?: (NetMessage.IMsgChatAddMessage|null);

        /** MessageContainer MsgChatGetAllMessages */
        MsgChatGetAllMessages?: (NetMessage.IMsgChatGetAllMessages|null);

        /** MessageContainer MsgChatUpdateReadProgress */
        MsgChatUpdateReadProgress?: (NetMessage.IMsgChatUpdateReadProgress|null);

        /** MessageContainer MsgChatGetAllReadProgressList */
        MsgChatGetAllReadProgressList?: (NetMessage.IMsgChatGetAllReadProgressList|null);

        /** MessageContainer MsgMmSetMapAvailability */
        MsgMmSetMapAvailability?: (NetMessage.IMsgMmSetMapAvailability|null);

        /** MessageContainer MsgMmDeleteMap */
        MsgMmDeleteMap?: (NetMessage.IMsgMmDeleteMap|null);

        /** MessageContainer MsgMmGetReviewingMaps */
        MsgMmGetReviewingMaps?: (NetMessage.IMsgMmGetReviewingMaps|null);

        /** MessageContainer MsgMmReviewMap */
        MsgMmReviewMap?: (NetMessage.IMsgMmReviewMap|null);

        /** MessageContainer MsgMmGetReviewingWarRuleList */
        MsgMmGetReviewingWarRuleList?: (NetMessage.IMsgMmGetReviewingWarRuleList|null);

        /** MessageContainer MsgMmReviewWarRule */
        MsgMmReviewWarRule?: (NetMessage.IMsgMmReviewWarRule|null);

        /** MessageContainer MsgReplaySetRating */
        MsgReplaySetRating?: (NetMessage.IMsgReplaySetRating|null);

        /** MessageContainer MsgReplayGetInfoList */
        MsgReplayGetInfoList?: (NetMessage.IMsgReplayGetInfoList|null);

        /** MessageContainer MsgReplayGetData */
        MsgReplayGetData?: (NetMessage.IMsgReplayGetData|null);

        /** MessageContainer MsgMcrCreateRoom */
        MsgMcrCreateRoom?: (NetMessage.IMsgMcrCreateRoom|null);

        /** MessageContainer MsgMcrExitRoom */
        MsgMcrExitRoom?: (NetMessage.IMsgMcrExitRoom|null);

        /** MessageContainer MsgMcrJoinRoom */
        MsgMcrJoinRoom?: (NetMessage.IMsgMcrJoinRoom|null);

        /** MessageContainer MsgMcrDeleteRoom */
        MsgMcrDeleteRoom?: (NetMessage.IMsgMcrDeleteRoom|null);

        /** MessageContainer MsgMcrSetReady */
        MsgMcrSetReady?: (NetMessage.IMsgMcrSetReady|null);

        /** MessageContainer MsgMcrDeletePlayer */
        MsgMcrDeletePlayer?: (NetMessage.IMsgMcrDeletePlayer|null);

        /** MessageContainer MsgMcrSetSelfSettings */
        MsgMcrSetSelfSettings?: (NetMessage.IMsgMcrSetSelfSettings|null);

        /** MessageContainer MsgMcrSetWarRule */
        MsgMcrSetWarRule?: (NetMessage.IMsgMcrSetWarRule|null);

        /** MessageContainer MsgMcrStartWar */
        MsgMcrStartWar?: (NetMessage.IMsgMcrStartWar|null);

        /** MessageContainer MsgMcrGetJoinedRoomInfoList */
        MsgMcrGetJoinedRoomInfoList?: (NetMessage.IMsgMcrGetJoinedRoomInfoList|null);

        /** MessageContainer MsgMcrGetRoomInfo */
        MsgMcrGetRoomInfo?: (NetMessage.IMsgMcrGetRoomInfo|null);

        /** MessageContainer MsgMcrGetUnjoinedRoomInfoList */
        MsgMcrGetUnjoinedRoomInfoList?: (NetMessage.IMsgMcrGetUnjoinedRoomInfoList|null);

        /** MessageContainer MsgMcwCommonGetWarInfoList */
        MsgMcwCommonGetWarInfoList?: (NetMessage.IMsgMcwCommonGetWarInfoList|null);

        /** MessageContainer MsgMcwCommonContinueWar */
        MsgMcwCommonContinueWar?: (NetMessage.IMsgMcwCommonContinueWar|null);

        /** MessageContainer MsgMcwCommonSerializeWar */
        MsgMcwCommonSerializeWar?: (NetMessage.IMsgMcwCommonSerializeWar|null);

        /** MessageContainer MsgMcwCommonHandleBoot */
        MsgMcwCommonHandleBoot?: (NetMessage.IMsgMcwCommonHandleBoot|null);

        /** MessageContainer MsgMcwCommonBroadcastGameStart */
        MsgMcwCommonBroadcastGameStart?: (NetMessage.IMsgMcwCommonBroadcastGameStart|null);

        /** MessageContainer MsgMcwCommonSyncWar */
        MsgMcwCommonSyncWar?: (NetMessage.IMsgMcwCommonSyncWar|null);

        /** MessageContainer MsgMcwWatchMakeRequest */
        MsgMcwWatchMakeRequest?: (NetMessage.IMsgMcwWatchMakeRequest|null);

        /** MessageContainer MsgMcwWatchHandleRequest */
        MsgMcwWatchHandleRequest?: (NetMessage.IMsgMcwWatchHandleRequest|null);

        /** MessageContainer MsgMcwWatchDeleteWatcher */
        MsgMcwWatchDeleteWatcher?: (NetMessage.IMsgMcwWatchDeleteWatcher|null);

        /** MessageContainer MsgMcwWatchGetUnwatchedWarInfos */
        MsgMcwWatchGetUnwatchedWarInfos?: (NetMessage.IMsgMcwWatchGetUnwatchedWarInfos|null);

        /** MessageContainer MsgMcwWatchGetOngoingWarInfos */
        MsgMcwWatchGetOngoingWarInfos?: (NetMessage.IMsgMcwWatchGetOngoingWarInfos|null);

        /** MessageContainer MsgMcwWatchGetRequestedWarInfos */
        MsgMcwWatchGetRequestedWarInfos?: (NetMessage.IMsgMcwWatchGetRequestedWarInfos|null);

        /** MessageContainer MsgMcwWatchGetWatchedWarInfos */
        MsgMcwWatchGetWatchedWarInfos?: (NetMessage.IMsgMcwWatchGetWatchedWarInfos|null);

        /** MessageContainer MsgMcwWatchContinueWar */
        MsgMcwWatchContinueWar?: (NetMessage.IMsgMcwWatchContinueWar|null);

        /** MessageContainer MsgMcwActionPlayerBeginTurn */
        MsgMcwActionPlayerBeginTurn?: (NetMessage.IMsgMcwActionPlayerBeginTurn|null);

        /** MessageContainer MsgMcwActionPlayerEndTurn */
        MsgMcwActionPlayerEndTurn?: (NetMessage.IMsgMcwActionPlayerEndTurn|null);

        /** MessageContainer MsgMcwActionPlayerSurrender */
        MsgMcwActionPlayerSurrender?: (NetMessage.IMsgMcwActionPlayerSurrender|null);

        /** MessageContainer MsgMcwActionPlayerProduceUnit */
        MsgMcwActionPlayerProduceUnit?: (NetMessage.IMsgMcwActionPlayerProduceUnit|null);

        /** MessageContainer MsgMcwActionPlayerDeleteUnit */
        MsgMcwActionPlayerDeleteUnit?: (NetMessage.IMsgMcwActionPlayerDeleteUnit|null);

        /** MessageContainer MsgMcwActionPlayerVoteForDraw */
        MsgMcwActionPlayerVoteForDraw?: (NetMessage.IMsgMcwActionPlayerVoteForDraw|null);

        /** MessageContainer MsgMcwActionUnitWait */
        MsgMcwActionUnitWait?: (NetMessage.IMsgMcwActionUnitWait|null);

        /** MessageContainer MsgMcwActionUnitBeLoaded */
        MsgMcwActionUnitBeLoaded?: (NetMessage.IMsgMcwActionUnitBeLoaded|null);

        /** MessageContainer MsgMcwActionUnitCaptureTile */
        MsgMcwActionUnitCaptureTile?: (NetMessage.IMsgMcwActionUnitCaptureTile|null);

        /** MessageContainer MsgMcwActionUnitAttackTile */
        MsgMcwActionUnitAttackTile?: (NetMessage.IMsgMcwActionUnitAttackTile|null);

        /** MessageContainer MsgMcwActionUnitAttackUnit */
        MsgMcwActionUnitAttackUnit?: (NetMessage.IMsgMcwActionUnitAttackUnit|null);

        /** MessageContainer MsgMcwActionUnitDropUnit */
        MsgMcwActionUnitDropUnit?: (NetMessage.IMsgMcwActionUnitDropUnit|null);

        /** MessageContainer MsgMcwActionUnitBuildTile */
        MsgMcwActionUnitBuildTile?: (NetMessage.IMsgMcwActionUnitBuildTile|null);

        /** MessageContainer MsgMcwActionUnitDive */
        MsgMcwActionUnitDive?: (NetMessage.IMsgMcwActionUnitDive|null);

        /** MessageContainer MsgMcwActionUnitSurface */
        MsgMcwActionUnitSurface?: (NetMessage.IMsgMcwActionUnitSurface|null);

        /** MessageContainer MsgMcwActionUnitJoinUnit */
        MsgMcwActionUnitJoinUnit?: (NetMessage.IMsgMcwActionUnitJoinUnit|null);

        /** MessageContainer MsgMcwActionUnitLaunchFlare */
        MsgMcwActionUnitLaunchFlare?: (NetMessage.IMsgMcwActionUnitLaunchFlare|null);

        /** MessageContainer MsgMcwActionUnitLaunchSilo */
        MsgMcwActionUnitLaunchSilo?: (NetMessage.IMsgMcwActionUnitLaunchSilo|null);

        /** MessageContainer MsgMcwActionUnitProduceUnit */
        MsgMcwActionUnitProduceUnit?: (NetMessage.IMsgMcwActionUnitProduceUnit|null);

        /** MessageContainer MsgMcwActionUnitSupplyUnit */
        MsgMcwActionUnitSupplyUnit?: (NetMessage.IMsgMcwActionUnitSupplyUnit|null);

        /** MessageContainer MsgMcwActionUnitLoadCo */
        MsgMcwActionUnitLoadCo?: (NetMessage.IMsgMcwActionUnitLoadCo|null);

        /** MessageContainer MsgMcwActionUnitUseCoSkill */
        MsgMcwActionUnitUseCoSkill?: (NetMessage.IMsgMcwActionUnitUseCoSkill|null);

        /** MessageContainer MsgScrCreateWar */
        MsgScrCreateWar?: (NetMessage.IMsgScrCreateWar|null);

        /** MessageContainer MsgScrGetSaveSlotInfoList */
        MsgScrGetSaveSlotInfoList?: (NetMessage.IMsgScrGetSaveSlotInfoList|null);

        /** MessageContainer MsgScrContinueWar */
        MsgScrContinueWar?: (NetMessage.IMsgScrContinueWar|null);

        /** MessageContainer MsgScrSaveWar */
        MsgScrSaveWar?: (NetMessage.IMsgScrSaveWar|null);

        /** MessageContainer MsgScrCreateCustomWar */
        MsgScrCreateCustomWar?: (NetMessage.IMsgScrCreateCustomWar|null);
    }

    /** Represents a MessageContainer. */
    class MessageContainer implements IMessageContainer {

        /**
         * Constructs a new MessageContainer.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMessageContainer);

        /** MessageContainer MsgCommonHeartbeat. */
        public MsgCommonHeartbeat?: (NetMessage.IMsgCommonHeartbeat|null);

        /** MessageContainer MsgCommonError. */
        public MsgCommonError?: (NetMessage.IMsgCommonError|null);

        /** MessageContainer MsgCommonServerDisconnect. */
        public MsgCommonServerDisconnect?: (NetMessage.IMsgCommonServerDisconnect|null);

        /** MessageContainer MsgCommonLatestConfigVersion. */
        public MsgCommonLatestConfigVersion?: (NetMessage.IMsgCommonLatestConfigVersion|null);

        /** MessageContainer MsgCommonGetServerStatus. */
        public MsgCommonGetServerStatus?: (NetMessage.IMsgCommonGetServerStatus|null);

        /** MessageContainer MsgUserRegister. */
        public MsgUserRegister?: (NetMessage.IMsgUserRegister|null);

        /** MessageContainer MsgUserLogin. */
        public MsgUserLogin?: (NetMessage.IMsgUserLogin|null);

        /** MessageContainer MsgUserLogout. */
        public MsgUserLogout?: (NetMessage.IMsgUserLogout|null);

        /** MessageContainer MsgUserGetPublicInfo. */
        public MsgUserGetPublicInfo?: (NetMessage.IMsgUserGetPublicInfo|null);

        /** MessageContainer MsgUserGetOnlineUsers. */
        public MsgUserGetOnlineUsers?: (NetMessage.IMsgUserGetOnlineUsers|null);

        /** MessageContainer MsgUserSetNickname. */
        public MsgUserSetNickname?: (NetMessage.IMsgUserSetNickname|null);

        /** MessageContainer MsgUserSetDiscordId. */
        public MsgUserSetDiscordId?: (NetMessage.IMsgUserSetDiscordId|null);

        /** MessageContainer MsgMapGetEnabledExtraDataList. */
        public MsgMapGetEnabledExtraDataList?: (NetMessage.IMsgMapGetEnabledExtraDataList|null);

        /** MessageContainer MsgMapGetExtraData. */
        public MsgMapGetExtraData?: (NetMessage.IMsgMapGetExtraData|null);

        /** MessageContainer MsgMapGetRawData. */
        public MsgMapGetRawData?: (NetMessage.IMsgMapGetRawData|null);

        /** MessageContainer MsgMeGetMapDataList. */
        public MsgMeGetMapDataList?: (NetMessage.IMsgMeGetMapDataList|null);

        /** MessageContainer MsgMeGetMapData. */
        public MsgMeGetMapData?: (NetMessage.IMsgMeGetMapData|null);

        /** MessageContainer MsgMeSubmitMap. */
        public MsgMeSubmitMap?: (NetMessage.IMsgMeSubmitMap|null);

        /** MessageContainer MsgMeSubmitWarRule. */
        public MsgMeSubmitWarRule?: (NetMessage.IMsgMeSubmitWarRule|null);

        /** MessageContainer MsgMeGetSubmittedWarRuleList. */
        public MsgMeGetSubmittedWarRuleList?: (NetMessage.IMsgMeGetSubmittedWarRuleList|null);

        /** MessageContainer MsgChatAddMessage. */
        public MsgChatAddMessage?: (NetMessage.IMsgChatAddMessage|null);

        /** MessageContainer MsgChatGetAllMessages. */
        public MsgChatGetAllMessages?: (NetMessage.IMsgChatGetAllMessages|null);

        /** MessageContainer MsgChatUpdateReadProgress. */
        public MsgChatUpdateReadProgress?: (NetMessage.IMsgChatUpdateReadProgress|null);

        /** MessageContainer MsgChatGetAllReadProgressList. */
        public MsgChatGetAllReadProgressList?: (NetMessage.IMsgChatGetAllReadProgressList|null);

        /** MessageContainer MsgMmSetMapAvailability. */
        public MsgMmSetMapAvailability?: (NetMessage.IMsgMmSetMapAvailability|null);

        /** MessageContainer MsgMmDeleteMap. */
        public MsgMmDeleteMap?: (NetMessage.IMsgMmDeleteMap|null);

        /** MessageContainer MsgMmGetReviewingMaps. */
        public MsgMmGetReviewingMaps?: (NetMessage.IMsgMmGetReviewingMaps|null);

        /** MessageContainer MsgMmReviewMap. */
        public MsgMmReviewMap?: (NetMessage.IMsgMmReviewMap|null);

        /** MessageContainer MsgMmGetReviewingWarRuleList. */
        public MsgMmGetReviewingWarRuleList?: (NetMessage.IMsgMmGetReviewingWarRuleList|null);

        /** MessageContainer MsgMmReviewWarRule. */
        public MsgMmReviewWarRule?: (NetMessage.IMsgMmReviewWarRule|null);

        /** MessageContainer MsgReplaySetRating. */
        public MsgReplaySetRating?: (NetMessage.IMsgReplaySetRating|null);

        /** MessageContainer MsgReplayGetInfoList. */
        public MsgReplayGetInfoList?: (NetMessage.IMsgReplayGetInfoList|null);

        /** MessageContainer MsgReplayGetData. */
        public MsgReplayGetData?: (NetMessage.IMsgReplayGetData|null);

        /** MessageContainer MsgMcrCreateRoom. */
        public MsgMcrCreateRoom?: (NetMessage.IMsgMcrCreateRoom|null);

        /** MessageContainer MsgMcrExitRoom. */
        public MsgMcrExitRoom?: (NetMessage.IMsgMcrExitRoom|null);

        /** MessageContainer MsgMcrJoinRoom. */
        public MsgMcrJoinRoom?: (NetMessage.IMsgMcrJoinRoom|null);

        /** MessageContainer MsgMcrDeleteRoom. */
        public MsgMcrDeleteRoom?: (NetMessage.IMsgMcrDeleteRoom|null);

        /** MessageContainer MsgMcrSetReady. */
        public MsgMcrSetReady?: (NetMessage.IMsgMcrSetReady|null);

        /** MessageContainer MsgMcrDeletePlayer. */
        public MsgMcrDeletePlayer?: (NetMessage.IMsgMcrDeletePlayer|null);

        /** MessageContainer MsgMcrSetSelfSettings. */
        public MsgMcrSetSelfSettings?: (NetMessage.IMsgMcrSetSelfSettings|null);

        /** MessageContainer MsgMcrSetWarRule. */
        public MsgMcrSetWarRule?: (NetMessage.IMsgMcrSetWarRule|null);

        /** MessageContainer MsgMcrStartWar. */
        public MsgMcrStartWar?: (NetMessage.IMsgMcrStartWar|null);

        /** MessageContainer MsgMcrGetJoinedRoomInfoList. */
        public MsgMcrGetJoinedRoomInfoList?: (NetMessage.IMsgMcrGetJoinedRoomInfoList|null);

        /** MessageContainer MsgMcrGetRoomInfo. */
        public MsgMcrGetRoomInfo?: (NetMessage.IMsgMcrGetRoomInfo|null);

        /** MessageContainer MsgMcrGetUnjoinedRoomInfoList. */
        public MsgMcrGetUnjoinedRoomInfoList?: (NetMessage.IMsgMcrGetUnjoinedRoomInfoList|null);

        /** MessageContainer MsgMcwCommonGetWarInfoList. */
        public MsgMcwCommonGetWarInfoList?: (NetMessage.IMsgMcwCommonGetWarInfoList|null);

        /** MessageContainer MsgMcwCommonContinueWar. */
        public MsgMcwCommonContinueWar?: (NetMessage.IMsgMcwCommonContinueWar|null);

        /** MessageContainer MsgMcwCommonSerializeWar. */
        public MsgMcwCommonSerializeWar?: (NetMessage.IMsgMcwCommonSerializeWar|null);

        /** MessageContainer MsgMcwCommonHandleBoot. */
        public MsgMcwCommonHandleBoot?: (NetMessage.IMsgMcwCommonHandleBoot|null);

        /** MessageContainer MsgMcwCommonBroadcastGameStart. */
        public MsgMcwCommonBroadcastGameStart?: (NetMessage.IMsgMcwCommonBroadcastGameStart|null);

        /** MessageContainer MsgMcwCommonSyncWar. */
        public MsgMcwCommonSyncWar?: (NetMessage.IMsgMcwCommonSyncWar|null);

        /** MessageContainer MsgMcwWatchMakeRequest. */
        public MsgMcwWatchMakeRequest?: (NetMessage.IMsgMcwWatchMakeRequest|null);

        /** MessageContainer MsgMcwWatchHandleRequest. */
        public MsgMcwWatchHandleRequest?: (NetMessage.IMsgMcwWatchHandleRequest|null);

        /** MessageContainer MsgMcwWatchDeleteWatcher. */
        public MsgMcwWatchDeleteWatcher?: (NetMessage.IMsgMcwWatchDeleteWatcher|null);

        /** MessageContainer MsgMcwWatchGetUnwatchedWarInfos. */
        public MsgMcwWatchGetUnwatchedWarInfos?: (NetMessage.IMsgMcwWatchGetUnwatchedWarInfos|null);

        /** MessageContainer MsgMcwWatchGetOngoingWarInfos. */
        public MsgMcwWatchGetOngoingWarInfos?: (NetMessage.IMsgMcwWatchGetOngoingWarInfos|null);

        /** MessageContainer MsgMcwWatchGetRequestedWarInfos. */
        public MsgMcwWatchGetRequestedWarInfos?: (NetMessage.IMsgMcwWatchGetRequestedWarInfos|null);

        /** MessageContainer MsgMcwWatchGetWatchedWarInfos. */
        public MsgMcwWatchGetWatchedWarInfos?: (NetMessage.IMsgMcwWatchGetWatchedWarInfos|null);

        /** MessageContainer MsgMcwWatchContinueWar. */
        public MsgMcwWatchContinueWar?: (NetMessage.IMsgMcwWatchContinueWar|null);

        /** MessageContainer MsgMcwActionPlayerBeginTurn. */
        public MsgMcwActionPlayerBeginTurn?: (NetMessage.IMsgMcwActionPlayerBeginTurn|null);

        /** MessageContainer MsgMcwActionPlayerEndTurn. */
        public MsgMcwActionPlayerEndTurn?: (NetMessage.IMsgMcwActionPlayerEndTurn|null);

        /** MessageContainer MsgMcwActionPlayerSurrender. */
        public MsgMcwActionPlayerSurrender?: (NetMessage.IMsgMcwActionPlayerSurrender|null);

        /** MessageContainer MsgMcwActionPlayerProduceUnit. */
        public MsgMcwActionPlayerProduceUnit?: (NetMessage.IMsgMcwActionPlayerProduceUnit|null);

        /** MessageContainer MsgMcwActionPlayerDeleteUnit. */
        public MsgMcwActionPlayerDeleteUnit?: (NetMessage.IMsgMcwActionPlayerDeleteUnit|null);

        /** MessageContainer MsgMcwActionPlayerVoteForDraw. */
        public MsgMcwActionPlayerVoteForDraw?: (NetMessage.IMsgMcwActionPlayerVoteForDraw|null);

        /** MessageContainer MsgMcwActionUnitWait. */
        public MsgMcwActionUnitWait?: (NetMessage.IMsgMcwActionUnitWait|null);

        /** MessageContainer MsgMcwActionUnitBeLoaded. */
        public MsgMcwActionUnitBeLoaded?: (NetMessage.IMsgMcwActionUnitBeLoaded|null);

        /** MessageContainer MsgMcwActionUnitCaptureTile. */
        public MsgMcwActionUnitCaptureTile?: (NetMessage.IMsgMcwActionUnitCaptureTile|null);

        /** MessageContainer MsgMcwActionUnitAttackTile. */
        public MsgMcwActionUnitAttackTile?: (NetMessage.IMsgMcwActionUnitAttackTile|null);

        /** MessageContainer MsgMcwActionUnitAttackUnit. */
        public MsgMcwActionUnitAttackUnit?: (NetMessage.IMsgMcwActionUnitAttackUnit|null);

        /** MessageContainer MsgMcwActionUnitDropUnit. */
        public MsgMcwActionUnitDropUnit?: (NetMessage.IMsgMcwActionUnitDropUnit|null);

        /** MessageContainer MsgMcwActionUnitBuildTile. */
        public MsgMcwActionUnitBuildTile?: (NetMessage.IMsgMcwActionUnitBuildTile|null);

        /** MessageContainer MsgMcwActionUnitDive. */
        public MsgMcwActionUnitDive?: (NetMessage.IMsgMcwActionUnitDive|null);

        /** MessageContainer MsgMcwActionUnitSurface. */
        public MsgMcwActionUnitSurface?: (NetMessage.IMsgMcwActionUnitSurface|null);

        /** MessageContainer MsgMcwActionUnitJoinUnit. */
        public MsgMcwActionUnitJoinUnit?: (NetMessage.IMsgMcwActionUnitJoinUnit|null);

        /** MessageContainer MsgMcwActionUnitLaunchFlare. */
        public MsgMcwActionUnitLaunchFlare?: (NetMessage.IMsgMcwActionUnitLaunchFlare|null);

        /** MessageContainer MsgMcwActionUnitLaunchSilo. */
        public MsgMcwActionUnitLaunchSilo?: (NetMessage.IMsgMcwActionUnitLaunchSilo|null);

        /** MessageContainer MsgMcwActionUnitProduceUnit. */
        public MsgMcwActionUnitProduceUnit?: (NetMessage.IMsgMcwActionUnitProduceUnit|null);

        /** MessageContainer MsgMcwActionUnitSupplyUnit. */
        public MsgMcwActionUnitSupplyUnit?: (NetMessage.IMsgMcwActionUnitSupplyUnit|null);

        /** MessageContainer MsgMcwActionUnitLoadCo. */
        public MsgMcwActionUnitLoadCo?: (NetMessage.IMsgMcwActionUnitLoadCo|null);

        /** MessageContainer MsgMcwActionUnitUseCoSkill. */
        public MsgMcwActionUnitUseCoSkill?: (NetMessage.IMsgMcwActionUnitUseCoSkill|null);

        /** MessageContainer MsgScrCreateWar. */
        public MsgScrCreateWar?: (NetMessage.IMsgScrCreateWar|null);

        /** MessageContainer MsgScrGetSaveSlotInfoList. */
        public MsgScrGetSaveSlotInfoList?: (NetMessage.IMsgScrGetSaveSlotInfoList|null);

        /** MessageContainer MsgScrContinueWar. */
        public MsgScrContinueWar?: (NetMessage.IMsgScrContinueWar|null);

        /** MessageContainer MsgScrSaveWar. */
        public MsgScrSaveWar?: (NetMessage.IMsgScrSaveWar|null);

        /** MessageContainer MsgScrCreateCustomWar. */
        public MsgScrCreateCustomWar?: (NetMessage.IMsgScrCreateCustomWar|null);

        /**
         * Creates a new MessageContainer instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MessageContainer instance
         */
        public static create(properties?: NetMessage.IMessageContainer): NetMessage.MessageContainer;

        /**
         * Encodes the specified MessageContainer message. Does not implicitly {@link NetMessage.MessageContainer.verify|verify} messages.
         * @param message MessageContainer message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMessageContainer, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MessageContainer message, length delimited. Does not implicitly {@link NetMessage.MessageContainer.verify|verify} messages.
         * @param message MessageContainer message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMessageContainer, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MessageContainer message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MessageContainer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MessageContainer;

        /**
         * Decodes a MessageContainer message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MessageContainer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MessageContainer;

        /**
         * Verifies a MessageContainer message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MessageContainer message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MessageContainer
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MessageContainer;

        /**
         * Creates a plain object from a MessageContainer message. Also converts values to other types if specified.
         * @param message MessageContainer
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MessageContainer, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MessageContainer to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MsgCommonHeartbeat. */
    interface IMsgCommonHeartbeat {

        /** MsgCommonHeartbeat c */
        c?: (NetMessage.MsgCommonHeartbeat.IC|null);

        /** MsgCommonHeartbeat s */
        s?: (NetMessage.MsgCommonHeartbeat.IS|null);
    }

    /** Represents a MsgCommonHeartbeat. */
    class MsgCommonHeartbeat implements IMsgCommonHeartbeat {

        /**
         * Constructs a new MsgCommonHeartbeat.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgCommonHeartbeat);

        /** MsgCommonHeartbeat c. */
        public c?: (NetMessage.MsgCommonHeartbeat.IC|null);

        /** MsgCommonHeartbeat s. */
        public s?: (NetMessage.MsgCommonHeartbeat.IS|null);

        /**
         * Creates a new MsgCommonHeartbeat instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgCommonHeartbeat instance
         */
        public static create(properties?: NetMessage.IMsgCommonHeartbeat): NetMessage.MsgCommonHeartbeat;

        /**
         * Encodes the specified MsgCommonHeartbeat message. Does not implicitly {@link NetMessage.MsgCommonHeartbeat.verify|verify} messages.
         * @param message MsgCommonHeartbeat message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgCommonHeartbeat, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgCommonHeartbeat message, length delimited. Does not implicitly {@link NetMessage.MsgCommonHeartbeat.verify|verify} messages.
         * @param message MsgCommonHeartbeat message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgCommonHeartbeat, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgCommonHeartbeat message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgCommonHeartbeat
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgCommonHeartbeat;

        /**
         * Decodes a MsgCommonHeartbeat message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgCommonHeartbeat
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgCommonHeartbeat;

        /**
         * Verifies a MsgCommonHeartbeat message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgCommonHeartbeat message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgCommonHeartbeat
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgCommonHeartbeat;

        /**
         * Creates a plain object from a MsgCommonHeartbeat message. Also converts values to other types if specified.
         * @param message MsgCommonHeartbeat
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgCommonHeartbeat, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgCommonHeartbeat to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgCommonHeartbeat {

        /** Properties of a C. */
        interface IC {

            /** C counter */
            counter?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgCommonHeartbeat.IC);

            /** C counter. */
            public counter: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgCommonHeartbeat.IC): NetMessage.MsgCommonHeartbeat.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgCommonHeartbeat.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgCommonHeartbeat.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgCommonHeartbeat.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgCommonHeartbeat.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgCommonHeartbeat.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgCommonHeartbeat.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgCommonHeartbeat.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgCommonHeartbeat.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S counter */
            counter?: (number|null);

            /** S timestamp */
            timestamp?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgCommonHeartbeat.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S counter. */
            public counter: number;

            /** S timestamp. */
            public timestamp: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgCommonHeartbeat.IS): NetMessage.MsgCommonHeartbeat.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgCommonHeartbeat.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgCommonHeartbeat.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgCommonHeartbeat.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgCommonHeartbeat.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgCommonHeartbeat.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgCommonHeartbeat.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgCommonHeartbeat.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgCommonHeartbeat.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgCommonError. */
    interface IMsgCommonError {

        /** MsgCommonError s */
        s?: (NetMessage.MsgCommonError.IS|null);
    }

    /** Represents a MsgCommonError. */
    class MsgCommonError implements IMsgCommonError {

        /**
         * Constructs a new MsgCommonError.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgCommonError);

        /** MsgCommonError s. */
        public s?: (NetMessage.MsgCommonError.IS|null);

        /**
         * Creates a new MsgCommonError instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgCommonError instance
         */
        public static create(properties?: NetMessage.IMsgCommonError): NetMessage.MsgCommonError;

        /**
         * Encodes the specified MsgCommonError message. Does not implicitly {@link NetMessage.MsgCommonError.verify|verify} messages.
         * @param message MsgCommonError message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgCommonError, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgCommonError message, length delimited. Does not implicitly {@link NetMessage.MsgCommonError.verify|verify} messages.
         * @param message MsgCommonError message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgCommonError, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgCommonError message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgCommonError
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgCommonError;

        /**
         * Decodes a MsgCommonError message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgCommonError
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgCommonError;

        /**
         * Verifies a MsgCommonError message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgCommonError message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgCommonError
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgCommonError;

        /**
         * Creates a plain object from a MsgCommonError message. Also converts values to other types if specified.
         * @param message MsgCommonError
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgCommonError, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgCommonError to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgCommonError {

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgCommonError.IS);

            /** S errorCode. */
            public errorCode: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgCommonError.IS): NetMessage.MsgCommonError.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgCommonError.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgCommonError.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgCommonError.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgCommonError.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgCommonError.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgCommonError.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgCommonError.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgCommonError.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgCommonServerDisconnect. */
    interface IMsgCommonServerDisconnect {

        /** MsgCommonServerDisconnect s */
        s?: (NetMessage.MsgCommonServerDisconnect.IS|null);
    }

    /** Represents a MsgCommonServerDisconnect. */
    class MsgCommonServerDisconnect implements IMsgCommonServerDisconnect {

        /**
         * Constructs a new MsgCommonServerDisconnect.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgCommonServerDisconnect);

        /** MsgCommonServerDisconnect s. */
        public s?: (NetMessage.MsgCommonServerDisconnect.IS|null);

        /**
         * Creates a new MsgCommonServerDisconnect instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgCommonServerDisconnect instance
         */
        public static create(properties?: NetMessage.IMsgCommonServerDisconnect): NetMessage.MsgCommonServerDisconnect;

        /**
         * Encodes the specified MsgCommonServerDisconnect message. Does not implicitly {@link NetMessage.MsgCommonServerDisconnect.verify|verify} messages.
         * @param message MsgCommonServerDisconnect message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgCommonServerDisconnect, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgCommonServerDisconnect message, length delimited. Does not implicitly {@link NetMessage.MsgCommonServerDisconnect.verify|verify} messages.
         * @param message MsgCommonServerDisconnect message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgCommonServerDisconnect, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgCommonServerDisconnect message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgCommonServerDisconnect
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgCommonServerDisconnect;

        /**
         * Decodes a MsgCommonServerDisconnect message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgCommonServerDisconnect
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgCommonServerDisconnect;

        /**
         * Verifies a MsgCommonServerDisconnect message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgCommonServerDisconnect message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgCommonServerDisconnect
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgCommonServerDisconnect;

        /**
         * Creates a plain object from a MsgCommonServerDisconnect message. Also converts values to other types if specified.
         * @param message MsgCommonServerDisconnect
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgCommonServerDisconnect, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgCommonServerDisconnect to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgCommonServerDisconnect {

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgCommonServerDisconnect.IS);

            /** S errorCode. */
            public errorCode: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgCommonServerDisconnect.IS): NetMessage.MsgCommonServerDisconnect.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgCommonServerDisconnect.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgCommonServerDisconnect.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgCommonServerDisconnect.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgCommonServerDisconnect.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgCommonServerDisconnect.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgCommonServerDisconnect.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgCommonServerDisconnect.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgCommonServerDisconnect.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgCommonLatestConfigVersion. */
    interface IMsgCommonLatestConfigVersion {

        /** MsgCommonLatestConfigVersion s */
        s?: (NetMessage.MsgCommonLatestConfigVersion.IS|null);
    }

    /** Represents a MsgCommonLatestConfigVersion. */
    class MsgCommonLatestConfigVersion implements IMsgCommonLatestConfigVersion {

        /**
         * Constructs a new MsgCommonLatestConfigVersion.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgCommonLatestConfigVersion);

        /** MsgCommonLatestConfigVersion s. */
        public s?: (NetMessage.MsgCommonLatestConfigVersion.IS|null);

        /**
         * Creates a new MsgCommonLatestConfigVersion instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgCommonLatestConfigVersion instance
         */
        public static create(properties?: NetMessage.IMsgCommonLatestConfigVersion): NetMessage.MsgCommonLatestConfigVersion;

        /**
         * Encodes the specified MsgCommonLatestConfigVersion message. Does not implicitly {@link NetMessage.MsgCommonLatestConfigVersion.verify|verify} messages.
         * @param message MsgCommonLatestConfigVersion message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgCommonLatestConfigVersion, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgCommonLatestConfigVersion message, length delimited. Does not implicitly {@link NetMessage.MsgCommonLatestConfigVersion.verify|verify} messages.
         * @param message MsgCommonLatestConfigVersion message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgCommonLatestConfigVersion, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgCommonLatestConfigVersion message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgCommonLatestConfigVersion
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgCommonLatestConfigVersion;

        /**
         * Decodes a MsgCommonLatestConfigVersion message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgCommonLatestConfigVersion
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgCommonLatestConfigVersion;

        /**
         * Verifies a MsgCommonLatestConfigVersion message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgCommonLatestConfigVersion message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgCommonLatestConfigVersion
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgCommonLatestConfigVersion;

        /**
         * Creates a plain object from a MsgCommonLatestConfigVersion message. Also converts values to other types if specified.
         * @param message MsgCommonLatestConfigVersion
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgCommonLatestConfigVersion, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgCommonLatestConfigVersion to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgCommonLatestConfigVersion {

        /** Properties of a S. */
        interface IS {

            /** S version */
            version?: (string|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgCommonLatestConfigVersion.IS);

            /** S version. */
            public version: string;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgCommonLatestConfigVersion.IS): NetMessage.MsgCommonLatestConfigVersion.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgCommonLatestConfigVersion.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgCommonLatestConfigVersion.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgCommonLatestConfigVersion.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgCommonLatestConfigVersion.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgCommonLatestConfigVersion.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgCommonLatestConfigVersion.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgCommonLatestConfigVersion.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgCommonLatestConfigVersion.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgCommonGetServerStatus. */
    interface IMsgCommonGetServerStatus {

        /** MsgCommonGetServerStatus c */
        c?: (NetMessage.MsgCommonGetServerStatus.IC|null);

        /** MsgCommonGetServerStatus s */
        s?: (NetMessage.MsgCommonGetServerStatus.IS|null);
    }

    /** Represents a MsgCommonGetServerStatus. */
    class MsgCommonGetServerStatus implements IMsgCommonGetServerStatus {

        /**
         * Constructs a new MsgCommonGetServerStatus.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgCommonGetServerStatus);

        /** MsgCommonGetServerStatus c. */
        public c?: (NetMessage.MsgCommonGetServerStatus.IC|null);

        /** MsgCommonGetServerStatus s. */
        public s?: (NetMessage.MsgCommonGetServerStatus.IS|null);

        /**
         * Creates a new MsgCommonGetServerStatus instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgCommonGetServerStatus instance
         */
        public static create(properties?: NetMessage.IMsgCommonGetServerStatus): NetMessage.MsgCommonGetServerStatus;

        /**
         * Encodes the specified MsgCommonGetServerStatus message. Does not implicitly {@link NetMessage.MsgCommonGetServerStatus.verify|verify} messages.
         * @param message MsgCommonGetServerStatus message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgCommonGetServerStatus, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgCommonGetServerStatus message, length delimited. Does not implicitly {@link NetMessage.MsgCommonGetServerStatus.verify|verify} messages.
         * @param message MsgCommonGetServerStatus message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgCommonGetServerStatus, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgCommonGetServerStatus message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgCommonGetServerStatus
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgCommonGetServerStatus;

        /**
         * Decodes a MsgCommonGetServerStatus message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgCommonGetServerStatus
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgCommonGetServerStatus;

        /**
         * Verifies a MsgCommonGetServerStatus message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgCommonGetServerStatus message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgCommonGetServerStatus
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgCommonGetServerStatus;

        /**
         * Creates a plain object from a MsgCommonGetServerStatus message. Also converts values to other types if specified.
         * @param message MsgCommonGetServerStatus
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgCommonGetServerStatus, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgCommonGetServerStatus to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgCommonGetServerStatus {

        /** Properties of a C. */
        interface IC {
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgCommonGetServerStatus.IC);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgCommonGetServerStatus.IC): NetMessage.MsgCommonGetServerStatus.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgCommonGetServerStatus.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgCommonGetServerStatus.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgCommonGetServerStatus.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgCommonGetServerStatus.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgCommonGetServerStatus.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgCommonGetServerStatus.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgCommonGetServerStatus.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgCommonGetServerStatus.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S totalAccounts */
            totalAccounts?: (number|null);

            /** S totalOnlineTime */
            totalOnlineTime?: (number|null);

            /** S activeAccounts */
            activeAccounts?: (number[]|null);

            /** S newAccounts */
            newAccounts?: (number[]|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgCommonGetServerStatus.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S totalAccounts. */
            public totalAccounts: number;

            /** S totalOnlineTime. */
            public totalOnlineTime: number;

            /** S activeAccounts. */
            public activeAccounts: number[];

            /** S newAccounts. */
            public newAccounts: number[];

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgCommonGetServerStatus.IS): NetMessage.MsgCommonGetServerStatus.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgCommonGetServerStatus.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgCommonGetServerStatus.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgCommonGetServerStatus.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgCommonGetServerStatus.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgCommonGetServerStatus.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgCommonGetServerStatus.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgCommonGetServerStatus.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgCommonGetServerStatus.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgUserRegister. */
    interface IMsgUserRegister {

        /** MsgUserRegister c */
        c?: (NetMessage.MsgUserRegister.IC|null);

        /** MsgUserRegister s */
        s?: (NetMessage.MsgUserRegister.IS|null);
    }

    /** Represents a MsgUserRegister. */
    class MsgUserRegister implements IMsgUserRegister {

        /**
         * Constructs a new MsgUserRegister.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgUserRegister);

        /** MsgUserRegister c. */
        public c?: (NetMessage.MsgUserRegister.IC|null);

        /** MsgUserRegister s. */
        public s?: (NetMessage.MsgUserRegister.IS|null);

        /**
         * Creates a new MsgUserRegister instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgUserRegister instance
         */
        public static create(properties?: NetMessage.IMsgUserRegister): NetMessage.MsgUserRegister;

        /**
         * Encodes the specified MsgUserRegister message. Does not implicitly {@link NetMessage.MsgUserRegister.verify|verify} messages.
         * @param message MsgUserRegister message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgUserRegister, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgUserRegister message, length delimited. Does not implicitly {@link NetMessage.MsgUserRegister.verify|verify} messages.
         * @param message MsgUserRegister message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgUserRegister, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgUserRegister message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgUserRegister
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserRegister;

        /**
         * Decodes a MsgUserRegister message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgUserRegister
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserRegister;

        /**
         * Verifies a MsgUserRegister message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgUserRegister message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgUserRegister
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserRegister;

        /**
         * Creates a plain object from a MsgUserRegister message. Also converts values to other types if specified.
         * @param message MsgUserRegister
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgUserRegister, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgUserRegister to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgUserRegister {

        /** Properties of a C. */
        interface IC {

            /** C account */
            account?: (string|null);

            /** C password */
            password?: (string|null);

            /** C nickname */
            nickname?: (string|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgUserRegister.IC);

            /** C account. */
            public account: string;

            /** C password. */
            public password: string;

            /** C nickname. */
            public nickname: string;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgUserRegister.IC): NetMessage.MsgUserRegister.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgUserRegister.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgUserRegister.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgUserRegister.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgUserRegister.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserRegister.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserRegister.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserRegister.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgUserRegister.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S account */
            account?: (string|null);

            /** S password */
            password?: (string|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgUserRegister.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S account. */
            public account: string;

            /** S password. */
            public password: string;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgUserRegister.IS): NetMessage.MsgUserRegister.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgUserRegister.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgUserRegister.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgUserRegister.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgUserRegister.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserRegister.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserRegister.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserRegister.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgUserRegister.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgUserLogin. */
    interface IMsgUserLogin {

        /** MsgUserLogin c */
        c?: (NetMessage.MsgUserLogin.IC|null);

        /** MsgUserLogin s */
        s?: (NetMessage.MsgUserLogin.IS|null);
    }

    /** Represents a MsgUserLogin. */
    class MsgUserLogin implements IMsgUserLogin {

        /**
         * Constructs a new MsgUserLogin.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgUserLogin);

        /** MsgUserLogin c. */
        public c?: (NetMessage.MsgUserLogin.IC|null);

        /** MsgUserLogin s. */
        public s?: (NetMessage.MsgUserLogin.IS|null);

        /**
         * Creates a new MsgUserLogin instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgUserLogin instance
         */
        public static create(properties?: NetMessage.IMsgUserLogin): NetMessage.MsgUserLogin;

        /**
         * Encodes the specified MsgUserLogin message. Does not implicitly {@link NetMessage.MsgUserLogin.verify|verify} messages.
         * @param message MsgUserLogin message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgUserLogin, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgUserLogin message, length delimited. Does not implicitly {@link NetMessage.MsgUserLogin.verify|verify} messages.
         * @param message MsgUserLogin message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgUserLogin, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgUserLogin message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgUserLogin
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserLogin;

        /**
         * Decodes a MsgUserLogin message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgUserLogin
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserLogin;

        /**
         * Verifies a MsgUserLogin message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgUserLogin message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgUserLogin
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserLogin;

        /**
         * Creates a plain object from a MsgUserLogin message. Also converts values to other types if specified.
         * @param message MsgUserLogin
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgUserLogin, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgUserLogin to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgUserLogin {

        /** Properties of a C. */
        interface IC {

            /** C account */
            account?: (string|null);

            /** C password */
            password?: (string|null);

            /** C isAutoRelogin */
            isAutoRelogin?: (boolean|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgUserLogin.IC);

            /** C account. */
            public account: string;

            /** C password. */
            public password: string;

            /** C isAutoRelogin. */
            public isAutoRelogin: boolean;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgUserLogin.IC): NetMessage.MsgUserLogin.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgUserLogin.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgUserLogin.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgUserLogin.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgUserLogin.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserLogin.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserLogin.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserLogin.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgUserLogin.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S userPublicInfo */
            userPublicInfo?: (User.IUserPublicInfo|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgUserLogin.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S userPublicInfo. */
            public userPublicInfo?: (User.IUserPublicInfo|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgUserLogin.IS): NetMessage.MsgUserLogin.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgUserLogin.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgUserLogin.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgUserLogin.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgUserLogin.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserLogin.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserLogin.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserLogin.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgUserLogin.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgUserLogout. */
    interface IMsgUserLogout {

        /** MsgUserLogout c */
        c?: (NetMessage.MsgUserLogout.IC|null);

        /** MsgUserLogout s */
        s?: (NetMessage.MsgUserLogout.IS|null);
    }

    /** Represents a MsgUserLogout. */
    class MsgUserLogout implements IMsgUserLogout {

        /**
         * Constructs a new MsgUserLogout.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgUserLogout);

        /** MsgUserLogout c. */
        public c?: (NetMessage.MsgUserLogout.IC|null);

        /** MsgUserLogout s. */
        public s?: (NetMessage.MsgUserLogout.IS|null);

        /**
         * Creates a new MsgUserLogout instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgUserLogout instance
         */
        public static create(properties?: NetMessage.IMsgUserLogout): NetMessage.MsgUserLogout;

        /**
         * Encodes the specified MsgUserLogout message. Does not implicitly {@link NetMessage.MsgUserLogout.verify|verify} messages.
         * @param message MsgUserLogout message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgUserLogout, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgUserLogout message, length delimited. Does not implicitly {@link NetMessage.MsgUserLogout.verify|verify} messages.
         * @param message MsgUserLogout message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgUserLogout, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgUserLogout message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgUserLogout
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserLogout;

        /**
         * Decodes a MsgUserLogout message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgUserLogout
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserLogout;

        /**
         * Verifies a MsgUserLogout message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgUserLogout message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgUserLogout
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserLogout;

        /**
         * Creates a plain object from a MsgUserLogout message. Also converts values to other types if specified.
         * @param message MsgUserLogout
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgUserLogout, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgUserLogout to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgUserLogout {

        /** Properties of a C. */
        interface IC {
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgUserLogout.IC);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgUserLogout.IC): NetMessage.MsgUserLogout.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgUserLogout.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgUserLogout.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgUserLogout.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgUserLogout.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserLogout.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserLogout.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserLogout.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgUserLogout.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S reason */
            reason?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgUserLogout.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S reason. */
            public reason: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgUserLogout.IS): NetMessage.MsgUserLogout.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgUserLogout.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgUserLogout.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgUserLogout.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgUserLogout.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserLogout.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserLogout.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserLogout.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgUserLogout.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgUserGetPublicInfo. */
    interface IMsgUserGetPublicInfo {

        /** MsgUserGetPublicInfo c */
        c?: (NetMessage.MsgUserGetPublicInfo.IC|null);

        /** MsgUserGetPublicInfo s */
        s?: (NetMessage.MsgUserGetPublicInfo.IS|null);
    }

    /** Represents a MsgUserGetPublicInfo. */
    class MsgUserGetPublicInfo implements IMsgUserGetPublicInfo {

        /**
         * Constructs a new MsgUserGetPublicInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgUserGetPublicInfo);

        /** MsgUserGetPublicInfo c. */
        public c?: (NetMessage.MsgUserGetPublicInfo.IC|null);

        /** MsgUserGetPublicInfo s. */
        public s?: (NetMessage.MsgUserGetPublicInfo.IS|null);

        /**
         * Creates a new MsgUserGetPublicInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgUserGetPublicInfo instance
         */
        public static create(properties?: NetMessage.IMsgUserGetPublicInfo): NetMessage.MsgUserGetPublicInfo;

        /**
         * Encodes the specified MsgUserGetPublicInfo message. Does not implicitly {@link NetMessage.MsgUserGetPublicInfo.verify|verify} messages.
         * @param message MsgUserGetPublicInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgUserGetPublicInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgUserGetPublicInfo message, length delimited. Does not implicitly {@link NetMessage.MsgUserGetPublicInfo.verify|verify} messages.
         * @param message MsgUserGetPublicInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgUserGetPublicInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgUserGetPublicInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgUserGetPublicInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserGetPublicInfo;

        /**
         * Decodes a MsgUserGetPublicInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgUserGetPublicInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserGetPublicInfo;

        /**
         * Verifies a MsgUserGetPublicInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgUserGetPublicInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgUserGetPublicInfo
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserGetPublicInfo;

        /**
         * Creates a plain object from a MsgUserGetPublicInfo message. Also converts values to other types if specified.
         * @param message MsgUserGetPublicInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgUserGetPublicInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgUserGetPublicInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgUserGetPublicInfo {

        /** Properties of a C. */
        interface IC {

            /** C userId */
            userId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgUserGetPublicInfo.IC);

            /** C userId. */
            public userId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgUserGetPublicInfo.IC): NetMessage.MsgUserGetPublicInfo.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgUserGetPublicInfo.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgUserGetPublicInfo.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgUserGetPublicInfo.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgUserGetPublicInfo.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserGetPublicInfo.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserGetPublicInfo.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserGetPublicInfo.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgUserGetPublicInfo.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S userId */
            userId?: (number|null);

            /** S userPublicInfo */
            userPublicInfo?: (User.IUserPublicInfo|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgUserGetPublicInfo.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S userId. */
            public userId: number;

            /** S userPublicInfo. */
            public userPublicInfo?: (User.IUserPublicInfo|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgUserGetPublicInfo.IS): NetMessage.MsgUserGetPublicInfo.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgUserGetPublicInfo.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgUserGetPublicInfo.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgUserGetPublicInfo.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgUserGetPublicInfo.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserGetPublicInfo.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserGetPublicInfo.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserGetPublicInfo.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgUserGetPublicInfo.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgUserSetNickname. */
    interface IMsgUserSetNickname {

        /** MsgUserSetNickname c */
        c?: (NetMessage.MsgUserSetNickname.IC|null);

        /** MsgUserSetNickname s */
        s?: (NetMessage.MsgUserSetNickname.IS|null);
    }

    /** Represents a MsgUserSetNickname. */
    class MsgUserSetNickname implements IMsgUserSetNickname {

        /**
         * Constructs a new MsgUserSetNickname.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgUserSetNickname);

        /** MsgUserSetNickname c. */
        public c?: (NetMessage.MsgUserSetNickname.IC|null);

        /** MsgUserSetNickname s. */
        public s?: (NetMessage.MsgUserSetNickname.IS|null);

        /**
         * Creates a new MsgUserSetNickname instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgUserSetNickname instance
         */
        public static create(properties?: NetMessage.IMsgUserSetNickname): NetMessage.MsgUserSetNickname;

        /**
         * Encodes the specified MsgUserSetNickname message. Does not implicitly {@link NetMessage.MsgUserSetNickname.verify|verify} messages.
         * @param message MsgUserSetNickname message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgUserSetNickname, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgUserSetNickname message, length delimited. Does not implicitly {@link NetMessage.MsgUserSetNickname.verify|verify} messages.
         * @param message MsgUserSetNickname message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgUserSetNickname, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgUserSetNickname message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgUserSetNickname
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserSetNickname;

        /**
         * Decodes a MsgUserSetNickname message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgUserSetNickname
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserSetNickname;

        /**
         * Verifies a MsgUserSetNickname message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgUserSetNickname message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgUserSetNickname
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserSetNickname;

        /**
         * Creates a plain object from a MsgUserSetNickname message. Also converts values to other types if specified.
         * @param message MsgUserSetNickname
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgUserSetNickname, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgUserSetNickname to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgUserSetNickname {

        /** Properties of a C. */
        interface IC {

            /** C nickname */
            nickname?: (string|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgUserSetNickname.IC);

            /** C nickname. */
            public nickname: string;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgUserSetNickname.IC): NetMessage.MsgUserSetNickname.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgUserSetNickname.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgUserSetNickname.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgUserSetNickname.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgUserSetNickname.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserSetNickname.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserSetNickname.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserSetNickname.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgUserSetNickname.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S nickname */
            nickname?: (string|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgUserSetNickname.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S nickname. */
            public nickname: string;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgUserSetNickname.IS): NetMessage.MsgUserSetNickname.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgUserSetNickname.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgUserSetNickname.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgUserSetNickname.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgUserSetNickname.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserSetNickname.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserSetNickname.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserSetNickname.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgUserSetNickname.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgUserSetDiscordId. */
    interface IMsgUserSetDiscordId {

        /** MsgUserSetDiscordId c */
        c?: (NetMessage.MsgUserSetDiscordId.IC|null);

        /** MsgUserSetDiscordId s */
        s?: (NetMessage.MsgUserSetDiscordId.IS|null);
    }

    /** Represents a MsgUserSetDiscordId. */
    class MsgUserSetDiscordId implements IMsgUserSetDiscordId {

        /**
         * Constructs a new MsgUserSetDiscordId.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgUserSetDiscordId);

        /** MsgUserSetDiscordId c. */
        public c?: (NetMessage.MsgUserSetDiscordId.IC|null);

        /** MsgUserSetDiscordId s. */
        public s?: (NetMessage.MsgUserSetDiscordId.IS|null);

        /**
         * Creates a new MsgUserSetDiscordId instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgUserSetDiscordId instance
         */
        public static create(properties?: NetMessage.IMsgUserSetDiscordId): NetMessage.MsgUserSetDiscordId;

        /**
         * Encodes the specified MsgUserSetDiscordId message. Does not implicitly {@link NetMessage.MsgUserSetDiscordId.verify|verify} messages.
         * @param message MsgUserSetDiscordId message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgUserSetDiscordId, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgUserSetDiscordId message, length delimited. Does not implicitly {@link NetMessage.MsgUserSetDiscordId.verify|verify} messages.
         * @param message MsgUserSetDiscordId message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgUserSetDiscordId, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgUserSetDiscordId message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgUserSetDiscordId
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserSetDiscordId;

        /**
         * Decodes a MsgUserSetDiscordId message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgUserSetDiscordId
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserSetDiscordId;

        /**
         * Verifies a MsgUserSetDiscordId message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgUserSetDiscordId message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgUserSetDiscordId
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserSetDiscordId;

        /**
         * Creates a plain object from a MsgUserSetDiscordId message. Also converts values to other types if specified.
         * @param message MsgUserSetDiscordId
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgUserSetDiscordId, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgUserSetDiscordId to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgUserSetDiscordId {

        /** Properties of a C. */
        interface IC {

            /** C discordId */
            discordId?: (string|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgUserSetDiscordId.IC);

            /** C discordId. */
            public discordId: string;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgUserSetDiscordId.IC): NetMessage.MsgUserSetDiscordId.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgUserSetDiscordId.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgUserSetDiscordId.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgUserSetDiscordId.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgUserSetDiscordId.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserSetDiscordId.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserSetDiscordId.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserSetDiscordId.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgUserSetDiscordId.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S discordId */
            discordId?: (string|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgUserSetDiscordId.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S discordId. */
            public discordId: string;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgUserSetDiscordId.IS): NetMessage.MsgUserSetDiscordId.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgUserSetDiscordId.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgUserSetDiscordId.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgUserSetDiscordId.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgUserSetDiscordId.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserSetDiscordId.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserSetDiscordId.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserSetDiscordId.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgUserSetDiscordId.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgUserGetOnlineUsers. */
    interface IMsgUserGetOnlineUsers {

        /** MsgUserGetOnlineUsers c */
        c?: (NetMessage.MsgUserGetOnlineUsers.IC|null);

        /** MsgUserGetOnlineUsers s */
        s?: (NetMessage.MsgUserGetOnlineUsers.IS|null);
    }

    /** Represents a MsgUserGetOnlineUsers. */
    class MsgUserGetOnlineUsers implements IMsgUserGetOnlineUsers {

        /**
         * Constructs a new MsgUserGetOnlineUsers.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgUserGetOnlineUsers);

        /** MsgUserGetOnlineUsers c. */
        public c?: (NetMessage.MsgUserGetOnlineUsers.IC|null);

        /** MsgUserGetOnlineUsers s. */
        public s?: (NetMessage.MsgUserGetOnlineUsers.IS|null);

        /**
         * Creates a new MsgUserGetOnlineUsers instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgUserGetOnlineUsers instance
         */
        public static create(properties?: NetMessage.IMsgUserGetOnlineUsers): NetMessage.MsgUserGetOnlineUsers;

        /**
         * Encodes the specified MsgUserGetOnlineUsers message. Does not implicitly {@link NetMessage.MsgUserGetOnlineUsers.verify|verify} messages.
         * @param message MsgUserGetOnlineUsers message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgUserGetOnlineUsers, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgUserGetOnlineUsers message, length delimited. Does not implicitly {@link NetMessage.MsgUserGetOnlineUsers.verify|verify} messages.
         * @param message MsgUserGetOnlineUsers message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgUserGetOnlineUsers, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgUserGetOnlineUsers message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgUserGetOnlineUsers
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserGetOnlineUsers;

        /**
         * Decodes a MsgUserGetOnlineUsers message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgUserGetOnlineUsers
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserGetOnlineUsers;

        /**
         * Verifies a MsgUserGetOnlineUsers message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgUserGetOnlineUsers message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgUserGetOnlineUsers
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserGetOnlineUsers;

        /**
         * Creates a plain object from a MsgUserGetOnlineUsers message. Also converts values to other types if specified.
         * @param message MsgUserGetOnlineUsers
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgUserGetOnlineUsers, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgUserGetOnlineUsers to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgUserGetOnlineUsers {

        /** Properties of a C. */
        interface IC {
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgUserGetOnlineUsers.IC);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgUserGetOnlineUsers.IC): NetMessage.MsgUserGetOnlineUsers.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgUserGetOnlineUsers.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgUserGetOnlineUsers.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgUserGetOnlineUsers.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgUserGetOnlineUsers.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserGetOnlineUsers.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserGetOnlineUsers.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserGetOnlineUsers.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgUserGetOnlineUsers.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S totalCount */
            totalCount?: (number|null);

            /** S userInfos */
            userInfos?: (User.IUserBriefInfo[]|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgUserGetOnlineUsers.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S totalCount. */
            public totalCount: number;

            /** S userInfos. */
            public userInfos: User.IUserBriefInfo[];

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgUserGetOnlineUsers.IS): NetMessage.MsgUserGetOnlineUsers.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgUserGetOnlineUsers.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgUserGetOnlineUsers.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgUserGetOnlineUsers.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgUserGetOnlineUsers.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserGetOnlineUsers.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserGetOnlineUsers.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserGetOnlineUsers.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgUserGetOnlineUsers.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMapGetEnabledExtraDataList. */
    interface IMsgMapGetEnabledExtraDataList {

        /** MsgMapGetEnabledExtraDataList c */
        c?: (NetMessage.MsgMapGetEnabledExtraDataList.IC|null);

        /** MsgMapGetEnabledExtraDataList s */
        s?: (NetMessage.MsgMapGetEnabledExtraDataList.IS|null);
    }

    /** Represents a MsgMapGetEnabledExtraDataList. */
    class MsgMapGetEnabledExtraDataList implements IMsgMapGetEnabledExtraDataList {

        /**
         * Constructs a new MsgMapGetEnabledExtraDataList.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMapGetEnabledExtraDataList);

        /** MsgMapGetEnabledExtraDataList c. */
        public c?: (NetMessage.MsgMapGetEnabledExtraDataList.IC|null);

        /** MsgMapGetEnabledExtraDataList s. */
        public s?: (NetMessage.MsgMapGetEnabledExtraDataList.IS|null);

        /**
         * Creates a new MsgMapGetEnabledExtraDataList instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMapGetEnabledExtraDataList instance
         */
        public static create(properties?: NetMessage.IMsgMapGetEnabledExtraDataList): NetMessage.MsgMapGetEnabledExtraDataList;

        /**
         * Encodes the specified MsgMapGetEnabledExtraDataList message. Does not implicitly {@link NetMessage.MsgMapGetEnabledExtraDataList.verify|verify} messages.
         * @param message MsgMapGetEnabledExtraDataList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMapGetEnabledExtraDataList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMapGetEnabledExtraDataList message, length delimited. Does not implicitly {@link NetMessage.MsgMapGetEnabledExtraDataList.verify|verify} messages.
         * @param message MsgMapGetEnabledExtraDataList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMapGetEnabledExtraDataList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMapGetEnabledExtraDataList message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMapGetEnabledExtraDataList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMapGetEnabledExtraDataList;

        /**
         * Decodes a MsgMapGetEnabledExtraDataList message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMapGetEnabledExtraDataList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMapGetEnabledExtraDataList;

        /**
         * Verifies a MsgMapGetEnabledExtraDataList message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMapGetEnabledExtraDataList message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMapGetEnabledExtraDataList
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMapGetEnabledExtraDataList;

        /**
         * Creates a plain object from a MsgMapGetEnabledExtraDataList message. Also converts values to other types if specified.
         * @param message MsgMapGetEnabledExtraDataList
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMapGetEnabledExtraDataList, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMapGetEnabledExtraDataList to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMapGetEnabledExtraDataList {

        /** Properties of a C. */
        interface IC {
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMapGetEnabledExtraDataList.IC);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMapGetEnabledExtraDataList.IC): NetMessage.MsgMapGetEnabledExtraDataList.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMapGetEnabledExtraDataList.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMapGetEnabledExtraDataList.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMapGetEnabledExtraDataList.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMapGetEnabledExtraDataList.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMapGetEnabledExtraDataList.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMapGetEnabledExtraDataList.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMapGetEnabledExtraDataList.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMapGetEnabledExtraDataList.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S dataList */
            dataList?: (Map.IMapExtraData[]|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMapGetEnabledExtraDataList.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S dataList. */
            public dataList: Map.IMapExtraData[];

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMapGetEnabledExtraDataList.IS): NetMessage.MsgMapGetEnabledExtraDataList.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMapGetEnabledExtraDataList.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMapGetEnabledExtraDataList.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMapGetEnabledExtraDataList.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMapGetEnabledExtraDataList.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMapGetEnabledExtraDataList.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMapGetEnabledExtraDataList.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMapGetEnabledExtraDataList.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMapGetEnabledExtraDataList.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMapGetExtraData. */
    interface IMsgMapGetExtraData {

        /** MsgMapGetExtraData c */
        c?: (NetMessage.MsgMapGetExtraData.IC|null);

        /** MsgMapGetExtraData s */
        s?: (NetMessage.MsgMapGetExtraData.IS|null);
    }

    /** Represents a MsgMapGetExtraData. */
    class MsgMapGetExtraData implements IMsgMapGetExtraData {

        /**
         * Constructs a new MsgMapGetExtraData.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMapGetExtraData);

        /** MsgMapGetExtraData c. */
        public c?: (NetMessage.MsgMapGetExtraData.IC|null);

        /** MsgMapGetExtraData s. */
        public s?: (NetMessage.MsgMapGetExtraData.IS|null);

        /**
         * Creates a new MsgMapGetExtraData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMapGetExtraData instance
         */
        public static create(properties?: NetMessage.IMsgMapGetExtraData): NetMessage.MsgMapGetExtraData;

        /**
         * Encodes the specified MsgMapGetExtraData message. Does not implicitly {@link NetMessage.MsgMapGetExtraData.verify|verify} messages.
         * @param message MsgMapGetExtraData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMapGetExtraData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMapGetExtraData message, length delimited. Does not implicitly {@link NetMessage.MsgMapGetExtraData.verify|verify} messages.
         * @param message MsgMapGetExtraData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMapGetExtraData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMapGetExtraData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMapGetExtraData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMapGetExtraData;

        /**
         * Decodes a MsgMapGetExtraData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMapGetExtraData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMapGetExtraData;

        /**
         * Verifies a MsgMapGetExtraData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMapGetExtraData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMapGetExtraData
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMapGetExtraData;

        /**
         * Creates a plain object from a MsgMapGetExtraData message. Also converts values to other types if specified.
         * @param message MsgMapGetExtraData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMapGetExtraData, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMapGetExtraData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMapGetExtraData {

        /** Properties of a C. */
        interface IC {

            /** C mapId */
            mapId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMapGetExtraData.IC);

            /** C mapId. */
            public mapId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMapGetExtraData.IC): NetMessage.MsgMapGetExtraData.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMapGetExtraData.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMapGetExtraData.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMapGetExtraData.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMapGetExtraData.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMapGetExtraData.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMapGetExtraData.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMapGetExtraData.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMapGetExtraData.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S mapId */
            mapId?: (number|null);

            /** S mapExtraData */
            mapExtraData?: (Map.IMapExtraData|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMapGetExtraData.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S mapId. */
            public mapId: number;

            /** S mapExtraData. */
            public mapExtraData?: (Map.IMapExtraData|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMapGetExtraData.IS): NetMessage.MsgMapGetExtraData.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMapGetExtraData.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMapGetExtraData.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMapGetExtraData.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMapGetExtraData.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMapGetExtraData.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMapGetExtraData.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMapGetExtraData.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMapGetExtraData.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMapGetRawData. */
    interface IMsgMapGetRawData {

        /** MsgMapGetRawData c */
        c?: (NetMessage.MsgMapGetRawData.IC|null);

        /** MsgMapGetRawData s */
        s?: (NetMessage.MsgMapGetRawData.IS|null);
    }

    /** Represents a MsgMapGetRawData. */
    class MsgMapGetRawData implements IMsgMapGetRawData {

        /**
         * Constructs a new MsgMapGetRawData.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMapGetRawData);

        /** MsgMapGetRawData c. */
        public c?: (NetMessage.MsgMapGetRawData.IC|null);

        /** MsgMapGetRawData s. */
        public s?: (NetMessage.MsgMapGetRawData.IS|null);

        /**
         * Creates a new MsgMapGetRawData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMapGetRawData instance
         */
        public static create(properties?: NetMessage.IMsgMapGetRawData): NetMessage.MsgMapGetRawData;

        /**
         * Encodes the specified MsgMapGetRawData message. Does not implicitly {@link NetMessage.MsgMapGetRawData.verify|verify} messages.
         * @param message MsgMapGetRawData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMapGetRawData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMapGetRawData message, length delimited. Does not implicitly {@link NetMessage.MsgMapGetRawData.verify|verify} messages.
         * @param message MsgMapGetRawData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMapGetRawData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMapGetRawData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMapGetRawData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMapGetRawData;

        /**
         * Decodes a MsgMapGetRawData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMapGetRawData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMapGetRawData;

        /**
         * Verifies a MsgMapGetRawData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMapGetRawData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMapGetRawData
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMapGetRawData;

        /**
         * Creates a plain object from a MsgMapGetRawData message. Also converts values to other types if specified.
         * @param message MsgMapGetRawData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMapGetRawData, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMapGetRawData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMapGetRawData {

        /** Properties of a C. */
        interface IC {

            /** C mapId */
            mapId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMapGetRawData.IC);

            /** C mapId. */
            public mapId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMapGetRawData.IC): NetMessage.MsgMapGetRawData.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMapGetRawData.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMapGetRawData.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMapGetRawData.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMapGetRawData.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMapGetRawData.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMapGetRawData.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMapGetRawData.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMapGetRawData.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S mapId */
            mapId?: (number|null);

            /** S mapRawData */
            mapRawData?: (Map.IMapRawData|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMapGetRawData.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S mapId. */
            public mapId: number;

            /** S mapRawData. */
            public mapRawData?: (Map.IMapRawData|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMapGetRawData.IS): NetMessage.MsgMapGetRawData.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMapGetRawData.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMapGetRawData.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMapGetRawData.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMapGetRawData.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMapGetRawData.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMapGetRawData.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMapGetRawData.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMapGetRawData.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMeGetMapDataList. */
    interface IMsgMeGetMapDataList {

        /** MsgMeGetMapDataList c */
        c?: (NetMessage.MsgMeGetMapDataList.IC|null);

        /** MsgMeGetMapDataList s */
        s?: (NetMessage.MsgMeGetMapDataList.IS|null);
    }

    /** Represents a MsgMeGetMapDataList. */
    class MsgMeGetMapDataList implements IMsgMeGetMapDataList {

        /**
         * Constructs a new MsgMeGetMapDataList.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMeGetMapDataList);

        /** MsgMeGetMapDataList c. */
        public c?: (NetMessage.MsgMeGetMapDataList.IC|null);

        /** MsgMeGetMapDataList s. */
        public s?: (NetMessage.MsgMeGetMapDataList.IS|null);

        /**
         * Creates a new MsgMeGetMapDataList instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMeGetMapDataList instance
         */
        public static create(properties?: NetMessage.IMsgMeGetMapDataList): NetMessage.MsgMeGetMapDataList;

        /**
         * Encodes the specified MsgMeGetMapDataList message. Does not implicitly {@link NetMessage.MsgMeGetMapDataList.verify|verify} messages.
         * @param message MsgMeGetMapDataList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMeGetMapDataList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMeGetMapDataList message, length delimited. Does not implicitly {@link NetMessage.MsgMeGetMapDataList.verify|verify} messages.
         * @param message MsgMeGetMapDataList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMeGetMapDataList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMeGetMapDataList message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMeGetMapDataList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMeGetMapDataList;

        /**
         * Decodes a MsgMeGetMapDataList message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMeGetMapDataList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMeGetMapDataList;

        /**
         * Verifies a MsgMeGetMapDataList message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMeGetMapDataList message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMeGetMapDataList
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMeGetMapDataList;

        /**
         * Creates a plain object from a MsgMeGetMapDataList message. Also converts values to other types if specified.
         * @param message MsgMeGetMapDataList
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMeGetMapDataList, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMeGetMapDataList to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMeGetMapDataList {

        /** Properties of a C. */
        interface IC {
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMeGetMapDataList.IC);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMeGetMapDataList.IC): NetMessage.MsgMeGetMapDataList.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMeGetMapDataList.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMeGetMapDataList.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMeGetMapDataList.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMeGetMapDataList.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMeGetMapDataList.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMeGetMapDataList.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMeGetMapDataList.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMeGetMapDataList.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S dataList */
            dataList?: (Map.IMapEditorData[]|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMeGetMapDataList.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S dataList. */
            public dataList: Map.IMapEditorData[];

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMeGetMapDataList.IS): NetMessage.MsgMeGetMapDataList.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMeGetMapDataList.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMeGetMapDataList.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMeGetMapDataList.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMeGetMapDataList.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMeGetMapDataList.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMeGetMapDataList.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMeGetMapDataList.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMeGetMapDataList.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMeGetMapData. */
    interface IMsgMeGetMapData {

        /** MsgMeGetMapData c */
        c?: (NetMessage.MsgMeGetMapData.IC|null);

        /** MsgMeGetMapData s */
        s?: (NetMessage.MsgMeGetMapData.IS|null);
    }

    /** Represents a MsgMeGetMapData. */
    class MsgMeGetMapData implements IMsgMeGetMapData {

        /**
         * Constructs a new MsgMeGetMapData.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMeGetMapData);

        /** MsgMeGetMapData c. */
        public c?: (NetMessage.MsgMeGetMapData.IC|null);

        /** MsgMeGetMapData s. */
        public s?: (NetMessage.MsgMeGetMapData.IS|null);

        /**
         * Creates a new MsgMeGetMapData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMeGetMapData instance
         */
        public static create(properties?: NetMessage.IMsgMeGetMapData): NetMessage.MsgMeGetMapData;

        /**
         * Encodes the specified MsgMeGetMapData message. Does not implicitly {@link NetMessage.MsgMeGetMapData.verify|verify} messages.
         * @param message MsgMeGetMapData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMeGetMapData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMeGetMapData message, length delimited. Does not implicitly {@link NetMessage.MsgMeGetMapData.verify|verify} messages.
         * @param message MsgMeGetMapData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMeGetMapData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMeGetMapData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMeGetMapData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMeGetMapData;

        /**
         * Decodes a MsgMeGetMapData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMeGetMapData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMeGetMapData;

        /**
         * Verifies a MsgMeGetMapData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMeGetMapData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMeGetMapData
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMeGetMapData;

        /**
         * Creates a plain object from a MsgMeGetMapData message. Also converts values to other types if specified.
         * @param message MsgMeGetMapData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMeGetMapData, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMeGetMapData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMeGetMapData {

        /** Properties of a C. */
        interface IC {

            /** C slotIndex */
            slotIndex?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMeGetMapData.IC);

            /** C slotIndex. */
            public slotIndex: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMeGetMapData.IC): NetMessage.MsgMeGetMapData.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMeGetMapData.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMeGetMapData.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMeGetMapData.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMeGetMapData.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMeGetMapData.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMeGetMapData.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMeGetMapData.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMeGetMapData.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S slotIndex */
            slotIndex?: (number|null);

            /** S data */
            data?: (Map.IMapEditorData|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMeGetMapData.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S slotIndex. */
            public slotIndex: number;

            /** S data. */
            public data?: (Map.IMapEditorData|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMeGetMapData.IS): NetMessage.MsgMeGetMapData.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMeGetMapData.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMeGetMapData.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMeGetMapData.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMeGetMapData.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMeGetMapData.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMeGetMapData.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMeGetMapData.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMeGetMapData.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMeSubmitMap. */
    interface IMsgMeSubmitMap {

        /** MsgMeSubmitMap c */
        c?: (NetMessage.MsgMeSubmitMap.IC|null);

        /** MsgMeSubmitMap s */
        s?: (NetMessage.MsgMeSubmitMap.IS|null);
    }

    /** Represents a MsgMeSubmitMap. */
    class MsgMeSubmitMap implements IMsgMeSubmitMap {

        /**
         * Constructs a new MsgMeSubmitMap.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMeSubmitMap);

        /** MsgMeSubmitMap c. */
        public c?: (NetMessage.MsgMeSubmitMap.IC|null);

        /** MsgMeSubmitMap s. */
        public s?: (NetMessage.MsgMeSubmitMap.IS|null);

        /**
         * Creates a new MsgMeSubmitMap instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMeSubmitMap instance
         */
        public static create(properties?: NetMessage.IMsgMeSubmitMap): NetMessage.MsgMeSubmitMap;

        /**
         * Encodes the specified MsgMeSubmitMap message. Does not implicitly {@link NetMessage.MsgMeSubmitMap.verify|verify} messages.
         * @param message MsgMeSubmitMap message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMeSubmitMap, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMeSubmitMap message, length delimited. Does not implicitly {@link NetMessage.MsgMeSubmitMap.verify|verify} messages.
         * @param message MsgMeSubmitMap message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMeSubmitMap, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMeSubmitMap message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMeSubmitMap
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMeSubmitMap;

        /**
         * Decodes a MsgMeSubmitMap message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMeSubmitMap
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMeSubmitMap;

        /**
         * Verifies a MsgMeSubmitMap message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMeSubmitMap message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMeSubmitMap
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMeSubmitMap;

        /**
         * Creates a plain object from a MsgMeSubmitMap message. Also converts values to other types if specified.
         * @param message MsgMeSubmitMap
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMeSubmitMap, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMeSubmitMap to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMeSubmitMap {

        /** Properties of a C. */
        interface IC {

            /** C slotIndex */
            slotIndex?: (number|null);

            /** C mapRawData */
            mapRawData?: (Map.IMapRawData|null);

            /** C needReview */
            needReview?: (boolean|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMeSubmitMap.IC);

            /** C slotIndex. */
            public slotIndex: number;

            /** C mapRawData. */
            public mapRawData?: (Map.IMapRawData|null);

            /** C needReview. */
            public needReview: boolean;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMeSubmitMap.IC): NetMessage.MsgMeSubmitMap.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMeSubmitMap.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMeSubmitMap.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMeSubmitMap.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMeSubmitMap.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMeSubmitMap.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMeSubmitMap.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMeSubmitMap.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMeSubmitMap.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S isValidForReview */
            isValidForReview?: (boolean|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMeSubmitMap.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S isValidForReview. */
            public isValidForReview: boolean;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMeSubmitMap.IS): NetMessage.MsgMeSubmitMap.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMeSubmitMap.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMeSubmitMap.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMeSubmitMap.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMeSubmitMap.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMeSubmitMap.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMeSubmitMap.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMeSubmitMap.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMeSubmitMap.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMeSubmitWarRule. */
    interface IMsgMeSubmitWarRule {

        /** MsgMeSubmitWarRule c */
        c?: (NetMessage.MsgMeSubmitWarRule.IC|null);

        /** MsgMeSubmitWarRule s */
        s?: (NetMessage.MsgMeSubmitWarRule.IS|null);
    }

    /** Represents a MsgMeSubmitWarRule. */
    class MsgMeSubmitWarRule implements IMsgMeSubmitWarRule {

        /**
         * Constructs a new MsgMeSubmitWarRule.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMeSubmitWarRule);

        /** MsgMeSubmitWarRule c. */
        public c?: (NetMessage.MsgMeSubmitWarRule.IC|null);

        /** MsgMeSubmitWarRule s. */
        public s?: (NetMessage.MsgMeSubmitWarRule.IS|null);

        /**
         * Creates a new MsgMeSubmitWarRule instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMeSubmitWarRule instance
         */
        public static create(properties?: NetMessage.IMsgMeSubmitWarRule): NetMessage.MsgMeSubmitWarRule;

        /**
         * Encodes the specified MsgMeSubmitWarRule message. Does not implicitly {@link NetMessage.MsgMeSubmitWarRule.verify|verify} messages.
         * @param message MsgMeSubmitWarRule message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMeSubmitWarRule, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMeSubmitWarRule message, length delimited. Does not implicitly {@link NetMessage.MsgMeSubmitWarRule.verify|verify} messages.
         * @param message MsgMeSubmitWarRule message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMeSubmitWarRule, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMeSubmitWarRule message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMeSubmitWarRule
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMeSubmitWarRule;

        /**
         * Decodes a MsgMeSubmitWarRule message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMeSubmitWarRule
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMeSubmitWarRule;

        /**
         * Verifies a MsgMeSubmitWarRule message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMeSubmitWarRule message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMeSubmitWarRule
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMeSubmitWarRule;

        /**
         * Creates a plain object from a MsgMeSubmitWarRule message. Also converts values to other types if specified.
         * @param message MsgMeSubmitWarRule
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMeSubmitWarRule, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMeSubmitWarRule to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMeSubmitWarRule {

        /** Properties of a C. */
        interface IC {

            /** C mapId */
            mapId?: (number|null);

            /** C warRuleList */
            warRuleList?: (WarRule.IWarRule[]|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMeSubmitWarRule.IC);

            /** C mapId. */
            public mapId: number;

            /** C warRuleList. */
            public warRuleList: WarRule.IWarRule[];

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMeSubmitWarRule.IC): NetMessage.MsgMeSubmitWarRule.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMeSubmitWarRule.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMeSubmitWarRule.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMeSubmitWarRule.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMeSubmitWarRule.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMeSubmitWarRule.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMeSubmitWarRule.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMeSubmitWarRule.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMeSubmitWarRule.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMeSubmitWarRule.IS);

            /** S errorCode. */
            public errorCode: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMeSubmitWarRule.IS): NetMessage.MsgMeSubmitWarRule.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMeSubmitWarRule.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMeSubmitWarRule.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMeSubmitWarRule.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMeSubmitWarRule.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMeSubmitWarRule.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMeSubmitWarRule.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMeSubmitWarRule.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMeSubmitWarRule.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMeGetSubmittedWarRuleList. */
    interface IMsgMeGetSubmittedWarRuleList {

        /** MsgMeGetSubmittedWarRuleList c */
        c?: (NetMessage.MsgMeGetSubmittedWarRuleList.IC|null);

        /** MsgMeGetSubmittedWarRuleList s */
        s?: (NetMessage.MsgMeGetSubmittedWarRuleList.IS|null);
    }

    /** Represents a MsgMeGetSubmittedWarRuleList. */
    class MsgMeGetSubmittedWarRuleList implements IMsgMeGetSubmittedWarRuleList {

        /**
         * Constructs a new MsgMeGetSubmittedWarRuleList.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMeGetSubmittedWarRuleList);

        /** MsgMeGetSubmittedWarRuleList c. */
        public c?: (NetMessage.MsgMeGetSubmittedWarRuleList.IC|null);

        /** MsgMeGetSubmittedWarRuleList s. */
        public s?: (NetMessage.MsgMeGetSubmittedWarRuleList.IS|null);

        /**
         * Creates a new MsgMeGetSubmittedWarRuleList instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMeGetSubmittedWarRuleList instance
         */
        public static create(properties?: NetMessage.IMsgMeGetSubmittedWarRuleList): NetMessage.MsgMeGetSubmittedWarRuleList;

        /**
         * Encodes the specified MsgMeGetSubmittedWarRuleList message. Does not implicitly {@link NetMessage.MsgMeGetSubmittedWarRuleList.verify|verify} messages.
         * @param message MsgMeGetSubmittedWarRuleList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMeGetSubmittedWarRuleList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMeGetSubmittedWarRuleList message, length delimited. Does not implicitly {@link NetMessage.MsgMeGetSubmittedWarRuleList.verify|verify} messages.
         * @param message MsgMeGetSubmittedWarRuleList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMeGetSubmittedWarRuleList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMeGetSubmittedWarRuleList message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMeGetSubmittedWarRuleList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMeGetSubmittedWarRuleList;

        /**
         * Decodes a MsgMeGetSubmittedWarRuleList message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMeGetSubmittedWarRuleList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMeGetSubmittedWarRuleList;

        /**
         * Verifies a MsgMeGetSubmittedWarRuleList message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMeGetSubmittedWarRuleList message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMeGetSubmittedWarRuleList
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMeGetSubmittedWarRuleList;

        /**
         * Creates a plain object from a MsgMeGetSubmittedWarRuleList message. Also converts values to other types if specified.
         * @param message MsgMeGetSubmittedWarRuleList
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMeGetSubmittedWarRuleList, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMeGetSubmittedWarRuleList to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMeGetSubmittedWarRuleList {

        /** Properties of a C. */
        interface IC {
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMeGetSubmittedWarRuleList.IC);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMeGetSubmittedWarRuleList.IC): NetMessage.MsgMeGetSubmittedWarRuleList.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMeGetSubmittedWarRuleList.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMeGetSubmittedWarRuleList.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMeGetSubmittedWarRuleList.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMeGetSubmittedWarRuleList.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMeGetSubmittedWarRuleList.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMeGetSubmittedWarRuleList.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMeGetSubmittedWarRuleList.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMeGetSubmittedWarRuleList.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S dataList */
            dataList?: (Structure.IDataForReviewWarRule[]|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMeGetSubmittedWarRuleList.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S dataList. */
            public dataList: Structure.IDataForReviewWarRule[];

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMeGetSubmittedWarRuleList.IS): NetMessage.MsgMeGetSubmittedWarRuleList.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMeGetSubmittedWarRuleList.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMeGetSubmittedWarRuleList.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMeGetSubmittedWarRuleList.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMeGetSubmittedWarRuleList.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMeGetSubmittedWarRuleList.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMeGetSubmittedWarRuleList.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMeGetSubmittedWarRuleList.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMeGetSubmittedWarRuleList.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgChatAddMessage. */
    interface IMsgChatAddMessage {

        /** MsgChatAddMessage c */
        c?: (NetMessage.MsgChatAddMessage.IC|null);

        /** MsgChatAddMessage s */
        s?: (NetMessage.MsgChatAddMessage.IS|null);
    }

    /** Represents a MsgChatAddMessage. */
    class MsgChatAddMessage implements IMsgChatAddMessage {

        /**
         * Constructs a new MsgChatAddMessage.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgChatAddMessage);

        /** MsgChatAddMessage c. */
        public c?: (NetMessage.MsgChatAddMessage.IC|null);

        /** MsgChatAddMessage s. */
        public s?: (NetMessage.MsgChatAddMessage.IS|null);

        /**
         * Creates a new MsgChatAddMessage instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgChatAddMessage instance
         */
        public static create(properties?: NetMessage.IMsgChatAddMessage): NetMessage.MsgChatAddMessage;

        /**
         * Encodes the specified MsgChatAddMessage message. Does not implicitly {@link NetMessage.MsgChatAddMessage.verify|verify} messages.
         * @param message MsgChatAddMessage message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgChatAddMessage, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgChatAddMessage message, length delimited. Does not implicitly {@link NetMessage.MsgChatAddMessage.verify|verify} messages.
         * @param message MsgChatAddMessage message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgChatAddMessage, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgChatAddMessage message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgChatAddMessage
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgChatAddMessage;

        /**
         * Decodes a MsgChatAddMessage message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgChatAddMessage
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgChatAddMessage;

        /**
         * Verifies a MsgChatAddMessage message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgChatAddMessage message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgChatAddMessage
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgChatAddMessage;

        /**
         * Creates a plain object from a MsgChatAddMessage message. Also converts values to other types if specified.
         * @param message MsgChatAddMessage
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgChatAddMessage, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgChatAddMessage to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgChatAddMessage {

        /** Properties of a C. */
        interface IC {

            /** C toCategory */
            toCategory?: (number|null);

            /** C toTarget */
            toTarget?: (number|null);

            /** C content */
            content?: (string|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgChatAddMessage.IC);

            /** C toCategory. */
            public toCategory: number;

            /** C toTarget. */
            public toTarget: number;

            /** C content. */
            public content: string;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgChatAddMessage.IC): NetMessage.MsgChatAddMessage.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgChatAddMessage.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgChatAddMessage.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgChatAddMessage.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgChatAddMessage.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgChatAddMessage.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgChatAddMessage.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgChatAddMessage.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgChatAddMessage.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S message */
            message?: (Chat.IChatMessage|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgChatAddMessage.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S message. */
            public message?: (Chat.IChatMessage|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgChatAddMessage.IS): NetMessage.MsgChatAddMessage.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgChatAddMessage.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgChatAddMessage.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgChatAddMessage.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgChatAddMessage.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgChatAddMessage.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgChatAddMessage.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgChatAddMessage.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgChatAddMessage.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgChatGetAllMessages. */
    interface IMsgChatGetAllMessages {

        /** MsgChatGetAllMessages c */
        c?: (NetMessage.MsgChatGetAllMessages.IC|null);

        /** MsgChatGetAllMessages s */
        s?: (NetMessage.MsgChatGetAllMessages.IS|null);
    }

    /** Represents a MsgChatGetAllMessages. */
    class MsgChatGetAllMessages implements IMsgChatGetAllMessages {

        /**
         * Constructs a new MsgChatGetAllMessages.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgChatGetAllMessages);

        /** MsgChatGetAllMessages c. */
        public c?: (NetMessage.MsgChatGetAllMessages.IC|null);

        /** MsgChatGetAllMessages s. */
        public s?: (NetMessage.MsgChatGetAllMessages.IS|null);

        /**
         * Creates a new MsgChatGetAllMessages instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgChatGetAllMessages instance
         */
        public static create(properties?: NetMessage.IMsgChatGetAllMessages): NetMessage.MsgChatGetAllMessages;

        /**
         * Encodes the specified MsgChatGetAllMessages message. Does not implicitly {@link NetMessage.MsgChatGetAllMessages.verify|verify} messages.
         * @param message MsgChatGetAllMessages message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgChatGetAllMessages, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgChatGetAllMessages message, length delimited. Does not implicitly {@link NetMessage.MsgChatGetAllMessages.verify|verify} messages.
         * @param message MsgChatGetAllMessages message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgChatGetAllMessages, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgChatGetAllMessages message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgChatGetAllMessages
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgChatGetAllMessages;

        /**
         * Decodes a MsgChatGetAllMessages message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgChatGetAllMessages
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgChatGetAllMessages;

        /**
         * Verifies a MsgChatGetAllMessages message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgChatGetAllMessages message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgChatGetAllMessages
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgChatGetAllMessages;

        /**
         * Creates a plain object from a MsgChatGetAllMessages message. Also converts values to other types if specified.
         * @param message MsgChatGetAllMessages
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgChatGetAllMessages, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgChatGetAllMessages to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgChatGetAllMessages {

        /** Properties of a C. */
        interface IC {
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgChatGetAllMessages.IC);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgChatGetAllMessages.IC): NetMessage.MsgChatGetAllMessages.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgChatGetAllMessages.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgChatGetAllMessages.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgChatGetAllMessages.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgChatGetAllMessages.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgChatGetAllMessages.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgChatGetAllMessages.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgChatGetAllMessages.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgChatGetAllMessages.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S messageList */
            messageList?: (Chat.IChatMessage[]|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgChatGetAllMessages.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S messageList. */
            public messageList: Chat.IChatMessage[];

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgChatGetAllMessages.IS): NetMessage.MsgChatGetAllMessages.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgChatGetAllMessages.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgChatGetAllMessages.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgChatGetAllMessages.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgChatGetAllMessages.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgChatGetAllMessages.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgChatGetAllMessages.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgChatGetAllMessages.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgChatGetAllMessages.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgChatUpdateReadProgress. */
    interface IMsgChatUpdateReadProgress {

        /** MsgChatUpdateReadProgress c */
        c?: (NetMessage.MsgChatUpdateReadProgress.IC|null);

        /** MsgChatUpdateReadProgress s */
        s?: (NetMessage.MsgChatUpdateReadProgress.IS|null);
    }

    /** Represents a MsgChatUpdateReadProgress. */
    class MsgChatUpdateReadProgress implements IMsgChatUpdateReadProgress {

        /**
         * Constructs a new MsgChatUpdateReadProgress.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgChatUpdateReadProgress);

        /** MsgChatUpdateReadProgress c. */
        public c?: (NetMessage.MsgChatUpdateReadProgress.IC|null);

        /** MsgChatUpdateReadProgress s. */
        public s?: (NetMessage.MsgChatUpdateReadProgress.IS|null);

        /**
         * Creates a new MsgChatUpdateReadProgress instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgChatUpdateReadProgress instance
         */
        public static create(properties?: NetMessage.IMsgChatUpdateReadProgress): NetMessage.MsgChatUpdateReadProgress;

        /**
         * Encodes the specified MsgChatUpdateReadProgress message. Does not implicitly {@link NetMessage.MsgChatUpdateReadProgress.verify|verify} messages.
         * @param message MsgChatUpdateReadProgress message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgChatUpdateReadProgress, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgChatUpdateReadProgress message, length delimited. Does not implicitly {@link NetMessage.MsgChatUpdateReadProgress.verify|verify} messages.
         * @param message MsgChatUpdateReadProgress message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgChatUpdateReadProgress, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgChatUpdateReadProgress message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgChatUpdateReadProgress
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgChatUpdateReadProgress;

        /**
         * Decodes a MsgChatUpdateReadProgress message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgChatUpdateReadProgress
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgChatUpdateReadProgress;

        /**
         * Verifies a MsgChatUpdateReadProgress message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgChatUpdateReadProgress message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgChatUpdateReadProgress
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgChatUpdateReadProgress;

        /**
         * Creates a plain object from a MsgChatUpdateReadProgress message. Also converts values to other types if specified.
         * @param message MsgChatUpdateReadProgress
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgChatUpdateReadProgress, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgChatUpdateReadProgress to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgChatUpdateReadProgress {

        /** Properties of a C. */
        interface IC {

            /** C progress */
            progress?: (Chat.IChatReadProgress|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgChatUpdateReadProgress.IC);

            /** C progress. */
            public progress?: (Chat.IChatReadProgress|null);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgChatUpdateReadProgress.IC): NetMessage.MsgChatUpdateReadProgress.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgChatUpdateReadProgress.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgChatUpdateReadProgress.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgChatUpdateReadProgress.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgChatUpdateReadProgress.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgChatUpdateReadProgress.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgChatUpdateReadProgress.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgChatUpdateReadProgress.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgChatUpdateReadProgress.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S progress */
            progress?: (Chat.IChatReadProgress|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgChatUpdateReadProgress.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S progress. */
            public progress?: (Chat.IChatReadProgress|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgChatUpdateReadProgress.IS): NetMessage.MsgChatUpdateReadProgress.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgChatUpdateReadProgress.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgChatUpdateReadProgress.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgChatUpdateReadProgress.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgChatUpdateReadProgress.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgChatUpdateReadProgress.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgChatUpdateReadProgress.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgChatUpdateReadProgress.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgChatUpdateReadProgress.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgChatGetAllReadProgressList. */
    interface IMsgChatGetAllReadProgressList {

        /** MsgChatGetAllReadProgressList c */
        c?: (NetMessage.MsgChatGetAllReadProgressList.IC|null);

        /** MsgChatGetAllReadProgressList s */
        s?: (NetMessage.MsgChatGetAllReadProgressList.IS|null);
    }

    /** Represents a MsgChatGetAllReadProgressList. */
    class MsgChatGetAllReadProgressList implements IMsgChatGetAllReadProgressList {

        /**
         * Constructs a new MsgChatGetAllReadProgressList.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgChatGetAllReadProgressList);

        /** MsgChatGetAllReadProgressList c. */
        public c?: (NetMessage.MsgChatGetAllReadProgressList.IC|null);

        /** MsgChatGetAllReadProgressList s. */
        public s?: (NetMessage.MsgChatGetAllReadProgressList.IS|null);

        /**
         * Creates a new MsgChatGetAllReadProgressList instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgChatGetAllReadProgressList instance
         */
        public static create(properties?: NetMessage.IMsgChatGetAllReadProgressList): NetMessage.MsgChatGetAllReadProgressList;

        /**
         * Encodes the specified MsgChatGetAllReadProgressList message. Does not implicitly {@link NetMessage.MsgChatGetAllReadProgressList.verify|verify} messages.
         * @param message MsgChatGetAllReadProgressList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgChatGetAllReadProgressList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgChatGetAllReadProgressList message, length delimited. Does not implicitly {@link NetMessage.MsgChatGetAllReadProgressList.verify|verify} messages.
         * @param message MsgChatGetAllReadProgressList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgChatGetAllReadProgressList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgChatGetAllReadProgressList message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgChatGetAllReadProgressList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgChatGetAllReadProgressList;

        /**
         * Decodes a MsgChatGetAllReadProgressList message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgChatGetAllReadProgressList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgChatGetAllReadProgressList;

        /**
         * Verifies a MsgChatGetAllReadProgressList message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgChatGetAllReadProgressList message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgChatGetAllReadProgressList
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgChatGetAllReadProgressList;

        /**
         * Creates a plain object from a MsgChatGetAllReadProgressList message. Also converts values to other types if specified.
         * @param message MsgChatGetAllReadProgressList
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgChatGetAllReadProgressList, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgChatGetAllReadProgressList to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgChatGetAllReadProgressList {

        /** Properties of a C. */
        interface IC {
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgChatGetAllReadProgressList.IC);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgChatGetAllReadProgressList.IC): NetMessage.MsgChatGetAllReadProgressList.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgChatGetAllReadProgressList.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgChatGetAllReadProgressList.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgChatGetAllReadProgressList.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgChatGetAllReadProgressList.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgChatGetAllReadProgressList.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgChatGetAllReadProgressList.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgChatGetAllReadProgressList.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgChatGetAllReadProgressList.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S list */
            list?: (Chat.IChatReadProgress[]|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgChatGetAllReadProgressList.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S list. */
            public list: Chat.IChatReadProgress[];

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgChatGetAllReadProgressList.IS): NetMessage.MsgChatGetAllReadProgressList.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgChatGetAllReadProgressList.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgChatGetAllReadProgressList.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgChatGetAllReadProgressList.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgChatGetAllReadProgressList.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgChatGetAllReadProgressList.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgChatGetAllReadProgressList.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgChatGetAllReadProgressList.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgChatGetAllReadProgressList.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMmSetMapAvailability. */
    interface IMsgMmSetMapAvailability {

        /** MsgMmSetMapAvailability c */
        c?: (NetMessage.MsgMmSetMapAvailability.IC|null);

        /** MsgMmSetMapAvailability s */
        s?: (NetMessage.MsgMmSetMapAvailability.IS|null);
    }

    /** Represents a MsgMmSetMapAvailability. */
    class MsgMmSetMapAvailability implements IMsgMmSetMapAvailability {

        /**
         * Constructs a new MsgMmSetMapAvailability.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMmSetMapAvailability);

        /** MsgMmSetMapAvailability c. */
        public c?: (NetMessage.MsgMmSetMapAvailability.IC|null);

        /** MsgMmSetMapAvailability s. */
        public s?: (NetMessage.MsgMmSetMapAvailability.IS|null);

        /**
         * Creates a new MsgMmSetMapAvailability instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMmSetMapAvailability instance
         */
        public static create(properties?: NetMessage.IMsgMmSetMapAvailability): NetMessage.MsgMmSetMapAvailability;

        /**
         * Encodes the specified MsgMmSetMapAvailability message. Does not implicitly {@link NetMessage.MsgMmSetMapAvailability.verify|verify} messages.
         * @param message MsgMmSetMapAvailability message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMmSetMapAvailability, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMmSetMapAvailability message, length delimited. Does not implicitly {@link NetMessage.MsgMmSetMapAvailability.verify|verify} messages.
         * @param message MsgMmSetMapAvailability message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMmSetMapAvailability, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMmSetMapAvailability message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMmSetMapAvailability
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMmSetMapAvailability;

        /**
         * Decodes a MsgMmSetMapAvailability message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMmSetMapAvailability
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMmSetMapAvailability;

        /**
         * Verifies a MsgMmSetMapAvailability message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMmSetMapAvailability message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMmSetMapAvailability
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMmSetMapAvailability;

        /**
         * Creates a plain object from a MsgMmSetMapAvailability message. Also converts values to other types if specified.
         * @param message MsgMmSetMapAvailability
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMmSetMapAvailability, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMmSetMapAvailability to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMmSetMapAvailability {

        /** Properties of a C. */
        interface IC {

            /** C mapId */
            mapId?: (number|null);

            /** C availability */
            availability?: (Map.IDataForMapAvailability|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMmSetMapAvailability.IC);

            /** C mapId. */
            public mapId: number;

            /** C availability. */
            public availability?: (Map.IDataForMapAvailability|null);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMmSetMapAvailability.IC): NetMessage.MsgMmSetMapAvailability.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMmSetMapAvailability.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMmSetMapAvailability.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMmSetMapAvailability.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMmSetMapAvailability.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMmSetMapAvailability.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMmSetMapAvailability.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMmSetMapAvailability.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMmSetMapAvailability.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S mapId */
            mapId?: (number|null);

            /** S availability */
            availability?: (Map.IDataForMapAvailability|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMmSetMapAvailability.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S mapId. */
            public mapId: number;

            /** S availability. */
            public availability?: (Map.IDataForMapAvailability|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMmSetMapAvailability.IS): NetMessage.MsgMmSetMapAvailability.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMmSetMapAvailability.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMmSetMapAvailability.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMmSetMapAvailability.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMmSetMapAvailability.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMmSetMapAvailability.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMmSetMapAvailability.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMmSetMapAvailability.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMmSetMapAvailability.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMmReloadAllMaps. */
    interface IMsgMmReloadAllMaps {

        /** MsgMmReloadAllMaps c */
        c?: (NetMessage.MsgMmReloadAllMaps.IC|null);

        /** MsgMmReloadAllMaps s */
        s?: (NetMessage.MsgMmReloadAllMaps.IS|null);
    }

    /** Represents a MsgMmReloadAllMaps. */
    class MsgMmReloadAllMaps implements IMsgMmReloadAllMaps {

        /**
         * Constructs a new MsgMmReloadAllMaps.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMmReloadAllMaps);

        /** MsgMmReloadAllMaps c. */
        public c?: (NetMessage.MsgMmReloadAllMaps.IC|null);

        /** MsgMmReloadAllMaps s. */
        public s?: (NetMessage.MsgMmReloadAllMaps.IS|null);

        /**
         * Creates a new MsgMmReloadAllMaps instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMmReloadAllMaps instance
         */
        public static create(properties?: NetMessage.IMsgMmReloadAllMaps): NetMessage.MsgMmReloadAllMaps;

        /**
         * Encodes the specified MsgMmReloadAllMaps message. Does not implicitly {@link NetMessage.MsgMmReloadAllMaps.verify|verify} messages.
         * @param message MsgMmReloadAllMaps message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMmReloadAllMaps, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMmReloadAllMaps message, length delimited. Does not implicitly {@link NetMessage.MsgMmReloadAllMaps.verify|verify} messages.
         * @param message MsgMmReloadAllMaps message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMmReloadAllMaps, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMmReloadAllMaps message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMmReloadAllMaps
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMmReloadAllMaps;

        /**
         * Decodes a MsgMmReloadAllMaps message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMmReloadAllMaps
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMmReloadAllMaps;

        /**
         * Verifies a MsgMmReloadAllMaps message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMmReloadAllMaps message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMmReloadAllMaps
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMmReloadAllMaps;

        /**
         * Creates a plain object from a MsgMmReloadAllMaps message. Also converts values to other types if specified.
         * @param message MsgMmReloadAllMaps
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMmReloadAllMaps, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMmReloadAllMaps to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMmReloadAllMaps {

        /** Properties of a C. */
        interface IC {
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMmReloadAllMaps.IC);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMmReloadAllMaps.IC): NetMessage.MsgMmReloadAllMaps.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMmReloadAllMaps.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMmReloadAllMaps.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMmReloadAllMaps.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMmReloadAllMaps.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMmReloadAllMaps.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMmReloadAllMaps.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMmReloadAllMaps.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMmReloadAllMaps.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMmReloadAllMaps.IS);

            /** S errorCode. */
            public errorCode: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMmReloadAllMaps.IS): NetMessage.MsgMmReloadAllMaps.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMmReloadAllMaps.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMmReloadAllMaps.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMmReloadAllMaps.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMmReloadAllMaps.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMmReloadAllMaps.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMmReloadAllMaps.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMmReloadAllMaps.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMmReloadAllMaps.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMmDeleteMap. */
    interface IMsgMmDeleteMap {

        /** MsgMmDeleteMap c */
        c?: (NetMessage.MsgMmDeleteMap.IC|null);

        /** MsgMmDeleteMap s */
        s?: (NetMessage.MsgMmDeleteMap.IS|null);
    }

    /** Represents a MsgMmDeleteMap. */
    class MsgMmDeleteMap implements IMsgMmDeleteMap {

        /**
         * Constructs a new MsgMmDeleteMap.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMmDeleteMap);

        /** MsgMmDeleteMap c. */
        public c?: (NetMessage.MsgMmDeleteMap.IC|null);

        /** MsgMmDeleteMap s. */
        public s?: (NetMessage.MsgMmDeleteMap.IS|null);

        /**
         * Creates a new MsgMmDeleteMap instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMmDeleteMap instance
         */
        public static create(properties?: NetMessage.IMsgMmDeleteMap): NetMessage.MsgMmDeleteMap;

        /**
         * Encodes the specified MsgMmDeleteMap message. Does not implicitly {@link NetMessage.MsgMmDeleteMap.verify|verify} messages.
         * @param message MsgMmDeleteMap message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMmDeleteMap, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMmDeleteMap message, length delimited. Does not implicitly {@link NetMessage.MsgMmDeleteMap.verify|verify} messages.
         * @param message MsgMmDeleteMap message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMmDeleteMap, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMmDeleteMap message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMmDeleteMap
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMmDeleteMap;

        /**
         * Decodes a MsgMmDeleteMap message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMmDeleteMap
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMmDeleteMap;

        /**
         * Verifies a MsgMmDeleteMap message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMmDeleteMap message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMmDeleteMap
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMmDeleteMap;

        /**
         * Creates a plain object from a MsgMmDeleteMap message. Also converts values to other types if specified.
         * @param message MsgMmDeleteMap
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMmDeleteMap, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMmDeleteMap to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMmDeleteMap {

        /** Properties of a C. */
        interface IC {

            /** C mapId */
            mapId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMmDeleteMap.IC);

            /** C mapId. */
            public mapId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMmDeleteMap.IC): NetMessage.MsgMmDeleteMap.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMmDeleteMap.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMmDeleteMap.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMmDeleteMap.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMmDeleteMap.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMmDeleteMap.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMmDeleteMap.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMmDeleteMap.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMmDeleteMap.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S mapId */
            mapId?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMmDeleteMap.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S mapId. */
            public mapId: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMmDeleteMap.IS): NetMessage.MsgMmDeleteMap.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMmDeleteMap.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMmDeleteMap.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMmDeleteMap.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMmDeleteMap.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMmDeleteMap.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMmDeleteMap.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMmDeleteMap.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMmDeleteMap.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMmGetReviewingMaps. */
    interface IMsgMmGetReviewingMaps {

        /** MsgMmGetReviewingMaps c */
        c?: (NetMessage.MsgMmGetReviewingMaps.IC|null);

        /** MsgMmGetReviewingMaps s */
        s?: (NetMessage.MsgMmGetReviewingMaps.IS|null);
    }

    /** Represents a MsgMmGetReviewingMaps. */
    class MsgMmGetReviewingMaps implements IMsgMmGetReviewingMaps {

        /**
         * Constructs a new MsgMmGetReviewingMaps.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMmGetReviewingMaps);

        /** MsgMmGetReviewingMaps c. */
        public c?: (NetMessage.MsgMmGetReviewingMaps.IC|null);

        /** MsgMmGetReviewingMaps s. */
        public s?: (NetMessage.MsgMmGetReviewingMaps.IS|null);

        /**
         * Creates a new MsgMmGetReviewingMaps instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMmGetReviewingMaps instance
         */
        public static create(properties?: NetMessage.IMsgMmGetReviewingMaps): NetMessage.MsgMmGetReviewingMaps;

        /**
         * Encodes the specified MsgMmGetReviewingMaps message. Does not implicitly {@link NetMessage.MsgMmGetReviewingMaps.verify|verify} messages.
         * @param message MsgMmGetReviewingMaps message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMmGetReviewingMaps, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMmGetReviewingMaps message, length delimited. Does not implicitly {@link NetMessage.MsgMmGetReviewingMaps.verify|verify} messages.
         * @param message MsgMmGetReviewingMaps message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMmGetReviewingMaps, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMmGetReviewingMaps message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMmGetReviewingMaps
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMmGetReviewingMaps;

        /**
         * Decodes a MsgMmGetReviewingMaps message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMmGetReviewingMaps
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMmGetReviewingMaps;

        /**
         * Verifies a MsgMmGetReviewingMaps message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMmGetReviewingMaps message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMmGetReviewingMaps
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMmGetReviewingMaps;

        /**
         * Creates a plain object from a MsgMmGetReviewingMaps message. Also converts values to other types if specified.
         * @param message MsgMmGetReviewingMaps
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMmGetReviewingMaps, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMmGetReviewingMaps to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMmGetReviewingMaps {

        /** Properties of a C. */
        interface IC {
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMmGetReviewingMaps.IC);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMmGetReviewingMaps.IC): NetMessage.MsgMmGetReviewingMaps.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMmGetReviewingMaps.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMmGetReviewingMaps.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMmGetReviewingMaps.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMmGetReviewingMaps.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMmGetReviewingMaps.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMmGetReviewingMaps.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMmGetReviewingMaps.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMmGetReviewingMaps.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S maps */
            maps?: (Map.IMapEditorData[]|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMmGetReviewingMaps.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S maps. */
            public maps: Map.IMapEditorData[];

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMmGetReviewingMaps.IS): NetMessage.MsgMmGetReviewingMaps.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMmGetReviewingMaps.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMmGetReviewingMaps.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMmGetReviewingMaps.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMmGetReviewingMaps.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMmGetReviewingMaps.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMmGetReviewingMaps.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMmGetReviewingMaps.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMmGetReviewingMaps.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMmReviewMap. */
    interface IMsgMmReviewMap {

        /** MsgMmReviewMap c */
        c?: (NetMessage.MsgMmReviewMap.IC|null);

        /** MsgMmReviewMap s */
        s?: (NetMessage.MsgMmReviewMap.IS|null);
    }

    /** Represents a MsgMmReviewMap. */
    class MsgMmReviewMap implements IMsgMmReviewMap {

        /**
         * Constructs a new MsgMmReviewMap.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMmReviewMap);

        /** MsgMmReviewMap c. */
        public c?: (NetMessage.MsgMmReviewMap.IC|null);

        /** MsgMmReviewMap s. */
        public s?: (NetMessage.MsgMmReviewMap.IS|null);

        /**
         * Creates a new MsgMmReviewMap instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMmReviewMap instance
         */
        public static create(properties?: NetMessage.IMsgMmReviewMap): NetMessage.MsgMmReviewMap;

        /**
         * Encodes the specified MsgMmReviewMap message. Does not implicitly {@link NetMessage.MsgMmReviewMap.verify|verify} messages.
         * @param message MsgMmReviewMap message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMmReviewMap, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMmReviewMap message, length delimited. Does not implicitly {@link NetMessage.MsgMmReviewMap.verify|verify} messages.
         * @param message MsgMmReviewMap message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMmReviewMap, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMmReviewMap message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMmReviewMap
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMmReviewMap;

        /**
         * Decodes a MsgMmReviewMap message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMmReviewMap
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMmReviewMap;

        /**
         * Verifies a MsgMmReviewMap message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMmReviewMap message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMmReviewMap
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMmReviewMap;

        /**
         * Creates a plain object from a MsgMmReviewMap message. Also converts values to other types if specified.
         * @param message MsgMmReviewMap
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMmReviewMap, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMmReviewMap to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMmReviewMap {

        /** Properties of a C. */
        interface IC {

            /** C designerUserId */
            designerUserId?: (number|null);

            /** C slotIndex */
            slotIndex?: (number|null);

            /** C modifiedTime */
            modifiedTime?: (number|null);

            /** C isAccept */
            isAccept?: (boolean|null);

            /** C reviewComment */
            reviewComment?: (string|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMmReviewMap.IC);

            /** C designerUserId. */
            public designerUserId: number;

            /** C slotIndex. */
            public slotIndex: number;

            /** C modifiedTime. */
            public modifiedTime: number;

            /** C isAccept. */
            public isAccept: boolean;

            /** C reviewComment. */
            public reviewComment: string;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMmReviewMap.IC): NetMessage.MsgMmReviewMap.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMmReviewMap.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMmReviewMap.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMmReviewMap.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMmReviewMap.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMmReviewMap.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMmReviewMap.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMmReviewMap.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMmReviewMap.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S isAccept */
            isAccept?: (boolean|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMmReviewMap.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S isAccept. */
            public isAccept: boolean;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMmReviewMap.IS): NetMessage.MsgMmReviewMap.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMmReviewMap.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMmReviewMap.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMmReviewMap.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMmReviewMap.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMmReviewMap.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMmReviewMap.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMmReviewMap.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMmReviewMap.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMmGetReviewingWarRuleList. */
    interface IMsgMmGetReviewingWarRuleList {

        /** MsgMmGetReviewingWarRuleList c */
        c?: (NetMessage.MsgMmGetReviewingWarRuleList.IC|null);

        /** MsgMmGetReviewingWarRuleList s */
        s?: (NetMessage.MsgMmGetReviewingWarRuleList.IS|null);
    }

    /** Represents a MsgMmGetReviewingWarRuleList. */
    class MsgMmGetReviewingWarRuleList implements IMsgMmGetReviewingWarRuleList {

        /**
         * Constructs a new MsgMmGetReviewingWarRuleList.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMmGetReviewingWarRuleList);

        /** MsgMmGetReviewingWarRuleList c. */
        public c?: (NetMessage.MsgMmGetReviewingWarRuleList.IC|null);

        /** MsgMmGetReviewingWarRuleList s. */
        public s?: (NetMessage.MsgMmGetReviewingWarRuleList.IS|null);

        /**
         * Creates a new MsgMmGetReviewingWarRuleList instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMmGetReviewingWarRuleList instance
         */
        public static create(properties?: NetMessage.IMsgMmGetReviewingWarRuleList): NetMessage.MsgMmGetReviewingWarRuleList;

        /**
         * Encodes the specified MsgMmGetReviewingWarRuleList message. Does not implicitly {@link NetMessage.MsgMmGetReviewingWarRuleList.verify|verify} messages.
         * @param message MsgMmGetReviewingWarRuleList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMmGetReviewingWarRuleList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMmGetReviewingWarRuleList message, length delimited. Does not implicitly {@link NetMessage.MsgMmGetReviewingWarRuleList.verify|verify} messages.
         * @param message MsgMmGetReviewingWarRuleList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMmGetReviewingWarRuleList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMmGetReviewingWarRuleList message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMmGetReviewingWarRuleList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMmGetReviewingWarRuleList;

        /**
         * Decodes a MsgMmGetReviewingWarRuleList message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMmGetReviewingWarRuleList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMmGetReviewingWarRuleList;

        /**
         * Verifies a MsgMmGetReviewingWarRuleList message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMmGetReviewingWarRuleList message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMmGetReviewingWarRuleList
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMmGetReviewingWarRuleList;

        /**
         * Creates a plain object from a MsgMmGetReviewingWarRuleList message. Also converts values to other types if specified.
         * @param message MsgMmGetReviewingWarRuleList
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMmGetReviewingWarRuleList, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMmGetReviewingWarRuleList to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMmGetReviewingWarRuleList {

        /** Properties of a C. */
        interface IC {
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMmGetReviewingWarRuleList.IC);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMmGetReviewingWarRuleList.IC): NetMessage.MsgMmGetReviewingWarRuleList.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMmGetReviewingWarRuleList.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMmGetReviewingWarRuleList.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMmGetReviewingWarRuleList.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMmGetReviewingWarRuleList.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMmGetReviewingWarRuleList.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMmGetReviewingWarRuleList.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMmGetReviewingWarRuleList.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMmGetReviewingWarRuleList.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S dataList */
            dataList?: (Structure.IDataForReviewWarRule[]|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMmGetReviewingWarRuleList.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S dataList. */
            public dataList: Structure.IDataForReviewWarRule[];

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMmGetReviewingWarRuleList.IS): NetMessage.MsgMmGetReviewingWarRuleList.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMmGetReviewingWarRuleList.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMmGetReviewingWarRuleList.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMmGetReviewingWarRuleList.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMmGetReviewingWarRuleList.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMmGetReviewingWarRuleList.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMmGetReviewingWarRuleList.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMmGetReviewingWarRuleList.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMmGetReviewingWarRuleList.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMmReviewWarRule. */
    interface IMsgMmReviewWarRule {

        /** MsgMmReviewWarRule c */
        c?: (NetMessage.MsgMmReviewWarRule.IC|null);

        /** MsgMmReviewWarRule s */
        s?: (NetMessage.MsgMmReviewWarRule.IS|null);
    }

    /** Represents a MsgMmReviewWarRule. */
    class MsgMmReviewWarRule implements IMsgMmReviewWarRule {

        /**
         * Constructs a new MsgMmReviewWarRule.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMmReviewWarRule);

        /** MsgMmReviewWarRule c. */
        public c?: (NetMessage.MsgMmReviewWarRule.IC|null);

        /** MsgMmReviewWarRule s. */
        public s?: (NetMessage.MsgMmReviewWarRule.IS|null);

        /**
         * Creates a new MsgMmReviewWarRule instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMmReviewWarRule instance
         */
        public static create(properties?: NetMessage.IMsgMmReviewWarRule): NetMessage.MsgMmReviewWarRule;

        /**
         * Encodes the specified MsgMmReviewWarRule message. Does not implicitly {@link NetMessage.MsgMmReviewWarRule.verify|verify} messages.
         * @param message MsgMmReviewWarRule message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMmReviewWarRule, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMmReviewWarRule message, length delimited. Does not implicitly {@link NetMessage.MsgMmReviewWarRule.verify|verify} messages.
         * @param message MsgMmReviewWarRule message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMmReviewWarRule, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMmReviewWarRule message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMmReviewWarRule
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMmReviewWarRule;

        /**
         * Decodes a MsgMmReviewWarRule message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMmReviewWarRule
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMmReviewWarRule;

        /**
         * Verifies a MsgMmReviewWarRule message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMmReviewWarRule message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMmReviewWarRule
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMmReviewWarRule;

        /**
         * Creates a plain object from a MsgMmReviewWarRule message. Also converts values to other types if specified.
         * @param message MsgMmReviewWarRule
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMmReviewWarRule, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMmReviewWarRule to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMmReviewWarRule {

        /** Properties of a C. */
        interface IC {

            /** C submitterUserId */
            submitterUserId?: (number|null);

            /** C submitTimestamp */
            submitTimestamp?: (number|null);

            /** C isAccept */
            isAccept?: (boolean|null);

            /** C reviewComment */
            reviewComment?: (string|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMmReviewWarRule.IC);

            /** C submitterUserId. */
            public submitterUserId: number;

            /** C submitTimestamp. */
            public submitTimestamp: number;

            /** C isAccept. */
            public isAccept: boolean;

            /** C reviewComment. */
            public reviewComment: string;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMmReviewWarRule.IC): NetMessage.MsgMmReviewWarRule.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMmReviewWarRule.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMmReviewWarRule.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMmReviewWarRule.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMmReviewWarRule.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMmReviewWarRule.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMmReviewWarRule.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMmReviewWarRule.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMmReviewWarRule.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S isAccept */
            isAccept?: (boolean|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMmReviewWarRule.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S isAccept. */
            public isAccept: boolean;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMmReviewWarRule.IS): NetMessage.MsgMmReviewWarRule.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMmReviewWarRule.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMmReviewWarRule.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMmReviewWarRule.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMmReviewWarRule.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMmReviewWarRule.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMmReviewWarRule.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMmReviewWarRule.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMmReviewWarRule.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgReplaySetRating. */
    interface IMsgReplaySetRating {

        /** MsgReplaySetRating c */
        c?: (NetMessage.MsgReplaySetRating.IC|null);

        /** MsgReplaySetRating s */
        s?: (NetMessage.MsgReplaySetRating.IS|null);
    }

    /** Represents a MsgReplaySetRating. */
    class MsgReplaySetRating implements IMsgReplaySetRating {

        /**
         * Constructs a new MsgReplaySetRating.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgReplaySetRating);

        /** MsgReplaySetRating c. */
        public c?: (NetMessage.MsgReplaySetRating.IC|null);

        /** MsgReplaySetRating s. */
        public s?: (NetMessage.MsgReplaySetRating.IS|null);

        /**
         * Creates a new MsgReplaySetRating instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgReplaySetRating instance
         */
        public static create(properties?: NetMessage.IMsgReplaySetRating): NetMessage.MsgReplaySetRating;

        /**
         * Encodes the specified MsgReplaySetRating message. Does not implicitly {@link NetMessage.MsgReplaySetRating.verify|verify} messages.
         * @param message MsgReplaySetRating message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgReplaySetRating, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgReplaySetRating message, length delimited. Does not implicitly {@link NetMessage.MsgReplaySetRating.verify|verify} messages.
         * @param message MsgReplaySetRating message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgReplaySetRating, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgReplaySetRating message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgReplaySetRating
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgReplaySetRating;

        /**
         * Decodes a MsgReplaySetRating message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgReplaySetRating
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgReplaySetRating;

        /**
         * Verifies a MsgReplaySetRating message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgReplaySetRating message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgReplaySetRating
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgReplaySetRating;

        /**
         * Creates a plain object from a MsgReplaySetRating message. Also converts values to other types if specified.
         * @param message MsgReplaySetRating
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgReplaySetRating, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgReplaySetRating to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgReplaySetRating {

        /** Properties of a C. */
        interface IC {

            /** C replayId */
            replayId?: (number|null);

            /** C rating */
            rating?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgReplaySetRating.IC);

            /** C replayId. */
            public replayId: number;

            /** C rating. */
            public rating: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgReplaySetRating.IC): NetMessage.MsgReplaySetRating.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgReplaySetRating.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgReplaySetRating.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgReplaySetRating.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgReplaySetRating.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgReplaySetRating.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgReplaySetRating.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgReplaySetRating.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgReplaySetRating.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgReplaySetRating.IS);

            /** S errorCode. */
            public errorCode: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgReplaySetRating.IS): NetMessage.MsgReplaySetRating.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgReplaySetRating.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgReplaySetRating.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgReplaySetRating.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgReplaySetRating.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgReplaySetRating.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgReplaySetRating.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgReplaySetRating.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgReplaySetRating.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgReplayGetInfoList. */
    interface IMsgReplayGetInfoList {

        /** MsgReplayGetInfoList c */
        c?: (NetMessage.MsgReplayGetInfoList.IC|null);

        /** MsgReplayGetInfoList s */
        s?: (NetMessage.MsgReplayGetInfoList.IS|null);
    }

    /** Represents a MsgReplayGetInfoList. */
    class MsgReplayGetInfoList implements IMsgReplayGetInfoList {

        /**
         * Constructs a new MsgReplayGetInfoList.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgReplayGetInfoList);

        /** MsgReplayGetInfoList c. */
        public c?: (NetMessage.MsgReplayGetInfoList.IC|null);

        /** MsgReplayGetInfoList s. */
        public s?: (NetMessage.MsgReplayGetInfoList.IS|null);

        /**
         * Creates a new MsgReplayGetInfoList instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgReplayGetInfoList instance
         */
        public static create(properties?: NetMessage.IMsgReplayGetInfoList): NetMessage.MsgReplayGetInfoList;

        /**
         * Encodes the specified MsgReplayGetInfoList message. Does not implicitly {@link NetMessage.MsgReplayGetInfoList.verify|verify} messages.
         * @param message MsgReplayGetInfoList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgReplayGetInfoList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgReplayGetInfoList message, length delimited. Does not implicitly {@link NetMessage.MsgReplayGetInfoList.verify|verify} messages.
         * @param message MsgReplayGetInfoList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgReplayGetInfoList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgReplayGetInfoList message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgReplayGetInfoList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgReplayGetInfoList;

        /**
         * Decodes a MsgReplayGetInfoList message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgReplayGetInfoList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgReplayGetInfoList;

        /**
         * Verifies a MsgReplayGetInfoList message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgReplayGetInfoList message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgReplayGetInfoList
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgReplayGetInfoList;

        /**
         * Creates a plain object from a MsgReplayGetInfoList message. Also converts values to other types if specified.
         * @param message MsgReplayGetInfoList
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgReplayGetInfoList, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgReplayGetInfoList to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgReplayGetInfoList {

        /** Properties of a C. */
        interface IC {

            /** C replayId */
            replayId?: (number|null);

            /** C mapName */
            mapName?: (string|null);

            /** C minMyRating */
            minMyRating?: (number|null);

            /** C minGlobalRating */
            minGlobalRating?: (number|null);

            /** C userNickname */
            userNickname?: (string|null);

            /** C coName */
            coName?: (string|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgReplayGetInfoList.IC);

            /** C replayId. */
            public replayId: number;

            /** C mapName. */
            public mapName: string;

            /** C minMyRating. */
            public minMyRating: number;

            /** C minGlobalRating. */
            public minGlobalRating: number;

            /** C userNickname. */
            public userNickname: string;

            /** C coName. */
            public coName: string;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgReplayGetInfoList.IC): NetMessage.MsgReplayGetInfoList.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgReplayGetInfoList.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgReplayGetInfoList.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgReplayGetInfoList.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgReplayGetInfoList.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgReplayGetInfoList.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgReplayGetInfoList.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgReplayGetInfoList.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgReplayGetInfoList.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S infos */
            infos?: (MultiCustomWar.IMcwReplayInfo[]|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgReplayGetInfoList.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S infos. */
            public infos: MultiCustomWar.IMcwReplayInfo[];

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgReplayGetInfoList.IS): NetMessage.MsgReplayGetInfoList.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgReplayGetInfoList.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgReplayGetInfoList.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgReplayGetInfoList.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgReplayGetInfoList.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgReplayGetInfoList.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgReplayGetInfoList.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgReplayGetInfoList.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgReplayGetInfoList.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgReplayGetData. */
    interface IMsgReplayGetData {

        /** MsgReplayGetData c */
        c?: (NetMessage.MsgReplayGetData.IC|null);

        /** MsgReplayGetData s */
        s?: (NetMessage.MsgReplayGetData.IS|null);
    }

    /** Represents a MsgReplayGetData. */
    class MsgReplayGetData implements IMsgReplayGetData {

        /**
         * Constructs a new MsgReplayGetData.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgReplayGetData);

        /** MsgReplayGetData c. */
        public c?: (NetMessage.MsgReplayGetData.IC|null);

        /** MsgReplayGetData s. */
        public s?: (NetMessage.MsgReplayGetData.IS|null);

        /**
         * Creates a new MsgReplayGetData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgReplayGetData instance
         */
        public static create(properties?: NetMessage.IMsgReplayGetData): NetMessage.MsgReplayGetData;

        /**
         * Encodes the specified MsgReplayGetData message. Does not implicitly {@link NetMessage.MsgReplayGetData.verify|verify} messages.
         * @param message MsgReplayGetData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgReplayGetData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgReplayGetData message, length delimited. Does not implicitly {@link NetMessage.MsgReplayGetData.verify|verify} messages.
         * @param message MsgReplayGetData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgReplayGetData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgReplayGetData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgReplayGetData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgReplayGetData;

        /**
         * Decodes a MsgReplayGetData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgReplayGetData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgReplayGetData;

        /**
         * Verifies a MsgReplayGetData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgReplayGetData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgReplayGetData
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgReplayGetData;

        /**
         * Creates a plain object from a MsgReplayGetData message. Also converts values to other types if specified.
         * @param message MsgReplayGetData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgReplayGetData, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgReplayGetData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgReplayGetData {

        /** Properties of a C. */
        interface IC {

            /** C replayId */
            replayId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgReplayGetData.IC);

            /** C replayId. */
            public replayId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgReplayGetData.IC): NetMessage.MsgReplayGetData.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgReplayGetData.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgReplayGetData.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgReplayGetData.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgReplayGetData.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgReplayGetData.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgReplayGetData.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgReplayGetData.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgReplayGetData.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S replayId */
            replayId?: (number|null);

            /** S encodedWar */
            encodedWar?: (Uint8Array|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgReplayGetData.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S replayId. */
            public replayId: number;

            /** S encodedWar. */
            public encodedWar: Uint8Array;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgReplayGetData.IS): NetMessage.MsgReplayGetData.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgReplayGetData.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgReplayGetData.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgReplayGetData.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgReplayGetData.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgReplayGetData.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgReplayGetData.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgReplayGetData.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgReplayGetData.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMcrCreateRoom. */
    interface IMsgMcrCreateRoom {

        /** MsgMcrCreateRoom c */
        c?: (NetMessage.MsgMcrCreateRoom.IC|null);

        /** MsgMcrCreateRoom s */
        s?: (NetMessage.MsgMcrCreateRoom.IS|null);
    }

    /** Represents a MsgMcrCreateRoom. */
    class MsgMcrCreateRoom implements IMsgMcrCreateRoom {

        /**
         * Constructs a new MsgMcrCreateRoom.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMcrCreateRoom);

        /** MsgMcrCreateRoom c. */
        public c?: (NetMessage.MsgMcrCreateRoom.IC|null);

        /** MsgMcrCreateRoom s. */
        public s?: (NetMessage.MsgMcrCreateRoom.IS|null);

        /**
         * Creates a new MsgMcrCreateRoom instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMcrCreateRoom instance
         */
        public static create(properties?: NetMessage.IMsgMcrCreateRoom): NetMessage.MsgMcrCreateRoom;

        /**
         * Encodes the specified MsgMcrCreateRoom message. Does not implicitly {@link NetMessage.MsgMcrCreateRoom.verify|verify} messages.
         * @param message MsgMcrCreateRoom message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMcrCreateRoom, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMcrCreateRoom message, length delimited. Does not implicitly {@link NetMessage.MsgMcrCreateRoom.verify|verify} messages.
         * @param message MsgMcrCreateRoom message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMcrCreateRoom, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMcrCreateRoom message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMcrCreateRoom
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrCreateRoom;

        /**
         * Decodes a MsgMcrCreateRoom message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMcrCreateRoom
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrCreateRoom;

        /**
         * Verifies a MsgMcrCreateRoom message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMcrCreateRoom message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMcrCreateRoom
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrCreateRoom;

        /**
         * Creates a plain object from a MsgMcrCreateRoom message. Also converts values to other types if specified.
         * @param message MsgMcrCreateRoom
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMcrCreateRoom, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMcrCreateRoom to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMcrCreateRoom {

        /** Properties of a C. */
        interface IC {

            /** C settingsForCommon */
            settingsForCommon?: (WarSettings.ISettingsForCommon|null);

            /** C settingsForMcw */
            settingsForMcw?: (WarSettings.ISettingsForMcw|null);

            /** C selfPlayerIndex */
            selfPlayerIndex?: (number|null);

            /** C selfCoId */
            selfCoId?: (number|null);

            /** C selfUnitAndTileSkinId */
            selfUnitAndTileSkinId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcrCreateRoom.IC);

            /** C settingsForCommon. */
            public settingsForCommon?: (WarSettings.ISettingsForCommon|null);

            /** C settingsForMcw. */
            public settingsForMcw?: (WarSettings.ISettingsForMcw|null);

            /** C selfPlayerIndex. */
            public selfPlayerIndex: number;

            /** C selfCoId. */
            public selfCoId: number;

            /** C selfUnitAndTileSkinId. */
            public selfUnitAndTileSkinId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMcrCreateRoom.IC): NetMessage.MsgMcrCreateRoom.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMcrCreateRoom.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcrCreateRoom.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMcrCreateRoom.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcrCreateRoom.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrCreateRoom.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrCreateRoom.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrCreateRoom.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcrCreateRoom.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcrCreateRoom.IS);

            /** S errorCode. */
            public errorCode: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMcrCreateRoom.IS): NetMessage.MsgMcrCreateRoom.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMcrCreateRoom.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcrCreateRoom.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMcrCreateRoom.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcrCreateRoom.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrCreateRoom.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrCreateRoom.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrCreateRoom.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcrCreateRoom.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMcrExitRoom. */
    interface IMsgMcrExitRoom {

        /** MsgMcrExitRoom c */
        c?: (NetMessage.MsgMcrExitRoom.IC|null);

        /** MsgMcrExitRoom s */
        s?: (NetMessage.MsgMcrExitRoom.IS|null);
    }

    /** Represents a MsgMcrExitRoom. */
    class MsgMcrExitRoom implements IMsgMcrExitRoom {

        /**
         * Constructs a new MsgMcrExitRoom.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMcrExitRoom);

        /** MsgMcrExitRoom c. */
        public c?: (NetMessage.MsgMcrExitRoom.IC|null);

        /** MsgMcrExitRoom s. */
        public s?: (NetMessage.MsgMcrExitRoom.IS|null);

        /**
         * Creates a new MsgMcrExitRoom instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMcrExitRoom instance
         */
        public static create(properties?: NetMessage.IMsgMcrExitRoom): NetMessage.MsgMcrExitRoom;

        /**
         * Encodes the specified MsgMcrExitRoom message. Does not implicitly {@link NetMessage.MsgMcrExitRoom.verify|verify} messages.
         * @param message MsgMcrExitRoom message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMcrExitRoom, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMcrExitRoom message, length delimited. Does not implicitly {@link NetMessage.MsgMcrExitRoom.verify|verify} messages.
         * @param message MsgMcrExitRoom message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMcrExitRoom, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMcrExitRoom message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMcrExitRoom
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrExitRoom;

        /**
         * Decodes a MsgMcrExitRoom message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMcrExitRoom
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrExitRoom;

        /**
         * Verifies a MsgMcrExitRoom message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMcrExitRoom message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMcrExitRoom
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrExitRoom;

        /**
         * Creates a plain object from a MsgMcrExitRoom message. Also converts values to other types if specified.
         * @param message MsgMcrExitRoom
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMcrExitRoom, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMcrExitRoom to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMcrExitRoom {

        /** Properties of a C. */
        interface IC {

            /** C roomId */
            roomId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcrExitRoom.IC);

            /** C roomId. */
            public roomId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMcrExitRoom.IC): NetMessage.MsgMcrExitRoom.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMcrExitRoom.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcrExitRoom.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMcrExitRoom.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcrExitRoom.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrExitRoom.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrExitRoom.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrExitRoom.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcrExitRoom.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S roomId */
            roomId?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcrExitRoom.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S roomId. */
            public roomId: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMcrExitRoom.IS): NetMessage.MsgMcrExitRoom.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMcrExitRoom.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcrExitRoom.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMcrExitRoom.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcrExitRoom.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrExitRoom.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrExitRoom.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrExitRoom.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcrExitRoom.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMcrGetJoinedRoomInfoList. */
    interface IMsgMcrGetJoinedRoomInfoList {

        /** MsgMcrGetJoinedRoomInfoList c */
        c?: (NetMessage.MsgMcrGetJoinedRoomInfoList.IC|null);

        /** MsgMcrGetJoinedRoomInfoList s */
        s?: (NetMessage.MsgMcrGetJoinedRoomInfoList.IS|null);
    }

    /** Represents a MsgMcrGetJoinedRoomInfoList. */
    class MsgMcrGetJoinedRoomInfoList implements IMsgMcrGetJoinedRoomInfoList {

        /**
         * Constructs a new MsgMcrGetJoinedRoomInfoList.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMcrGetJoinedRoomInfoList);

        /** MsgMcrGetJoinedRoomInfoList c. */
        public c?: (NetMessage.MsgMcrGetJoinedRoomInfoList.IC|null);

        /** MsgMcrGetJoinedRoomInfoList s. */
        public s?: (NetMessage.MsgMcrGetJoinedRoomInfoList.IS|null);

        /**
         * Creates a new MsgMcrGetJoinedRoomInfoList instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMcrGetJoinedRoomInfoList instance
         */
        public static create(properties?: NetMessage.IMsgMcrGetJoinedRoomInfoList): NetMessage.MsgMcrGetJoinedRoomInfoList;

        /**
         * Encodes the specified MsgMcrGetJoinedRoomInfoList message. Does not implicitly {@link NetMessage.MsgMcrGetJoinedRoomInfoList.verify|verify} messages.
         * @param message MsgMcrGetJoinedRoomInfoList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMcrGetJoinedRoomInfoList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMcrGetJoinedRoomInfoList message, length delimited. Does not implicitly {@link NetMessage.MsgMcrGetJoinedRoomInfoList.verify|verify} messages.
         * @param message MsgMcrGetJoinedRoomInfoList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMcrGetJoinedRoomInfoList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMcrGetJoinedRoomInfoList message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMcrGetJoinedRoomInfoList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrGetJoinedRoomInfoList;

        /**
         * Decodes a MsgMcrGetJoinedRoomInfoList message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMcrGetJoinedRoomInfoList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrGetJoinedRoomInfoList;

        /**
         * Verifies a MsgMcrGetJoinedRoomInfoList message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMcrGetJoinedRoomInfoList message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMcrGetJoinedRoomInfoList
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrGetJoinedRoomInfoList;

        /**
         * Creates a plain object from a MsgMcrGetJoinedRoomInfoList message. Also converts values to other types if specified.
         * @param message MsgMcrGetJoinedRoomInfoList
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMcrGetJoinedRoomInfoList, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMcrGetJoinedRoomInfoList to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMcrGetJoinedRoomInfoList {

        /** Properties of a C. */
        interface IC {
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcrGetJoinedRoomInfoList.IC);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMcrGetJoinedRoomInfoList.IC): NetMessage.MsgMcrGetJoinedRoomInfoList.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMcrGetJoinedRoomInfoList.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcrGetJoinedRoomInfoList.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMcrGetJoinedRoomInfoList.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcrGetJoinedRoomInfoList.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrGetJoinedRoomInfoList.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrGetJoinedRoomInfoList.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrGetJoinedRoomInfoList.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcrGetJoinedRoomInfoList.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S roomInfoList */
            roomInfoList?: (MultiCustomRoom.IMcrRoomInfo[]|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcrGetJoinedRoomInfoList.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S roomInfoList. */
            public roomInfoList: MultiCustomRoom.IMcrRoomInfo[];

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMcrGetJoinedRoomInfoList.IS): NetMessage.MsgMcrGetJoinedRoomInfoList.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMcrGetJoinedRoomInfoList.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcrGetJoinedRoomInfoList.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMcrGetJoinedRoomInfoList.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcrGetJoinedRoomInfoList.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrGetJoinedRoomInfoList.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrGetJoinedRoomInfoList.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrGetJoinedRoomInfoList.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcrGetJoinedRoomInfoList.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMcrGetRoomInfo. */
    interface IMsgMcrGetRoomInfo {

        /** MsgMcrGetRoomInfo c */
        c?: (NetMessage.MsgMcrGetRoomInfo.IC|null);

        /** MsgMcrGetRoomInfo s */
        s?: (NetMessage.MsgMcrGetRoomInfo.IS|null);
    }

    /** Represents a MsgMcrGetRoomInfo. */
    class MsgMcrGetRoomInfo implements IMsgMcrGetRoomInfo {

        /**
         * Constructs a new MsgMcrGetRoomInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMcrGetRoomInfo);

        /** MsgMcrGetRoomInfo c. */
        public c?: (NetMessage.MsgMcrGetRoomInfo.IC|null);

        /** MsgMcrGetRoomInfo s. */
        public s?: (NetMessage.MsgMcrGetRoomInfo.IS|null);

        /**
         * Creates a new MsgMcrGetRoomInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMcrGetRoomInfo instance
         */
        public static create(properties?: NetMessage.IMsgMcrGetRoomInfo): NetMessage.MsgMcrGetRoomInfo;

        /**
         * Encodes the specified MsgMcrGetRoomInfo message. Does not implicitly {@link NetMessage.MsgMcrGetRoomInfo.verify|verify} messages.
         * @param message MsgMcrGetRoomInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMcrGetRoomInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMcrGetRoomInfo message, length delimited. Does not implicitly {@link NetMessage.MsgMcrGetRoomInfo.verify|verify} messages.
         * @param message MsgMcrGetRoomInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMcrGetRoomInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMcrGetRoomInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMcrGetRoomInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrGetRoomInfo;

        /**
         * Decodes a MsgMcrGetRoomInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMcrGetRoomInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrGetRoomInfo;

        /**
         * Verifies a MsgMcrGetRoomInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMcrGetRoomInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMcrGetRoomInfo
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrGetRoomInfo;

        /**
         * Creates a plain object from a MsgMcrGetRoomInfo message. Also converts values to other types if specified.
         * @param message MsgMcrGetRoomInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMcrGetRoomInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMcrGetRoomInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMcrGetRoomInfo {

        /** Properties of a C. */
        interface IC {

            /** C roomId */
            roomId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcrGetRoomInfo.IC);

            /** C roomId. */
            public roomId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMcrGetRoomInfo.IC): NetMessage.MsgMcrGetRoomInfo.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMcrGetRoomInfo.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcrGetRoomInfo.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMcrGetRoomInfo.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcrGetRoomInfo.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrGetRoomInfo.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrGetRoomInfo.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrGetRoomInfo.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcrGetRoomInfo.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S roomId */
            roomId?: (number|null);

            /** S roomInfo */
            roomInfo?: (MultiCustomRoom.IMcrRoomInfo|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcrGetRoomInfo.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S roomId. */
            public roomId: number;

            /** S roomInfo. */
            public roomInfo?: (MultiCustomRoom.IMcrRoomInfo|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMcrGetRoomInfo.IS): NetMessage.MsgMcrGetRoomInfo.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMcrGetRoomInfo.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcrGetRoomInfo.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMcrGetRoomInfo.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcrGetRoomInfo.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrGetRoomInfo.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrGetRoomInfo.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrGetRoomInfo.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcrGetRoomInfo.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMcrGetUnjoinedRoomInfoList. */
    interface IMsgMcrGetUnjoinedRoomInfoList {

        /** MsgMcrGetUnjoinedRoomInfoList c */
        c?: (NetMessage.MsgMcrGetUnjoinedRoomInfoList.IC|null);

        /** MsgMcrGetUnjoinedRoomInfoList s */
        s?: (NetMessage.MsgMcrGetUnjoinedRoomInfoList.IS|null);
    }

    /** Represents a MsgMcrGetUnjoinedRoomInfoList. */
    class MsgMcrGetUnjoinedRoomInfoList implements IMsgMcrGetUnjoinedRoomInfoList {

        /**
         * Constructs a new MsgMcrGetUnjoinedRoomInfoList.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMcrGetUnjoinedRoomInfoList);

        /** MsgMcrGetUnjoinedRoomInfoList c. */
        public c?: (NetMessage.MsgMcrGetUnjoinedRoomInfoList.IC|null);

        /** MsgMcrGetUnjoinedRoomInfoList s. */
        public s?: (NetMessage.MsgMcrGetUnjoinedRoomInfoList.IS|null);

        /**
         * Creates a new MsgMcrGetUnjoinedRoomInfoList instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMcrGetUnjoinedRoomInfoList instance
         */
        public static create(properties?: NetMessage.IMsgMcrGetUnjoinedRoomInfoList): NetMessage.MsgMcrGetUnjoinedRoomInfoList;

        /**
         * Encodes the specified MsgMcrGetUnjoinedRoomInfoList message. Does not implicitly {@link NetMessage.MsgMcrGetUnjoinedRoomInfoList.verify|verify} messages.
         * @param message MsgMcrGetUnjoinedRoomInfoList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMcrGetUnjoinedRoomInfoList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMcrGetUnjoinedRoomInfoList message, length delimited. Does not implicitly {@link NetMessage.MsgMcrGetUnjoinedRoomInfoList.verify|verify} messages.
         * @param message MsgMcrGetUnjoinedRoomInfoList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMcrGetUnjoinedRoomInfoList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMcrGetUnjoinedRoomInfoList message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMcrGetUnjoinedRoomInfoList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrGetUnjoinedRoomInfoList;

        /**
         * Decodes a MsgMcrGetUnjoinedRoomInfoList message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMcrGetUnjoinedRoomInfoList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrGetUnjoinedRoomInfoList;

        /**
         * Verifies a MsgMcrGetUnjoinedRoomInfoList message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMcrGetUnjoinedRoomInfoList message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMcrGetUnjoinedRoomInfoList
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrGetUnjoinedRoomInfoList;

        /**
         * Creates a plain object from a MsgMcrGetUnjoinedRoomInfoList message. Also converts values to other types if specified.
         * @param message MsgMcrGetUnjoinedRoomInfoList
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMcrGetUnjoinedRoomInfoList, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMcrGetUnjoinedRoomInfoList to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMcrGetUnjoinedRoomInfoList {

        /** Properties of a C. */
        interface IC {
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcrGetUnjoinedRoomInfoList.IC);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMcrGetUnjoinedRoomInfoList.IC): NetMessage.MsgMcrGetUnjoinedRoomInfoList.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMcrGetUnjoinedRoomInfoList.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcrGetUnjoinedRoomInfoList.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMcrGetUnjoinedRoomInfoList.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcrGetUnjoinedRoomInfoList.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrGetUnjoinedRoomInfoList.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrGetUnjoinedRoomInfoList.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrGetUnjoinedRoomInfoList.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcrGetUnjoinedRoomInfoList.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S roomInfoList */
            roomInfoList?: (MultiCustomRoom.IMcrRoomInfo[]|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcrGetUnjoinedRoomInfoList.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S roomInfoList. */
            public roomInfoList: MultiCustomRoom.IMcrRoomInfo[];

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMcrGetUnjoinedRoomInfoList.IS): NetMessage.MsgMcrGetUnjoinedRoomInfoList.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMcrGetUnjoinedRoomInfoList.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcrGetUnjoinedRoomInfoList.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMcrGetUnjoinedRoomInfoList.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcrGetUnjoinedRoomInfoList.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrGetUnjoinedRoomInfoList.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrGetUnjoinedRoomInfoList.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrGetUnjoinedRoomInfoList.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcrGetUnjoinedRoomInfoList.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMcrJoinRoom. */
    interface IMsgMcrJoinRoom {

        /** MsgMcrJoinRoom c */
        c?: (NetMessage.MsgMcrJoinRoom.IC|null);

        /** MsgMcrJoinRoom s */
        s?: (NetMessage.MsgMcrJoinRoom.IS|null);
    }

    /** Represents a MsgMcrJoinRoom. */
    class MsgMcrJoinRoom implements IMsgMcrJoinRoom {

        /**
         * Constructs a new MsgMcrJoinRoom.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMcrJoinRoom);

        /** MsgMcrJoinRoom c. */
        public c?: (NetMessage.MsgMcrJoinRoom.IC|null);

        /** MsgMcrJoinRoom s. */
        public s?: (NetMessage.MsgMcrJoinRoom.IS|null);

        /**
         * Creates a new MsgMcrJoinRoom instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMcrJoinRoom instance
         */
        public static create(properties?: NetMessage.IMsgMcrJoinRoom): NetMessage.MsgMcrJoinRoom;

        /**
         * Encodes the specified MsgMcrJoinRoom message. Does not implicitly {@link NetMessage.MsgMcrJoinRoom.verify|verify} messages.
         * @param message MsgMcrJoinRoom message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMcrJoinRoom, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMcrJoinRoom message, length delimited. Does not implicitly {@link NetMessage.MsgMcrJoinRoom.verify|verify} messages.
         * @param message MsgMcrJoinRoom message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMcrJoinRoom, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMcrJoinRoom message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMcrJoinRoom
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrJoinRoom;

        /**
         * Decodes a MsgMcrJoinRoom message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMcrJoinRoom
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrJoinRoom;

        /**
         * Verifies a MsgMcrJoinRoom message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMcrJoinRoom message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMcrJoinRoom
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrJoinRoom;

        /**
         * Creates a plain object from a MsgMcrJoinRoom message. Also converts values to other types if specified.
         * @param message MsgMcrJoinRoom
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMcrJoinRoom, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMcrJoinRoom to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMcrJoinRoom {

        /** Properties of a C. */
        interface IC {

            /** C roomId */
            roomId?: (number|null);

            /** C playerIndex */
            playerIndex?: (number|null);

            /** C coId */
            coId?: (number|null);

            /** C isReady */
            isReady?: (boolean|null);

            /** C unitAndTileSkinId */
            unitAndTileSkinId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcrJoinRoom.IC);

            /** C roomId. */
            public roomId: number;

            /** C playerIndex. */
            public playerIndex: number;

            /** C coId. */
            public coId: number;

            /** C isReady. */
            public isReady: boolean;

            /** C unitAndTileSkinId. */
            public unitAndTileSkinId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMcrJoinRoom.IC): NetMessage.MsgMcrJoinRoom.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMcrJoinRoom.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcrJoinRoom.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMcrJoinRoom.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcrJoinRoom.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrJoinRoom.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrJoinRoom.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrJoinRoom.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcrJoinRoom.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcrJoinRoom.IS);

            /** S errorCode. */
            public errorCode: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMcrJoinRoom.IS): NetMessage.MsgMcrJoinRoom.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMcrJoinRoom.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcrJoinRoom.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMcrJoinRoom.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcrJoinRoom.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrJoinRoom.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrJoinRoom.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrJoinRoom.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcrJoinRoom.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMcrDeleteRoom. */
    interface IMsgMcrDeleteRoom {

        /** MsgMcrDeleteRoom c */
        c?: (NetMessage.MsgMcrDeleteRoom.IC|null);

        /** MsgMcrDeleteRoom s */
        s?: (NetMessage.MsgMcrDeleteRoom.IS|null);
    }

    /** Represents a MsgMcrDeleteRoom. */
    class MsgMcrDeleteRoom implements IMsgMcrDeleteRoom {

        /**
         * Constructs a new MsgMcrDeleteRoom.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMcrDeleteRoom);

        /** MsgMcrDeleteRoom c. */
        public c?: (NetMessage.MsgMcrDeleteRoom.IC|null);

        /** MsgMcrDeleteRoom s. */
        public s?: (NetMessage.MsgMcrDeleteRoom.IS|null);

        /**
         * Creates a new MsgMcrDeleteRoom instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMcrDeleteRoom instance
         */
        public static create(properties?: NetMessage.IMsgMcrDeleteRoom): NetMessage.MsgMcrDeleteRoom;

        /**
         * Encodes the specified MsgMcrDeleteRoom message. Does not implicitly {@link NetMessage.MsgMcrDeleteRoom.verify|verify} messages.
         * @param message MsgMcrDeleteRoom message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMcrDeleteRoom, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMcrDeleteRoom message, length delimited. Does not implicitly {@link NetMessage.MsgMcrDeleteRoom.verify|verify} messages.
         * @param message MsgMcrDeleteRoom message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMcrDeleteRoom, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMcrDeleteRoom message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMcrDeleteRoom
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrDeleteRoom;

        /**
         * Decodes a MsgMcrDeleteRoom message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMcrDeleteRoom
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrDeleteRoom;

        /**
         * Verifies a MsgMcrDeleteRoom message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMcrDeleteRoom message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMcrDeleteRoom
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrDeleteRoom;

        /**
         * Creates a plain object from a MsgMcrDeleteRoom message. Also converts values to other types if specified.
         * @param message MsgMcrDeleteRoom
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMcrDeleteRoom, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMcrDeleteRoom to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMcrDeleteRoom {

        /** Properties of a C. */
        interface IC {

            /** C roomId */
            roomId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcrDeleteRoom.IC);

            /** C roomId. */
            public roomId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMcrDeleteRoom.IC): NetMessage.MsgMcrDeleteRoom.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMcrDeleteRoom.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcrDeleteRoom.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMcrDeleteRoom.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcrDeleteRoom.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrDeleteRoom.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrDeleteRoom.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrDeleteRoom.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcrDeleteRoom.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S roomId */
            roomId?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcrDeleteRoom.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S roomId. */
            public roomId: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMcrDeleteRoom.IS): NetMessage.MsgMcrDeleteRoom.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMcrDeleteRoom.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcrDeleteRoom.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMcrDeleteRoom.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcrDeleteRoom.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrDeleteRoom.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrDeleteRoom.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrDeleteRoom.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcrDeleteRoom.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMcrSetReady. */
    interface IMsgMcrSetReady {

        /** MsgMcrSetReady c */
        c?: (NetMessage.MsgMcrSetReady.IC|null);

        /** MsgMcrSetReady s */
        s?: (NetMessage.MsgMcrSetReady.IS|null);
    }

    /** Represents a MsgMcrSetReady. */
    class MsgMcrSetReady implements IMsgMcrSetReady {

        /**
         * Constructs a new MsgMcrSetReady.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMcrSetReady);

        /** MsgMcrSetReady c. */
        public c?: (NetMessage.MsgMcrSetReady.IC|null);

        /** MsgMcrSetReady s. */
        public s?: (NetMessage.MsgMcrSetReady.IS|null);

        /**
         * Creates a new MsgMcrSetReady instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMcrSetReady instance
         */
        public static create(properties?: NetMessage.IMsgMcrSetReady): NetMessage.MsgMcrSetReady;

        /**
         * Encodes the specified MsgMcrSetReady message. Does not implicitly {@link NetMessage.MsgMcrSetReady.verify|verify} messages.
         * @param message MsgMcrSetReady message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMcrSetReady, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMcrSetReady message, length delimited. Does not implicitly {@link NetMessage.MsgMcrSetReady.verify|verify} messages.
         * @param message MsgMcrSetReady message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMcrSetReady, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMcrSetReady message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMcrSetReady
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrSetReady;

        /**
         * Decodes a MsgMcrSetReady message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMcrSetReady
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrSetReady;

        /**
         * Verifies a MsgMcrSetReady message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMcrSetReady message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMcrSetReady
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrSetReady;

        /**
         * Creates a plain object from a MsgMcrSetReady message. Also converts values to other types if specified.
         * @param message MsgMcrSetReady
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMcrSetReady, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMcrSetReady to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMcrSetReady {

        /** Properties of a C. */
        interface IC {

            /** C roomId */
            roomId?: (number|null);

            /** C isReady */
            isReady?: (boolean|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcrSetReady.IC);

            /** C roomId. */
            public roomId: number;

            /** C isReady. */
            public isReady: boolean;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMcrSetReady.IC): NetMessage.MsgMcrSetReady.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMcrSetReady.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcrSetReady.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMcrSetReady.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcrSetReady.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrSetReady.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrSetReady.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrSetReady.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcrSetReady.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcrSetReady.IS);

            /** S errorCode. */
            public errorCode: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMcrSetReady.IS): NetMessage.MsgMcrSetReady.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMcrSetReady.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcrSetReady.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMcrSetReady.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcrSetReady.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrSetReady.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrSetReady.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrSetReady.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcrSetReady.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMcrDeletePlayer. */
    interface IMsgMcrDeletePlayer {

        /** MsgMcrDeletePlayer c */
        c?: (NetMessage.MsgMcrDeletePlayer.IC|null);

        /** MsgMcrDeletePlayer s */
        s?: (NetMessage.MsgMcrDeletePlayer.IS|null);
    }

    /** Represents a MsgMcrDeletePlayer. */
    class MsgMcrDeletePlayer implements IMsgMcrDeletePlayer {

        /**
         * Constructs a new MsgMcrDeletePlayer.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMcrDeletePlayer);

        /** MsgMcrDeletePlayer c. */
        public c?: (NetMessage.MsgMcrDeletePlayer.IC|null);

        /** MsgMcrDeletePlayer s. */
        public s?: (NetMessage.MsgMcrDeletePlayer.IS|null);

        /**
         * Creates a new MsgMcrDeletePlayer instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMcrDeletePlayer instance
         */
        public static create(properties?: NetMessage.IMsgMcrDeletePlayer): NetMessage.MsgMcrDeletePlayer;

        /**
         * Encodes the specified MsgMcrDeletePlayer message. Does not implicitly {@link NetMessage.MsgMcrDeletePlayer.verify|verify} messages.
         * @param message MsgMcrDeletePlayer message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMcrDeletePlayer, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMcrDeletePlayer message, length delimited. Does not implicitly {@link NetMessage.MsgMcrDeletePlayer.verify|verify} messages.
         * @param message MsgMcrDeletePlayer message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMcrDeletePlayer, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMcrDeletePlayer message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMcrDeletePlayer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrDeletePlayer;

        /**
         * Decodes a MsgMcrDeletePlayer message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMcrDeletePlayer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrDeletePlayer;

        /**
         * Verifies a MsgMcrDeletePlayer message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMcrDeletePlayer message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMcrDeletePlayer
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrDeletePlayer;

        /**
         * Creates a plain object from a MsgMcrDeletePlayer message. Also converts values to other types if specified.
         * @param message MsgMcrDeletePlayer
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMcrDeletePlayer, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMcrDeletePlayer to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMcrDeletePlayer {

        /** Properties of a C. */
        interface IC {

            /** C roomId */
            roomId?: (number|null);

            /** C playerIndex */
            playerIndex?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcrDeletePlayer.IC);

            /** C roomId. */
            public roomId: number;

            /** C playerIndex. */
            public playerIndex: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMcrDeletePlayer.IC): NetMessage.MsgMcrDeletePlayer.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMcrDeletePlayer.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcrDeletePlayer.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMcrDeletePlayer.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcrDeletePlayer.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrDeletePlayer.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrDeletePlayer.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrDeletePlayer.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcrDeletePlayer.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcrDeletePlayer.IS);

            /** S errorCode. */
            public errorCode: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMcrDeletePlayer.IS): NetMessage.MsgMcrDeletePlayer.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMcrDeletePlayer.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcrDeletePlayer.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMcrDeletePlayer.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcrDeletePlayer.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrDeletePlayer.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrDeletePlayer.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrDeletePlayer.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcrDeletePlayer.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMcrSetSelfSettings. */
    interface IMsgMcrSetSelfSettings {

        /** MsgMcrSetSelfSettings c */
        c?: (NetMessage.MsgMcrSetSelfSettings.IC|null);

        /** MsgMcrSetSelfSettings s */
        s?: (NetMessage.MsgMcrSetSelfSettings.IS|null);
    }

    /** Represents a MsgMcrSetSelfSettings. */
    class MsgMcrSetSelfSettings implements IMsgMcrSetSelfSettings {

        /**
         * Constructs a new MsgMcrSetSelfSettings.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMcrSetSelfSettings);

        /** MsgMcrSetSelfSettings c. */
        public c?: (NetMessage.MsgMcrSetSelfSettings.IC|null);

        /** MsgMcrSetSelfSettings s. */
        public s?: (NetMessage.MsgMcrSetSelfSettings.IS|null);

        /**
         * Creates a new MsgMcrSetSelfSettings instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMcrSetSelfSettings instance
         */
        public static create(properties?: NetMessage.IMsgMcrSetSelfSettings): NetMessage.MsgMcrSetSelfSettings;

        /**
         * Encodes the specified MsgMcrSetSelfSettings message. Does not implicitly {@link NetMessage.MsgMcrSetSelfSettings.verify|verify} messages.
         * @param message MsgMcrSetSelfSettings message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMcrSetSelfSettings, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMcrSetSelfSettings message, length delimited. Does not implicitly {@link NetMessage.MsgMcrSetSelfSettings.verify|verify} messages.
         * @param message MsgMcrSetSelfSettings message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMcrSetSelfSettings, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMcrSetSelfSettings message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMcrSetSelfSettings
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrSetSelfSettings;

        /**
         * Decodes a MsgMcrSetSelfSettings message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMcrSetSelfSettings
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrSetSelfSettings;

        /**
         * Verifies a MsgMcrSetSelfSettings message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMcrSetSelfSettings message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMcrSetSelfSettings
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrSetSelfSettings;

        /**
         * Creates a plain object from a MsgMcrSetSelfSettings message. Also converts values to other types if specified.
         * @param message MsgMcrSetSelfSettings
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMcrSetSelfSettings, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMcrSetSelfSettings to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMcrSetSelfSettings {

        /** Properties of a C. */
        interface IC {

            /** C roomId */
            roomId?: (number|null);

            /** C playerIndex */
            playerIndex?: (number|null);

            /** C coId */
            coId?: (number|null);

            /** C unitAndTileSkinId */
            unitAndTileSkinId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcrSetSelfSettings.IC);

            /** C roomId. */
            public roomId: number;

            /** C playerIndex. */
            public playerIndex: number;

            /** C coId. */
            public coId: number;

            /** C unitAndTileSkinId. */
            public unitAndTileSkinId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMcrSetSelfSettings.IC): NetMessage.MsgMcrSetSelfSettings.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMcrSetSelfSettings.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcrSetSelfSettings.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMcrSetSelfSettings.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcrSetSelfSettings.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrSetSelfSettings.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrSetSelfSettings.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrSetSelfSettings.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcrSetSelfSettings.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcrSetSelfSettings.IS);

            /** S errorCode. */
            public errorCode: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMcrSetSelfSettings.IS): NetMessage.MsgMcrSetSelfSettings.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMcrSetSelfSettings.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcrSetSelfSettings.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMcrSetSelfSettings.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcrSetSelfSettings.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrSetSelfSettings.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrSetSelfSettings.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrSetSelfSettings.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcrSetSelfSettings.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMcrSetWarRule. */
    interface IMsgMcrSetWarRule {

        /** MsgMcrSetWarRule c */
        c?: (NetMessage.MsgMcrSetWarRule.IC|null);

        /** MsgMcrSetWarRule s */
        s?: (NetMessage.MsgMcrSetWarRule.IS|null);
    }

    /** Represents a MsgMcrSetWarRule. */
    class MsgMcrSetWarRule implements IMsgMcrSetWarRule {

        /**
         * Constructs a new MsgMcrSetWarRule.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMcrSetWarRule);

        /** MsgMcrSetWarRule c. */
        public c?: (NetMessage.MsgMcrSetWarRule.IC|null);

        /** MsgMcrSetWarRule s. */
        public s?: (NetMessage.MsgMcrSetWarRule.IS|null);

        /**
         * Creates a new MsgMcrSetWarRule instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMcrSetWarRule instance
         */
        public static create(properties?: NetMessage.IMsgMcrSetWarRule): NetMessage.MsgMcrSetWarRule;

        /**
         * Encodes the specified MsgMcrSetWarRule message. Does not implicitly {@link NetMessage.MsgMcrSetWarRule.verify|verify} messages.
         * @param message MsgMcrSetWarRule message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMcrSetWarRule, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMcrSetWarRule message, length delimited. Does not implicitly {@link NetMessage.MsgMcrSetWarRule.verify|verify} messages.
         * @param message MsgMcrSetWarRule message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMcrSetWarRule, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMcrSetWarRule message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMcrSetWarRule
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrSetWarRule;

        /**
         * Decodes a MsgMcrSetWarRule message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMcrSetWarRule
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrSetWarRule;

        /**
         * Verifies a MsgMcrSetWarRule message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMcrSetWarRule message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMcrSetWarRule
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrSetWarRule;

        /**
         * Creates a plain object from a MsgMcrSetWarRule message. Also converts values to other types if specified.
         * @param message MsgMcrSetWarRule
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMcrSetWarRule, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMcrSetWarRule to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMcrSetWarRule {

        /** Properties of a C. */
        interface IC {

            /** C roomId */
            roomId?: (number|null);

            /** C presetWarRuleId */
            presetWarRuleId?: (number|null);

            /** C warRule */
            warRule?: (WarRule.IWarRule|null);

            /** C bootTimerParams */
            bootTimerParams?: (number[]|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcrSetWarRule.IC);

            /** C roomId. */
            public roomId: number;

            /** C presetWarRuleId. */
            public presetWarRuleId: number;

            /** C warRule. */
            public warRule?: (WarRule.IWarRule|null);

            /** C bootTimerParams. */
            public bootTimerParams: number[];

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMcrSetWarRule.IC): NetMessage.MsgMcrSetWarRule.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMcrSetWarRule.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcrSetWarRule.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMcrSetWarRule.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcrSetWarRule.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrSetWarRule.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrSetWarRule.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrSetWarRule.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcrSetWarRule.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S roomId */
            roomId?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcrSetWarRule.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S roomId. */
            public roomId: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMcrSetWarRule.IS): NetMessage.MsgMcrSetWarRule.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMcrSetWarRule.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcrSetWarRule.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMcrSetWarRule.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcrSetWarRule.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrSetWarRule.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrSetWarRule.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrSetWarRule.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcrSetWarRule.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMcrStartWar. */
    interface IMsgMcrStartWar {

        /** MsgMcrStartWar c */
        c?: (NetMessage.MsgMcrStartWar.IC|null);

        /** MsgMcrStartWar s */
        s?: (NetMessage.MsgMcrStartWar.IS|null);
    }

    /** Represents a MsgMcrStartWar. */
    class MsgMcrStartWar implements IMsgMcrStartWar {

        /**
         * Constructs a new MsgMcrStartWar.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMcrStartWar);

        /** MsgMcrStartWar c. */
        public c?: (NetMessage.MsgMcrStartWar.IC|null);

        /** MsgMcrStartWar s. */
        public s?: (NetMessage.MsgMcrStartWar.IS|null);

        /**
         * Creates a new MsgMcrStartWar instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMcrStartWar instance
         */
        public static create(properties?: NetMessage.IMsgMcrStartWar): NetMessage.MsgMcrStartWar;

        /**
         * Encodes the specified MsgMcrStartWar message. Does not implicitly {@link NetMessage.MsgMcrStartWar.verify|verify} messages.
         * @param message MsgMcrStartWar message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMcrStartWar, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMcrStartWar message, length delimited. Does not implicitly {@link NetMessage.MsgMcrStartWar.verify|verify} messages.
         * @param message MsgMcrStartWar message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMcrStartWar, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMcrStartWar message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMcrStartWar
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrStartWar;

        /**
         * Decodes a MsgMcrStartWar message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMcrStartWar
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrStartWar;

        /**
         * Verifies a MsgMcrStartWar message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMcrStartWar message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMcrStartWar
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrStartWar;

        /**
         * Creates a plain object from a MsgMcrStartWar message. Also converts values to other types if specified.
         * @param message MsgMcrStartWar
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMcrStartWar, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMcrStartWar to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMcrStartWar {

        /** Properties of a C. */
        interface IC {

            /** C roomId */
            roomId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcrStartWar.IC);

            /** C roomId. */
            public roomId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMcrStartWar.IC): NetMessage.MsgMcrStartWar.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMcrStartWar.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcrStartWar.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMcrStartWar.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcrStartWar.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrStartWar.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrStartWar.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrStartWar.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcrStartWar.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S roomId */
            roomId?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcrStartWar.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S roomId. */
            public roomId: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMcrStartWar.IS): NetMessage.MsgMcrStartWar.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMcrStartWar.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcrStartWar.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMcrStartWar.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcrStartWar.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrStartWar.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrStartWar.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrStartWar.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcrStartWar.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMcwCommonGetWarInfoList. */
    interface IMsgMcwCommonGetWarInfoList {

        /** MsgMcwCommonGetWarInfoList c */
        c?: (NetMessage.MsgMcwCommonGetWarInfoList.IC|null);

        /** MsgMcwCommonGetWarInfoList s */
        s?: (NetMessage.MsgMcwCommonGetWarInfoList.IS|null);
    }

    /** Represents a MsgMcwCommonGetWarInfoList. */
    class MsgMcwCommonGetWarInfoList implements IMsgMcwCommonGetWarInfoList {

        /**
         * Constructs a new MsgMcwCommonGetWarInfoList.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMcwCommonGetWarInfoList);

        /** MsgMcwCommonGetWarInfoList c. */
        public c?: (NetMessage.MsgMcwCommonGetWarInfoList.IC|null);

        /** MsgMcwCommonGetWarInfoList s. */
        public s?: (NetMessage.MsgMcwCommonGetWarInfoList.IS|null);

        /**
         * Creates a new MsgMcwCommonGetWarInfoList instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMcwCommonGetWarInfoList instance
         */
        public static create(properties?: NetMessage.IMsgMcwCommonGetWarInfoList): NetMessage.MsgMcwCommonGetWarInfoList;

        /**
         * Encodes the specified MsgMcwCommonGetWarInfoList message. Does not implicitly {@link NetMessage.MsgMcwCommonGetWarInfoList.verify|verify} messages.
         * @param message MsgMcwCommonGetWarInfoList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMcwCommonGetWarInfoList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMcwCommonGetWarInfoList message, length delimited. Does not implicitly {@link NetMessage.MsgMcwCommonGetWarInfoList.verify|verify} messages.
         * @param message MsgMcwCommonGetWarInfoList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMcwCommonGetWarInfoList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMcwCommonGetWarInfoList message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMcwCommonGetWarInfoList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwCommonGetWarInfoList;

        /**
         * Decodes a MsgMcwCommonGetWarInfoList message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMcwCommonGetWarInfoList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwCommonGetWarInfoList;

        /**
         * Verifies a MsgMcwCommonGetWarInfoList message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMcwCommonGetWarInfoList message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMcwCommonGetWarInfoList
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwCommonGetWarInfoList;

        /**
         * Creates a plain object from a MsgMcwCommonGetWarInfoList message. Also converts values to other types if specified.
         * @param message MsgMcwCommonGetWarInfoList
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMcwCommonGetWarInfoList, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMcwCommonGetWarInfoList to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMcwCommonGetWarInfoList {

        /** Properties of a C. */
        interface IC {
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcwCommonGetWarInfoList.IC);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMcwCommonGetWarInfoList.IC): NetMessage.MsgMcwCommonGetWarInfoList.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMcwCommonGetWarInfoList.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcwCommonGetWarInfoList.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMcwCommonGetWarInfoList.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcwCommonGetWarInfoList.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwCommonGetWarInfoList.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwCommonGetWarInfoList.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwCommonGetWarInfoList.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcwCommonGetWarInfoList.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S infos */
            infos?: (MultiCustomWar.IMcwWarInfo[]|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcwCommonGetWarInfoList.IS);

            /** S infos. */
            public infos: MultiCustomWar.IMcwWarInfo[];

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMcwCommonGetWarInfoList.IS): NetMessage.MsgMcwCommonGetWarInfoList.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMcwCommonGetWarInfoList.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcwCommonGetWarInfoList.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMcwCommonGetWarInfoList.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcwCommonGetWarInfoList.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwCommonGetWarInfoList.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwCommonGetWarInfoList.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwCommonGetWarInfoList.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcwCommonGetWarInfoList.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMcwCommonContinueWar. */
    interface IMsgMcwCommonContinueWar {

        /** MsgMcwCommonContinueWar c */
        c?: (NetMessage.MsgMcwCommonContinueWar.IC|null);

        /** MsgMcwCommonContinueWar s */
        s?: (NetMessage.MsgMcwCommonContinueWar.IS|null);
    }

    /** Represents a MsgMcwCommonContinueWar. */
    class MsgMcwCommonContinueWar implements IMsgMcwCommonContinueWar {

        /**
         * Constructs a new MsgMcwCommonContinueWar.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMcwCommonContinueWar);

        /** MsgMcwCommonContinueWar c. */
        public c?: (NetMessage.MsgMcwCommonContinueWar.IC|null);

        /** MsgMcwCommonContinueWar s. */
        public s?: (NetMessage.MsgMcwCommonContinueWar.IS|null);

        /**
         * Creates a new MsgMcwCommonContinueWar instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMcwCommonContinueWar instance
         */
        public static create(properties?: NetMessage.IMsgMcwCommonContinueWar): NetMessage.MsgMcwCommonContinueWar;

        /**
         * Encodes the specified MsgMcwCommonContinueWar message. Does not implicitly {@link NetMessage.MsgMcwCommonContinueWar.verify|verify} messages.
         * @param message MsgMcwCommonContinueWar message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMcwCommonContinueWar, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMcwCommonContinueWar message, length delimited. Does not implicitly {@link NetMessage.MsgMcwCommonContinueWar.verify|verify} messages.
         * @param message MsgMcwCommonContinueWar message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMcwCommonContinueWar, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMcwCommonContinueWar message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMcwCommonContinueWar
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwCommonContinueWar;

        /**
         * Decodes a MsgMcwCommonContinueWar message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMcwCommonContinueWar
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwCommonContinueWar;

        /**
         * Verifies a MsgMcwCommonContinueWar message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMcwCommonContinueWar message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMcwCommonContinueWar
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwCommonContinueWar;

        /**
         * Creates a plain object from a MsgMcwCommonContinueWar message. Also converts values to other types if specified.
         * @param message MsgMcwCommonContinueWar
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMcwCommonContinueWar, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMcwCommonContinueWar to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMcwCommonContinueWar {

        /** Properties of a C. */
        interface IC {

            /** C warId */
            warId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcwCommonContinueWar.IC);

            /** C warId. */
            public warId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMcwCommonContinueWar.IC): NetMessage.MsgMcwCommonContinueWar.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMcwCommonContinueWar.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcwCommonContinueWar.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMcwCommonContinueWar.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcwCommonContinueWar.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwCommonContinueWar.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwCommonContinueWar.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwCommonContinueWar.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcwCommonContinueWar.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S warId */
            warId?: (number|null);

            /** S war */
            war?: (WarSerialization.ISerialWar|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcwCommonContinueWar.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S warId. */
            public warId: number;

            /** S war. */
            public war?: (WarSerialization.ISerialWar|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMcwCommonContinueWar.IS): NetMessage.MsgMcwCommonContinueWar.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMcwCommonContinueWar.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcwCommonContinueWar.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMcwCommonContinueWar.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcwCommonContinueWar.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwCommonContinueWar.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwCommonContinueWar.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwCommonContinueWar.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcwCommonContinueWar.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMcwCommonSerializeWar. */
    interface IMsgMcwCommonSerializeWar {

        /** MsgMcwCommonSerializeWar c */
        c?: (NetMessage.MsgMcwCommonSerializeWar.IC|null);

        /** MsgMcwCommonSerializeWar s */
        s?: (NetMessage.MsgMcwCommonSerializeWar.IS|null);
    }

    /** Represents a MsgMcwCommonSerializeWar. */
    class MsgMcwCommonSerializeWar implements IMsgMcwCommonSerializeWar {

        /**
         * Constructs a new MsgMcwCommonSerializeWar.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMcwCommonSerializeWar);

        /** MsgMcwCommonSerializeWar c. */
        public c?: (NetMessage.MsgMcwCommonSerializeWar.IC|null);

        /** MsgMcwCommonSerializeWar s. */
        public s?: (NetMessage.MsgMcwCommonSerializeWar.IS|null);

        /**
         * Creates a new MsgMcwCommonSerializeWar instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMcwCommonSerializeWar instance
         */
        public static create(properties?: NetMessage.IMsgMcwCommonSerializeWar): NetMessage.MsgMcwCommonSerializeWar;

        /**
         * Encodes the specified MsgMcwCommonSerializeWar message. Does not implicitly {@link NetMessage.MsgMcwCommonSerializeWar.verify|verify} messages.
         * @param message MsgMcwCommonSerializeWar message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMcwCommonSerializeWar, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMcwCommonSerializeWar message, length delimited. Does not implicitly {@link NetMessage.MsgMcwCommonSerializeWar.verify|verify} messages.
         * @param message MsgMcwCommonSerializeWar message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMcwCommonSerializeWar, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMcwCommonSerializeWar message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMcwCommonSerializeWar
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwCommonSerializeWar;

        /**
         * Decodes a MsgMcwCommonSerializeWar message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMcwCommonSerializeWar
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwCommonSerializeWar;

        /**
         * Verifies a MsgMcwCommonSerializeWar message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMcwCommonSerializeWar message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMcwCommonSerializeWar
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwCommonSerializeWar;

        /**
         * Creates a plain object from a MsgMcwCommonSerializeWar message. Also converts values to other types if specified.
         * @param message MsgMcwCommonSerializeWar
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMcwCommonSerializeWar, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMcwCommonSerializeWar to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMcwCommonSerializeWar {

        /** Properties of a C. */
        interface IC {

            /** C warId */
            warId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcwCommonSerializeWar.IC);

            /** C warId. */
            public warId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMcwCommonSerializeWar.IC): NetMessage.MsgMcwCommonSerializeWar.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMcwCommonSerializeWar.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcwCommonSerializeWar.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMcwCommonSerializeWar.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcwCommonSerializeWar.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwCommonSerializeWar.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwCommonSerializeWar.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwCommonSerializeWar.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcwCommonSerializeWar.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S warId */
            warId?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcwCommonSerializeWar.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S warId. */
            public warId: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMcwCommonSerializeWar.IS): NetMessage.MsgMcwCommonSerializeWar.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMcwCommonSerializeWar.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcwCommonSerializeWar.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMcwCommonSerializeWar.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcwCommonSerializeWar.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwCommonSerializeWar.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwCommonSerializeWar.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwCommonSerializeWar.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcwCommonSerializeWar.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMcwCommonHandleBoot. */
    interface IMsgMcwCommonHandleBoot {

        /** MsgMcwCommonHandleBoot c */
        c?: (NetMessage.MsgMcwCommonHandleBoot.IC|null);

        /** MsgMcwCommonHandleBoot s */
        s?: (NetMessage.MsgMcwCommonHandleBoot.IS|null);
    }

    /** Represents a MsgMcwCommonHandleBoot. */
    class MsgMcwCommonHandleBoot implements IMsgMcwCommonHandleBoot {

        /**
         * Constructs a new MsgMcwCommonHandleBoot.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMcwCommonHandleBoot);

        /** MsgMcwCommonHandleBoot c. */
        public c?: (NetMessage.MsgMcwCommonHandleBoot.IC|null);

        /** MsgMcwCommonHandleBoot s. */
        public s?: (NetMessage.MsgMcwCommonHandleBoot.IS|null);

        /**
         * Creates a new MsgMcwCommonHandleBoot instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMcwCommonHandleBoot instance
         */
        public static create(properties?: NetMessage.IMsgMcwCommonHandleBoot): NetMessage.MsgMcwCommonHandleBoot;

        /**
         * Encodes the specified MsgMcwCommonHandleBoot message. Does not implicitly {@link NetMessage.MsgMcwCommonHandleBoot.verify|verify} messages.
         * @param message MsgMcwCommonHandleBoot message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMcwCommonHandleBoot, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMcwCommonHandleBoot message, length delimited. Does not implicitly {@link NetMessage.MsgMcwCommonHandleBoot.verify|verify} messages.
         * @param message MsgMcwCommonHandleBoot message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMcwCommonHandleBoot, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMcwCommonHandleBoot message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMcwCommonHandleBoot
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwCommonHandleBoot;

        /**
         * Decodes a MsgMcwCommonHandleBoot message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMcwCommonHandleBoot
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwCommonHandleBoot;

        /**
         * Verifies a MsgMcwCommonHandleBoot message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMcwCommonHandleBoot message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMcwCommonHandleBoot
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwCommonHandleBoot;

        /**
         * Creates a plain object from a MsgMcwCommonHandleBoot message. Also converts values to other types if specified.
         * @param message MsgMcwCommonHandleBoot
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMcwCommonHandleBoot, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMcwCommonHandleBoot to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMcwCommonHandleBoot {

        /** Properties of a C. */
        interface IC {

            /** C warId */
            warId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcwCommonHandleBoot.IC);

            /** C warId. */
            public warId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMcwCommonHandleBoot.IC): NetMessage.MsgMcwCommonHandleBoot.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMcwCommonHandleBoot.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcwCommonHandleBoot.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMcwCommonHandleBoot.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcwCommonHandleBoot.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwCommonHandleBoot.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwCommonHandleBoot.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwCommonHandleBoot.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcwCommonHandleBoot.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S warId */
            warId?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcwCommonHandleBoot.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S warId. */
            public warId: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMcwCommonHandleBoot.IS): NetMessage.MsgMcwCommonHandleBoot.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMcwCommonHandleBoot.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcwCommonHandleBoot.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMcwCommonHandleBoot.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcwCommonHandleBoot.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwCommonHandleBoot.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwCommonHandleBoot.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwCommonHandleBoot.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcwCommonHandleBoot.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMcwCommonBroadcastGameStart. */
    interface IMsgMcwCommonBroadcastGameStart {

        /** MsgMcwCommonBroadcastGameStart s */
        s?: (NetMessage.MsgMcwCommonBroadcastGameStart.IS|null);
    }

    /** Represents a MsgMcwCommonBroadcastGameStart. */
    class MsgMcwCommonBroadcastGameStart implements IMsgMcwCommonBroadcastGameStart {

        /**
         * Constructs a new MsgMcwCommonBroadcastGameStart.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMcwCommonBroadcastGameStart);

        /** MsgMcwCommonBroadcastGameStart s. */
        public s?: (NetMessage.MsgMcwCommonBroadcastGameStart.IS|null);

        /**
         * Creates a new MsgMcwCommonBroadcastGameStart instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMcwCommonBroadcastGameStart instance
         */
        public static create(properties?: NetMessage.IMsgMcwCommonBroadcastGameStart): NetMessage.MsgMcwCommonBroadcastGameStart;

        /**
         * Encodes the specified MsgMcwCommonBroadcastGameStart message. Does not implicitly {@link NetMessage.MsgMcwCommonBroadcastGameStart.verify|verify} messages.
         * @param message MsgMcwCommonBroadcastGameStart message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMcwCommonBroadcastGameStart, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMcwCommonBroadcastGameStart message, length delimited. Does not implicitly {@link NetMessage.MsgMcwCommonBroadcastGameStart.verify|verify} messages.
         * @param message MsgMcwCommonBroadcastGameStart message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMcwCommonBroadcastGameStart, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMcwCommonBroadcastGameStart message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMcwCommonBroadcastGameStart
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwCommonBroadcastGameStart;

        /**
         * Decodes a MsgMcwCommonBroadcastGameStart message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMcwCommonBroadcastGameStart
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwCommonBroadcastGameStart;

        /**
         * Verifies a MsgMcwCommonBroadcastGameStart message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMcwCommonBroadcastGameStart message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMcwCommonBroadcastGameStart
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwCommonBroadcastGameStart;

        /**
         * Creates a plain object from a MsgMcwCommonBroadcastGameStart message. Also converts values to other types if specified.
         * @param message MsgMcwCommonBroadcastGameStart
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMcwCommonBroadcastGameStart, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMcwCommonBroadcastGameStart to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMcwCommonBroadcastGameStart {

        /** Properties of a S. */
        interface IS {

            /** S warId */
            warId?: (number|null);

            /** S mapId */
            mapId?: (number|null);

            /** S playerInfoList */
            playerInfoList?: (Structure.IWarPlayerInfo[]|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcwCommonBroadcastGameStart.IS);

            /** S warId. */
            public warId: number;

            /** S mapId. */
            public mapId: number;

            /** S playerInfoList. */
            public playerInfoList: Structure.IWarPlayerInfo[];

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMcwCommonBroadcastGameStart.IS): NetMessage.MsgMcwCommonBroadcastGameStart.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMcwCommonBroadcastGameStart.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcwCommonBroadcastGameStart.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMcwCommonBroadcastGameStart.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcwCommonBroadcastGameStart.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwCommonBroadcastGameStart.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwCommonBroadcastGameStart.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwCommonBroadcastGameStart.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcwCommonBroadcastGameStart.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMcwCommonSyncWar. */
    interface IMsgMcwCommonSyncWar {

        /** MsgMcwCommonSyncWar c */
        c?: (NetMessage.MsgMcwCommonSyncWar.IC|null);

        /** MsgMcwCommonSyncWar s */
        s?: (NetMessage.MsgMcwCommonSyncWar.IS|null);
    }

    /** Represents a MsgMcwCommonSyncWar. */
    class MsgMcwCommonSyncWar implements IMsgMcwCommonSyncWar {

        /**
         * Constructs a new MsgMcwCommonSyncWar.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMcwCommonSyncWar);

        /** MsgMcwCommonSyncWar c. */
        public c?: (NetMessage.MsgMcwCommonSyncWar.IC|null);

        /** MsgMcwCommonSyncWar s. */
        public s?: (NetMessage.MsgMcwCommonSyncWar.IS|null);

        /**
         * Creates a new MsgMcwCommonSyncWar instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMcwCommonSyncWar instance
         */
        public static create(properties?: NetMessage.IMsgMcwCommonSyncWar): NetMessage.MsgMcwCommonSyncWar;

        /**
         * Encodes the specified MsgMcwCommonSyncWar message. Does not implicitly {@link NetMessage.MsgMcwCommonSyncWar.verify|verify} messages.
         * @param message MsgMcwCommonSyncWar message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMcwCommonSyncWar, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMcwCommonSyncWar message, length delimited. Does not implicitly {@link NetMessage.MsgMcwCommonSyncWar.verify|verify} messages.
         * @param message MsgMcwCommonSyncWar message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMcwCommonSyncWar, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMcwCommonSyncWar message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMcwCommonSyncWar
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwCommonSyncWar;

        /**
         * Decodes a MsgMcwCommonSyncWar message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMcwCommonSyncWar
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwCommonSyncWar;

        /**
         * Verifies a MsgMcwCommonSyncWar message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMcwCommonSyncWar message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMcwCommonSyncWar
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwCommonSyncWar;

        /**
         * Creates a plain object from a MsgMcwCommonSyncWar message. Also converts values to other types if specified.
         * @param message MsgMcwCommonSyncWar
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMcwCommonSyncWar, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMcwCommonSyncWar to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMcwCommonSyncWar {

        /** Properties of a C. */
        interface IC {

            /** C warId */
            warId?: (number|null);

            /** C executedActionsCount */
            executedActionsCount?: (number|null);

            /** C requestType */
            requestType?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcwCommonSyncWar.IC);

            /** C warId. */
            public warId: number;

            /** C executedActionsCount. */
            public executedActionsCount: number;

            /** C requestType. */
            public requestType: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMcwCommonSyncWar.IC): NetMessage.MsgMcwCommonSyncWar.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMcwCommonSyncWar.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcwCommonSyncWar.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMcwCommonSyncWar.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcwCommonSyncWar.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwCommonSyncWar.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwCommonSyncWar.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwCommonSyncWar.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcwCommonSyncWar.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S warId */
            warId?: (number|null);

            /** S executedActionsCount */
            executedActionsCount?: (number|null);

            /** S war */
            war?: (WarSerialization.ISerialWar|null);

            /** S status */
            status?: (number|null);

            /** S requestType */
            requestType?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcwCommonSyncWar.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S warId. */
            public warId: number;

            /** S executedActionsCount. */
            public executedActionsCount: number;

            /** S war. */
            public war?: (WarSerialization.ISerialWar|null);

            /** S status. */
            public status: number;

            /** S requestType. */
            public requestType: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMcwCommonSyncWar.IS): NetMessage.MsgMcwCommonSyncWar.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMcwCommonSyncWar.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcwCommonSyncWar.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMcwCommonSyncWar.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcwCommonSyncWar.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwCommonSyncWar.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwCommonSyncWar.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwCommonSyncWar.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcwCommonSyncWar.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMcwWatchMakeRequest. */
    interface IMsgMcwWatchMakeRequest {

        /** MsgMcwWatchMakeRequest c */
        c?: (NetMessage.MsgMcwWatchMakeRequest.IC|null);

        /** MsgMcwWatchMakeRequest s */
        s?: (NetMessage.MsgMcwWatchMakeRequest.IS|null);
    }

    /** Represents a MsgMcwWatchMakeRequest. */
    class MsgMcwWatchMakeRequest implements IMsgMcwWatchMakeRequest {

        /**
         * Constructs a new MsgMcwWatchMakeRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMcwWatchMakeRequest);

        /** MsgMcwWatchMakeRequest c. */
        public c?: (NetMessage.MsgMcwWatchMakeRequest.IC|null);

        /** MsgMcwWatchMakeRequest s. */
        public s?: (NetMessage.MsgMcwWatchMakeRequest.IS|null);

        /**
         * Creates a new MsgMcwWatchMakeRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMcwWatchMakeRequest instance
         */
        public static create(properties?: NetMessage.IMsgMcwWatchMakeRequest): NetMessage.MsgMcwWatchMakeRequest;

        /**
         * Encodes the specified MsgMcwWatchMakeRequest message. Does not implicitly {@link NetMessage.MsgMcwWatchMakeRequest.verify|verify} messages.
         * @param message MsgMcwWatchMakeRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMcwWatchMakeRequest, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMcwWatchMakeRequest message, length delimited. Does not implicitly {@link NetMessage.MsgMcwWatchMakeRequest.verify|verify} messages.
         * @param message MsgMcwWatchMakeRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMcwWatchMakeRequest, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMcwWatchMakeRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMcwWatchMakeRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwWatchMakeRequest;

        /**
         * Decodes a MsgMcwWatchMakeRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMcwWatchMakeRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwWatchMakeRequest;

        /**
         * Verifies a MsgMcwWatchMakeRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMcwWatchMakeRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMcwWatchMakeRequest
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwWatchMakeRequest;

        /**
         * Creates a plain object from a MsgMcwWatchMakeRequest message. Also converts values to other types if specified.
         * @param message MsgMcwWatchMakeRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMcwWatchMakeRequest, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMcwWatchMakeRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMcwWatchMakeRequest {

        /** Properties of a C. */
        interface IC {

            /** C warId */
            warId?: (number|null);

            /** C dstUserIds */
            dstUserIds?: (number[]|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcwWatchMakeRequest.IC);

            /** C warId. */
            public warId: number;

            /** C dstUserIds. */
            public dstUserIds: number[];

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMcwWatchMakeRequest.IC): NetMessage.MsgMcwWatchMakeRequest.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMcwWatchMakeRequest.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcwWatchMakeRequest.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMcwWatchMakeRequest.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcwWatchMakeRequest.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwWatchMakeRequest.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwWatchMakeRequest.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwWatchMakeRequest.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcwWatchMakeRequest.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S warId */
            warId?: (number|null);

            /** S dstUserIds */
            dstUserIds?: (number[]|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcwWatchMakeRequest.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S warId. */
            public warId: number;

            /** S dstUserIds. */
            public dstUserIds: number[];

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMcwWatchMakeRequest.IS): NetMessage.MsgMcwWatchMakeRequest.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMcwWatchMakeRequest.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcwWatchMakeRequest.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMcwWatchMakeRequest.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcwWatchMakeRequest.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwWatchMakeRequest.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwWatchMakeRequest.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwWatchMakeRequest.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcwWatchMakeRequest.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMcwWatchHandleRequest. */
    interface IMsgMcwWatchHandleRequest {

        /** MsgMcwWatchHandleRequest c */
        c?: (NetMessage.MsgMcwWatchHandleRequest.IC|null);

        /** MsgMcwWatchHandleRequest s */
        s?: (NetMessage.MsgMcwWatchHandleRequest.IS|null);
    }

    /** Represents a MsgMcwWatchHandleRequest. */
    class MsgMcwWatchHandleRequest implements IMsgMcwWatchHandleRequest {

        /**
         * Constructs a new MsgMcwWatchHandleRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMcwWatchHandleRequest);

        /** MsgMcwWatchHandleRequest c. */
        public c?: (NetMessage.MsgMcwWatchHandleRequest.IC|null);

        /** MsgMcwWatchHandleRequest s. */
        public s?: (NetMessage.MsgMcwWatchHandleRequest.IS|null);

        /**
         * Creates a new MsgMcwWatchHandleRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMcwWatchHandleRequest instance
         */
        public static create(properties?: NetMessage.IMsgMcwWatchHandleRequest): NetMessage.MsgMcwWatchHandleRequest;

        /**
         * Encodes the specified MsgMcwWatchHandleRequest message. Does not implicitly {@link NetMessage.MsgMcwWatchHandleRequest.verify|verify} messages.
         * @param message MsgMcwWatchHandleRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMcwWatchHandleRequest, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMcwWatchHandleRequest message, length delimited. Does not implicitly {@link NetMessage.MsgMcwWatchHandleRequest.verify|verify} messages.
         * @param message MsgMcwWatchHandleRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMcwWatchHandleRequest, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMcwWatchHandleRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMcwWatchHandleRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwWatchHandleRequest;

        /**
         * Decodes a MsgMcwWatchHandleRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMcwWatchHandleRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwWatchHandleRequest;

        /**
         * Verifies a MsgMcwWatchHandleRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMcwWatchHandleRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMcwWatchHandleRequest
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwWatchHandleRequest;

        /**
         * Creates a plain object from a MsgMcwWatchHandleRequest message. Also converts values to other types if specified.
         * @param message MsgMcwWatchHandleRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMcwWatchHandleRequest, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMcwWatchHandleRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMcwWatchHandleRequest {

        /** Properties of a C. */
        interface IC {

            /** C warId */
            warId?: (number|null);

            /** C acceptSrcUserIds */
            acceptSrcUserIds?: (number[]|null);

            /** C declineSrcUserIds */
            declineSrcUserIds?: (number[]|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcwWatchHandleRequest.IC);

            /** C warId. */
            public warId: number;

            /** C acceptSrcUserIds. */
            public acceptSrcUserIds: number[];

            /** C declineSrcUserIds. */
            public declineSrcUserIds: number[];

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMcwWatchHandleRequest.IC): NetMessage.MsgMcwWatchHandleRequest.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMcwWatchHandleRequest.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcwWatchHandleRequest.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMcwWatchHandleRequest.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcwWatchHandleRequest.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwWatchHandleRequest.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwWatchHandleRequest.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwWatchHandleRequest.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcwWatchHandleRequest.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S warId */
            warId?: (number|null);

            /** S acceptSrcUserIds */
            acceptSrcUserIds?: (number[]|null);

            /** S declineSrcUserIds */
            declineSrcUserIds?: (number[]|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcwWatchHandleRequest.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S warId. */
            public warId: number;

            /** S acceptSrcUserIds. */
            public acceptSrcUserIds: number[];

            /** S declineSrcUserIds. */
            public declineSrcUserIds: number[];

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMcwWatchHandleRequest.IS): NetMessage.MsgMcwWatchHandleRequest.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMcwWatchHandleRequest.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcwWatchHandleRequest.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMcwWatchHandleRequest.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcwWatchHandleRequest.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwWatchHandleRequest.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwWatchHandleRequest.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwWatchHandleRequest.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcwWatchHandleRequest.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMcwWatchDeleteWatcher. */
    interface IMsgMcwWatchDeleteWatcher {

        /** MsgMcwWatchDeleteWatcher c */
        c?: (NetMessage.MsgMcwWatchDeleteWatcher.IC|null);

        /** MsgMcwWatchDeleteWatcher s */
        s?: (NetMessage.MsgMcwWatchDeleteWatcher.IS|null);
    }

    /** Represents a MsgMcwWatchDeleteWatcher. */
    class MsgMcwWatchDeleteWatcher implements IMsgMcwWatchDeleteWatcher {

        /**
         * Constructs a new MsgMcwWatchDeleteWatcher.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMcwWatchDeleteWatcher);

        /** MsgMcwWatchDeleteWatcher c. */
        public c?: (NetMessage.MsgMcwWatchDeleteWatcher.IC|null);

        /** MsgMcwWatchDeleteWatcher s. */
        public s?: (NetMessage.MsgMcwWatchDeleteWatcher.IS|null);

        /**
         * Creates a new MsgMcwWatchDeleteWatcher instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMcwWatchDeleteWatcher instance
         */
        public static create(properties?: NetMessage.IMsgMcwWatchDeleteWatcher): NetMessage.MsgMcwWatchDeleteWatcher;

        /**
         * Encodes the specified MsgMcwWatchDeleteWatcher message. Does not implicitly {@link NetMessage.MsgMcwWatchDeleteWatcher.verify|verify} messages.
         * @param message MsgMcwWatchDeleteWatcher message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMcwWatchDeleteWatcher, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMcwWatchDeleteWatcher message, length delimited. Does not implicitly {@link NetMessage.MsgMcwWatchDeleteWatcher.verify|verify} messages.
         * @param message MsgMcwWatchDeleteWatcher message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMcwWatchDeleteWatcher, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMcwWatchDeleteWatcher message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMcwWatchDeleteWatcher
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwWatchDeleteWatcher;

        /**
         * Decodes a MsgMcwWatchDeleteWatcher message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMcwWatchDeleteWatcher
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwWatchDeleteWatcher;

        /**
         * Verifies a MsgMcwWatchDeleteWatcher message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMcwWatchDeleteWatcher message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMcwWatchDeleteWatcher
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwWatchDeleteWatcher;

        /**
         * Creates a plain object from a MsgMcwWatchDeleteWatcher message. Also converts values to other types if specified.
         * @param message MsgMcwWatchDeleteWatcher
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMcwWatchDeleteWatcher, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMcwWatchDeleteWatcher to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMcwWatchDeleteWatcher {

        /** Properties of a C. */
        interface IC {

            /** C warId */
            warId?: (number|null);

            /** C watcherUserIds */
            watcherUserIds?: (number[]|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcwWatchDeleteWatcher.IC);

            /** C warId. */
            public warId: number;

            /** C watcherUserIds. */
            public watcherUserIds: number[];

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMcwWatchDeleteWatcher.IC): NetMessage.MsgMcwWatchDeleteWatcher.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMcwWatchDeleteWatcher.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcwWatchDeleteWatcher.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMcwWatchDeleteWatcher.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcwWatchDeleteWatcher.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwWatchDeleteWatcher.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwWatchDeleteWatcher.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwWatchDeleteWatcher.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcwWatchDeleteWatcher.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S warId */
            warId?: (number|null);

            /** S watcherUserIds */
            watcherUserIds?: (number[]|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcwWatchDeleteWatcher.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S warId. */
            public warId: number;

            /** S watcherUserIds. */
            public watcherUserIds: number[];

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMcwWatchDeleteWatcher.IS): NetMessage.MsgMcwWatchDeleteWatcher.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMcwWatchDeleteWatcher.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcwWatchDeleteWatcher.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMcwWatchDeleteWatcher.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcwWatchDeleteWatcher.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwWatchDeleteWatcher.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwWatchDeleteWatcher.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwWatchDeleteWatcher.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcwWatchDeleteWatcher.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMcwWatchGetUnwatchedWarInfos. */
    interface IMsgMcwWatchGetUnwatchedWarInfos {

        /** MsgMcwWatchGetUnwatchedWarInfos c */
        c?: (NetMessage.MsgMcwWatchGetUnwatchedWarInfos.IC|null);

        /** MsgMcwWatchGetUnwatchedWarInfos s */
        s?: (NetMessage.MsgMcwWatchGetUnwatchedWarInfos.IS|null);
    }

    /** Represents a MsgMcwWatchGetUnwatchedWarInfos. */
    class MsgMcwWatchGetUnwatchedWarInfos implements IMsgMcwWatchGetUnwatchedWarInfos {

        /**
         * Constructs a new MsgMcwWatchGetUnwatchedWarInfos.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMcwWatchGetUnwatchedWarInfos);

        /** MsgMcwWatchGetUnwatchedWarInfos c. */
        public c?: (NetMessage.MsgMcwWatchGetUnwatchedWarInfos.IC|null);

        /** MsgMcwWatchGetUnwatchedWarInfos s. */
        public s?: (NetMessage.MsgMcwWatchGetUnwatchedWarInfos.IS|null);

        /**
         * Creates a new MsgMcwWatchGetUnwatchedWarInfos instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMcwWatchGetUnwatchedWarInfos instance
         */
        public static create(properties?: NetMessage.IMsgMcwWatchGetUnwatchedWarInfos): NetMessage.MsgMcwWatchGetUnwatchedWarInfos;

        /**
         * Encodes the specified MsgMcwWatchGetUnwatchedWarInfos message. Does not implicitly {@link NetMessage.MsgMcwWatchGetUnwatchedWarInfos.verify|verify} messages.
         * @param message MsgMcwWatchGetUnwatchedWarInfos message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMcwWatchGetUnwatchedWarInfos, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMcwWatchGetUnwatchedWarInfos message, length delimited. Does not implicitly {@link NetMessage.MsgMcwWatchGetUnwatchedWarInfos.verify|verify} messages.
         * @param message MsgMcwWatchGetUnwatchedWarInfos message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMcwWatchGetUnwatchedWarInfos, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMcwWatchGetUnwatchedWarInfos message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMcwWatchGetUnwatchedWarInfos
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwWatchGetUnwatchedWarInfos;

        /**
         * Decodes a MsgMcwWatchGetUnwatchedWarInfos message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMcwWatchGetUnwatchedWarInfos
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwWatchGetUnwatchedWarInfos;

        /**
         * Verifies a MsgMcwWatchGetUnwatchedWarInfos message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMcwWatchGetUnwatchedWarInfos message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMcwWatchGetUnwatchedWarInfos
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwWatchGetUnwatchedWarInfos;

        /**
         * Creates a plain object from a MsgMcwWatchGetUnwatchedWarInfos message. Also converts values to other types if specified.
         * @param message MsgMcwWatchGetUnwatchedWarInfos
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMcwWatchGetUnwatchedWarInfos, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMcwWatchGetUnwatchedWarInfos to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMcwWatchGetUnwatchedWarInfos {

        /** Properties of a C. */
        interface IC {
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcwWatchGetUnwatchedWarInfos.IC);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMcwWatchGetUnwatchedWarInfos.IC): NetMessage.MsgMcwWatchGetUnwatchedWarInfos.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMcwWatchGetUnwatchedWarInfos.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcwWatchGetUnwatchedWarInfos.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMcwWatchGetUnwatchedWarInfos.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcwWatchGetUnwatchedWarInfos.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwWatchGetUnwatchedWarInfos.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwWatchGetUnwatchedWarInfos.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwWatchGetUnwatchedWarInfos.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcwWatchGetUnwatchedWarInfos.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S infos */
            infos?: (MultiCustomWar.IMcwWatchInfo[]|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcwWatchGetUnwatchedWarInfos.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S infos. */
            public infos: MultiCustomWar.IMcwWatchInfo[];

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMcwWatchGetUnwatchedWarInfos.IS): NetMessage.MsgMcwWatchGetUnwatchedWarInfos.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMcwWatchGetUnwatchedWarInfos.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcwWatchGetUnwatchedWarInfos.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMcwWatchGetUnwatchedWarInfos.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcwWatchGetUnwatchedWarInfos.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwWatchGetUnwatchedWarInfos.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwWatchGetUnwatchedWarInfos.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwWatchGetUnwatchedWarInfos.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcwWatchGetUnwatchedWarInfos.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMcwWatchGetRequestedWarInfos. */
    interface IMsgMcwWatchGetRequestedWarInfos {

        /** MsgMcwWatchGetRequestedWarInfos c */
        c?: (NetMessage.MsgMcwWatchGetRequestedWarInfos.IC|null);

        /** MsgMcwWatchGetRequestedWarInfos s */
        s?: (NetMessage.MsgMcwWatchGetRequestedWarInfos.IS|null);
    }

    /** Represents a MsgMcwWatchGetRequestedWarInfos. */
    class MsgMcwWatchGetRequestedWarInfos implements IMsgMcwWatchGetRequestedWarInfos {

        /**
         * Constructs a new MsgMcwWatchGetRequestedWarInfos.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMcwWatchGetRequestedWarInfos);

        /** MsgMcwWatchGetRequestedWarInfos c. */
        public c?: (NetMessage.MsgMcwWatchGetRequestedWarInfos.IC|null);

        /** MsgMcwWatchGetRequestedWarInfos s. */
        public s?: (NetMessage.MsgMcwWatchGetRequestedWarInfos.IS|null);

        /**
         * Creates a new MsgMcwWatchGetRequestedWarInfos instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMcwWatchGetRequestedWarInfos instance
         */
        public static create(properties?: NetMessage.IMsgMcwWatchGetRequestedWarInfos): NetMessage.MsgMcwWatchGetRequestedWarInfos;

        /**
         * Encodes the specified MsgMcwWatchGetRequestedWarInfos message. Does not implicitly {@link NetMessage.MsgMcwWatchGetRequestedWarInfos.verify|verify} messages.
         * @param message MsgMcwWatchGetRequestedWarInfos message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMcwWatchGetRequestedWarInfos, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMcwWatchGetRequestedWarInfos message, length delimited. Does not implicitly {@link NetMessage.MsgMcwWatchGetRequestedWarInfos.verify|verify} messages.
         * @param message MsgMcwWatchGetRequestedWarInfos message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMcwWatchGetRequestedWarInfos, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMcwWatchGetRequestedWarInfos message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMcwWatchGetRequestedWarInfos
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwWatchGetRequestedWarInfos;

        /**
         * Decodes a MsgMcwWatchGetRequestedWarInfos message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMcwWatchGetRequestedWarInfos
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwWatchGetRequestedWarInfos;

        /**
         * Verifies a MsgMcwWatchGetRequestedWarInfos message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMcwWatchGetRequestedWarInfos message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMcwWatchGetRequestedWarInfos
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwWatchGetRequestedWarInfos;

        /**
         * Creates a plain object from a MsgMcwWatchGetRequestedWarInfos message. Also converts values to other types if specified.
         * @param message MsgMcwWatchGetRequestedWarInfos
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMcwWatchGetRequestedWarInfos, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMcwWatchGetRequestedWarInfos to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMcwWatchGetRequestedWarInfos {

        /** Properties of a C. */
        interface IC {
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcwWatchGetRequestedWarInfos.IC);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMcwWatchGetRequestedWarInfos.IC): NetMessage.MsgMcwWatchGetRequestedWarInfos.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMcwWatchGetRequestedWarInfos.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcwWatchGetRequestedWarInfos.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMcwWatchGetRequestedWarInfos.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcwWatchGetRequestedWarInfos.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwWatchGetRequestedWarInfos.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwWatchGetRequestedWarInfos.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwWatchGetRequestedWarInfos.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcwWatchGetRequestedWarInfos.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S infos */
            infos?: (MultiCustomWar.IMcwWatchInfo[]|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcwWatchGetRequestedWarInfos.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S infos. */
            public infos: MultiCustomWar.IMcwWatchInfo[];

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMcwWatchGetRequestedWarInfos.IS): NetMessage.MsgMcwWatchGetRequestedWarInfos.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMcwWatchGetRequestedWarInfos.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcwWatchGetRequestedWarInfos.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMcwWatchGetRequestedWarInfos.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcwWatchGetRequestedWarInfos.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwWatchGetRequestedWarInfos.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwWatchGetRequestedWarInfos.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwWatchGetRequestedWarInfos.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcwWatchGetRequestedWarInfos.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMcwWatchGetWatchedWarInfos. */
    interface IMsgMcwWatchGetWatchedWarInfos {

        /** MsgMcwWatchGetWatchedWarInfos c */
        c?: (NetMessage.MsgMcwWatchGetWatchedWarInfos.IC|null);

        /** MsgMcwWatchGetWatchedWarInfos s */
        s?: (NetMessage.MsgMcwWatchGetWatchedWarInfos.IS|null);
    }

    /** Represents a MsgMcwWatchGetWatchedWarInfos. */
    class MsgMcwWatchGetWatchedWarInfos implements IMsgMcwWatchGetWatchedWarInfos {

        /**
         * Constructs a new MsgMcwWatchGetWatchedWarInfos.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMcwWatchGetWatchedWarInfos);

        /** MsgMcwWatchGetWatchedWarInfos c. */
        public c?: (NetMessage.MsgMcwWatchGetWatchedWarInfos.IC|null);

        /** MsgMcwWatchGetWatchedWarInfos s. */
        public s?: (NetMessage.MsgMcwWatchGetWatchedWarInfos.IS|null);

        /**
         * Creates a new MsgMcwWatchGetWatchedWarInfos instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMcwWatchGetWatchedWarInfos instance
         */
        public static create(properties?: NetMessage.IMsgMcwWatchGetWatchedWarInfos): NetMessage.MsgMcwWatchGetWatchedWarInfos;

        /**
         * Encodes the specified MsgMcwWatchGetWatchedWarInfos message. Does not implicitly {@link NetMessage.MsgMcwWatchGetWatchedWarInfos.verify|verify} messages.
         * @param message MsgMcwWatchGetWatchedWarInfos message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMcwWatchGetWatchedWarInfos, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMcwWatchGetWatchedWarInfos message, length delimited. Does not implicitly {@link NetMessage.MsgMcwWatchGetWatchedWarInfos.verify|verify} messages.
         * @param message MsgMcwWatchGetWatchedWarInfos message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMcwWatchGetWatchedWarInfos, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMcwWatchGetWatchedWarInfos message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMcwWatchGetWatchedWarInfos
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwWatchGetWatchedWarInfos;

        /**
         * Decodes a MsgMcwWatchGetWatchedWarInfos message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMcwWatchGetWatchedWarInfos
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwWatchGetWatchedWarInfos;

        /**
         * Verifies a MsgMcwWatchGetWatchedWarInfos message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMcwWatchGetWatchedWarInfos message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMcwWatchGetWatchedWarInfos
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwWatchGetWatchedWarInfos;

        /**
         * Creates a plain object from a MsgMcwWatchGetWatchedWarInfos message. Also converts values to other types if specified.
         * @param message MsgMcwWatchGetWatchedWarInfos
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMcwWatchGetWatchedWarInfos, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMcwWatchGetWatchedWarInfos to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMcwWatchGetWatchedWarInfos {

        /** Properties of a C. */
        interface IC {
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcwWatchGetWatchedWarInfos.IC);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMcwWatchGetWatchedWarInfos.IC): NetMessage.MsgMcwWatchGetWatchedWarInfos.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMcwWatchGetWatchedWarInfos.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcwWatchGetWatchedWarInfos.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMcwWatchGetWatchedWarInfos.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcwWatchGetWatchedWarInfos.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwWatchGetWatchedWarInfos.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwWatchGetWatchedWarInfos.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwWatchGetWatchedWarInfos.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcwWatchGetWatchedWarInfos.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S infos */
            infos?: (MultiCustomWar.IMcwWatchInfo[]|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcwWatchGetWatchedWarInfos.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S infos. */
            public infos: MultiCustomWar.IMcwWatchInfo[];

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMcwWatchGetWatchedWarInfos.IS): NetMessage.MsgMcwWatchGetWatchedWarInfos.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMcwWatchGetWatchedWarInfos.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcwWatchGetWatchedWarInfos.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMcwWatchGetWatchedWarInfos.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcwWatchGetWatchedWarInfos.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwWatchGetWatchedWarInfos.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwWatchGetWatchedWarInfos.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwWatchGetWatchedWarInfos.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcwWatchGetWatchedWarInfos.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMcwWatchGetOngoingWarInfos. */
    interface IMsgMcwWatchGetOngoingWarInfos {

        /** MsgMcwWatchGetOngoingWarInfos c */
        c?: (NetMessage.MsgMcwWatchGetOngoingWarInfos.IC|null);

        /** MsgMcwWatchGetOngoingWarInfos s */
        s?: (NetMessage.MsgMcwWatchGetOngoingWarInfos.IS|null);
    }

    /** Represents a MsgMcwWatchGetOngoingWarInfos. */
    class MsgMcwWatchGetOngoingWarInfos implements IMsgMcwWatchGetOngoingWarInfos {

        /**
         * Constructs a new MsgMcwWatchGetOngoingWarInfos.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMcwWatchGetOngoingWarInfos);

        /** MsgMcwWatchGetOngoingWarInfos c. */
        public c?: (NetMessage.MsgMcwWatchGetOngoingWarInfos.IC|null);

        /** MsgMcwWatchGetOngoingWarInfos s. */
        public s?: (NetMessage.MsgMcwWatchGetOngoingWarInfos.IS|null);

        /**
         * Creates a new MsgMcwWatchGetOngoingWarInfos instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMcwWatchGetOngoingWarInfos instance
         */
        public static create(properties?: NetMessage.IMsgMcwWatchGetOngoingWarInfos): NetMessage.MsgMcwWatchGetOngoingWarInfos;

        /**
         * Encodes the specified MsgMcwWatchGetOngoingWarInfos message. Does not implicitly {@link NetMessage.MsgMcwWatchGetOngoingWarInfos.verify|verify} messages.
         * @param message MsgMcwWatchGetOngoingWarInfos message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMcwWatchGetOngoingWarInfos, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMcwWatchGetOngoingWarInfos message, length delimited. Does not implicitly {@link NetMessage.MsgMcwWatchGetOngoingWarInfos.verify|verify} messages.
         * @param message MsgMcwWatchGetOngoingWarInfos message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMcwWatchGetOngoingWarInfos, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMcwWatchGetOngoingWarInfos message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMcwWatchGetOngoingWarInfos
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwWatchGetOngoingWarInfos;

        /**
         * Decodes a MsgMcwWatchGetOngoingWarInfos message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMcwWatchGetOngoingWarInfos
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwWatchGetOngoingWarInfos;

        /**
         * Verifies a MsgMcwWatchGetOngoingWarInfos message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMcwWatchGetOngoingWarInfos message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMcwWatchGetOngoingWarInfos
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwWatchGetOngoingWarInfos;

        /**
         * Creates a plain object from a MsgMcwWatchGetOngoingWarInfos message. Also converts values to other types if specified.
         * @param message MsgMcwWatchGetOngoingWarInfos
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMcwWatchGetOngoingWarInfos, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMcwWatchGetOngoingWarInfos to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMcwWatchGetOngoingWarInfos {

        /** Properties of a C. */
        interface IC {
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcwWatchGetOngoingWarInfos.IC);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMcwWatchGetOngoingWarInfos.IC): NetMessage.MsgMcwWatchGetOngoingWarInfos.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMcwWatchGetOngoingWarInfos.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcwWatchGetOngoingWarInfos.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMcwWatchGetOngoingWarInfos.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcwWatchGetOngoingWarInfos.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwWatchGetOngoingWarInfos.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwWatchGetOngoingWarInfos.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwWatchGetOngoingWarInfos.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcwWatchGetOngoingWarInfos.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S infos */
            infos?: (MultiCustomWar.IMcwWatchInfo[]|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcwWatchGetOngoingWarInfos.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S infos. */
            public infos: MultiCustomWar.IMcwWatchInfo[];

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMcwWatchGetOngoingWarInfos.IS): NetMessage.MsgMcwWatchGetOngoingWarInfos.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMcwWatchGetOngoingWarInfos.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcwWatchGetOngoingWarInfos.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMcwWatchGetOngoingWarInfos.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcwWatchGetOngoingWarInfos.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwWatchGetOngoingWarInfos.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwWatchGetOngoingWarInfos.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwWatchGetOngoingWarInfos.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcwWatchGetOngoingWarInfos.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMcwWatchContinueWar. */
    interface IMsgMcwWatchContinueWar {

        /** MsgMcwWatchContinueWar c */
        c?: (NetMessage.MsgMcwWatchContinueWar.IC|null);

        /** MsgMcwWatchContinueWar s */
        s?: (NetMessage.MsgMcwWatchContinueWar.IS|null);
    }

    /** Represents a MsgMcwWatchContinueWar. */
    class MsgMcwWatchContinueWar implements IMsgMcwWatchContinueWar {

        /**
         * Constructs a new MsgMcwWatchContinueWar.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMcwWatchContinueWar);

        /** MsgMcwWatchContinueWar c. */
        public c?: (NetMessage.MsgMcwWatchContinueWar.IC|null);

        /** MsgMcwWatchContinueWar s. */
        public s?: (NetMessage.MsgMcwWatchContinueWar.IS|null);

        /**
         * Creates a new MsgMcwWatchContinueWar instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMcwWatchContinueWar instance
         */
        public static create(properties?: NetMessage.IMsgMcwWatchContinueWar): NetMessage.MsgMcwWatchContinueWar;

        /**
         * Encodes the specified MsgMcwWatchContinueWar message. Does not implicitly {@link NetMessage.MsgMcwWatchContinueWar.verify|verify} messages.
         * @param message MsgMcwWatchContinueWar message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMcwWatchContinueWar, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMcwWatchContinueWar message, length delimited. Does not implicitly {@link NetMessage.MsgMcwWatchContinueWar.verify|verify} messages.
         * @param message MsgMcwWatchContinueWar message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMcwWatchContinueWar, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMcwWatchContinueWar message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMcwWatchContinueWar
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwWatchContinueWar;

        /**
         * Decodes a MsgMcwWatchContinueWar message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMcwWatchContinueWar
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwWatchContinueWar;

        /**
         * Verifies a MsgMcwWatchContinueWar message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMcwWatchContinueWar message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMcwWatchContinueWar
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwWatchContinueWar;

        /**
         * Creates a plain object from a MsgMcwWatchContinueWar message. Also converts values to other types if specified.
         * @param message MsgMcwWatchContinueWar
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMcwWatchContinueWar, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMcwWatchContinueWar to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMcwWatchContinueWar {

        /** Properties of a C. */
        interface IC {

            /** C warId */
            warId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcwWatchContinueWar.IC);

            /** C warId. */
            public warId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMcwWatchContinueWar.IC): NetMessage.MsgMcwWatchContinueWar.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMcwWatchContinueWar.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcwWatchContinueWar.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMcwWatchContinueWar.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcwWatchContinueWar.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwWatchContinueWar.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwWatchContinueWar.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwWatchContinueWar.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcwWatchContinueWar.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S warId */
            warId?: (number|null);

            /** S war */
            war?: (WarSerialization.ISerialWar|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcwWatchContinueWar.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S warId. */
            public warId: number;

            /** S war. */
            public war?: (WarSerialization.ISerialWar|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMcwWatchContinueWar.IS): NetMessage.MsgMcwWatchContinueWar.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMcwWatchContinueWar.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcwWatchContinueWar.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMcwWatchContinueWar.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcwWatchContinueWar.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwWatchContinueWar.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwWatchContinueWar.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwWatchContinueWar.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcwWatchContinueWar.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMcwActionPlayerBeginTurn. */
    interface IMsgMcwActionPlayerBeginTurn {

        /** MsgMcwActionPlayerBeginTurn c */
        c?: (NetMessage.MsgMcwActionPlayerBeginTurn.IC|null);

        /** MsgMcwActionPlayerBeginTurn s */
        s?: (NetMessage.MsgMcwActionPlayerBeginTurn.IS|null);
    }

    /** Represents a MsgMcwActionPlayerBeginTurn. */
    class MsgMcwActionPlayerBeginTurn implements IMsgMcwActionPlayerBeginTurn {

        /**
         * Constructs a new MsgMcwActionPlayerBeginTurn.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMcwActionPlayerBeginTurn);

        /** MsgMcwActionPlayerBeginTurn c. */
        public c?: (NetMessage.MsgMcwActionPlayerBeginTurn.IC|null);

        /** MsgMcwActionPlayerBeginTurn s. */
        public s?: (NetMessage.MsgMcwActionPlayerBeginTurn.IS|null);

        /**
         * Creates a new MsgMcwActionPlayerBeginTurn instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMcwActionPlayerBeginTurn instance
         */
        public static create(properties?: NetMessage.IMsgMcwActionPlayerBeginTurn): NetMessage.MsgMcwActionPlayerBeginTurn;

        /**
         * Encodes the specified MsgMcwActionPlayerBeginTurn message. Does not implicitly {@link NetMessage.MsgMcwActionPlayerBeginTurn.verify|verify} messages.
         * @param message MsgMcwActionPlayerBeginTurn message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMcwActionPlayerBeginTurn, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMcwActionPlayerBeginTurn message, length delimited. Does not implicitly {@link NetMessage.MsgMcwActionPlayerBeginTurn.verify|verify} messages.
         * @param message MsgMcwActionPlayerBeginTurn message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMcwActionPlayerBeginTurn, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMcwActionPlayerBeginTurn message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMcwActionPlayerBeginTurn
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwActionPlayerBeginTurn;

        /**
         * Decodes a MsgMcwActionPlayerBeginTurn message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMcwActionPlayerBeginTurn
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwActionPlayerBeginTurn;

        /**
         * Verifies a MsgMcwActionPlayerBeginTurn message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMcwActionPlayerBeginTurn message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMcwActionPlayerBeginTurn
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwActionPlayerBeginTurn;

        /**
         * Creates a plain object from a MsgMcwActionPlayerBeginTurn message. Also converts values to other types if specified.
         * @param message MsgMcwActionPlayerBeginTurn
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMcwActionPlayerBeginTurn, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMcwActionPlayerBeginTurn to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMcwActionPlayerBeginTurn {

        /** Properties of a C. */
        interface IC {

            /** C warId */
            warId?: (number|null);

            /** C actionId */
            actionId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcwActionPlayerBeginTurn.IC);

            /** C warId. */
            public warId: number;

            /** C actionId. */
            public actionId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMcwActionPlayerBeginTurn.IC): NetMessage.MsgMcwActionPlayerBeginTurn.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMcwActionPlayerBeginTurn.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcwActionPlayerBeginTurn.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMcwActionPlayerBeginTurn.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcwActionPlayerBeginTurn.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwActionPlayerBeginTurn.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwActionPlayerBeginTurn.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwActionPlayerBeginTurn.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcwActionPlayerBeginTurn.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S warId */
            warId?: (number|null);

            /** S actionContainer */
            actionContainer?: (WarAction.IActionContainer|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcwActionPlayerBeginTurn.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S warId. */
            public warId: number;

            /** S actionContainer. */
            public actionContainer?: (WarAction.IActionContainer|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMcwActionPlayerBeginTurn.IS): NetMessage.MsgMcwActionPlayerBeginTurn.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMcwActionPlayerBeginTurn.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcwActionPlayerBeginTurn.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMcwActionPlayerBeginTurn.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcwActionPlayerBeginTurn.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwActionPlayerBeginTurn.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwActionPlayerBeginTurn.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwActionPlayerBeginTurn.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcwActionPlayerBeginTurn.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMcwActionPlayerEndTurn. */
    interface IMsgMcwActionPlayerEndTurn {

        /** MsgMcwActionPlayerEndTurn c */
        c?: (NetMessage.MsgMcwActionPlayerEndTurn.IC|null);

        /** MsgMcwActionPlayerEndTurn s */
        s?: (NetMessage.MsgMcwActionPlayerEndTurn.IS|null);
    }

    /** Represents a MsgMcwActionPlayerEndTurn. */
    class MsgMcwActionPlayerEndTurn implements IMsgMcwActionPlayerEndTurn {

        /**
         * Constructs a new MsgMcwActionPlayerEndTurn.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMcwActionPlayerEndTurn);

        /** MsgMcwActionPlayerEndTurn c. */
        public c?: (NetMessage.MsgMcwActionPlayerEndTurn.IC|null);

        /** MsgMcwActionPlayerEndTurn s. */
        public s?: (NetMessage.MsgMcwActionPlayerEndTurn.IS|null);

        /**
         * Creates a new MsgMcwActionPlayerEndTurn instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMcwActionPlayerEndTurn instance
         */
        public static create(properties?: NetMessage.IMsgMcwActionPlayerEndTurn): NetMessage.MsgMcwActionPlayerEndTurn;

        /**
         * Encodes the specified MsgMcwActionPlayerEndTurn message. Does not implicitly {@link NetMessage.MsgMcwActionPlayerEndTurn.verify|verify} messages.
         * @param message MsgMcwActionPlayerEndTurn message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMcwActionPlayerEndTurn, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMcwActionPlayerEndTurn message, length delimited. Does not implicitly {@link NetMessage.MsgMcwActionPlayerEndTurn.verify|verify} messages.
         * @param message MsgMcwActionPlayerEndTurn message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMcwActionPlayerEndTurn, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMcwActionPlayerEndTurn message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMcwActionPlayerEndTurn
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwActionPlayerEndTurn;

        /**
         * Decodes a MsgMcwActionPlayerEndTurn message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMcwActionPlayerEndTurn
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwActionPlayerEndTurn;

        /**
         * Verifies a MsgMcwActionPlayerEndTurn message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMcwActionPlayerEndTurn message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMcwActionPlayerEndTurn
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwActionPlayerEndTurn;

        /**
         * Creates a plain object from a MsgMcwActionPlayerEndTurn message. Also converts values to other types if specified.
         * @param message MsgMcwActionPlayerEndTurn
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMcwActionPlayerEndTurn, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMcwActionPlayerEndTurn to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMcwActionPlayerEndTurn {

        /** Properties of a C. */
        interface IC {

            /** C warId */
            warId?: (number|null);

            /** C actionId */
            actionId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcwActionPlayerEndTurn.IC);

            /** C warId. */
            public warId: number;

            /** C actionId. */
            public actionId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMcwActionPlayerEndTurn.IC): NetMessage.MsgMcwActionPlayerEndTurn.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMcwActionPlayerEndTurn.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcwActionPlayerEndTurn.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMcwActionPlayerEndTurn.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcwActionPlayerEndTurn.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwActionPlayerEndTurn.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwActionPlayerEndTurn.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwActionPlayerEndTurn.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcwActionPlayerEndTurn.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S warId */
            warId?: (number|null);

            /** S actionContainer */
            actionContainer?: (WarAction.IActionContainer|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcwActionPlayerEndTurn.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S warId. */
            public warId: number;

            /** S actionContainer. */
            public actionContainer?: (WarAction.IActionContainer|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMcwActionPlayerEndTurn.IS): NetMessage.MsgMcwActionPlayerEndTurn.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMcwActionPlayerEndTurn.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcwActionPlayerEndTurn.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMcwActionPlayerEndTurn.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcwActionPlayerEndTurn.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwActionPlayerEndTurn.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwActionPlayerEndTurn.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwActionPlayerEndTurn.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcwActionPlayerEndTurn.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMcwActionPlayerSurrender. */
    interface IMsgMcwActionPlayerSurrender {

        /** MsgMcwActionPlayerSurrender c */
        c?: (NetMessage.MsgMcwActionPlayerSurrender.IC|null);

        /** MsgMcwActionPlayerSurrender s */
        s?: (NetMessage.MsgMcwActionPlayerSurrender.IS|null);
    }

    /** Represents a MsgMcwActionPlayerSurrender. */
    class MsgMcwActionPlayerSurrender implements IMsgMcwActionPlayerSurrender {

        /**
         * Constructs a new MsgMcwActionPlayerSurrender.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMcwActionPlayerSurrender);

        /** MsgMcwActionPlayerSurrender c. */
        public c?: (NetMessage.MsgMcwActionPlayerSurrender.IC|null);

        /** MsgMcwActionPlayerSurrender s. */
        public s?: (NetMessage.MsgMcwActionPlayerSurrender.IS|null);

        /**
         * Creates a new MsgMcwActionPlayerSurrender instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMcwActionPlayerSurrender instance
         */
        public static create(properties?: NetMessage.IMsgMcwActionPlayerSurrender): NetMessage.MsgMcwActionPlayerSurrender;

        /**
         * Encodes the specified MsgMcwActionPlayerSurrender message. Does not implicitly {@link NetMessage.MsgMcwActionPlayerSurrender.verify|verify} messages.
         * @param message MsgMcwActionPlayerSurrender message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMcwActionPlayerSurrender, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMcwActionPlayerSurrender message, length delimited. Does not implicitly {@link NetMessage.MsgMcwActionPlayerSurrender.verify|verify} messages.
         * @param message MsgMcwActionPlayerSurrender message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMcwActionPlayerSurrender, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMcwActionPlayerSurrender message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMcwActionPlayerSurrender
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwActionPlayerSurrender;

        /**
         * Decodes a MsgMcwActionPlayerSurrender message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMcwActionPlayerSurrender
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwActionPlayerSurrender;

        /**
         * Verifies a MsgMcwActionPlayerSurrender message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMcwActionPlayerSurrender message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMcwActionPlayerSurrender
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwActionPlayerSurrender;

        /**
         * Creates a plain object from a MsgMcwActionPlayerSurrender message. Also converts values to other types if specified.
         * @param message MsgMcwActionPlayerSurrender
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMcwActionPlayerSurrender, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMcwActionPlayerSurrender to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMcwActionPlayerSurrender {

        /** Properties of a C. */
        interface IC {

            /** C warId */
            warId?: (number|null);

            /** C actionId */
            actionId?: (number|null);

            /** C isBoot */
            isBoot?: (boolean|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcwActionPlayerSurrender.IC);

            /** C warId. */
            public warId: number;

            /** C actionId. */
            public actionId: number;

            /** C isBoot. */
            public isBoot: boolean;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMcwActionPlayerSurrender.IC): NetMessage.MsgMcwActionPlayerSurrender.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMcwActionPlayerSurrender.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcwActionPlayerSurrender.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMcwActionPlayerSurrender.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcwActionPlayerSurrender.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwActionPlayerSurrender.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwActionPlayerSurrender.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwActionPlayerSurrender.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcwActionPlayerSurrender.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S warId */
            warId?: (number|null);

            /** S actionContainer */
            actionContainer?: (WarAction.IActionContainer|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcwActionPlayerSurrender.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S warId. */
            public warId: number;

            /** S actionContainer. */
            public actionContainer?: (WarAction.IActionContainer|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMcwActionPlayerSurrender.IS): NetMessage.MsgMcwActionPlayerSurrender.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMcwActionPlayerSurrender.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcwActionPlayerSurrender.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMcwActionPlayerSurrender.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcwActionPlayerSurrender.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwActionPlayerSurrender.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwActionPlayerSurrender.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwActionPlayerSurrender.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcwActionPlayerSurrender.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMcwActionPlayerProduceUnit. */
    interface IMsgMcwActionPlayerProduceUnit {

        /** MsgMcwActionPlayerProduceUnit c */
        c?: (NetMessage.MsgMcwActionPlayerProduceUnit.IC|null);

        /** MsgMcwActionPlayerProduceUnit s */
        s?: (NetMessage.MsgMcwActionPlayerProduceUnit.IS|null);
    }

    /** Represents a MsgMcwActionPlayerProduceUnit. */
    class MsgMcwActionPlayerProduceUnit implements IMsgMcwActionPlayerProduceUnit {

        /**
         * Constructs a new MsgMcwActionPlayerProduceUnit.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMcwActionPlayerProduceUnit);

        /** MsgMcwActionPlayerProduceUnit c. */
        public c?: (NetMessage.MsgMcwActionPlayerProduceUnit.IC|null);

        /** MsgMcwActionPlayerProduceUnit s. */
        public s?: (NetMessage.MsgMcwActionPlayerProduceUnit.IS|null);

        /**
         * Creates a new MsgMcwActionPlayerProduceUnit instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMcwActionPlayerProduceUnit instance
         */
        public static create(properties?: NetMessage.IMsgMcwActionPlayerProduceUnit): NetMessage.MsgMcwActionPlayerProduceUnit;

        /**
         * Encodes the specified MsgMcwActionPlayerProduceUnit message. Does not implicitly {@link NetMessage.MsgMcwActionPlayerProduceUnit.verify|verify} messages.
         * @param message MsgMcwActionPlayerProduceUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMcwActionPlayerProduceUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMcwActionPlayerProduceUnit message, length delimited. Does not implicitly {@link NetMessage.MsgMcwActionPlayerProduceUnit.verify|verify} messages.
         * @param message MsgMcwActionPlayerProduceUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMcwActionPlayerProduceUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMcwActionPlayerProduceUnit message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMcwActionPlayerProduceUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwActionPlayerProduceUnit;

        /**
         * Decodes a MsgMcwActionPlayerProduceUnit message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMcwActionPlayerProduceUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwActionPlayerProduceUnit;

        /**
         * Verifies a MsgMcwActionPlayerProduceUnit message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMcwActionPlayerProduceUnit message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMcwActionPlayerProduceUnit
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwActionPlayerProduceUnit;

        /**
         * Creates a plain object from a MsgMcwActionPlayerProduceUnit message. Also converts values to other types if specified.
         * @param message MsgMcwActionPlayerProduceUnit
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMcwActionPlayerProduceUnit, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMcwActionPlayerProduceUnit to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMcwActionPlayerProduceUnit {

        /** Properties of a C. */
        interface IC {

            /** C warId */
            warId?: (number|null);

            /** C actionId */
            actionId?: (number|null);

            /** C gridIndex */
            gridIndex?: (Structure.IGridIndex|null);

            /** C unitType */
            unitType?: (number|null);

            /** C unitHp */
            unitHp?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcwActionPlayerProduceUnit.IC);

            /** C warId. */
            public warId: number;

            /** C actionId. */
            public actionId: number;

            /** C gridIndex. */
            public gridIndex?: (Structure.IGridIndex|null);

            /** C unitType. */
            public unitType: number;

            /** C unitHp. */
            public unitHp: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMcwActionPlayerProduceUnit.IC): NetMessage.MsgMcwActionPlayerProduceUnit.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMcwActionPlayerProduceUnit.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcwActionPlayerProduceUnit.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMcwActionPlayerProduceUnit.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcwActionPlayerProduceUnit.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwActionPlayerProduceUnit.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwActionPlayerProduceUnit.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwActionPlayerProduceUnit.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcwActionPlayerProduceUnit.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S warId */
            warId?: (number|null);

            /** S actionContainer */
            actionContainer?: (WarAction.IActionContainer|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcwActionPlayerProduceUnit.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S warId. */
            public warId: number;

            /** S actionContainer. */
            public actionContainer?: (WarAction.IActionContainer|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMcwActionPlayerProduceUnit.IS): NetMessage.MsgMcwActionPlayerProduceUnit.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMcwActionPlayerProduceUnit.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcwActionPlayerProduceUnit.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMcwActionPlayerProduceUnit.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcwActionPlayerProduceUnit.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwActionPlayerProduceUnit.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwActionPlayerProduceUnit.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwActionPlayerProduceUnit.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcwActionPlayerProduceUnit.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMcwActionPlayerDeleteUnit. */
    interface IMsgMcwActionPlayerDeleteUnit {

        /** MsgMcwActionPlayerDeleteUnit c */
        c?: (NetMessage.MsgMcwActionPlayerDeleteUnit.IC|null);

        /** MsgMcwActionPlayerDeleteUnit s */
        s?: (NetMessage.MsgMcwActionPlayerDeleteUnit.IS|null);
    }

    /** Represents a MsgMcwActionPlayerDeleteUnit. */
    class MsgMcwActionPlayerDeleteUnit implements IMsgMcwActionPlayerDeleteUnit {

        /**
         * Constructs a new MsgMcwActionPlayerDeleteUnit.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMcwActionPlayerDeleteUnit);

        /** MsgMcwActionPlayerDeleteUnit c. */
        public c?: (NetMessage.MsgMcwActionPlayerDeleteUnit.IC|null);

        /** MsgMcwActionPlayerDeleteUnit s. */
        public s?: (NetMessage.MsgMcwActionPlayerDeleteUnit.IS|null);

        /**
         * Creates a new MsgMcwActionPlayerDeleteUnit instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMcwActionPlayerDeleteUnit instance
         */
        public static create(properties?: NetMessage.IMsgMcwActionPlayerDeleteUnit): NetMessage.MsgMcwActionPlayerDeleteUnit;

        /**
         * Encodes the specified MsgMcwActionPlayerDeleteUnit message. Does not implicitly {@link NetMessage.MsgMcwActionPlayerDeleteUnit.verify|verify} messages.
         * @param message MsgMcwActionPlayerDeleteUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMcwActionPlayerDeleteUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMcwActionPlayerDeleteUnit message, length delimited. Does not implicitly {@link NetMessage.MsgMcwActionPlayerDeleteUnit.verify|verify} messages.
         * @param message MsgMcwActionPlayerDeleteUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMcwActionPlayerDeleteUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMcwActionPlayerDeleteUnit message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMcwActionPlayerDeleteUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwActionPlayerDeleteUnit;

        /**
         * Decodes a MsgMcwActionPlayerDeleteUnit message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMcwActionPlayerDeleteUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwActionPlayerDeleteUnit;

        /**
         * Verifies a MsgMcwActionPlayerDeleteUnit message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMcwActionPlayerDeleteUnit message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMcwActionPlayerDeleteUnit
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwActionPlayerDeleteUnit;

        /**
         * Creates a plain object from a MsgMcwActionPlayerDeleteUnit message. Also converts values to other types if specified.
         * @param message MsgMcwActionPlayerDeleteUnit
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMcwActionPlayerDeleteUnit, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMcwActionPlayerDeleteUnit to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMcwActionPlayerDeleteUnit {

        /** Properties of a C. */
        interface IC {

            /** C warId */
            warId?: (number|null);

            /** C actionId */
            actionId?: (number|null);

            /** C gridIndex */
            gridIndex?: (Structure.IGridIndex|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcwActionPlayerDeleteUnit.IC);

            /** C warId. */
            public warId: number;

            /** C actionId. */
            public actionId: number;

            /** C gridIndex. */
            public gridIndex?: (Structure.IGridIndex|null);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMcwActionPlayerDeleteUnit.IC): NetMessage.MsgMcwActionPlayerDeleteUnit.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMcwActionPlayerDeleteUnit.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcwActionPlayerDeleteUnit.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMcwActionPlayerDeleteUnit.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcwActionPlayerDeleteUnit.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwActionPlayerDeleteUnit.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwActionPlayerDeleteUnit.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwActionPlayerDeleteUnit.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcwActionPlayerDeleteUnit.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S warId */
            warId?: (number|null);

            /** S actionContainer */
            actionContainer?: (WarAction.IActionContainer|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcwActionPlayerDeleteUnit.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S warId. */
            public warId: number;

            /** S actionContainer. */
            public actionContainer?: (WarAction.IActionContainer|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMcwActionPlayerDeleteUnit.IS): NetMessage.MsgMcwActionPlayerDeleteUnit.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMcwActionPlayerDeleteUnit.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcwActionPlayerDeleteUnit.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMcwActionPlayerDeleteUnit.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcwActionPlayerDeleteUnit.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwActionPlayerDeleteUnit.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwActionPlayerDeleteUnit.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwActionPlayerDeleteUnit.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcwActionPlayerDeleteUnit.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMcwActionPlayerVoteForDraw. */
    interface IMsgMcwActionPlayerVoteForDraw {

        /** MsgMcwActionPlayerVoteForDraw c */
        c?: (NetMessage.MsgMcwActionPlayerVoteForDraw.IC|null);

        /** MsgMcwActionPlayerVoteForDraw s */
        s?: (NetMessage.MsgMcwActionPlayerVoteForDraw.IS|null);
    }

    /** Represents a MsgMcwActionPlayerVoteForDraw. */
    class MsgMcwActionPlayerVoteForDraw implements IMsgMcwActionPlayerVoteForDraw {

        /**
         * Constructs a new MsgMcwActionPlayerVoteForDraw.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMcwActionPlayerVoteForDraw);

        /** MsgMcwActionPlayerVoteForDraw c. */
        public c?: (NetMessage.MsgMcwActionPlayerVoteForDraw.IC|null);

        /** MsgMcwActionPlayerVoteForDraw s. */
        public s?: (NetMessage.MsgMcwActionPlayerVoteForDraw.IS|null);

        /**
         * Creates a new MsgMcwActionPlayerVoteForDraw instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMcwActionPlayerVoteForDraw instance
         */
        public static create(properties?: NetMessage.IMsgMcwActionPlayerVoteForDraw): NetMessage.MsgMcwActionPlayerVoteForDraw;

        /**
         * Encodes the specified MsgMcwActionPlayerVoteForDraw message. Does not implicitly {@link NetMessage.MsgMcwActionPlayerVoteForDraw.verify|verify} messages.
         * @param message MsgMcwActionPlayerVoteForDraw message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMcwActionPlayerVoteForDraw, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMcwActionPlayerVoteForDraw message, length delimited. Does not implicitly {@link NetMessage.MsgMcwActionPlayerVoteForDraw.verify|verify} messages.
         * @param message MsgMcwActionPlayerVoteForDraw message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMcwActionPlayerVoteForDraw, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMcwActionPlayerVoteForDraw message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMcwActionPlayerVoteForDraw
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwActionPlayerVoteForDraw;

        /**
         * Decodes a MsgMcwActionPlayerVoteForDraw message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMcwActionPlayerVoteForDraw
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwActionPlayerVoteForDraw;

        /**
         * Verifies a MsgMcwActionPlayerVoteForDraw message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMcwActionPlayerVoteForDraw message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMcwActionPlayerVoteForDraw
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwActionPlayerVoteForDraw;

        /**
         * Creates a plain object from a MsgMcwActionPlayerVoteForDraw message. Also converts values to other types if specified.
         * @param message MsgMcwActionPlayerVoteForDraw
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMcwActionPlayerVoteForDraw, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMcwActionPlayerVoteForDraw to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMcwActionPlayerVoteForDraw {

        /** Properties of a C. */
        interface IC {

            /** C warId */
            warId?: (number|null);

            /** C actionId */
            actionId?: (number|null);

            /** C isAgree */
            isAgree?: (boolean|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcwActionPlayerVoteForDraw.IC);

            /** C warId. */
            public warId: number;

            /** C actionId. */
            public actionId: number;

            /** C isAgree. */
            public isAgree: boolean;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMcwActionPlayerVoteForDraw.IC): NetMessage.MsgMcwActionPlayerVoteForDraw.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMcwActionPlayerVoteForDraw.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcwActionPlayerVoteForDraw.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMcwActionPlayerVoteForDraw.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcwActionPlayerVoteForDraw.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwActionPlayerVoteForDraw.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwActionPlayerVoteForDraw.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwActionPlayerVoteForDraw.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcwActionPlayerVoteForDraw.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S warId */
            warId?: (number|null);

            /** S actionContainer */
            actionContainer?: (WarAction.IActionContainer|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcwActionPlayerVoteForDraw.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S warId. */
            public warId: number;

            /** S actionContainer. */
            public actionContainer?: (WarAction.IActionContainer|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMcwActionPlayerVoteForDraw.IS): NetMessage.MsgMcwActionPlayerVoteForDraw.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMcwActionPlayerVoteForDraw.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcwActionPlayerVoteForDraw.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMcwActionPlayerVoteForDraw.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcwActionPlayerVoteForDraw.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwActionPlayerVoteForDraw.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwActionPlayerVoteForDraw.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwActionPlayerVoteForDraw.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcwActionPlayerVoteForDraw.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMcwActionUnitWait. */
    interface IMsgMcwActionUnitWait {

        /** MsgMcwActionUnitWait c */
        c?: (NetMessage.MsgMcwActionUnitWait.IC|null);

        /** MsgMcwActionUnitWait s */
        s?: (NetMessage.MsgMcwActionUnitWait.IS|null);
    }

    /** Represents a MsgMcwActionUnitWait. */
    class MsgMcwActionUnitWait implements IMsgMcwActionUnitWait {

        /**
         * Constructs a new MsgMcwActionUnitWait.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMcwActionUnitWait);

        /** MsgMcwActionUnitWait c. */
        public c?: (NetMessage.MsgMcwActionUnitWait.IC|null);

        /** MsgMcwActionUnitWait s. */
        public s?: (NetMessage.MsgMcwActionUnitWait.IS|null);

        /**
         * Creates a new MsgMcwActionUnitWait instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMcwActionUnitWait instance
         */
        public static create(properties?: NetMessage.IMsgMcwActionUnitWait): NetMessage.MsgMcwActionUnitWait;

        /**
         * Encodes the specified MsgMcwActionUnitWait message. Does not implicitly {@link NetMessage.MsgMcwActionUnitWait.verify|verify} messages.
         * @param message MsgMcwActionUnitWait message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMcwActionUnitWait, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMcwActionUnitWait message, length delimited. Does not implicitly {@link NetMessage.MsgMcwActionUnitWait.verify|verify} messages.
         * @param message MsgMcwActionUnitWait message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMcwActionUnitWait, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMcwActionUnitWait message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMcwActionUnitWait
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwActionUnitWait;

        /**
         * Decodes a MsgMcwActionUnitWait message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMcwActionUnitWait
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwActionUnitWait;

        /**
         * Verifies a MsgMcwActionUnitWait message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMcwActionUnitWait message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMcwActionUnitWait
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwActionUnitWait;

        /**
         * Creates a plain object from a MsgMcwActionUnitWait message. Also converts values to other types if specified.
         * @param message MsgMcwActionUnitWait
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMcwActionUnitWait, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMcwActionUnitWait to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMcwActionUnitWait {

        /** Properties of a C. */
        interface IC {

            /** C warId */
            warId?: (number|null);

            /** C actionId */
            actionId?: (number|null);

            /** C path */
            path?: (Structure.IGridIndex[]|null);

            /** C launchUnitId */
            launchUnitId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcwActionUnitWait.IC);

            /** C warId. */
            public warId: number;

            /** C actionId. */
            public actionId: number;

            /** C path. */
            public path: Structure.IGridIndex[];

            /** C launchUnitId. */
            public launchUnitId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMcwActionUnitWait.IC): NetMessage.MsgMcwActionUnitWait.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMcwActionUnitWait.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcwActionUnitWait.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMcwActionUnitWait.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcwActionUnitWait.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwActionUnitWait.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwActionUnitWait.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwActionUnitWait.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcwActionUnitWait.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S warId */
            warId?: (number|null);

            /** S actionContainer */
            actionContainer?: (WarAction.IActionContainer|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcwActionUnitWait.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S warId. */
            public warId: number;

            /** S actionContainer. */
            public actionContainer?: (WarAction.IActionContainer|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMcwActionUnitWait.IS): NetMessage.MsgMcwActionUnitWait.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMcwActionUnitWait.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcwActionUnitWait.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMcwActionUnitWait.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcwActionUnitWait.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwActionUnitWait.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwActionUnitWait.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwActionUnitWait.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcwActionUnitWait.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMcwActionUnitBeLoaded. */
    interface IMsgMcwActionUnitBeLoaded {

        /** MsgMcwActionUnitBeLoaded c */
        c?: (NetMessage.MsgMcwActionUnitBeLoaded.IC|null);

        /** MsgMcwActionUnitBeLoaded s */
        s?: (NetMessage.MsgMcwActionUnitBeLoaded.IS|null);
    }

    /** Represents a MsgMcwActionUnitBeLoaded. */
    class MsgMcwActionUnitBeLoaded implements IMsgMcwActionUnitBeLoaded {

        /**
         * Constructs a new MsgMcwActionUnitBeLoaded.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMcwActionUnitBeLoaded);

        /** MsgMcwActionUnitBeLoaded c. */
        public c?: (NetMessage.MsgMcwActionUnitBeLoaded.IC|null);

        /** MsgMcwActionUnitBeLoaded s. */
        public s?: (NetMessage.MsgMcwActionUnitBeLoaded.IS|null);

        /**
         * Creates a new MsgMcwActionUnitBeLoaded instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMcwActionUnitBeLoaded instance
         */
        public static create(properties?: NetMessage.IMsgMcwActionUnitBeLoaded): NetMessage.MsgMcwActionUnitBeLoaded;

        /**
         * Encodes the specified MsgMcwActionUnitBeLoaded message. Does not implicitly {@link NetMessage.MsgMcwActionUnitBeLoaded.verify|verify} messages.
         * @param message MsgMcwActionUnitBeLoaded message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMcwActionUnitBeLoaded, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMcwActionUnitBeLoaded message, length delimited. Does not implicitly {@link NetMessage.MsgMcwActionUnitBeLoaded.verify|verify} messages.
         * @param message MsgMcwActionUnitBeLoaded message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMcwActionUnitBeLoaded, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMcwActionUnitBeLoaded message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMcwActionUnitBeLoaded
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwActionUnitBeLoaded;

        /**
         * Decodes a MsgMcwActionUnitBeLoaded message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMcwActionUnitBeLoaded
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwActionUnitBeLoaded;

        /**
         * Verifies a MsgMcwActionUnitBeLoaded message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMcwActionUnitBeLoaded message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMcwActionUnitBeLoaded
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwActionUnitBeLoaded;

        /**
         * Creates a plain object from a MsgMcwActionUnitBeLoaded message. Also converts values to other types if specified.
         * @param message MsgMcwActionUnitBeLoaded
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMcwActionUnitBeLoaded, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMcwActionUnitBeLoaded to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMcwActionUnitBeLoaded {

        /** Properties of a C. */
        interface IC {

            /** C warId */
            warId?: (number|null);

            /** C actionId */
            actionId?: (number|null);

            /** C path */
            path?: (Structure.IGridIndex[]|null);

            /** C launchUnitId */
            launchUnitId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcwActionUnitBeLoaded.IC);

            /** C warId. */
            public warId: number;

            /** C actionId. */
            public actionId: number;

            /** C path. */
            public path: Structure.IGridIndex[];

            /** C launchUnitId. */
            public launchUnitId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMcwActionUnitBeLoaded.IC): NetMessage.MsgMcwActionUnitBeLoaded.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMcwActionUnitBeLoaded.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcwActionUnitBeLoaded.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMcwActionUnitBeLoaded.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcwActionUnitBeLoaded.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwActionUnitBeLoaded.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwActionUnitBeLoaded.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwActionUnitBeLoaded.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcwActionUnitBeLoaded.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S warId */
            warId?: (number|null);

            /** S actionContainer */
            actionContainer?: (WarAction.IActionContainer|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcwActionUnitBeLoaded.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S warId. */
            public warId: number;

            /** S actionContainer. */
            public actionContainer?: (WarAction.IActionContainer|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMcwActionUnitBeLoaded.IS): NetMessage.MsgMcwActionUnitBeLoaded.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMcwActionUnitBeLoaded.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcwActionUnitBeLoaded.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMcwActionUnitBeLoaded.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcwActionUnitBeLoaded.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwActionUnitBeLoaded.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwActionUnitBeLoaded.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwActionUnitBeLoaded.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcwActionUnitBeLoaded.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMcwActionUnitCaptureTile. */
    interface IMsgMcwActionUnitCaptureTile {

        /** MsgMcwActionUnitCaptureTile c */
        c?: (NetMessage.MsgMcwActionUnitCaptureTile.IC|null);

        /** MsgMcwActionUnitCaptureTile s */
        s?: (NetMessage.MsgMcwActionUnitCaptureTile.IS|null);
    }

    /** Represents a MsgMcwActionUnitCaptureTile. */
    class MsgMcwActionUnitCaptureTile implements IMsgMcwActionUnitCaptureTile {

        /**
         * Constructs a new MsgMcwActionUnitCaptureTile.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMcwActionUnitCaptureTile);

        /** MsgMcwActionUnitCaptureTile c. */
        public c?: (NetMessage.MsgMcwActionUnitCaptureTile.IC|null);

        /** MsgMcwActionUnitCaptureTile s. */
        public s?: (NetMessage.MsgMcwActionUnitCaptureTile.IS|null);

        /**
         * Creates a new MsgMcwActionUnitCaptureTile instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMcwActionUnitCaptureTile instance
         */
        public static create(properties?: NetMessage.IMsgMcwActionUnitCaptureTile): NetMessage.MsgMcwActionUnitCaptureTile;

        /**
         * Encodes the specified MsgMcwActionUnitCaptureTile message. Does not implicitly {@link NetMessage.MsgMcwActionUnitCaptureTile.verify|verify} messages.
         * @param message MsgMcwActionUnitCaptureTile message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMcwActionUnitCaptureTile, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMcwActionUnitCaptureTile message, length delimited. Does not implicitly {@link NetMessage.MsgMcwActionUnitCaptureTile.verify|verify} messages.
         * @param message MsgMcwActionUnitCaptureTile message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMcwActionUnitCaptureTile, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMcwActionUnitCaptureTile message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMcwActionUnitCaptureTile
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwActionUnitCaptureTile;

        /**
         * Decodes a MsgMcwActionUnitCaptureTile message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMcwActionUnitCaptureTile
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwActionUnitCaptureTile;

        /**
         * Verifies a MsgMcwActionUnitCaptureTile message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMcwActionUnitCaptureTile message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMcwActionUnitCaptureTile
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwActionUnitCaptureTile;

        /**
         * Creates a plain object from a MsgMcwActionUnitCaptureTile message. Also converts values to other types if specified.
         * @param message MsgMcwActionUnitCaptureTile
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMcwActionUnitCaptureTile, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMcwActionUnitCaptureTile to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMcwActionUnitCaptureTile {

        /** Properties of a C. */
        interface IC {

            /** C warId */
            warId?: (number|null);

            /** C actionId */
            actionId?: (number|null);

            /** C path */
            path?: (Structure.IGridIndex[]|null);

            /** C launchUnitId */
            launchUnitId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcwActionUnitCaptureTile.IC);

            /** C warId. */
            public warId: number;

            /** C actionId. */
            public actionId: number;

            /** C path. */
            public path: Structure.IGridIndex[];

            /** C launchUnitId. */
            public launchUnitId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMcwActionUnitCaptureTile.IC): NetMessage.MsgMcwActionUnitCaptureTile.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMcwActionUnitCaptureTile.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcwActionUnitCaptureTile.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMcwActionUnitCaptureTile.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcwActionUnitCaptureTile.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwActionUnitCaptureTile.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwActionUnitCaptureTile.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwActionUnitCaptureTile.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcwActionUnitCaptureTile.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S warId */
            warId?: (number|null);

            /** S actionContainer */
            actionContainer?: (WarAction.IActionContainer|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcwActionUnitCaptureTile.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S warId. */
            public warId: number;

            /** S actionContainer. */
            public actionContainer?: (WarAction.IActionContainer|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMcwActionUnitCaptureTile.IS): NetMessage.MsgMcwActionUnitCaptureTile.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMcwActionUnitCaptureTile.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcwActionUnitCaptureTile.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMcwActionUnitCaptureTile.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcwActionUnitCaptureTile.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwActionUnitCaptureTile.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwActionUnitCaptureTile.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwActionUnitCaptureTile.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcwActionUnitCaptureTile.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMcwActionUnitAttackTile. */
    interface IMsgMcwActionUnitAttackTile {

        /** MsgMcwActionUnitAttackTile c */
        c?: (NetMessage.MsgMcwActionUnitAttackTile.IC|null);

        /** MsgMcwActionUnitAttackTile s */
        s?: (NetMessage.MsgMcwActionUnitAttackTile.IS|null);
    }

    /** Represents a MsgMcwActionUnitAttackTile. */
    class MsgMcwActionUnitAttackTile implements IMsgMcwActionUnitAttackTile {

        /**
         * Constructs a new MsgMcwActionUnitAttackTile.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMcwActionUnitAttackTile);

        /** MsgMcwActionUnitAttackTile c. */
        public c?: (NetMessage.MsgMcwActionUnitAttackTile.IC|null);

        /** MsgMcwActionUnitAttackTile s. */
        public s?: (NetMessage.MsgMcwActionUnitAttackTile.IS|null);

        /**
         * Creates a new MsgMcwActionUnitAttackTile instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMcwActionUnitAttackTile instance
         */
        public static create(properties?: NetMessage.IMsgMcwActionUnitAttackTile): NetMessage.MsgMcwActionUnitAttackTile;

        /**
         * Encodes the specified MsgMcwActionUnitAttackTile message. Does not implicitly {@link NetMessage.MsgMcwActionUnitAttackTile.verify|verify} messages.
         * @param message MsgMcwActionUnitAttackTile message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMcwActionUnitAttackTile, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMcwActionUnitAttackTile message, length delimited. Does not implicitly {@link NetMessage.MsgMcwActionUnitAttackTile.verify|verify} messages.
         * @param message MsgMcwActionUnitAttackTile message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMcwActionUnitAttackTile, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMcwActionUnitAttackTile message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMcwActionUnitAttackTile
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwActionUnitAttackTile;

        /**
         * Decodes a MsgMcwActionUnitAttackTile message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMcwActionUnitAttackTile
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwActionUnitAttackTile;

        /**
         * Verifies a MsgMcwActionUnitAttackTile message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMcwActionUnitAttackTile message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMcwActionUnitAttackTile
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwActionUnitAttackTile;

        /**
         * Creates a plain object from a MsgMcwActionUnitAttackTile message. Also converts values to other types if specified.
         * @param message MsgMcwActionUnitAttackTile
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMcwActionUnitAttackTile, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMcwActionUnitAttackTile to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMcwActionUnitAttackTile {

        /** Properties of a C. */
        interface IC {

            /** C warId */
            warId?: (number|null);

            /** C actionId */
            actionId?: (number|null);

            /** C path */
            path?: (Structure.IGridIndex[]|null);

            /** C launchUnitId */
            launchUnitId?: (number|null);

            /** C targetGridIndex */
            targetGridIndex?: (Structure.IGridIndex|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcwActionUnitAttackTile.IC);

            /** C warId. */
            public warId: number;

            /** C actionId. */
            public actionId: number;

            /** C path. */
            public path: Structure.IGridIndex[];

            /** C launchUnitId. */
            public launchUnitId: number;

            /** C targetGridIndex. */
            public targetGridIndex?: (Structure.IGridIndex|null);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMcwActionUnitAttackTile.IC): NetMessage.MsgMcwActionUnitAttackTile.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMcwActionUnitAttackTile.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcwActionUnitAttackTile.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMcwActionUnitAttackTile.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcwActionUnitAttackTile.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwActionUnitAttackTile.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwActionUnitAttackTile.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwActionUnitAttackTile.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcwActionUnitAttackTile.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S warId */
            warId?: (number|null);

            /** S actionContainer */
            actionContainer?: (WarAction.IActionContainer|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcwActionUnitAttackTile.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S warId. */
            public warId: number;

            /** S actionContainer. */
            public actionContainer?: (WarAction.IActionContainer|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMcwActionUnitAttackTile.IS): NetMessage.MsgMcwActionUnitAttackTile.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMcwActionUnitAttackTile.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcwActionUnitAttackTile.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMcwActionUnitAttackTile.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcwActionUnitAttackTile.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwActionUnitAttackTile.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwActionUnitAttackTile.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwActionUnitAttackTile.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcwActionUnitAttackTile.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMcwActionUnitAttackUnit. */
    interface IMsgMcwActionUnitAttackUnit {

        /** MsgMcwActionUnitAttackUnit c */
        c?: (NetMessage.MsgMcwActionUnitAttackUnit.IC|null);

        /** MsgMcwActionUnitAttackUnit s */
        s?: (NetMessage.MsgMcwActionUnitAttackUnit.IS|null);
    }

    /** Represents a MsgMcwActionUnitAttackUnit. */
    class MsgMcwActionUnitAttackUnit implements IMsgMcwActionUnitAttackUnit {

        /**
         * Constructs a new MsgMcwActionUnitAttackUnit.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMcwActionUnitAttackUnit);

        /** MsgMcwActionUnitAttackUnit c. */
        public c?: (NetMessage.MsgMcwActionUnitAttackUnit.IC|null);

        /** MsgMcwActionUnitAttackUnit s. */
        public s?: (NetMessage.MsgMcwActionUnitAttackUnit.IS|null);

        /**
         * Creates a new MsgMcwActionUnitAttackUnit instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMcwActionUnitAttackUnit instance
         */
        public static create(properties?: NetMessage.IMsgMcwActionUnitAttackUnit): NetMessage.MsgMcwActionUnitAttackUnit;

        /**
         * Encodes the specified MsgMcwActionUnitAttackUnit message. Does not implicitly {@link NetMessage.MsgMcwActionUnitAttackUnit.verify|verify} messages.
         * @param message MsgMcwActionUnitAttackUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMcwActionUnitAttackUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMcwActionUnitAttackUnit message, length delimited. Does not implicitly {@link NetMessage.MsgMcwActionUnitAttackUnit.verify|verify} messages.
         * @param message MsgMcwActionUnitAttackUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMcwActionUnitAttackUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMcwActionUnitAttackUnit message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMcwActionUnitAttackUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwActionUnitAttackUnit;

        /**
         * Decodes a MsgMcwActionUnitAttackUnit message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMcwActionUnitAttackUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwActionUnitAttackUnit;

        /**
         * Verifies a MsgMcwActionUnitAttackUnit message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMcwActionUnitAttackUnit message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMcwActionUnitAttackUnit
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwActionUnitAttackUnit;

        /**
         * Creates a plain object from a MsgMcwActionUnitAttackUnit message. Also converts values to other types if specified.
         * @param message MsgMcwActionUnitAttackUnit
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMcwActionUnitAttackUnit, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMcwActionUnitAttackUnit to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMcwActionUnitAttackUnit {

        /** Properties of a C. */
        interface IC {

            /** C warId */
            warId?: (number|null);

            /** C actionId */
            actionId?: (number|null);

            /** C path */
            path?: (Structure.IGridIndex[]|null);

            /** C launchUnitId */
            launchUnitId?: (number|null);

            /** C targetGridIndex */
            targetGridIndex?: (Structure.IGridIndex|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcwActionUnitAttackUnit.IC);

            /** C warId. */
            public warId: number;

            /** C actionId. */
            public actionId: number;

            /** C path. */
            public path: Structure.IGridIndex[];

            /** C launchUnitId. */
            public launchUnitId: number;

            /** C targetGridIndex. */
            public targetGridIndex?: (Structure.IGridIndex|null);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMcwActionUnitAttackUnit.IC): NetMessage.MsgMcwActionUnitAttackUnit.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMcwActionUnitAttackUnit.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcwActionUnitAttackUnit.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMcwActionUnitAttackUnit.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcwActionUnitAttackUnit.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwActionUnitAttackUnit.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwActionUnitAttackUnit.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwActionUnitAttackUnit.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcwActionUnitAttackUnit.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S warId */
            warId?: (number|null);

            /** S actionContainer */
            actionContainer?: (WarAction.IActionContainer|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcwActionUnitAttackUnit.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S warId. */
            public warId: number;

            /** S actionContainer. */
            public actionContainer?: (WarAction.IActionContainer|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMcwActionUnitAttackUnit.IS): NetMessage.MsgMcwActionUnitAttackUnit.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMcwActionUnitAttackUnit.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcwActionUnitAttackUnit.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMcwActionUnitAttackUnit.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcwActionUnitAttackUnit.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwActionUnitAttackUnit.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwActionUnitAttackUnit.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwActionUnitAttackUnit.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcwActionUnitAttackUnit.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMcwActionUnitDropUnit. */
    interface IMsgMcwActionUnitDropUnit {

        /** MsgMcwActionUnitDropUnit c */
        c?: (NetMessage.MsgMcwActionUnitDropUnit.IC|null);

        /** MsgMcwActionUnitDropUnit s */
        s?: (NetMessage.MsgMcwActionUnitDropUnit.IS|null);
    }

    /** Represents a MsgMcwActionUnitDropUnit. */
    class MsgMcwActionUnitDropUnit implements IMsgMcwActionUnitDropUnit {

        /**
         * Constructs a new MsgMcwActionUnitDropUnit.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMcwActionUnitDropUnit);

        /** MsgMcwActionUnitDropUnit c. */
        public c?: (NetMessage.MsgMcwActionUnitDropUnit.IC|null);

        /** MsgMcwActionUnitDropUnit s. */
        public s?: (NetMessage.MsgMcwActionUnitDropUnit.IS|null);

        /**
         * Creates a new MsgMcwActionUnitDropUnit instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMcwActionUnitDropUnit instance
         */
        public static create(properties?: NetMessage.IMsgMcwActionUnitDropUnit): NetMessage.MsgMcwActionUnitDropUnit;

        /**
         * Encodes the specified MsgMcwActionUnitDropUnit message. Does not implicitly {@link NetMessage.MsgMcwActionUnitDropUnit.verify|verify} messages.
         * @param message MsgMcwActionUnitDropUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMcwActionUnitDropUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMcwActionUnitDropUnit message, length delimited. Does not implicitly {@link NetMessage.MsgMcwActionUnitDropUnit.verify|verify} messages.
         * @param message MsgMcwActionUnitDropUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMcwActionUnitDropUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMcwActionUnitDropUnit message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMcwActionUnitDropUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwActionUnitDropUnit;

        /**
         * Decodes a MsgMcwActionUnitDropUnit message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMcwActionUnitDropUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwActionUnitDropUnit;

        /**
         * Verifies a MsgMcwActionUnitDropUnit message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMcwActionUnitDropUnit message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMcwActionUnitDropUnit
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwActionUnitDropUnit;

        /**
         * Creates a plain object from a MsgMcwActionUnitDropUnit message. Also converts values to other types if specified.
         * @param message MsgMcwActionUnitDropUnit
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMcwActionUnitDropUnit, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMcwActionUnitDropUnit to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMcwActionUnitDropUnit {

        /** Properties of a C. */
        interface IC {

            /** C warId */
            warId?: (number|null);

            /** C actionId */
            actionId?: (number|null);

            /** C path */
            path?: (Structure.IGridIndex[]|null);

            /** C launchUnitId */
            launchUnitId?: (number|null);

            /** C dropDestinations */
            dropDestinations?: (Structure.IDropDestination[]|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcwActionUnitDropUnit.IC);

            /** C warId. */
            public warId: number;

            /** C actionId. */
            public actionId: number;

            /** C path. */
            public path: Structure.IGridIndex[];

            /** C launchUnitId. */
            public launchUnitId: number;

            /** C dropDestinations. */
            public dropDestinations: Structure.IDropDestination[];

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMcwActionUnitDropUnit.IC): NetMessage.MsgMcwActionUnitDropUnit.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMcwActionUnitDropUnit.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcwActionUnitDropUnit.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMcwActionUnitDropUnit.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcwActionUnitDropUnit.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwActionUnitDropUnit.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwActionUnitDropUnit.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwActionUnitDropUnit.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcwActionUnitDropUnit.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S warId */
            warId?: (number|null);

            /** S actionContainer */
            actionContainer?: (WarAction.IActionContainer|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcwActionUnitDropUnit.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S warId. */
            public warId: number;

            /** S actionContainer. */
            public actionContainer?: (WarAction.IActionContainer|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMcwActionUnitDropUnit.IS): NetMessage.MsgMcwActionUnitDropUnit.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMcwActionUnitDropUnit.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcwActionUnitDropUnit.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMcwActionUnitDropUnit.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcwActionUnitDropUnit.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwActionUnitDropUnit.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwActionUnitDropUnit.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwActionUnitDropUnit.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcwActionUnitDropUnit.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMcwActionUnitBuildTile. */
    interface IMsgMcwActionUnitBuildTile {

        /** MsgMcwActionUnitBuildTile c */
        c?: (NetMessage.MsgMcwActionUnitBuildTile.IC|null);

        /** MsgMcwActionUnitBuildTile s */
        s?: (NetMessage.MsgMcwActionUnitBuildTile.IS|null);
    }

    /** Represents a MsgMcwActionUnitBuildTile. */
    class MsgMcwActionUnitBuildTile implements IMsgMcwActionUnitBuildTile {

        /**
         * Constructs a new MsgMcwActionUnitBuildTile.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMcwActionUnitBuildTile);

        /** MsgMcwActionUnitBuildTile c. */
        public c?: (NetMessage.MsgMcwActionUnitBuildTile.IC|null);

        /** MsgMcwActionUnitBuildTile s. */
        public s?: (NetMessage.MsgMcwActionUnitBuildTile.IS|null);

        /**
         * Creates a new MsgMcwActionUnitBuildTile instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMcwActionUnitBuildTile instance
         */
        public static create(properties?: NetMessage.IMsgMcwActionUnitBuildTile): NetMessage.MsgMcwActionUnitBuildTile;

        /**
         * Encodes the specified MsgMcwActionUnitBuildTile message. Does not implicitly {@link NetMessage.MsgMcwActionUnitBuildTile.verify|verify} messages.
         * @param message MsgMcwActionUnitBuildTile message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMcwActionUnitBuildTile, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMcwActionUnitBuildTile message, length delimited. Does not implicitly {@link NetMessage.MsgMcwActionUnitBuildTile.verify|verify} messages.
         * @param message MsgMcwActionUnitBuildTile message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMcwActionUnitBuildTile, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMcwActionUnitBuildTile message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMcwActionUnitBuildTile
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwActionUnitBuildTile;

        /**
         * Decodes a MsgMcwActionUnitBuildTile message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMcwActionUnitBuildTile
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwActionUnitBuildTile;

        /**
         * Verifies a MsgMcwActionUnitBuildTile message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMcwActionUnitBuildTile message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMcwActionUnitBuildTile
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwActionUnitBuildTile;

        /**
         * Creates a plain object from a MsgMcwActionUnitBuildTile message. Also converts values to other types if specified.
         * @param message MsgMcwActionUnitBuildTile
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMcwActionUnitBuildTile, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMcwActionUnitBuildTile to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMcwActionUnitBuildTile {

        /** Properties of a C. */
        interface IC {

            /** C warId */
            warId?: (number|null);

            /** C actionId */
            actionId?: (number|null);

            /** C path */
            path?: (Structure.IGridIndex[]|null);

            /** C launchUnitId */
            launchUnitId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcwActionUnitBuildTile.IC);

            /** C warId. */
            public warId: number;

            /** C actionId. */
            public actionId: number;

            /** C path. */
            public path: Structure.IGridIndex[];

            /** C launchUnitId. */
            public launchUnitId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMcwActionUnitBuildTile.IC): NetMessage.MsgMcwActionUnitBuildTile.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMcwActionUnitBuildTile.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcwActionUnitBuildTile.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMcwActionUnitBuildTile.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcwActionUnitBuildTile.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwActionUnitBuildTile.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwActionUnitBuildTile.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwActionUnitBuildTile.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcwActionUnitBuildTile.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S warId */
            warId?: (number|null);

            /** S actionContainer */
            actionContainer?: (WarAction.IActionContainer|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcwActionUnitBuildTile.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S warId. */
            public warId: number;

            /** S actionContainer. */
            public actionContainer?: (WarAction.IActionContainer|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMcwActionUnitBuildTile.IS): NetMessage.MsgMcwActionUnitBuildTile.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMcwActionUnitBuildTile.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcwActionUnitBuildTile.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMcwActionUnitBuildTile.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcwActionUnitBuildTile.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwActionUnitBuildTile.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwActionUnitBuildTile.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwActionUnitBuildTile.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcwActionUnitBuildTile.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMcwActionUnitDive. */
    interface IMsgMcwActionUnitDive {

        /** MsgMcwActionUnitDive c */
        c?: (NetMessage.MsgMcwActionUnitDive.IC|null);

        /** MsgMcwActionUnitDive s */
        s?: (NetMessage.MsgMcwActionUnitDive.IS|null);
    }

    /** Represents a MsgMcwActionUnitDive. */
    class MsgMcwActionUnitDive implements IMsgMcwActionUnitDive {

        /**
         * Constructs a new MsgMcwActionUnitDive.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMcwActionUnitDive);

        /** MsgMcwActionUnitDive c. */
        public c?: (NetMessage.MsgMcwActionUnitDive.IC|null);

        /** MsgMcwActionUnitDive s. */
        public s?: (NetMessage.MsgMcwActionUnitDive.IS|null);

        /**
         * Creates a new MsgMcwActionUnitDive instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMcwActionUnitDive instance
         */
        public static create(properties?: NetMessage.IMsgMcwActionUnitDive): NetMessage.MsgMcwActionUnitDive;

        /**
         * Encodes the specified MsgMcwActionUnitDive message. Does not implicitly {@link NetMessage.MsgMcwActionUnitDive.verify|verify} messages.
         * @param message MsgMcwActionUnitDive message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMcwActionUnitDive, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMcwActionUnitDive message, length delimited. Does not implicitly {@link NetMessage.MsgMcwActionUnitDive.verify|verify} messages.
         * @param message MsgMcwActionUnitDive message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMcwActionUnitDive, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMcwActionUnitDive message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMcwActionUnitDive
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwActionUnitDive;

        /**
         * Decodes a MsgMcwActionUnitDive message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMcwActionUnitDive
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwActionUnitDive;

        /**
         * Verifies a MsgMcwActionUnitDive message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMcwActionUnitDive message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMcwActionUnitDive
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwActionUnitDive;

        /**
         * Creates a plain object from a MsgMcwActionUnitDive message. Also converts values to other types if specified.
         * @param message MsgMcwActionUnitDive
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMcwActionUnitDive, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMcwActionUnitDive to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMcwActionUnitDive {

        /** Properties of a C. */
        interface IC {

            /** C warId */
            warId?: (number|null);

            /** C actionId */
            actionId?: (number|null);

            /** C path */
            path?: (Structure.IGridIndex[]|null);

            /** C launchUnitId */
            launchUnitId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcwActionUnitDive.IC);

            /** C warId. */
            public warId: number;

            /** C actionId. */
            public actionId: number;

            /** C path. */
            public path: Structure.IGridIndex[];

            /** C launchUnitId. */
            public launchUnitId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMcwActionUnitDive.IC): NetMessage.MsgMcwActionUnitDive.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMcwActionUnitDive.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcwActionUnitDive.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMcwActionUnitDive.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcwActionUnitDive.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwActionUnitDive.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwActionUnitDive.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwActionUnitDive.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcwActionUnitDive.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S warId */
            warId?: (number|null);

            /** S actionContainer */
            actionContainer?: (WarAction.IActionContainer|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcwActionUnitDive.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S warId. */
            public warId: number;

            /** S actionContainer. */
            public actionContainer?: (WarAction.IActionContainer|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMcwActionUnitDive.IS): NetMessage.MsgMcwActionUnitDive.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMcwActionUnitDive.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcwActionUnitDive.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMcwActionUnitDive.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcwActionUnitDive.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwActionUnitDive.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwActionUnitDive.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwActionUnitDive.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcwActionUnitDive.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMcwActionUnitSurface. */
    interface IMsgMcwActionUnitSurface {

        /** MsgMcwActionUnitSurface c */
        c?: (NetMessage.MsgMcwActionUnitSurface.IC|null);

        /** MsgMcwActionUnitSurface s */
        s?: (NetMessage.MsgMcwActionUnitSurface.IS|null);
    }

    /** Represents a MsgMcwActionUnitSurface. */
    class MsgMcwActionUnitSurface implements IMsgMcwActionUnitSurface {

        /**
         * Constructs a new MsgMcwActionUnitSurface.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMcwActionUnitSurface);

        /** MsgMcwActionUnitSurface c. */
        public c?: (NetMessage.MsgMcwActionUnitSurface.IC|null);

        /** MsgMcwActionUnitSurface s. */
        public s?: (NetMessage.MsgMcwActionUnitSurface.IS|null);

        /**
         * Creates a new MsgMcwActionUnitSurface instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMcwActionUnitSurface instance
         */
        public static create(properties?: NetMessage.IMsgMcwActionUnitSurface): NetMessage.MsgMcwActionUnitSurface;

        /**
         * Encodes the specified MsgMcwActionUnitSurface message. Does not implicitly {@link NetMessage.MsgMcwActionUnitSurface.verify|verify} messages.
         * @param message MsgMcwActionUnitSurface message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMcwActionUnitSurface, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMcwActionUnitSurface message, length delimited. Does not implicitly {@link NetMessage.MsgMcwActionUnitSurface.verify|verify} messages.
         * @param message MsgMcwActionUnitSurface message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMcwActionUnitSurface, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMcwActionUnitSurface message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMcwActionUnitSurface
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwActionUnitSurface;

        /**
         * Decodes a MsgMcwActionUnitSurface message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMcwActionUnitSurface
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwActionUnitSurface;

        /**
         * Verifies a MsgMcwActionUnitSurface message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMcwActionUnitSurface message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMcwActionUnitSurface
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwActionUnitSurface;

        /**
         * Creates a plain object from a MsgMcwActionUnitSurface message. Also converts values to other types if specified.
         * @param message MsgMcwActionUnitSurface
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMcwActionUnitSurface, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMcwActionUnitSurface to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMcwActionUnitSurface {

        /** Properties of a C. */
        interface IC {

            /** C warId */
            warId?: (number|null);

            /** C actionId */
            actionId?: (number|null);

            /** C path */
            path?: (Structure.IGridIndex[]|null);

            /** C launchUnitId */
            launchUnitId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcwActionUnitSurface.IC);

            /** C warId. */
            public warId: number;

            /** C actionId. */
            public actionId: number;

            /** C path. */
            public path: Structure.IGridIndex[];

            /** C launchUnitId. */
            public launchUnitId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMcwActionUnitSurface.IC): NetMessage.MsgMcwActionUnitSurface.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMcwActionUnitSurface.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcwActionUnitSurface.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMcwActionUnitSurface.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcwActionUnitSurface.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwActionUnitSurface.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwActionUnitSurface.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwActionUnitSurface.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcwActionUnitSurface.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S warId */
            warId?: (number|null);

            /** S actionContainer */
            actionContainer?: (WarAction.IActionContainer|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcwActionUnitSurface.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S warId. */
            public warId: number;

            /** S actionContainer. */
            public actionContainer?: (WarAction.IActionContainer|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMcwActionUnitSurface.IS): NetMessage.MsgMcwActionUnitSurface.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMcwActionUnitSurface.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcwActionUnitSurface.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMcwActionUnitSurface.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcwActionUnitSurface.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwActionUnitSurface.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwActionUnitSurface.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwActionUnitSurface.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcwActionUnitSurface.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMcwActionUnitJoinUnit. */
    interface IMsgMcwActionUnitJoinUnit {

        /** MsgMcwActionUnitJoinUnit c */
        c?: (NetMessage.MsgMcwActionUnitJoinUnit.IC|null);

        /** MsgMcwActionUnitJoinUnit s */
        s?: (NetMessage.MsgMcwActionUnitJoinUnit.IS|null);
    }

    /** Represents a MsgMcwActionUnitJoinUnit. */
    class MsgMcwActionUnitJoinUnit implements IMsgMcwActionUnitJoinUnit {

        /**
         * Constructs a new MsgMcwActionUnitJoinUnit.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMcwActionUnitJoinUnit);

        /** MsgMcwActionUnitJoinUnit c. */
        public c?: (NetMessage.MsgMcwActionUnitJoinUnit.IC|null);

        /** MsgMcwActionUnitJoinUnit s. */
        public s?: (NetMessage.MsgMcwActionUnitJoinUnit.IS|null);

        /**
         * Creates a new MsgMcwActionUnitJoinUnit instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMcwActionUnitJoinUnit instance
         */
        public static create(properties?: NetMessage.IMsgMcwActionUnitJoinUnit): NetMessage.MsgMcwActionUnitJoinUnit;

        /**
         * Encodes the specified MsgMcwActionUnitJoinUnit message. Does not implicitly {@link NetMessage.MsgMcwActionUnitJoinUnit.verify|verify} messages.
         * @param message MsgMcwActionUnitJoinUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMcwActionUnitJoinUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMcwActionUnitJoinUnit message, length delimited. Does not implicitly {@link NetMessage.MsgMcwActionUnitJoinUnit.verify|verify} messages.
         * @param message MsgMcwActionUnitJoinUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMcwActionUnitJoinUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMcwActionUnitJoinUnit message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMcwActionUnitJoinUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwActionUnitJoinUnit;

        /**
         * Decodes a MsgMcwActionUnitJoinUnit message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMcwActionUnitJoinUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwActionUnitJoinUnit;

        /**
         * Verifies a MsgMcwActionUnitJoinUnit message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMcwActionUnitJoinUnit message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMcwActionUnitJoinUnit
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwActionUnitJoinUnit;

        /**
         * Creates a plain object from a MsgMcwActionUnitJoinUnit message. Also converts values to other types if specified.
         * @param message MsgMcwActionUnitJoinUnit
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMcwActionUnitJoinUnit, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMcwActionUnitJoinUnit to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMcwActionUnitJoinUnit {

        /** Properties of a C. */
        interface IC {

            /** C warId */
            warId?: (number|null);

            /** C actionId */
            actionId?: (number|null);

            /** C path */
            path?: (Structure.IGridIndex[]|null);

            /** C launchUnitId */
            launchUnitId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcwActionUnitJoinUnit.IC);

            /** C warId. */
            public warId: number;

            /** C actionId. */
            public actionId: number;

            /** C path. */
            public path: Structure.IGridIndex[];

            /** C launchUnitId. */
            public launchUnitId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMcwActionUnitJoinUnit.IC): NetMessage.MsgMcwActionUnitJoinUnit.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMcwActionUnitJoinUnit.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcwActionUnitJoinUnit.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMcwActionUnitJoinUnit.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcwActionUnitJoinUnit.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwActionUnitJoinUnit.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwActionUnitJoinUnit.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwActionUnitJoinUnit.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcwActionUnitJoinUnit.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S warId */
            warId?: (number|null);

            /** S actionContainer */
            actionContainer?: (WarAction.IActionContainer|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcwActionUnitJoinUnit.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S warId. */
            public warId: number;

            /** S actionContainer. */
            public actionContainer?: (WarAction.IActionContainer|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMcwActionUnitJoinUnit.IS): NetMessage.MsgMcwActionUnitJoinUnit.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMcwActionUnitJoinUnit.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcwActionUnitJoinUnit.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMcwActionUnitJoinUnit.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcwActionUnitJoinUnit.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwActionUnitJoinUnit.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwActionUnitJoinUnit.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwActionUnitJoinUnit.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcwActionUnitJoinUnit.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMcwActionUnitLaunchFlare. */
    interface IMsgMcwActionUnitLaunchFlare {

        /** MsgMcwActionUnitLaunchFlare c */
        c?: (NetMessage.MsgMcwActionUnitLaunchFlare.IC|null);

        /** MsgMcwActionUnitLaunchFlare s */
        s?: (NetMessage.MsgMcwActionUnitLaunchFlare.IS|null);
    }

    /** Represents a MsgMcwActionUnitLaunchFlare. */
    class MsgMcwActionUnitLaunchFlare implements IMsgMcwActionUnitLaunchFlare {

        /**
         * Constructs a new MsgMcwActionUnitLaunchFlare.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMcwActionUnitLaunchFlare);

        /** MsgMcwActionUnitLaunchFlare c. */
        public c?: (NetMessage.MsgMcwActionUnitLaunchFlare.IC|null);

        /** MsgMcwActionUnitLaunchFlare s. */
        public s?: (NetMessage.MsgMcwActionUnitLaunchFlare.IS|null);

        /**
         * Creates a new MsgMcwActionUnitLaunchFlare instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMcwActionUnitLaunchFlare instance
         */
        public static create(properties?: NetMessage.IMsgMcwActionUnitLaunchFlare): NetMessage.MsgMcwActionUnitLaunchFlare;

        /**
         * Encodes the specified MsgMcwActionUnitLaunchFlare message. Does not implicitly {@link NetMessage.MsgMcwActionUnitLaunchFlare.verify|verify} messages.
         * @param message MsgMcwActionUnitLaunchFlare message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMcwActionUnitLaunchFlare, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMcwActionUnitLaunchFlare message, length delimited. Does not implicitly {@link NetMessage.MsgMcwActionUnitLaunchFlare.verify|verify} messages.
         * @param message MsgMcwActionUnitLaunchFlare message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMcwActionUnitLaunchFlare, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMcwActionUnitLaunchFlare message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMcwActionUnitLaunchFlare
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwActionUnitLaunchFlare;

        /**
         * Decodes a MsgMcwActionUnitLaunchFlare message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMcwActionUnitLaunchFlare
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwActionUnitLaunchFlare;

        /**
         * Verifies a MsgMcwActionUnitLaunchFlare message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMcwActionUnitLaunchFlare message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMcwActionUnitLaunchFlare
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwActionUnitLaunchFlare;

        /**
         * Creates a plain object from a MsgMcwActionUnitLaunchFlare message. Also converts values to other types if specified.
         * @param message MsgMcwActionUnitLaunchFlare
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMcwActionUnitLaunchFlare, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMcwActionUnitLaunchFlare to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMcwActionUnitLaunchFlare {

        /** Properties of a C. */
        interface IC {

            /** C warId */
            warId?: (number|null);

            /** C actionId */
            actionId?: (number|null);

            /** C path */
            path?: (Structure.IGridIndex[]|null);

            /** C launchUnitId */
            launchUnitId?: (number|null);

            /** C targetGridIndex */
            targetGridIndex?: (Structure.IGridIndex|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcwActionUnitLaunchFlare.IC);

            /** C warId. */
            public warId: number;

            /** C actionId. */
            public actionId: number;

            /** C path. */
            public path: Structure.IGridIndex[];

            /** C launchUnitId. */
            public launchUnitId: number;

            /** C targetGridIndex. */
            public targetGridIndex?: (Structure.IGridIndex|null);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMcwActionUnitLaunchFlare.IC): NetMessage.MsgMcwActionUnitLaunchFlare.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMcwActionUnitLaunchFlare.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcwActionUnitLaunchFlare.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMcwActionUnitLaunchFlare.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcwActionUnitLaunchFlare.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwActionUnitLaunchFlare.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwActionUnitLaunchFlare.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwActionUnitLaunchFlare.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcwActionUnitLaunchFlare.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S warId */
            warId?: (number|null);

            /** S actionContainer */
            actionContainer?: (WarAction.IActionContainer|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcwActionUnitLaunchFlare.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S warId. */
            public warId: number;

            /** S actionContainer. */
            public actionContainer?: (WarAction.IActionContainer|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMcwActionUnitLaunchFlare.IS): NetMessage.MsgMcwActionUnitLaunchFlare.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMcwActionUnitLaunchFlare.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcwActionUnitLaunchFlare.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMcwActionUnitLaunchFlare.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcwActionUnitLaunchFlare.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwActionUnitLaunchFlare.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwActionUnitLaunchFlare.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwActionUnitLaunchFlare.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcwActionUnitLaunchFlare.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMcwActionUnitLaunchSilo. */
    interface IMsgMcwActionUnitLaunchSilo {

        /** MsgMcwActionUnitLaunchSilo c */
        c?: (NetMessage.MsgMcwActionUnitLaunchSilo.IC|null);

        /** MsgMcwActionUnitLaunchSilo s */
        s?: (NetMessage.MsgMcwActionUnitLaunchSilo.IS|null);
    }

    /** Represents a MsgMcwActionUnitLaunchSilo. */
    class MsgMcwActionUnitLaunchSilo implements IMsgMcwActionUnitLaunchSilo {

        /**
         * Constructs a new MsgMcwActionUnitLaunchSilo.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMcwActionUnitLaunchSilo);

        /** MsgMcwActionUnitLaunchSilo c. */
        public c?: (NetMessage.MsgMcwActionUnitLaunchSilo.IC|null);

        /** MsgMcwActionUnitLaunchSilo s. */
        public s?: (NetMessage.MsgMcwActionUnitLaunchSilo.IS|null);

        /**
         * Creates a new MsgMcwActionUnitLaunchSilo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMcwActionUnitLaunchSilo instance
         */
        public static create(properties?: NetMessage.IMsgMcwActionUnitLaunchSilo): NetMessage.MsgMcwActionUnitLaunchSilo;

        /**
         * Encodes the specified MsgMcwActionUnitLaunchSilo message. Does not implicitly {@link NetMessage.MsgMcwActionUnitLaunchSilo.verify|verify} messages.
         * @param message MsgMcwActionUnitLaunchSilo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMcwActionUnitLaunchSilo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMcwActionUnitLaunchSilo message, length delimited. Does not implicitly {@link NetMessage.MsgMcwActionUnitLaunchSilo.verify|verify} messages.
         * @param message MsgMcwActionUnitLaunchSilo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMcwActionUnitLaunchSilo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMcwActionUnitLaunchSilo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMcwActionUnitLaunchSilo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwActionUnitLaunchSilo;

        /**
         * Decodes a MsgMcwActionUnitLaunchSilo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMcwActionUnitLaunchSilo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwActionUnitLaunchSilo;

        /**
         * Verifies a MsgMcwActionUnitLaunchSilo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMcwActionUnitLaunchSilo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMcwActionUnitLaunchSilo
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwActionUnitLaunchSilo;

        /**
         * Creates a plain object from a MsgMcwActionUnitLaunchSilo message. Also converts values to other types if specified.
         * @param message MsgMcwActionUnitLaunchSilo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMcwActionUnitLaunchSilo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMcwActionUnitLaunchSilo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMcwActionUnitLaunchSilo {

        /** Properties of a C. */
        interface IC {

            /** C warId */
            warId?: (number|null);

            /** C actionId */
            actionId?: (number|null);

            /** C path */
            path?: (Structure.IGridIndex[]|null);

            /** C launchUnitId */
            launchUnitId?: (number|null);

            /** C targetGridIndex */
            targetGridIndex?: (Structure.IGridIndex|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcwActionUnitLaunchSilo.IC);

            /** C warId. */
            public warId: number;

            /** C actionId. */
            public actionId: number;

            /** C path. */
            public path: Structure.IGridIndex[];

            /** C launchUnitId. */
            public launchUnitId: number;

            /** C targetGridIndex. */
            public targetGridIndex?: (Structure.IGridIndex|null);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMcwActionUnitLaunchSilo.IC): NetMessage.MsgMcwActionUnitLaunchSilo.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMcwActionUnitLaunchSilo.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcwActionUnitLaunchSilo.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMcwActionUnitLaunchSilo.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcwActionUnitLaunchSilo.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwActionUnitLaunchSilo.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwActionUnitLaunchSilo.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwActionUnitLaunchSilo.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcwActionUnitLaunchSilo.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S warId */
            warId?: (number|null);

            /** S actionContainer */
            actionContainer?: (WarAction.IActionContainer|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcwActionUnitLaunchSilo.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S warId. */
            public warId: number;

            /** S actionContainer. */
            public actionContainer?: (WarAction.IActionContainer|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMcwActionUnitLaunchSilo.IS): NetMessage.MsgMcwActionUnitLaunchSilo.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMcwActionUnitLaunchSilo.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcwActionUnitLaunchSilo.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMcwActionUnitLaunchSilo.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcwActionUnitLaunchSilo.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwActionUnitLaunchSilo.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwActionUnitLaunchSilo.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwActionUnitLaunchSilo.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcwActionUnitLaunchSilo.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMcwActionUnitProduceUnit. */
    interface IMsgMcwActionUnitProduceUnit {

        /** MsgMcwActionUnitProduceUnit c */
        c?: (NetMessage.MsgMcwActionUnitProduceUnit.IC|null);

        /** MsgMcwActionUnitProduceUnit s */
        s?: (NetMessage.MsgMcwActionUnitProduceUnit.IS|null);
    }

    /** Represents a MsgMcwActionUnitProduceUnit. */
    class MsgMcwActionUnitProduceUnit implements IMsgMcwActionUnitProduceUnit {

        /**
         * Constructs a new MsgMcwActionUnitProduceUnit.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMcwActionUnitProduceUnit);

        /** MsgMcwActionUnitProduceUnit c. */
        public c?: (NetMessage.MsgMcwActionUnitProduceUnit.IC|null);

        /** MsgMcwActionUnitProduceUnit s. */
        public s?: (NetMessage.MsgMcwActionUnitProduceUnit.IS|null);

        /**
         * Creates a new MsgMcwActionUnitProduceUnit instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMcwActionUnitProduceUnit instance
         */
        public static create(properties?: NetMessage.IMsgMcwActionUnitProduceUnit): NetMessage.MsgMcwActionUnitProduceUnit;

        /**
         * Encodes the specified MsgMcwActionUnitProduceUnit message. Does not implicitly {@link NetMessage.MsgMcwActionUnitProduceUnit.verify|verify} messages.
         * @param message MsgMcwActionUnitProduceUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMcwActionUnitProduceUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMcwActionUnitProduceUnit message, length delimited. Does not implicitly {@link NetMessage.MsgMcwActionUnitProduceUnit.verify|verify} messages.
         * @param message MsgMcwActionUnitProduceUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMcwActionUnitProduceUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMcwActionUnitProduceUnit message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMcwActionUnitProduceUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwActionUnitProduceUnit;

        /**
         * Decodes a MsgMcwActionUnitProduceUnit message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMcwActionUnitProduceUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwActionUnitProduceUnit;

        /**
         * Verifies a MsgMcwActionUnitProduceUnit message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMcwActionUnitProduceUnit message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMcwActionUnitProduceUnit
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwActionUnitProduceUnit;

        /**
         * Creates a plain object from a MsgMcwActionUnitProduceUnit message. Also converts values to other types if specified.
         * @param message MsgMcwActionUnitProduceUnit
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMcwActionUnitProduceUnit, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMcwActionUnitProduceUnit to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMcwActionUnitProduceUnit {

        /** Properties of a C. */
        interface IC {

            /** C warId */
            warId?: (number|null);

            /** C actionId */
            actionId?: (number|null);

            /** C path */
            path?: (Structure.IGridIndex[]|null);

            /** C launchUnitId */
            launchUnitId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcwActionUnitProduceUnit.IC);

            /** C warId. */
            public warId: number;

            /** C actionId. */
            public actionId: number;

            /** C path. */
            public path: Structure.IGridIndex[];

            /** C launchUnitId. */
            public launchUnitId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMcwActionUnitProduceUnit.IC): NetMessage.MsgMcwActionUnitProduceUnit.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMcwActionUnitProduceUnit.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcwActionUnitProduceUnit.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMcwActionUnitProduceUnit.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcwActionUnitProduceUnit.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwActionUnitProduceUnit.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwActionUnitProduceUnit.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwActionUnitProduceUnit.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcwActionUnitProduceUnit.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S warId */
            warId?: (number|null);

            /** S actionContainer */
            actionContainer?: (WarAction.IActionContainer|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcwActionUnitProduceUnit.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S warId. */
            public warId: number;

            /** S actionContainer. */
            public actionContainer?: (WarAction.IActionContainer|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMcwActionUnitProduceUnit.IS): NetMessage.MsgMcwActionUnitProduceUnit.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMcwActionUnitProduceUnit.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcwActionUnitProduceUnit.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMcwActionUnitProduceUnit.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcwActionUnitProduceUnit.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwActionUnitProduceUnit.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwActionUnitProduceUnit.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwActionUnitProduceUnit.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcwActionUnitProduceUnit.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMcwActionUnitSupplyUnit. */
    interface IMsgMcwActionUnitSupplyUnit {

        /** MsgMcwActionUnitSupplyUnit c */
        c?: (NetMessage.MsgMcwActionUnitSupplyUnit.IC|null);

        /** MsgMcwActionUnitSupplyUnit s */
        s?: (NetMessage.MsgMcwActionUnitSupplyUnit.IS|null);
    }

    /** Represents a MsgMcwActionUnitSupplyUnit. */
    class MsgMcwActionUnitSupplyUnit implements IMsgMcwActionUnitSupplyUnit {

        /**
         * Constructs a new MsgMcwActionUnitSupplyUnit.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMcwActionUnitSupplyUnit);

        /** MsgMcwActionUnitSupplyUnit c. */
        public c?: (NetMessage.MsgMcwActionUnitSupplyUnit.IC|null);

        /** MsgMcwActionUnitSupplyUnit s. */
        public s?: (NetMessage.MsgMcwActionUnitSupplyUnit.IS|null);

        /**
         * Creates a new MsgMcwActionUnitSupplyUnit instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMcwActionUnitSupplyUnit instance
         */
        public static create(properties?: NetMessage.IMsgMcwActionUnitSupplyUnit): NetMessage.MsgMcwActionUnitSupplyUnit;

        /**
         * Encodes the specified MsgMcwActionUnitSupplyUnit message. Does not implicitly {@link NetMessage.MsgMcwActionUnitSupplyUnit.verify|verify} messages.
         * @param message MsgMcwActionUnitSupplyUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMcwActionUnitSupplyUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMcwActionUnitSupplyUnit message, length delimited. Does not implicitly {@link NetMessage.MsgMcwActionUnitSupplyUnit.verify|verify} messages.
         * @param message MsgMcwActionUnitSupplyUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMcwActionUnitSupplyUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMcwActionUnitSupplyUnit message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMcwActionUnitSupplyUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwActionUnitSupplyUnit;

        /**
         * Decodes a MsgMcwActionUnitSupplyUnit message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMcwActionUnitSupplyUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwActionUnitSupplyUnit;

        /**
         * Verifies a MsgMcwActionUnitSupplyUnit message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMcwActionUnitSupplyUnit message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMcwActionUnitSupplyUnit
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwActionUnitSupplyUnit;

        /**
         * Creates a plain object from a MsgMcwActionUnitSupplyUnit message. Also converts values to other types if specified.
         * @param message MsgMcwActionUnitSupplyUnit
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMcwActionUnitSupplyUnit, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMcwActionUnitSupplyUnit to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMcwActionUnitSupplyUnit {

        /** Properties of a C. */
        interface IC {

            /** C warId */
            warId?: (number|null);

            /** C actionId */
            actionId?: (number|null);

            /** C path */
            path?: (Structure.IGridIndex[]|null);

            /** C launchUnitId */
            launchUnitId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcwActionUnitSupplyUnit.IC);

            /** C warId. */
            public warId: number;

            /** C actionId. */
            public actionId: number;

            /** C path. */
            public path: Structure.IGridIndex[];

            /** C launchUnitId. */
            public launchUnitId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMcwActionUnitSupplyUnit.IC): NetMessage.MsgMcwActionUnitSupplyUnit.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMcwActionUnitSupplyUnit.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcwActionUnitSupplyUnit.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMcwActionUnitSupplyUnit.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcwActionUnitSupplyUnit.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwActionUnitSupplyUnit.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwActionUnitSupplyUnit.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwActionUnitSupplyUnit.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcwActionUnitSupplyUnit.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S warId */
            warId?: (number|null);

            /** S actionContainer */
            actionContainer?: (WarAction.IActionContainer|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcwActionUnitSupplyUnit.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S warId. */
            public warId: number;

            /** S actionContainer. */
            public actionContainer?: (WarAction.IActionContainer|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMcwActionUnitSupplyUnit.IS): NetMessage.MsgMcwActionUnitSupplyUnit.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMcwActionUnitSupplyUnit.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcwActionUnitSupplyUnit.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMcwActionUnitSupplyUnit.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcwActionUnitSupplyUnit.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwActionUnitSupplyUnit.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwActionUnitSupplyUnit.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwActionUnitSupplyUnit.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcwActionUnitSupplyUnit.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMcwActionUnitLoadCo. */
    interface IMsgMcwActionUnitLoadCo {

        /** MsgMcwActionUnitLoadCo c */
        c?: (NetMessage.MsgMcwActionUnitLoadCo.IC|null);

        /** MsgMcwActionUnitLoadCo s */
        s?: (NetMessage.MsgMcwActionUnitLoadCo.IS|null);
    }

    /** Represents a MsgMcwActionUnitLoadCo. */
    class MsgMcwActionUnitLoadCo implements IMsgMcwActionUnitLoadCo {

        /**
         * Constructs a new MsgMcwActionUnitLoadCo.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMcwActionUnitLoadCo);

        /** MsgMcwActionUnitLoadCo c. */
        public c?: (NetMessage.MsgMcwActionUnitLoadCo.IC|null);

        /** MsgMcwActionUnitLoadCo s. */
        public s?: (NetMessage.MsgMcwActionUnitLoadCo.IS|null);

        /**
         * Creates a new MsgMcwActionUnitLoadCo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMcwActionUnitLoadCo instance
         */
        public static create(properties?: NetMessage.IMsgMcwActionUnitLoadCo): NetMessage.MsgMcwActionUnitLoadCo;

        /**
         * Encodes the specified MsgMcwActionUnitLoadCo message. Does not implicitly {@link NetMessage.MsgMcwActionUnitLoadCo.verify|verify} messages.
         * @param message MsgMcwActionUnitLoadCo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMcwActionUnitLoadCo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMcwActionUnitLoadCo message, length delimited. Does not implicitly {@link NetMessage.MsgMcwActionUnitLoadCo.verify|verify} messages.
         * @param message MsgMcwActionUnitLoadCo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMcwActionUnitLoadCo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMcwActionUnitLoadCo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMcwActionUnitLoadCo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwActionUnitLoadCo;

        /**
         * Decodes a MsgMcwActionUnitLoadCo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMcwActionUnitLoadCo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwActionUnitLoadCo;

        /**
         * Verifies a MsgMcwActionUnitLoadCo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMcwActionUnitLoadCo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMcwActionUnitLoadCo
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwActionUnitLoadCo;

        /**
         * Creates a plain object from a MsgMcwActionUnitLoadCo message. Also converts values to other types if specified.
         * @param message MsgMcwActionUnitLoadCo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMcwActionUnitLoadCo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMcwActionUnitLoadCo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMcwActionUnitLoadCo {

        /** Properties of a C. */
        interface IC {

            /** C warId */
            warId?: (number|null);

            /** C actionId */
            actionId?: (number|null);

            /** C path */
            path?: (Structure.IGridIndex[]|null);

            /** C launchUnitId */
            launchUnitId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcwActionUnitLoadCo.IC);

            /** C warId. */
            public warId: number;

            /** C actionId. */
            public actionId: number;

            /** C path. */
            public path: Structure.IGridIndex[];

            /** C launchUnitId. */
            public launchUnitId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMcwActionUnitLoadCo.IC): NetMessage.MsgMcwActionUnitLoadCo.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMcwActionUnitLoadCo.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcwActionUnitLoadCo.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMcwActionUnitLoadCo.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcwActionUnitLoadCo.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwActionUnitLoadCo.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwActionUnitLoadCo.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwActionUnitLoadCo.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcwActionUnitLoadCo.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S warId */
            warId?: (number|null);

            /** S actionContainer */
            actionContainer?: (WarAction.IActionContainer|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcwActionUnitLoadCo.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S warId. */
            public warId: number;

            /** S actionContainer. */
            public actionContainer?: (WarAction.IActionContainer|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMcwActionUnitLoadCo.IS): NetMessage.MsgMcwActionUnitLoadCo.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMcwActionUnitLoadCo.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcwActionUnitLoadCo.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMcwActionUnitLoadCo.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcwActionUnitLoadCo.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwActionUnitLoadCo.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwActionUnitLoadCo.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwActionUnitLoadCo.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcwActionUnitLoadCo.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMcwActionUnitUseCoSkill. */
    interface IMsgMcwActionUnitUseCoSkill {

        /** MsgMcwActionUnitUseCoSkill c */
        c?: (NetMessage.MsgMcwActionUnitUseCoSkill.IC|null);

        /** MsgMcwActionUnitUseCoSkill s */
        s?: (NetMessage.MsgMcwActionUnitUseCoSkill.IS|null);
    }

    /** Represents a MsgMcwActionUnitUseCoSkill. */
    class MsgMcwActionUnitUseCoSkill implements IMsgMcwActionUnitUseCoSkill {

        /**
         * Constructs a new MsgMcwActionUnitUseCoSkill.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMcwActionUnitUseCoSkill);

        /** MsgMcwActionUnitUseCoSkill c. */
        public c?: (NetMessage.MsgMcwActionUnitUseCoSkill.IC|null);

        /** MsgMcwActionUnitUseCoSkill s. */
        public s?: (NetMessage.MsgMcwActionUnitUseCoSkill.IS|null);

        /**
         * Creates a new MsgMcwActionUnitUseCoSkill instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMcwActionUnitUseCoSkill instance
         */
        public static create(properties?: NetMessage.IMsgMcwActionUnitUseCoSkill): NetMessage.MsgMcwActionUnitUseCoSkill;

        /**
         * Encodes the specified MsgMcwActionUnitUseCoSkill message. Does not implicitly {@link NetMessage.MsgMcwActionUnitUseCoSkill.verify|verify} messages.
         * @param message MsgMcwActionUnitUseCoSkill message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMcwActionUnitUseCoSkill, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMcwActionUnitUseCoSkill message, length delimited. Does not implicitly {@link NetMessage.MsgMcwActionUnitUseCoSkill.verify|verify} messages.
         * @param message MsgMcwActionUnitUseCoSkill message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMcwActionUnitUseCoSkill, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMcwActionUnitUseCoSkill message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMcwActionUnitUseCoSkill
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwActionUnitUseCoSkill;

        /**
         * Decodes a MsgMcwActionUnitUseCoSkill message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMcwActionUnitUseCoSkill
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwActionUnitUseCoSkill;

        /**
         * Verifies a MsgMcwActionUnitUseCoSkill message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMcwActionUnitUseCoSkill message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMcwActionUnitUseCoSkill
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwActionUnitUseCoSkill;

        /**
         * Creates a plain object from a MsgMcwActionUnitUseCoSkill message. Also converts values to other types if specified.
         * @param message MsgMcwActionUnitUseCoSkill
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMcwActionUnitUseCoSkill, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMcwActionUnitUseCoSkill to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMcwActionUnitUseCoSkill {

        /** Properties of a C. */
        interface IC {

            /** C warId */
            warId?: (number|null);

            /** C actionId */
            actionId?: (number|null);

            /** C path */
            path?: (Structure.IGridIndex[]|null);

            /** C launchUnitId */
            launchUnitId?: (number|null);

            /** C skillType */
            skillType?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcwActionUnitUseCoSkill.IC);

            /** C warId. */
            public warId: number;

            /** C actionId. */
            public actionId: number;

            /** C path. */
            public path: Structure.IGridIndex[];

            /** C launchUnitId. */
            public launchUnitId: number;

            /** C skillType. */
            public skillType: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMcwActionUnitUseCoSkill.IC): NetMessage.MsgMcwActionUnitUseCoSkill.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMcwActionUnitUseCoSkill.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcwActionUnitUseCoSkill.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMcwActionUnitUseCoSkill.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcwActionUnitUseCoSkill.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwActionUnitUseCoSkill.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwActionUnitUseCoSkill.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwActionUnitUseCoSkill.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcwActionUnitUseCoSkill.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S warId */
            warId?: (number|null);

            /** S actionContainer */
            actionContainer?: (WarAction.IActionContainer|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcwActionUnitUseCoSkill.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S warId. */
            public warId: number;

            /** S actionContainer. */
            public actionContainer?: (WarAction.IActionContainer|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMcwActionUnitUseCoSkill.IS): NetMessage.MsgMcwActionUnitUseCoSkill.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMcwActionUnitUseCoSkill.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcwActionUnitUseCoSkill.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMcwActionUnitUseCoSkill.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcwActionUnitUseCoSkill.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcwActionUnitUseCoSkill.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcwActionUnitUseCoSkill.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcwActionUnitUseCoSkill.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcwActionUnitUseCoSkill.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgScrCreateWar. */
    interface IMsgScrCreateWar {

        /** MsgScrCreateWar c */
        c?: (NetMessage.MsgScrCreateWar.IC|null);

        /** MsgScrCreateWar s */
        s?: (NetMessage.MsgScrCreateWar.IS|null);
    }

    /** Represents a MsgScrCreateWar. */
    class MsgScrCreateWar implements IMsgScrCreateWar {

        /**
         * Constructs a new MsgScrCreateWar.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgScrCreateWar);

        /** MsgScrCreateWar c. */
        public c?: (NetMessage.MsgScrCreateWar.IC|null);

        /** MsgScrCreateWar s. */
        public s?: (NetMessage.MsgScrCreateWar.IS|null);

        /**
         * Creates a new MsgScrCreateWar instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgScrCreateWar instance
         */
        public static create(properties?: NetMessage.IMsgScrCreateWar): NetMessage.MsgScrCreateWar;

        /**
         * Encodes the specified MsgScrCreateWar message. Does not implicitly {@link NetMessage.MsgScrCreateWar.verify|verify} messages.
         * @param message MsgScrCreateWar message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgScrCreateWar, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgScrCreateWar message, length delimited. Does not implicitly {@link NetMessage.MsgScrCreateWar.verify|verify} messages.
         * @param message MsgScrCreateWar message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgScrCreateWar, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgScrCreateWar message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgScrCreateWar
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgScrCreateWar;

        /**
         * Decodes a MsgScrCreateWar message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgScrCreateWar
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgScrCreateWar;

        /**
         * Verifies a MsgScrCreateWar message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgScrCreateWar message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgScrCreateWar
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgScrCreateWar;

        /**
         * Creates a plain object from a MsgScrCreateWar message. Also converts values to other types if specified.
         * @param message MsgScrCreateWar
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgScrCreateWar, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgScrCreateWar to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgScrCreateWar {

        /** Properties of a C. */
        interface IC {

            /** C settingsForCommon */
            settingsForCommon?: (WarSettings.ISettingsForCommon|null);

            /** C settingsForScw */
            settingsForScw?: (WarSettings.ISettingsForScw|null);

            /** C playerInfoList */
            playerInfoList?: (Structure.IDataForPlayerInRoom[]|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgScrCreateWar.IC);

            /** C settingsForCommon. */
            public settingsForCommon?: (WarSettings.ISettingsForCommon|null);

            /** C settingsForScw. */
            public settingsForScw?: (WarSettings.ISettingsForScw|null);

            /** C playerInfoList. */
            public playerInfoList: Structure.IDataForPlayerInRoom[];

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgScrCreateWar.IC): NetMessage.MsgScrCreateWar.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgScrCreateWar.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgScrCreateWar.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgScrCreateWar.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgScrCreateWar.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgScrCreateWar.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgScrCreateWar.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgScrCreateWar.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgScrCreateWar.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S warData */
            warData?: (WarSerialization.ISerialWar|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgScrCreateWar.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S warData. */
            public warData?: (WarSerialization.ISerialWar|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgScrCreateWar.IS): NetMessage.MsgScrCreateWar.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgScrCreateWar.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgScrCreateWar.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgScrCreateWar.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgScrCreateWar.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgScrCreateWar.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgScrCreateWar.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgScrCreateWar.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgScrCreateWar.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgScrGetSaveSlotInfoList. */
    interface IMsgScrGetSaveSlotInfoList {

        /** MsgScrGetSaveSlotInfoList c */
        c?: (NetMessage.MsgScrGetSaveSlotInfoList.IC|null);

        /** MsgScrGetSaveSlotInfoList s */
        s?: (NetMessage.MsgScrGetSaveSlotInfoList.IS|null);
    }

    /** Represents a MsgScrGetSaveSlotInfoList. */
    class MsgScrGetSaveSlotInfoList implements IMsgScrGetSaveSlotInfoList {

        /**
         * Constructs a new MsgScrGetSaveSlotInfoList.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgScrGetSaveSlotInfoList);

        /** MsgScrGetSaveSlotInfoList c. */
        public c?: (NetMessage.MsgScrGetSaveSlotInfoList.IC|null);

        /** MsgScrGetSaveSlotInfoList s. */
        public s?: (NetMessage.MsgScrGetSaveSlotInfoList.IS|null);

        /**
         * Creates a new MsgScrGetSaveSlotInfoList instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgScrGetSaveSlotInfoList instance
         */
        public static create(properties?: NetMessage.IMsgScrGetSaveSlotInfoList): NetMessage.MsgScrGetSaveSlotInfoList;

        /**
         * Encodes the specified MsgScrGetSaveSlotInfoList message. Does not implicitly {@link NetMessage.MsgScrGetSaveSlotInfoList.verify|verify} messages.
         * @param message MsgScrGetSaveSlotInfoList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgScrGetSaveSlotInfoList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgScrGetSaveSlotInfoList message, length delimited. Does not implicitly {@link NetMessage.MsgScrGetSaveSlotInfoList.verify|verify} messages.
         * @param message MsgScrGetSaveSlotInfoList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgScrGetSaveSlotInfoList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgScrGetSaveSlotInfoList message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgScrGetSaveSlotInfoList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgScrGetSaveSlotInfoList;

        /**
         * Decodes a MsgScrGetSaveSlotInfoList message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgScrGetSaveSlotInfoList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgScrGetSaveSlotInfoList;

        /**
         * Verifies a MsgScrGetSaveSlotInfoList message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgScrGetSaveSlotInfoList message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgScrGetSaveSlotInfoList
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgScrGetSaveSlotInfoList;

        /**
         * Creates a plain object from a MsgScrGetSaveSlotInfoList message. Also converts values to other types if specified.
         * @param message MsgScrGetSaveSlotInfoList
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgScrGetSaveSlotInfoList, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgScrGetSaveSlotInfoList to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgScrGetSaveSlotInfoList {

        /** Properties of a C. */
        interface IC {
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgScrGetSaveSlotInfoList.IC);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgScrGetSaveSlotInfoList.IC): NetMessage.MsgScrGetSaveSlotInfoList.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgScrGetSaveSlotInfoList.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgScrGetSaveSlotInfoList.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgScrGetSaveSlotInfoList.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgScrGetSaveSlotInfoList.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgScrGetSaveSlotInfoList.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgScrGetSaveSlotInfoList.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgScrGetSaveSlotInfoList.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgScrGetSaveSlotInfoList.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S infoList */
            infoList?: (SingleCustomRoom.IScrSaveSlotInfo[]|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgScrGetSaveSlotInfoList.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S infoList. */
            public infoList: SingleCustomRoom.IScrSaveSlotInfo[];

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgScrGetSaveSlotInfoList.IS): NetMessage.MsgScrGetSaveSlotInfoList.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgScrGetSaveSlotInfoList.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgScrGetSaveSlotInfoList.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgScrGetSaveSlotInfoList.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgScrGetSaveSlotInfoList.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgScrGetSaveSlotInfoList.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgScrGetSaveSlotInfoList.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgScrGetSaveSlotInfoList.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgScrGetSaveSlotInfoList.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgScrContinueWar. */
    interface IMsgScrContinueWar {

        /** MsgScrContinueWar c */
        c?: (NetMessage.MsgScrContinueWar.IC|null);

        /** MsgScrContinueWar s */
        s?: (NetMessage.MsgScrContinueWar.IS|null);
    }

    /** Represents a MsgScrContinueWar. */
    class MsgScrContinueWar implements IMsgScrContinueWar {

        /**
         * Constructs a new MsgScrContinueWar.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgScrContinueWar);

        /** MsgScrContinueWar c. */
        public c?: (NetMessage.MsgScrContinueWar.IC|null);

        /** MsgScrContinueWar s. */
        public s?: (NetMessage.MsgScrContinueWar.IS|null);

        /**
         * Creates a new MsgScrContinueWar instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgScrContinueWar instance
         */
        public static create(properties?: NetMessage.IMsgScrContinueWar): NetMessage.MsgScrContinueWar;

        /**
         * Encodes the specified MsgScrContinueWar message. Does not implicitly {@link NetMessage.MsgScrContinueWar.verify|verify} messages.
         * @param message MsgScrContinueWar message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgScrContinueWar, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgScrContinueWar message, length delimited. Does not implicitly {@link NetMessage.MsgScrContinueWar.verify|verify} messages.
         * @param message MsgScrContinueWar message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgScrContinueWar, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgScrContinueWar message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgScrContinueWar
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgScrContinueWar;

        /**
         * Decodes a MsgScrContinueWar message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgScrContinueWar
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgScrContinueWar;

        /**
         * Verifies a MsgScrContinueWar message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgScrContinueWar message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgScrContinueWar
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgScrContinueWar;

        /**
         * Creates a plain object from a MsgScrContinueWar message. Also converts values to other types if specified.
         * @param message MsgScrContinueWar
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgScrContinueWar, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgScrContinueWar to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgScrContinueWar {

        /** Properties of a C. */
        interface IC {

            /** C slotIndex */
            slotIndex?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgScrContinueWar.IC);

            /** C slotIndex. */
            public slotIndex: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgScrContinueWar.IC): NetMessage.MsgScrContinueWar.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgScrContinueWar.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgScrContinueWar.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgScrContinueWar.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgScrContinueWar.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgScrContinueWar.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgScrContinueWar.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgScrContinueWar.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgScrContinueWar.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S slotIndex */
            slotIndex?: (number|null);

            /** S encodedWar */
            encodedWar?: (Uint8Array|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgScrContinueWar.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S slotIndex. */
            public slotIndex: number;

            /** S encodedWar. */
            public encodedWar: Uint8Array;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgScrContinueWar.IS): NetMessage.MsgScrContinueWar.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgScrContinueWar.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgScrContinueWar.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgScrContinueWar.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgScrContinueWar.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgScrContinueWar.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgScrContinueWar.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgScrContinueWar.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgScrContinueWar.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgScrSaveWar. */
    interface IMsgScrSaveWar {

        /** MsgScrSaveWar c */
        c?: (NetMessage.MsgScrSaveWar.IC|null);

        /** MsgScrSaveWar s */
        s?: (NetMessage.MsgScrSaveWar.IS|null);
    }

    /** Represents a MsgScrSaveWar. */
    class MsgScrSaveWar implements IMsgScrSaveWar {

        /**
         * Constructs a new MsgScrSaveWar.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgScrSaveWar);

        /** MsgScrSaveWar c. */
        public c?: (NetMessage.MsgScrSaveWar.IC|null);

        /** MsgScrSaveWar s. */
        public s?: (NetMessage.MsgScrSaveWar.IS|null);

        /**
         * Creates a new MsgScrSaveWar instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgScrSaveWar instance
         */
        public static create(properties?: NetMessage.IMsgScrSaveWar): NetMessage.MsgScrSaveWar;

        /**
         * Encodes the specified MsgScrSaveWar message. Does not implicitly {@link NetMessage.MsgScrSaveWar.verify|verify} messages.
         * @param message MsgScrSaveWar message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgScrSaveWar, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgScrSaveWar message, length delimited. Does not implicitly {@link NetMessage.MsgScrSaveWar.verify|verify} messages.
         * @param message MsgScrSaveWar message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgScrSaveWar, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgScrSaveWar message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgScrSaveWar
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgScrSaveWar;

        /**
         * Decodes a MsgScrSaveWar message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgScrSaveWar
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgScrSaveWar;

        /**
         * Verifies a MsgScrSaveWar message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgScrSaveWar message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgScrSaveWar
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgScrSaveWar;

        /**
         * Creates a plain object from a MsgScrSaveWar message. Also converts values to other types if specified.
         * @param message MsgScrSaveWar
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgScrSaveWar, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgScrSaveWar to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgScrSaveWar {

        /** Properties of a C. */
        interface IC {

            /** C slotIndex */
            slotIndex?: (number|null);

            /** C warData */
            warData?: (WarSerialization.ISerialWar|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgScrSaveWar.IC);

            /** C slotIndex. */
            public slotIndex: number;

            /** C warData. */
            public warData?: (WarSerialization.ISerialWar|null);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgScrSaveWar.IC): NetMessage.MsgScrSaveWar.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgScrSaveWar.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgScrSaveWar.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgScrSaveWar.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgScrSaveWar.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgScrSaveWar.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgScrSaveWar.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgScrSaveWar.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgScrSaveWar.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S slotIndex */
            slotIndex?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgScrSaveWar.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S slotIndex. */
            public slotIndex: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgScrSaveWar.IS): NetMessage.MsgScrSaveWar.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgScrSaveWar.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgScrSaveWar.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgScrSaveWar.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgScrSaveWar.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgScrSaveWar.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgScrSaveWar.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgScrSaveWar.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgScrSaveWar.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgScrCreateCustomWar. */
    interface IMsgScrCreateCustomWar {

        /** MsgScrCreateCustomWar c */
        c?: (NetMessage.MsgScrCreateCustomWar.IC|null);

        /** MsgScrCreateCustomWar s */
        s?: (NetMessage.MsgScrCreateCustomWar.IS|null);
    }

    /** Represents a MsgScrCreateCustomWar. */
    class MsgScrCreateCustomWar implements IMsgScrCreateCustomWar {

        /**
         * Constructs a new MsgScrCreateCustomWar.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgScrCreateCustomWar);

        /** MsgScrCreateCustomWar c. */
        public c?: (NetMessage.MsgScrCreateCustomWar.IC|null);

        /** MsgScrCreateCustomWar s. */
        public s?: (NetMessage.MsgScrCreateCustomWar.IS|null);

        /**
         * Creates a new MsgScrCreateCustomWar instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgScrCreateCustomWar instance
         */
        public static create(properties?: NetMessage.IMsgScrCreateCustomWar): NetMessage.MsgScrCreateCustomWar;

        /**
         * Encodes the specified MsgScrCreateCustomWar message. Does not implicitly {@link NetMessage.MsgScrCreateCustomWar.verify|verify} messages.
         * @param message MsgScrCreateCustomWar message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgScrCreateCustomWar, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgScrCreateCustomWar message, length delimited. Does not implicitly {@link NetMessage.MsgScrCreateCustomWar.verify|verify} messages.
         * @param message MsgScrCreateCustomWar message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgScrCreateCustomWar, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgScrCreateCustomWar message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgScrCreateCustomWar
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgScrCreateCustomWar;

        /**
         * Decodes a MsgScrCreateCustomWar message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgScrCreateCustomWar
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgScrCreateCustomWar;

        /**
         * Verifies a MsgScrCreateCustomWar message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgScrCreateCustomWar message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgScrCreateCustomWar
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgScrCreateCustomWar;

        /**
         * Creates a plain object from a MsgScrCreateCustomWar message. Also converts values to other types if specified.
         * @param message MsgScrCreateCustomWar
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgScrCreateCustomWar, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgScrCreateCustomWar to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgScrCreateCustomWar {

        /** Properties of a C. */
        interface IC {

            /** C warData */
            warData?: (WarSerialization.ISerialWar|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgScrCreateCustomWar.IC);

            /** C warData. */
            public warData?: (WarSerialization.ISerialWar|null);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgScrCreateCustomWar.IC): NetMessage.MsgScrCreateCustomWar.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgScrCreateCustomWar.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgScrCreateCustomWar.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgScrCreateCustomWar.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgScrCreateCustomWar.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgScrCreateCustomWar.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgScrCreateCustomWar.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgScrCreateCustomWar.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgScrCreateCustomWar.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S warData */
            warData?: (WarSerialization.ISerialWar|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgScrCreateCustomWar.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S warData. */
            public warData?: (WarSerialization.ISerialWar|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgScrCreateCustomWar.IS): NetMessage.MsgScrCreateCustomWar.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgScrCreateCustomWar.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgScrCreateCustomWar.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgScrCreateCustomWar.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgScrCreateCustomWar.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgScrCreateCustomWar.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgScrCreateCustomWar.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgScrCreateCustomWar.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgScrCreateCustomWar.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }
}

/** Properties of a RPCC_SayHello. */
export declare interface IRPCC_SayHello {

    /** RPCC_SayHello name */
    name?: (string|null);
}

/** Represents a RPCC_SayHello. */
export declare class RPCC_SayHello implements IRPCC_SayHello {

    /**
     * Constructs a new RPCC_SayHello.
     * @param [properties] Properties to set
     */
    constructor(properties?: IRPCC_SayHello);

    /** RPCC_SayHello name. */
    public name: string;

    /**
     * Creates a new RPCC_SayHello instance using the specified properties.
     * @param [properties] Properties to set
     * @returns RPCC_SayHello instance
     */
    public static create(properties?: IRPCC_SayHello): RPCC_SayHello;

    /**
     * Encodes the specified RPCC_SayHello message. Does not implicitly {@link RPCC_SayHello.verify|verify} messages.
     * @param message RPCC_SayHello message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IRPCC_SayHello, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Encodes the specified RPCC_SayHello message, length delimited. Does not implicitly {@link RPCC_SayHello.verify|verify} messages.
     * @param message RPCC_SayHello message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IRPCC_SayHello, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Decodes a RPCC_SayHello message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns RPCC_SayHello
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): RPCC_SayHello;

    /**
     * Decodes a RPCC_SayHello message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns RPCC_SayHello
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): RPCC_SayHello;

    /**
     * Verifies a RPCC_SayHello message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a RPCC_SayHello message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns RPCC_SayHello
     */
    public static fromObject(object: { [k: string]: any }): RPCC_SayHello;

    /**
     * Creates a plain object from a RPCC_SayHello message. Also converts values to other types if specified.
     * @param message RPCC_SayHello
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: RPCC_SayHello, options?: protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this RPCC_SayHello to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a RPCS_SayHello. */
export declare interface IRPCS_SayHello {

    /** RPCS_SayHello message */
    message?: (string|null);
}

/** Represents a RPCS_SayHello. */
export declare class RPCS_SayHello implements IRPCS_SayHello {

    /**
     * Constructs a new RPCS_SayHello.
     * @param [properties] Properties to set
     */
    constructor(properties?: IRPCS_SayHello);

    /** RPCS_SayHello message. */
    public message: string;

    /**
     * Creates a new RPCS_SayHello instance using the specified properties.
     * @param [properties] Properties to set
     * @returns RPCS_SayHello instance
     */
    public static create(properties?: IRPCS_SayHello): RPCS_SayHello;

    /**
     * Encodes the specified RPCS_SayHello message. Does not implicitly {@link RPCS_SayHello.verify|verify} messages.
     * @param message RPCS_SayHello message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IRPCS_SayHello, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Encodes the specified RPCS_SayHello message, length delimited. Does not implicitly {@link RPCS_SayHello.verify|verify} messages.
     * @param message RPCS_SayHello message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IRPCS_SayHello, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Decodes a RPCS_SayHello message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns RPCS_SayHello
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): RPCS_SayHello;

    /**
     * Decodes a RPCS_SayHello message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns RPCS_SayHello
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): RPCS_SayHello;

    /**
     * Verifies a RPCS_SayHello message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a RPCS_SayHello message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns RPCS_SayHello
     */
    public static fromObject(object: { [k: string]: any }): RPCS_SayHello;

    /**
     * Creates a plain object from a RPCS_SayHello message. Also converts values to other types if specified.
     * @param message RPCS_SayHello
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: RPCS_SayHello, options?: protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this RPCS_SayHello to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Represents a ReplayValidator */
export declare class ReplayValidator extends protobuf.rpc.Service {

    /**
     * Constructs a new ReplayValidator service.
     * @param rpcImpl RPC implementation
     * @param [requestDelimited=false] Whether requests are length-delimited
     * @param [responseDelimited=false] Whether responses are length-delimited
     */
    constructor(rpcImpl: protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

    /**
     * Creates new ReplayValidator service using the specified rpc implementation.
     * @param rpcImpl RPC implementation
     * @param [requestDelimited=false] Whether requests are length-delimited
     * @param [responseDelimited=false] Whether responses are length-delimited
     * @returns RPC service. Useful where requests and/or responses are streamed.
     */
    public static create(rpcImpl: protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean): ReplayValidator;

    /**
     * Calls sayHello.
     * @param request RPCC_SayHello message or plain object
     * @param callback Node-style callback called with the error, if any, and RPCS_SayHello
     */
    public sayHello(request: IRPCC_SayHello, callback: ReplayValidator.sayHelloCallback): void;

    /**
     * Calls sayHello.
     * @param request RPCC_SayHello message or plain object
     * @returns Promise
     */
    public sayHello(request: IRPCC_SayHello): Promise<RPCS_SayHello>;
}

export declare namespace ReplayValidator {

    /**
     * Callback as used by {@link ReplayValidator#sayHello}.
     * @param error Error, if any
     * @param [response] RPCS_SayHello
     */
    type sayHelloCallback = (error: (Error|null), response?: RPCS_SayHello) => void;
}
}}
